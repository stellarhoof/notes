var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a2, b2) => {
  for (var prop2 in b2 || (b2 = {}))
    if (__hasOwnProp.call(b2, prop2))
      __defNormalProp(a2, prop2, b2[prop2]);
  if (__getOwnPropSymbols)
    for (var prop2 of __getOwnPropSymbols(b2)) {
      if (__propIsEnum.call(b2, prop2))
        __defNormalProp(a2, prop2, b2[prop2]);
    }
  return a2;
};
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
var lodash_min = { exports: {} };
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
(function(module, exports) {
  (function() {
    function n2(n3, t3, r3) {
      switch (r3.length) {
        case 0:
          return n3.call(t3);
        case 1:
          return n3.call(t3, r3[0]);
        case 2:
          return n3.call(t3, r3[0], r3[1]);
        case 3:
          return n3.call(t3, r3[0], r3[1], r3[2]);
      }
      return n3.apply(t3, r3);
    }
    function t2(n3, t3, r3, e3) {
      for (var u3 = -1, i2 = n3 == null ? 0 : n3.length; ++u3 < i2; ) {
        var o3 = n3[u3];
        t3(e3, o3, r3(o3), n3);
      }
      return e3;
    }
    function r2(n3, t3) {
      for (var r3 = -1, e3 = n3 == null ? 0 : n3.length; ++r3 < e3 && t3(n3[r3], r3, n3) !== false; )
        ;
      return n3;
    }
    function e2(n3, t3) {
      for (var r3 = n3 == null ? 0 : n3.length; r3-- && t3(n3[r3], r3, n3) !== false; )
        ;
      return n3;
    }
    function u2(n3, t3) {
      for (var r3 = -1, e3 = n3 == null ? 0 : n3.length; ++r3 < e3; )
        if (!t3(n3[r3], r3, n3))
          return false;
      return true;
    }
    function i(n3, t3) {
      for (var r3 = -1, e3 = n3 == null ? 0 : n3.length, u3 = 0, i2 = []; ++r3 < e3; ) {
        var o3 = n3[r3];
        t3(o3, r3, n3) && (i2[u3++] = o3);
      }
      return i2;
    }
    function o2(n3, t3) {
      return !!(n3 == null ? 0 : n3.length) && y2(n3, t3, 0) > -1;
    }
    function f2(n3, t3, r3) {
      for (var e3 = -1, u3 = n3 == null ? 0 : n3.length; ++e3 < u3; )
        if (r3(t3, n3[e3]))
          return true;
      return false;
    }
    function c2(n3, t3) {
      for (var r3 = -1, e3 = n3 == null ? 0 : n3.length, u3 = Array(e3); ++r3 < e3; )
        u3[r3] = t3(n3[r3], r3, n3);
      return u3;
    }
    function a2(n3, t3) {
      for (var r3 = -1, e3 = t3.length, u3 = n3.length; ++r3 < e3; )
        n3[u3 + r3] = t3[r3];
      return n3;
    }
    function l2(n3, t3, r3, e3) {
      var u3 = -1, i2 = n3 == null ? 0 : n3.length;
      for (e3 && i2 && (r3 = n3[++u3]); ++u3 < i2; )
        r3 = t3(r3, n3[u3], u3, n3);
      return r3;
    }
    function s(n3, t3, r3, e3) {
      var u3 = n3 == null ? 0 : n3.length;
      for (e3 && u3 && (r3 = n3[--u3]); u3--; )
        r3 = t3(r3, n3[u3], u3, n3);
      return r3;
    }
    function h2(n3, t3) {
      for (var r3 = -1, e3 = n3 == null ? 0 : n3.length; ++r3 < e3; )
        if (t3(n3[r3], r3, n3))
          return true;
      return false;
    }
    function p2(n3) {
      return n3.split("");
    }
    function _2(n3) {
      return n3.match($t) || [];
    }
    function v2(n3, t3, r3) {
      var e3;
      return r3(n3, function(n4, r4, u3) {
        if (t3(n4, r4, u3))
          return e3 = r4, false;
      }), e3;
    }
    function g2(n3, t3, r3, e3) {
      for (var u3 = n3.length, i2 = r3 + (e3 ? 1 : -1); e3 ? i2-- : ++i2 < u3; )
        if (t3(n3[i2], i2, n3))
          return i2;
      return -1;
    }
    function y2(n3, t3, r3) {
      return t3 === t3 ? Z2(n3, t3, r3) : g2(n3, b2, r3);
    }
    function d2(n3, t3, r3, e3) {
      for (var u3 = r3 - 1, i2 = n3.length; ++u3 < i2; )
        if (e3(n3[u3], t3))
          return u3;
      return -1;
    }
    function b2(n3) {
      return n3 !== n3;
    }
    function w2(n3, t3) {
      var r3 = n3 == null ? 0 : n3.length;
      return r3 ? k2(n3, t3) / r3 : Cn;
    }
    function m2(n3) {
      return function(t3) {
        return t3 == null ? X2 : t3[n3];
      };
    }
    function x2(n3) {
      return function(t3) {
        return n3 == null ? X2 : n3[t3];
      };
    }
    function j2(n3, t3, r3, e3, u3) {
      return u3(n3, function(n4, u4, i2) {
        r3 = e3 ? (e3 = false, n4) : t3(r3, n4, u4, i2);
      }), r3;
    }
    function A2(n3, t3) {
      var r3 = n3.length;
      for (n3.sort(t3); r3--; )
        n3[r3] = n3[r3].value;
      return n3;
    }
    function k2(n3, t3) {
      for (var r3, e3 = -1, u3 = n3.length; ++e3 < u3; ) {
        var i2 = t3(n3[e3]);
        i2 !== X2 && (r3 = r3 === X2 ? i2 : r3 + i2);
      }
      return r3;
    }
    function O2(n3, t3) {
      for (var r3 = -1, e3 = Array(n3); ++r3 < n3; )
        e3[r3] = t3(r3);
      return e3;
    }
    function I2(n3, t3) {
      return c2(t3, function(t4) {
        return [t4, n3[t4]];
      });
    }
    function R2(n3) {
      return n3 ? n3.slice(0, H2(n3) + 1).replace(Lt, "") : n3;
    }
    function z2(n3) {
      return function(t3) {
        return n3(t3);
      };
    }
    function E2(n3, t3) {
      return c2(t3, function(t4) {
        return n3[t4];
      });
    }
    function S2(n3, t3) {
      return n3.has(t3);
    }
    function W2(n3, t3) {
      for (var r3 = -1, e3 = n3.length; ++r3 < e3 && y2(t3, n3[r3], 0) > -1; )
        ;
      return r3;
    }
    function L2(n3, t3) {
      for (var r3 = n3.length; r3-- && y2(t3, n3[r3], 0) > -1; )
        ;
      return r3;
    }
    function C2(n3, t3) {
      for (var r3 = n3.length, e3 = 0; r3--; )
        n3[r3] === t3 && ++e3;
      return e3;
    }
    function U2(n3) {
      return "\\" + Yr[n3];
    }
    function B2(n3, t3) {
      return n3 == null ? X2 : n3[t3];
    }
    function T2(n3) {
      return Nr.test(n3);
    }
    function $2(n3) {
      return Pr.test(n3);
    }
    function D2(n3) {
      for (var t3, r3 = []; !(t3 = n3.next()).done; )
        r3.push(t3.value);
      return r3;
    }
    function M2(n3) {
      var t3 = -1, r3 = Array(n3.size);
      return n3.forEach(function(n4, e3) {
        r3[++t3] = [e3, n4];
      }), r3;
    }
    function F2(n3, t3) {
      return function(r3) {
        return n3(t3(r3));
      };
    }
    function N2(n3, t3) {
      for (var r3 = -1, e3 = n3.length, u3 = 0, i2 = []; ++r3 < e3; ) {
        var o3 = n3[r3];
        o3 !== t3 && o3 !== cn || (n3[r3] = cn, i2[u3++] = r3);
      }
      return i2;
    }
    function P2(n3) {
      var t3 = -1, r3 = Array(n3.size);
      return n3.forEach(function(n4) {
        r3[++t3] = n4;
      }), r3;
    }
    function q2(n3) {
      var t3 = -1, r3 = Array(n3.size);
      return n3.forEach(function(n4) {
        r3[++t3] = [n4, n4];
      }), r3;
    }
    function Z2(n3, t3, r3) {
      for (var e3 = r3 - 1, u3 = n3.length; ++e3 < u3; )
        if (n3[e3] === t3)
          return e3;
      return -1;
    }
    function K2(n3, t3, r3) {
      for (var e3 = r3 + 1; e3--; )
        if (n3[e3] === t3)
          return e3;
      return e3;
    }
    function V2(n3) {
      return T2(n3) ? J2(n3) : _e(n3);
    }
    function G2(n3) {
      return T2(n3) ? Y2(n3) : p2(n3);
    }
    function H2(n3) {
      for (var t3 = n3.length; t3-- && Ct.test(n3.charAt(t3)); )
        ;
      return t3;
    }
    function J2(n3) {
      for (var t3 = Mr.lastIndex = 0; Mr.test(n3); )
        ++t3;
      return t3;
    }
    function Y2(n3) {
      return n3.match(Mr) || [];
    }
    function Q2(n3) {
      return n3.match(Fr) || [];
    }
    var X2, nn = "4.17.21", tn = 200, rn = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", en = "Expected a function", un = "Invalid `variable` option passed into `_.template`", on = "__lodash_hash_undefined__", fn = 500, cn = "__lodash_placeholder__", an = 1, ln = 2, sn = 4, hn = 1, pn = 2, _n = 1, vn = 2, gn = 4, yn = 8, dn = 16, bn = 32, wn = 64, mn = 128, xn = 256, jn = 512, An = 30, kn = "...", On = 800, In = 16, Rn = 1, zn = 2, En = 3, Sn = 1 / 0, Wn = 9007199254740991, Ln = 17976931348623157e292, Cn = NaN, Un = 4294967295, Bn = Un - 1, Tn = Un >>> 1, $n = [["ary", mn], ["bind", _n], ["bindKey", vn], ["curry", yn], ["curryRight", dn], ["flip", jn], ["partial", bn], ["partialRight", wn], ["rearg", xn]], Dn = "[object Arguments]", Mn = "[object Array]", Fn = "[object AsyncFunction]", Nn = "[object Boolean]", Pn = "[object Date]", qn = "[object DOMException]", Zn = "[object Error]", Kn = "[object Function]", Vn = "[object GeneratorFunction]", Gn = "[object Map]", Hn = "[object Number]", Jn = "[object Null]", Yn = "[object Object]", Qn = "[object Promise]", Xn = "[object Proxy]", nt = "[object RegExp]", tt = "[object Set]", rt = "[object String]", et = "[object Symbol]", ut = "[object Undefined]", it = "[object WeakMap]", ot = "[object WeakSet]", ft = "[object ArrayBuffer]", ct = "[object DataView]", at = "[object Float32Array]", lt = "[object Float64Array]", st = "[object Int8Array]", ht = "[object Int16Array]", pt = "[object Int32Array]", _t = "[object Uint8Array]", vt = "[object Uint8ClampedArray]", gt = "[object Uint16Array]", yt = "[object Uint32Array]", dt = /\b__p \+= '';/g, bt = /\b(__p \+=) '' \+/g, wt = /(__e\(.*?\)|\b__t\)) \+\n'';/g, mt = /&(?:amp|lt|gt|quot|#39);/g, xt = /[&<>"']/g, jt = RegExp(mt.source), At = RegExp(xt.source), kt = /<%-([\s\S]+?)%>/g, Ot = /<%([\s\S]+?)%>/g, It = /<%=([\s\S]+?)%>/g, Rt = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, zt = /^\w*$/, Et = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, St = /[\\^$.*+?()[\]{}|]/g, Wt = RegExp(St.source), Lt = /^\s+/, Ct = /\s/, Ut = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, Bt = /\{\n\/\* \[wrapped with (.+)\] \*/, Tt = /,? & /, $t = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, Dt = /[()=,{}\[\]\/\s]/, Mt = /\\(\\)?/g, Ft = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, Nt = /\w*$/, Pt = /^[-+]0x[0-9a-f]+$/i, qt = /^0b[01]+$/i, Zt = /^\[object .+?Constructor\]$/, Kt = /^0o[0-7]+$/i, Vt = /^(?:0|[1-9]\d*)$/, Gt = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, Ht = /($^)/, Jt = /['\n\r\u2028\u2029\\]/g, Yt = "\\ud800-\\udfff", Qt = "\\u0300-\\u036f", Xt = "\\ufe20-\\ufe2f", nr = "\\u20d0-\\u20ff", tr = Qt + Xt + nr, rr = "\\u2700-\\u27bf", er = "a-z\\xdf-\\xf6\\xf8-\\xff", ur = "\\xac\\xb1\\xd7\\xf7", ir = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", or = "\\u2000-\\u206f", fr = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", cr = "A-Z\\xc0-\\xd6\\xd8-\\xde", ar = "\\ufe0e\\ufe0f", lr = ur + ir + or + fr, sr = "['\u2019]", hr = "[" + Yt + "]", pr = "[" + lr + "]", _r = "[" + tr + "]", vr = "\\d+", gr = "[" + rr + "]", yr = "[" + er + "]", dr = "[^" + Yt + lr + vr + rr + er + cr + "]", br = "\\ud83c[\\udffb-\\udfff]", wr = "(?:" + _r + "|" + br + ")", mr = "[^" + Yt + "]", xr = "(?:\\ud83c[\\udde6-\\uddff]){2}", jr = "[\\ud800-\\udbff][\\udc00-\\udfff]", Ar = "[" + cr + "]", kr = "\\u200d", Or = "(?:" + yr + "|" + dr + ")", Ir = "(?:" + Ar + "|" + dr + ")", Rr = "(?:" + sr + "(?:d|ll|m|re|s|t|ve))?", zr = "(?:" + sr + "(?:D|LL|M|RE|S|T|VE))?", Er = wr + "?", Sr = "[" + ar + "]?", Wr = "(?:" + kr + "(?:" + [mr, xr, jr].join("|") + ")" + Sr + Er + ")*", Lr = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", Cr = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", Ur = Sr + Er + Wr, Br = "(?:" + [gr, xr, jr].join("|") + ")" + Ur, Tr = "(?:" + [mr + _r + "?", _r, xr, jr, hr].join("|") + ")", $r = RegExp(sr, "g"), Dr = RegExp(_r, "g"), Mr = RegExp(br + "(?=" + br + ")|" + Tr + Ur, "g"), Fr = RegExp([Ar + "?" + yr + "+" + Rr + "(?=" + [pr, Ar, "$"].join("|") + ")", Ir + "+" + zr + "(?=" + [pr, Ar + Or, "$"].join("|") + ")", Ar + "?" + Or + "+" + Rr, Ar + "+" + zr, Cr, Lr, vr, Br].join("|"), "g"), Nr = RegExp("[" + kr + Yt + tr + ar + "]"), Pr = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, qr = ["Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout"], Zr = -1, Kr = {};
    Kr[at] = Kr[lt] = Kr[st] = Kr[ht] = Kr[pt] = Kr[_t] = Kr[vt] = Kr[gt] = Kr[yt] = true, Kr[Dn] = Kr[Mn] = Kr[ft] = Kr[Nn] = Kr[ct] = Kr[Pn] = Kr[Zn] = Kr[Kn] = Kr[Gn] = Kr[Hn] = Kr[Yn] = Kr[nt] = Kr[tt] = Kr[rt] = Kr[it] = false;
    var Vr = {};
    Vr[Dn] = Vr[Mn] = Vr[ft] = Vr[ct] = Vr[Nn] = Vr[Pn] = Vr[at] = Vr[lt] = Vr[st] = Vr[ht] = Vr[pt] = Vr[Gn] = Vr[Hn] = Vr[Yn] = Vr[nt] = Vr[tt] = Vr[rt] = Vr[et] = Vr[_t] = Vr[vt] = Vr[gt] = Vr[yt] = true, Vr[Zn] = Vr[Kn] = Vr[it] = false;
    var Gr = {
      "\xC0": "A",
      "\xC1": "A",
      "\xC2": "A",
      "\xC3": "A",
      "\xC4": "A",
      "\xC5": "A",
      "\xE0": "a",
      "\xE1": "a",
      "\xE2": "a",
      "\xE3": "a",
      "\xE4": "a",
      "\xE5": "a",
      "\xC7": "C",
      "\xE7": "c",
      "\xD0": "D",
      "\xF0": "d",
      "\xC8": "E",
      "\xC9": "E",
      "\xCA": "E",
      "\xCB": "E",
      "\xE8": "e",
      "\xE9": "e",
      "\xEA": "e",
      "\xEB": "e",
      "\xCC": "I",
      "\xCD": "I",
      "\xCE": "I",
      "\xCF": "I",
      "\xEC": "i",
      "\xED": "i",
      "\xEE": "i",
      "\xEF": "i",
      "\xD1": "N",
      "\xF1": "n",
      "\xD2": "O",
      "\xD3": "O",
      "\xD4": "O",
      "\xD5": "O",
      "\xD6": "O",
      "\xD8": "O",
      "\xF2": "o",
      "\xF3": "o",
      "\xF4": "o",
      "\xF5": "o",
      "\xF6": "o",
      "\xF8": "o",
      "\xD9": "U",
      "\xDA": "U",
      "\xDB": "U",
      "\xDC": "U",
      "\xF9": "u",
      "\xFA": "u",
      "\xFB": "u",
      "\xFC": "u",
      "\xDD": "Y",
      "\xFD": "y",
      "\xFF": "y",
      "\xC6": "Ae",
      "\xE6": "ae",
      "\xDE": "Th",
      "\xFE": "th",
      "\xDF": "ss",
      "\u0100": "A",
      "\u0102": "A",
      "\u0104": "A",
      "\u0101": "a",
      "\u0103": "a",
      "\u0105": "a",
      "\u0106": "C",
      "\u0108": "C",
      "\u010A": "C",
      "\u010C": "C",
      "\u0107": "c",
      "\u0109": "c",
      "\u010B": "c",
      "\u010D": "c",
      "\u010E": "D",
      "\u0110": "D",
      "\u010F": "d",
      "\u0111": "d",
      "\u0112": "E",
      "\u0114": "E",
      "\u0116": "E",
      "\u0118": "E",
      "\u011A": "E",
      "\u0113": "e",
      "\u0115": "e",
      "\u0117": "e",
      "\u0119": "e",
      "\u011B": "e",
      "\u011C": "G",
      "\u011E": "G",
      "\u0120": "G",
      "\u0122": "G",
      "\u011D": "g",
      "\u011F": "g",
      "\u0121": "g",
      "\u0123": "g",
      "\u0124": "H",
      "\u0126": "H",
      "\u0125": "h",
      "\u0127": "h",
      "\u0128": "I",
      "\u012A": "I",
      "\u012C": "I",
      "\u012E": "I",
      "\u0130": "I",
      "\u0129": "i",
      "\u012B": "i",
      "\u012D": "i",
      "\u012F": "i",
      "\u0131": "i",
      "\u0134": "J",
      "\u0135": "j",
      "\u0136": "K",
      "\u0137": "k",
      "\u0138": "k",
      "\u0139": "L",
      "\u013B": "L",
      "\u013D": "L",
      "\u013F": "L",
      "\u0141": "L",
      "\u013A": "l",
      "\u013C": "l",
      "\u013E": "l",
      "\u0140": "l",
      "\u0142": "l",
      "\u0143": "N",
      "\u0145": "N",
      "\u0147": "N",
      "\u014A": "N",
      "\u0144": "n",
      "\u0146": "n",
      "\u0148": "n",
      "\u014B": "n",
      "\u014C": "O",
      "\u014E": "O",
      "\u0150": "O",
      "\u014D": "o",
      "\u014F": "o",
      "\u0151": "o",
      "\u0154": "R",
      "\u0156": "R",
      "\u0158": "R",
      "\u0155": "r",
      "\u0157": "r",
      "\u0159": "r",
      "\u015A": "S",
      "\u015C": "S",
      "\u015E": "S",
      "\u0160": "S",
      "\u015B": "s",
      "\u015D": "s",
      "\u015F": "s",
      "\u0161": "s",
      "\u0162": "T",
      "\u0164": "T",
      "\u0166": "T",
      "\u0163": "t",
      "\u0165": "t",
      "\u0167": "t",
      "\u0168": "U",
      "\u016A": "U",
      "\u016C": "U",
      "\u016E": "U",
      "\u0170": "U",
      "\u0172": "U",
      "\u0169": "u",
      "\u016B": "u",
      "\u016D": "u",
      "\u016F": "u",
      "\u0171": "u",
      "\u0173": "u",
      "\u0174": "W",
      "\u0175": "w",
      "\u0176": "Y",
      "\u0177": "y",
      "\u0178": "Y",
      "\u0179": "Z",
      "\u017B": "Z",
      "\u017D": "Z",
      "\u017A": "z",
      "\u017C": "z",
      "\u017E": "z",
      "\u0132": "IJ",
      "\u0133": "ij",
      "\u0152": "Oe",
      "\u0153": "oe",
      "\u0149": "'n",
      "\u017F": "s"
    }, Hr = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;" }, Jr = { "&amp;": "&", "&lt;": "<", "&gt;": ">", "&quot;": '"', "&#39;": "'" }, Yr = { "\\": "\\", "'": "'", "\n": "n", "\r": "r", "\u2028": "u2028", "\u2029": "u2029" }, Qr = parseFloat, Xr = parseInt, ne2 = typeof commonjsGlobal == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal, te2 = typeof self == "object" && self && self.Object === Object && self, re2 = ne2 || te2 || Function("return this")(), ee2 = exports && !exports.nodeType && exports, ue2 = ee2 && true && module && !module.nodeType && module, ie2 = ue2 && ue2.exports === ee2, oe2 = ie2 && ne2.process, fe2 = function() {
      try {
        var n3 = ue2 && ue2.require && ue2.require("util").types;
        return n3 ? n3 : oe2 && oe2.binding && oe2.binding("util");
      } catch (n4) {
      }
    }(), ce2 = fe2 && fe2.isArrayBuffer, ae2 = fe2 && fe2.isDate, le2 = fe2 && fe2.isMap, se2 = fe2 && fe2.isRegExp, he2 = fe2 && fe2.isSet, pe2 = fe2 && fe2.isTypedArray, _e = m2("length"), ve2 = x2(Gr), ge2 = x2(Hr), ye = x2(Jr), de2 = function p3(x3) {
      function Z3(n3) {
        if (cc2(n3) && !bh2(n3) && !(n3 instanceof Ct2)) {
          if (n3 instanceof Y3)
            return n3;
          if (bl.call(n3, "__wrapped__"))
            return eo(n3);
        }
        return new Y3(n3);
      }
      function J3() {
      }
      function Y3(n3, t3) {
        this.__wrapped__ = n3, this.__actions__ = [], this.__chain__ = !!t3, this.__index__ = 0, this.__values__ = X2;
      }
      function Ct2(n3) {
        this.__wrapped__ = n3, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = false, this.__iteratees__ = [], this.__takeCount__ = Un, this.__views__ = [];
      }
      function $t2() {
        var n3 = new Ct2(this.__wrapped__);
        return n3.__actions__ = Tu(this.__actions__), n3.__dir__ = this.__dir__, n3.__filtered__ = this.__filtered__, n3.__iteratees__ = Tu(this.__iteratees__), n3.__takeCount__ = this.__takeCount__, n3.__views__ = Tu(this.__views__), n3;
      }
      function Yt2() {
        if (this.__filtered__) {
          var n3 = new Ct2(this);
          n3.__dir__ = -1, n3.__filtered__ = true;
        } else
          n3 = this.clone(), n3.__dir__ *= -1;
        return n3;
      }
      function Qt2() {
        var n3 = this.__wrapped__.value(), t3 = this.__dir__, r3 = bh2(n3), e3 = t3 < 0, u3 = r3 ? n3.length : 0, i2 = Oi2(0, u3, this.__views__), o3 = i2.start, f3 = i2.end, c3 = f3 - o3, a3 = e3 ? f3 : o3 - 1, l3 = this.__iteratees__, s2 = l3.length, h3 = 0, p4 = Hl(c3, this.__takeCount__);
        if (!r3 || !e3 && u3 == c3 && p4 == c3)
          return wu(n3, this.__actions__);
        var _3 = [];
        n:
          for (; c3-- && h3 < p4; ) {
            a3 += t3;
            for (var v3 = -1, g3 = n3[a3]; ++v3 < s2; ) {
              var y3 = l3[v3], d3 = y3.iteratee, b3 = y3.type, w3 = d3(g3);
              if (b3 == zn)
                g3 = w3;
              else if (!w3) {
                if (b3 == Rn)
                  continue n;
                break n;
              }
            }
            _3[h3++] = g3;
          }
        return _3;
      }
      function Xt2(n3) {
        var t3 = -1, r3 = n3 == null ? 0 : n3.length;
        for (this.clear(); ++t3 < r3; ) {
          var e3 = n3[t3];
          this.set(e3[0], e3[1]);
        }
      }
      function nr2() {
        this.__data__ = is ? is(null) : {}, this.size = 0;
      }
      function tr2(n3) {
        var t3 = this.has(n3) && delete this.__data__[n3];
        return this.size -= t3 ? 1 : 0, t3;
      }
      function rr2(n3) {
        var t3 = this.__data__;
        if (is) {
          var r3 = t3[n3];
          return r3 === on ? X2 : r3;
        }
        return bl.call(t3, n3) ? t3[n3] : X2;
      }
      function er2(n3) {
        var t3 = this.__data__;
        return is ? t3[n3] !== X2 : bl.call(t3, n3);
      }
      function ur2(n3, t3) {
        var r3 = this.__data__;
        return this.size += this.has(n3) ? 0 : 1, r3[n3] = is && t3 === X2 ? on : t3, this;
      }
      function ir2(n3) {
        var t3 = -1, r3 = n3 == null ? 0 : n3.length;
        for (this.clear(); ++t3 < r3; ) {
          var e3 = n3[t3];
          this.set(e3[0], e3[1]);
        }
      }
      function or2() {
        this.__data__ = [], this.size = 0;
      }
      function fr2(n3) {
        var t3 = this.__data__, r3 = Wr2(t3, n3);
        return !(r3 < 0) && (r3 == t3.length - 1 ? t3.pop() : Ll.call(t3, r3, 1), --this.size, true);
      }
      function cr2(n3) {
        var t3 = this.__data__, r3 = Wr2(t3, n3);
        return r3 < 0 ? X2 : t3[r3][1];
      }
      function ar2(n3) {
        return Wr2(this.__data__, n3) > -1;
      }
      function lr2(n3, t3) {
        var r3 = this.__data__, e3 = Wr2(r3, n3);
        return e3 < 0 ? (++this.size, r3.push([n3, t3])) : r3[e3][1] = t3, this;
      }
      function sr2(n3) {
        var t3 = -1, r3 = n3 == null ? 0 : n3.length;
        for (this.clear(); ++t3 < r3; ) {
          var e3 = n3[t3];
          this.set(e3[0], e3[1]);
        }
      }
      function hr2() {
        this.size = 0, this.__data__ = { hash: new Xt2(), map: new (ts || ir2)(), string: new Xt2() };
      }
      function pr2(n3) {
        var t3 = xi2(this, n3).delete(n3);
        return this.size -= t3 ? 1 : 0, t3;
      }
      function _r2(n3) {
        return xi2(this, n3).get(n3);
      }
      function vr2(n3) {
        return xi2(this, n3).has(n3);
      }
      function gr2(n3, t3) {
        var r3 = xi2(this, n3), e3 = r3.size;
        return r3.set(n3, t3), this.size += r3.size == e3 ? 0 : 1, this;
      }
      function yr2(n3) {
        var t3 = -1, r3 = n3 == null ? 0 : n3.length;
        for (this.__data__ = new sr2(); ++t3 < r3; )
          this.add(n3[t3]);
      }
      function dr2(n3) {
        return this.__data__.set(n3, on), this;
      }
      function br2(n3) {
        return this.__data__.has(n3);
      }
      function wr2(n3) {
        this.size = (this.__data__ = new ir2(n3)).size;
      }
      function mr2() {
        this.__data__ = new ir2(), this.size = 0;
      }
      function xr2(n3) {
        var t3 = this.__data__, r3 = t3.delete(n3);
        return this.size = t3.size, r3;
      }
      function jr2(n3) {
        return this.__data__.get(n3);
      }
      function Ar2(n3) {
        return this.__data__.has(n3);
      }
      function kr2(n3, t3) {
        var r3 = this.__data__;
        if (r3 instanceof ir2) {
          var e3 = r3.__data__;
          if (!ts || e3.length < tn - 1)
            return e3.push([n3, t3]), this.size = ++r3.size, this;
          r3 = this.__data__ = new sr2(e3);
        }
        return r3.set(n3, t3), this.size = r3.size, this;
      }
      function Or2(n3, t3) {
        var r3 = bh2(n3), e3 = !r3 && dh2(n3), u3 = !r3 && !e3 && mh2(n3), i2 = !r3 && !e3 && !u3 && Oh2(n3), o3 = r3 || e3 || u3 || i2, f3 = o3 ? O2(n3.length, hl) : [], c3 = f3.length;
        for (var a3 in n3)
          !t3 && !bl.call(n3, a3) || o3 && (a3 == "length" || u3 && (a3 == "offset" || a3 == "parent") || i2 && (a3 == "buffer" || a3 == "byteLength" || a3 == "byteOffset") || Ci2(a3, c3)) || f3.push(a3);
        return f3;
      }
      function Ir2(n3) {
        var t3 = n3.length;
        return t3 ? n3[tu(0, t3 - 1)] : X2;
      }
      function Rr2(n3, t3) {
        return Xi2(Tu(n3), Mr2(t3, 0, n3.length));
      }
      function zr2(n3) {
        return Xi2(Tu(n3));
      }
      function Er2(n3, t3, r3) {
        (r3 === X2 || Gf2(n3[t3], r3)) && (r3 !== X2 || t3 in n3) || Br2(n3, t3, r3);
      }
      function Sr2(n3, t3, r3) {
        var e3 = n3[t3];
        bl.call(n3, t3) && Gf2(e3, r3) && (r3 !== X2 || t3 in n3) || Br2(n3, t3, r3);
      }
      function Wr2(n3, t3) {
        for (var r3 = n3.length; r3--; )
          if (Gf2(n3[r3][0], t3))
            return r3;
        return -1;
      }
      function Lr2(n3, t3, r3, e3) {
        return ys(n3, function(n4, u3, i2) {
          t3(e3, n4, r3(n4), i2);
        }), e3;
      }
      function Cr2(n3, t3) {
        return n3 && $u(t3, Pc2(t3), n3);
      }
      function Ur2(n3, t3) {
        return n3 && $u(t3, qc2(t3), n3);
      }
      function Br2(n3, t3, r3) {
        t3 == "__proto__" && Tl ? Tl(n3, t3, { configurable: true, enumerable: true, value: r3, writable: true }) : n3[t3] = r3;
      }
      function Tr2(n3, t3) {
        for (var r3 = -1, e3 = t3.length, u3 = il(e3), i2 = n3 == null; ++r3 < e3; )
          u3[r3] = i2 ? X2 : Mc2(n3, t3[r3]);
        return u3;
      }
      function Mr2(n3, t3, r3) {
        return n3 === n3 && (r3 !== X2 && (n3 = n3 <= r3 ? n3 : r3), t3 !== X2 && (n3 = n3 >= t3 ? n3 : t3)), n3;
      }
      function Fr2(n3, t3, e3, u3, i2, o3) {
        var f3, c3 = t3 & an, a3 = t3 & ln, l3 = t3 & sn;
        if (e3 && (f3 = i2 ? e3(n3, u3, i2, o3) : e3(n3)), f3 !== X2)
          return f3;
        if (!fc2(n3))
          return n3;
        var s2 = bh2(n3);
        if (s2) {
          if (f3 = zi2(n3), !c3)
            return Tu(n3, f3);
        } else {
          var h3 = zs(n3), p4 = h3 == Kn || h3 == Vn;
          if (mh2(n3))
            return Iu(n3, c3);
          if (h3 == Yn || h3 == Dn || p4 && !i2) {
            if (f3 = a3 || p4 ? {} : Ei2(n3), !c3)
              return a3 ? Mu(n3, Ur2(f3, n3)) : Du(n3, Cr2(f3, n3));
          } else {
            if (!Vr[h3])
              return i2 ? n3 : {};
            f3 = Si2(n3, h3, c3);
          }
        }
        o3 || (o3 = new wr2());
        var _3 = o3.get(n3);
        if (_3)
          return _3;
        o3.set(n3, f3), kh2(n3) ? n3.forEach(function(r3) {
          f3.add(Fr2(r3, t3, e3, r3, n3, o3));
        }) : jh2(n3) && n3.forEach(function(r3, u4) {
          f3.set(u4, Fr2(r3, t3, e3, u4, n3, o3));
        });
        var v3 = l3 ? a3 ? di2 : yi2 : a3 ? qc2 : Pc2, g3 = s2 ? X2 : v3(n3);
        return r2(g3 || n3, function(r3, u4) {
          g3 && (u4 = r3, r3 = n3[u4]), Sr2(f3, u4, Fr2(r3, t3, e3, u4, n3, o3));
        }), f3;
      }
      function Nr2(n3) {
        var t3 = Pc2(n3);
        return function(r3) {
          return Pr2(r3, n3, t3);
        };
      }
      function Pr2(n3, t3, r3) {
        var e3 = r3.length;
        if (n3 == null)
          return !e3;
        for (n3 = ll(n3); e3--; ) {
          var u3 = r3[e3], i2 = t3[u3], o3 = n3[u3];
          if (o3 === X2 && !(u3 in n3) || !i2(o3))
            return false;
        }
        return true;
      }
      function Gr2(n3, t3, r3) {
        if (typeof n3 != "function")
          throw new pl(en);
        return Ws(function() {
          n3.apply(X2, r3);
        }, t3);
      }
      function Hr2(n3, t3, r3, e3) {
        var u3 = -1, i2 = o2, a3 = true, l3 = n3.length, s2 = [], h3 = t3.length;
        if (!l3)
          return s2;
        r3 && (t3 = c2(t3, z2(r3))), e3 ? (i2 = f2, a3 = false) : t3.length >= tn && (i2 = S2, a3 = false, t3 = new yr2(t3));
        n:
          for (; ++u3 < l3; ) {
            var p4 = n3[u3], _3 = r3 == null ? p4 : r3(p4);
            if (p4 = e3 || p4 !== 0 ? p4 : 0, a3 && _3 === _3) {
              for (var v3 = h3; v3--; )
                if (t3[v3] === _3)
                  continue n;
              s2.push(p4);
            } else
              i2(t3, _3, e3) || s2.push(p4);
          }
        return s2;
      }
      function Jr2(n3, t3) {
        var r3 = true;
        return ys(n3, function(n4, e3, u3) {
          return r3 = !!t3(n4, e3, u3);
        }), r3;
      }
      function Yr2(n3, t3, r3) {
        for (var e3 = -1, u3 = n3.length; ++e3 < u3; ) {
          var i2 = n3[e3], o3 = t3(i2);
          if (o3 != null && (f3 === X2 ? o3 === o3 && !bc2(o3) : r3(o3, f3)))
            var f3 = o3, c3 = i2;
        }
        return c3;
      }
      function ne3(n3, t3, r3, e3) {
        var u3 = n3.length;
        for (r3 = kc2(r3), r3 < 0 && (r3 = -r3 > u3 ? 0 : u3 + r3), e3 = e3 === X2 || e3 > u3 ? u3 : kc2(e3), e3 < 0 && (e3 += u3), e3 = r3 > e3 ? 0 : Oc2(e3); r3 < e3; )
          n3[r3++] = t3;
        return n3;
      }
      function te3(n3, t3) {
        var r3 = [];
        return ys(n3, function(n4, e3, u3) {
          t3(n4, e3, u3) && r3.push(n4);
        }), r3;
      }
      function ee3(n3, t3, r3, e3, u3) {
        var i2 = -1, o3 = n3.length;
        for (r3 || (r3 = Li2), u3 || (u3 = []); ++i2 < o3; ) {
          var f3 = n3[i2];
          t3 > 0 && r3(f3) ? t3 > 1 ? ee3(f3, t3 - 1, r3, e3, u3) : a2(u3, f3) : e3 || (u3[u3.length] = f3);
        }
        return u3;
      }
      function ue3(n3, t3) {
        return n3 && bs(n3, t3, Pc2);
      }
      function oe3(n3, t3) {
        return n3 && ws(n3, t3, Pc2);
      }
      function fe3(n3, t3) {
        return i(t3, function(t4) {
          return uc2(n3[t4]);
        });
      }
      function _e2(n3, t3) {
        t3 = ku(t3, n3);
        for (var r3 = 0, e3 = t3.length; n3 != null && r3 < e3; )
          n3 = n3[no(t3[r3++])];
        return r3 && r3 == e3 ? n3 : X2;
      }
      function de3(n3, t3, r3) {
        var e3 = t3(n3);
        return bh2(n3) ? e3 : a2(e3, r3(n3));
      }
      function we2(n3) {
        return n3 == null ? n3 === X2 ? ut : Jn : Bl && Bl in ll(n3) ? ki2(n3) : Ki2(n3);
      }
      function me2(n3, t3) {
        return n3 > t3;
      }
      function xe(n3, t3) {
        return n3 != null && bl.call(n3, t3);
      }
      function je2(n3, t3) {
        return n3 != null && t3 in ll(n3);
      }
      function Ae2(n3, t3, r3) {
        return n3 >= Hl(t3, r3) && n3 < Gl(t3, r3);
      }
      function ke2(n3, t3, r3) {
        for (var e3 = r3 ? f2 : o2, u3 = n3[0].length, i2 = n3.length, a3 = i2, l3 = il(i2), s2 = 1 / 0, h3 = []; a3--; ) {
          var p4 = n3[a3];
          a3 && t3 && (p4 = c2(p4, z2(t3))), s2 = Hl(p4.length, s2), l3[a3] = !r3 && (t3 || u3 >= 120 && p4.length >= 120) ? new yr2(a3 && p4) : X2;
        }
        p4 = n3[0];
        var _3 = -1, v3 = l3[0];
        n:
          for (; ++_3 < u3 && h3.length < s2; ) {
            var g3 = p4[_3], y3 = t3 ? t3(g3) : g3;
            if (g3 = r3 || g3 !== 0 ? g3 : 0, !(v3 ? S2(v3, y3) : e3(h3, y3, r3))) {
              for (a3 = i2; --a3; ) {
                var d3 = l3[a3];
                if (!(d3 ? S2(d3, y3) : e3(n3[a3], y3, r3)))
                  continue n;
              }
              v3 && v3.push(y3), h3.push(g3);
            }
          }
        return h3;
      }
      function Oe2(n3, t3, r3, e3) {
        return ue3(n3, function(n4, u3, i2) {
          t3(e3, r3(n4), u3, i2);
        }), e3;
      }
      function Ie2(t3, r3, e3) {
        r3 = ku(r3, t3), t3 = Gi2(t3, r3);
        var u3 = t3 == null ? t3 : t3[no(jo(r3))];
        return u3 == null ? X2 : n2(u3, t3, e3);
      }
      function Re2(n3) {
        return cc2(n3) && we2(n3) == Dn;
      }
      function ze(n3) {
        return cc2(n3) && we2(n3) == ft;
      }
      function Ee2(n3) {
        return cc2(n3) && we2(n3) == Pn;
      }
      function Se2(n3, t3, r3, e3, u3) {
        return n3 === t3 || (n3 == null || t3 == null || !cc2(n3) && !cc2(t3) ? n3 !== n3 && t3 !== t3 : We(n3, t3, r3, e3, Se2, u3));
      }
      function We(n3, t3, r3, e3, u3, i2) {
        var o3 = bh2(n3), f3 = bh2(t3), c3 = o3 ? Mn : zs(n3), a3 = f3 ? Mn : zs(t3);
        c3 = c3 == Dn ? Yn : c3, a3 = a3 == Dn ? Yn : a3;
        var l3 = c3 == Yn, s2 = a3 == Yn, h3 = c3 == a3;
        if (h3 && mh2(n3)) {
          if (!mh2(t3))
            return false;
          o3 = true, l3 = false;
        }
        if (h3 && !l3)
          return i2 || (i2 = new wr2()), o3 || Oh2(n3) ? pi2(n3, t3, r3, e3, u3, i2) : _i(n3, t3, c3, r3, e3, u3, i2);
        if (!(r3 & hn)) {
          var p4 = l3 && bl.call(n3, "__wrapped__"), _3 = s2 && bl.call(t3, "__wrapped__");
          if (p4 || _3) {
            var v3 = p4 ? n3.value() : n3, g3 = _3 ? t3.value() : t3;
            return i2 || (i2 = new wr2()), u3(v3, g3, r3, e3, i2);
          }
        }
        return !!h3 && (i2 || (i2 = new wr2()), vi2(n3, t3, r3, e3, u3, i2));
      }
      function Le2(n3) {
        return cc2(n3) && zs(n3) == Gn;
      }
      function Ce2(n3, t3, r3, e3) {
        var u3 = r3.length, i2 = u3, o3 = !e3;
        if (n3 == null)
          return !i2;
        for (n3 = ll(n3); u3--; ) {
          var f3 = r3[u3];
          if (o3 && f3[2] ? f3[1] !== n3[f3[0]] : !(f3[0] in n3))
            return false;
        }
        for (; ++u3 < i2; ) {
          f3 = r3[u3];
          var c3 = f3[0], a3 = n3[c3], l3 = f3[1];
          if (o3 && f3[2]) {
            if (a3 === X2 && !(c3 in n3))
              return false;
          } else {
            var s2 = new wr2();
            if (e3)
              var h3 = e3(a3, l3, c3, n3, t3, s2);
            if (!(h3 === X2 ? Se2(l3, a3, hn | pn, e3, s2) : h3))
              return false;
          }
        }
        return true;
      }
      function Ue2(n3) {
        return !(!fc2(n3) || Di2(n3)) && (uc2(n3) ? kl : Zt).test(to(n3));
      }
      function Be2(n3) {
        return cc2(n3) && we2(n3) == nt;
      }
      function Te2(n3) {
        return cc2(n3) && zs(n3) == tt;
      }
      function $e2(n3) {
        return cc2(n3) && oc2(n3.length) && !!Kr[we2(n3)];
      }
      function De2(n3) {
        return typeof n3 == "function" ? n3 : n3 == null ? La2 : typeof n3 == "object" ? bh2(n3) ? Ze2(n3[0], n3[1]) : qe2(n3) : Fa2(n3);
      }
      function Me2(n3) {
        if (!Mi2(n3))
          return Vl(n3);
        var t3 = [];
        for (var r3 in ll(n3))
          bl.call(n3, r3) && r3 != "constructor" && t3.push(r3);
        return t3;
      }
      function Fe2(n3) {
        if (!fc2(n3))
          return Zi2(n3);
        var t3 = Mi2(n3), r3 = [];
        for (var e3 in n3)
          (e3 != "constructor" || !t3 && bl.call(n3, e3)) && r3.push(e3);
        return r3;
      }
      function Ne2(n3, t3) {
        return n3 < t3;
      }
      function Pe2(n3, t3) {
        var r3 = -1, e3 = Hf2(n3) ? il(n3.length) : [];
        return ys(n3, function(n4, u3, i2) {
          e3[++r3] = t3(n4, u3, i2);
        }), e3;
      }
      function qe2(n3) {
        var t3 = ji2(n3);
        return t3.length == 1 && t3[0][2] ? Ni2(t3[0][0], t3[0][1]) : function(r3) {
          return r3 === n3 || Ce2(r3, n3, t3);
        };
      }
      function Ze2(n3, t3) {
        return Bi2(n3) && Fi2(t3) ? Ni2(no(n3), t3) : function(r3) {
          var e3 = Mc2(r3, n3);
          return e3 === X2 && e3 === t3 ? Nc2(r3, n3) : Se2(t3, e3, hn | pn);
        };
      }
      function Ke2(n3, t3, r3, e3, u3) {
        n3 !== t3 && bs(t3, function(i2, o3) {
          if (u3 || (u3 = new wr2()), fc2(i2))
            Ve(n3, t3, o3, r3, Ke2, e3, u3);
          else {
            var f3 = e3 ? e3(Ji2(n3, o3), i2, o3 + "", n3, t3, u3) : X2;
            f3 === X2 && (f3 = i2), Er2(n3, o3, f3);
          }
        }, qc2);
      }
      function Ve(n3, t3, r3, e3, u3, i2, o3) {
        var f3 = Ji2(n3, r3), c3 = Ji2(t3, r3), a3 = o3.get(c3);
        if (a3)
          return Er2(n3, r3, a3), X2;
        var l3 = i2 ? i2(f3, c3, r3 + "", n3, t3, o3) : X2, s2 = l3 === X2;
        if (s2) {
          var h3 = bh2(c3), p4 = !h3 && mh2(c3), _3 = !h3 && !p4 && Oh2(c3);
          l3 = c3, h3 || p4 || _3 ? bh2(f3) ? l3 = f3 : Jf2(f3) ? l3 = Tu(f3) : p4 ? (s2 = false, l3 = Iu(c3, true)) : _3 ? (s2 = false, l3 = Wu(c3, true)) : l3 = [] : gc2(c3) || dh2(c3) ? (l3 = f3, dh2(f3) ? l3 = Rc2(f3) : fc2(f3) && !uc2(f3) || (l3 = Ei2(c3))) : s2 = false;
        }
        s2 && (o3.set(c3, l3), u3(l3, c3, e3, i2, o3), o3.delete(c3)), Er2(n3, r3, l3);
      }
      function Ge2(n3, t3) {
        var r3 = n3.length;
        if (r3)
          return t3 += t3 < 0 ? r3 : 0, Ci2(t3, r3) ? n3[t3] : X2;
      }
      function He2(n3, t3, r3) {
        t3 = t3.length ? c2(t3, function(n4) {
          return bh2(n4) ? function(t4) {
            return _e2(t4, n4.length === 1 ? n4[0] : n4);
          } : n4;
        }) : [La2];
        var e3 = -1;
        return t3 = c2(t3, z2(mi2())), A2(Pe2(n3, function(n4, r4, u3) {
          return { criteria: c2(t3, function(t4) {
            return t4(n4);
          }), index: ++e3, value: n4 };
        }), function(n4, t4) {
          return Cu(n4, t4, r3);
        });
      }
      function Je2(n3, t3) {
        return Ye2(n3, t3, function(t4, r3) {
          return Nc2(n3, r3);
        });
      }
      function Ye2(n3, t3, r3) {
        for (var e3 = -1, u3 = t3.length, i2 = {}; ++e3 < u3; ) {
          var o3 = t3[e3], f3 = _e2(n3, o3);
          r3(f3, o3) && fu(i2, ku(o3, n3), f3);
        }
        return i2;
      }
      function Qe2(n3) {
        return function(t3) {
          return _e2(t3, n3);
        };
      }
      function Xe2(n3, t3, r3, e3) {
        var u3 = e3 ? d2 : y2, i2 = -1, o3 = t3.length, f3 = n3;
        for (n3 === t3 && (t3 = Tu(t3)), r3 && (f3 = c2(n3, z2(r3))); ++i2 < o3; )
          for (var a3 = 0, l3 = t3[i2], s2 = r3 ? r3(l3) : l3; (a3 = u3(f3, s2, a3, e3)) > -1; )
            f3 !== n3 && Ll.call(f3, a3, 1), Ll.call(n3, a3, 1);
        return n3;
      }
      function nu(n3, t3) {
        for (var r3 = n3 ? t3.length : 0, e3 = r3 - 1; r3--; ) {
          var u3 = t3[r3];
          if (r3 == e3 || u3 !== i2) {
            var i2 = u3;
            Ci2(u3) ? Ll.call(n3, u3, 1) : yu(n3, u3);
          }
        }
        return n3;
      }
      function tu(n3, t3) {
        return n3 + Nl(Ql() * (t3 - n3 + 1));
      }
      function ru(n3, t3, r3, e3) {
        for (var u3 = -1, i2 = Gl(Fl((t3 - n3) / (r3 || 1)), 0), o3 = il(i2); i2--; )
          o3[e3 ? i2 : ++u3] = n3, n3 += r3;
        return o3;
      }
      function eu(n3, t3) {
        var r3 = "";
        if (!n3 || t3 < 1 || t3 > Wn)
          return r3;
        do
          t3 % 2 && (r3 += n3), t3 = Nl(t3 / 2), t3 && (n3 += n3);
        while (t3);
        return r3;
      }
      function uu(n3, t3) {
        return Ls(Vi2(n3, t3, La2), n3 + "");
      }
      function iu(n3) {
        return Ir2(ra2(n3));
      }
      function ou(n3, t3) {
        var r3 = ra2(n3);
        return Xi2(r3, Mr2(t3, 0, r3.length));
      }
      function fu(n3, t3, r3, e3) {
        if (!fc2(n3))
          return n3;
        t3 = ku(t3, n3);
        for (var u3 = -1, i2 = t3.length, o3 = i2 - 1, f3 = n3; f3 != null && ++u3 < i2; ) {
          var c3 = no(t3[u3]), a3 = r3;
          if (c3 === "__proto__" || c3 === "constructor" || c3 === "prototype")
            return n3;
          if (u3 != o3) {
            var l3 = f3[c3];
            a3 = e3 ? e3(l3, c3, f3) : X2, a3 === X2 && (a3 = fc2(l3) ? l3 : Ci2(t3[u3 + 1]) ? [] : {});
          }
          Sr2(f3, c3, a3), f3 = f3[c3];
        }
        return n3;
      }
      function cu(n3) {
        return Xi2(ra2(n3));
      }
      function au(n3, t3, r3) {
        var e3 = -1, u3 = n3.length;
        t3 < 0 && (t3 = -t3 > u3 ? 0 : u3 + t3), r3 = r3 > u3 ? u3 : r3, r3 < 0 && (r3 += u3), u3 = t3 > r3 ? 0 : r3 - t3 >>> 0, t3 >>>= 0;
        for (var i2 = il(u3); ++e3 < u3; )
          i2[e3] = n3[e3 + t3];
        return i2;
      }
      function lu(n3, t3) {
        var r3;
        return ys(n3, function(n4, e3, u3) {
          return r3 = t3(n4, e3, u3), !r3;
        }), !!r3;
      }
      function su(n3, t3, r3) {
        var e3 = 0, u3 = n3 == null ? e3 : n3.length;
        if (typeof t3 == "number" && t3 === t3 && u3 <= Tn) {
          for (; e3 < u3; ) {
            var i2 = e3 + u3 >>> 1, o3 = n3[i2];
            o3 !== null && !bc2(o3) && (r3 ? o3 <= t3 : o3 < t3) ? e3 = i2 + 1 : u3 = i2;
          }
          return u3;
        }
        return hu(n3, t3, La2, r3);
      }
      function hu(n3, t3, r3, e3) {
        var u3 = 0, i2 = n3 == null ? 0 : n3.length;
        if (i2 === 0)
          return 0;
        t3 = r3(t3);
        for (var o3 = t3 !== t3, f3 = t3 === null, c3 = bc2(t3), a3 = t3 === X2; u3 < i2; ) {
          var l3 = Nl((u3 + i2) / 2), s2 = r3(n3[l3]), h3 = s2 !== X2, p4 = s2 === null, _3 = s2 === s2, v3 = bc2(s2);
          if (o3)
            var g3 = e3 || _3;
          else
            g3 = a3 ? _3 && (e3 || h3) : f3 ? _3 && h3 && (e3 || !p4) : c3 ? _3 && h3 && !p4 && (e3 || !v3) : !p4 && !v3 && (e3 ? s2 <= t3 : s2 < t3);
          g3 ? u3 = l3 + 1 : i2 = l3;
        }
        return Hl(i2, Bn);
      }
      function pu(n3, t3) {
        for (var r3 = -1, e3 = n3.length, u3 = 0, i2 = []; ++r3 < e3; ) {
          var o3 = n3[r3], f3 = t3 ? t3(o3) : o3;
          if (!r3 || !Gf2(f3, c3)) {
            var c3 = f3;
            i2[u3++] = o3 === 0 ? 0 : o3;
          }
        }
        return i2;
      }
      function _u(n3) {
        return typeof n3 == "number" ? n3 : bc2(n3) ? Cn : +n3;
      }
      function vu(n3) {
        if (typeof n3 == "string")
          return n3;
        if (bh2(n3))
          return c2(n3, vu) + "";
        if (bc2(n3))
          return vs ? vs.call(n3) : "";
        var t3 = n3 + "";
        return t3 == "0" && 1 / n3 == -Sn ? "-0" : t3;
      }
      function gu(n3, t3, r3) {
        var e3 = -1, u3 = o2, i2 = n3.length, c3 = true, a3 = [], l3 = a3;
        if (r3)
          c3 = false, u3 = f2;
        else if (i2 >= tn) {
          var s2 = t3 ? null : ks(n3);
          if (s2)
            return P2(s2);
          c3 = false, u3 = S2, l3 = new yr2();
        } else
          l3 = t3 ? [] : a3;
        n:
          for (; ++e3 < i2; ) {
            var h3 = n3[e3], p4 = t3 ? t3(h3) : h3;
            if (h3 = r3 || h3 !== 0 ? h3 : 0, c3 && p4 === p4) {
              for (var _3 = l3.length; _3--; )
                if (l3[_3] === p4)
                  continue n;
              t3 && l3.push(p4), a3.push(h3);
            } else
              u3(l3, p4, r3) || (l3 !== a3 && l3.push(p4), a3.push(h3));
          }
        return a3;
      }
      function yu(n3, t3) {
        return t3 = ku(t3, n3), n3 = Gi2(n3, t3), n3 == null || delete n3[no(jo(t3))];
      }
      function du(n3, t3, r3, e3) {
        return fu(n3, t3, r3(_e2(n3, t3)), e3);
      }
      function bu(n3, t3, r3, e3) {
        for (var u3 = n3.length, i2 = e3 ? u3 : -1; (e3 ? i2-- : ++i2 < u3) && t3(n3[i2], i2, n3); )
          ;
        return r3 ? au(n3, e3 ? 0 : i2, e3 ? i2 + 1 : u3) : au(n3, e3 ? i2 + 1 : 0, e3 ? u3 : i2);
      }
      function wu(n3, t3) {
        var r3 = n3;
        return r3 instanceof Ct2 && (r3 = r3.value()), l2(t3, function(n4, t4) {
          return t4.func.apply(t4.thisArg, a2([n4], t4.args));
        }, r3);
      }
      function mu(n3, t3, r3) {
        var e3 = n3.length;
        if (e3 < 2)
          return e3 ? gu(n3[0]) : [];
        for (var u3 = -1, i2 = il(e3); ++u3 < e3; )
          for (var o3 = n3[u3], f3 = -1; ++f3 < e3; )
            f3 != u3 && (i2[u3] = Hr2(i2[u3] || o3, n3[f3], t3, r3));
        return gu(ee3(i2, 1), t3, r3);
      }
      function xu(n3, t3, r3) {
        for (var e3 = -1, u3 = n3.length, i2 = t3.length, o3 = {}; ++e3 < u3; ) {
          r3(o3, n3[e3], e3 < i2 ? t3[e3] : X2);
        }
        return o3;
      }
      function ju(n3) {
        return Jf2(n3) ? n3 : [];
      }
      function Au(n3) {
        return typeof n3 == "function" ? n3 : La2;
      }
      function ku(n3, t3) {
        return bh2(n3) ? n3 : Bi2(n3, t3) ? [n3] : Cs(Ec2(n3));
      }
      function Ou(n3, t3, r3) {
        var e3 = n3.length;
        return r3 = r3 === X2 ? e3 : r3, !t3 && r3 >= e3 ? n3 : au(n3, t3, r3);
      }
      function Iu(n3, t3) {
        if (t3)
          return n3.slice();
        var r3 = n3.length, e3 = zl ? zl(r3) : new n3.constructor(r3);
        return n3.copy(e3), e3;
      }
      function Ru(n3) {
        var t3 = new n3.constructor(n3.byteLength);
        return new Rl(t3).set(new Rl(n3)), t3;
      }
      function zu(n3, t3) {
        return new n3.constructor(t3 ? Ru(n3.buffer) : n3.buffer, n3.byteOffset, n3.byteLength);
      }
      function Eu(n3) {
        var t3 = new n3.constructor(n3.source, Nt.exec(n3));
        return t3.lastIndex = n3.lastIndex, t3;
      }
      function Su(n3) {
        return _s ? ll(_s.call(n3)) : {};
      }
      function Wu(n3, t3) {
        return new n3.constructor(t3 ? Ru(n3.buffer) : n3.buffer, n3.byteOffset, n3.length);
      }
      function Lu(n3, t3) {
        if (n3 !== t3) {
          var r3 = n3 !== X2, e3 = n3 === null, u3 = n3 === n3, i2 = bc2(n3), o3 = t3 !== X2, f3 = t3 === null, c3 = t3 === t3, a3 = bc2(t3);
          if (!f3 && !a3 && !i2 && n3 > t3 || i2 && o3 && c3 && !f3 && !a3 || e3 && o3 && c3 || !r3 && c3 || !u3)
            return 1;
          if (!e3 && !i2 && !a3 && n3 < t3 || a3 && r3 && u3 && !e3 && !i2 || f3 && r3 && u3 || !o3 && u3 || !c3)
            return -1;
        }
        return 0;
      }
      function Cu(n3, t3, r3) {
        for (var e3 = -1, u3 = n3.criteria, i2 = t3.criteria, o3 = u3.length, f3 = r3.length; ++e3 < o3; ) {
          var c3 = Lu(u3[e3], i2[e3]);
          if (c3) {
            if (e3 >= f3)
              return c3;
            return c3 * (r3[e3] == "desc" ? -1 : 1);
          }
        }
        return n3.index - t3.index;
      }
      function Uu(n3, t3, r3, e3) {
        for (var u3 = -1, i2 = n3.length, o3 = r3.length, f3 = -1, c3 = t3.length, a3 = Gl(i2 - o3, 0), l3 = il(c3 + a3), s2 = !e3; ++f3 < c3; )
          l3[f3] = t3[f3];
        for (; ++u3 < o3; )
          (s2 || u3 < i2) && (l3[r3[u3]] = n3[u3]);
        for (; a3--; )
          l3[f3++] = n3[u3++];
        return l3;
      }
      function Bu(n3, t3, r3, e3) {
        for (var u3 = -1, i2 = n3.length, o3 = -1, f3 = r3.length, c3 = -1, a3 = t3.length, l3 = Gl(i2 - f3, 0), s2 = il(l3 + a3), h3 = !e3; ++u3 < l3; )
          s2[u3] = n3[u3];
        for (var p4 = u3; ++c3 < a3; )
          s2[p4 + c3] = t3[c3];
        for (; ++o3 < f3; )
          (h3 || u3 < i2) && (s2[p4 + r3[o3]] = n3[u3++]);
        return s2;
      }
      function Tu(n3, t3) {
        var r3 = -1, e3 = n3.length;
        for (t3 || (t3 = il(e3)); ++r3 < e3; )
          t3[r3] = n3[r3];
        return t3;
      }
      function $u(n3, t3, r3, e3) {
        var u3 = !r3;
        r3 || (r3 = {});
        for (var i2 = -1, o3 = t3.length; ++i2 < o3; ) {
          var f3 = t3[i2], c3 = e3 ? e3(r3[f3], n3[f3], f3, r3, n3) : X2;
          c3 === X2 && (c3 = n3[f3]), u3 ? Br2(r3, f3, c3) : Sr2(r3, f3, c3);
        }
        return r3;
      }
      function Du(n3, t3) {
        return $u(n3, Is(n3), t3);
      }
      function Mu(n3, t3) {
        return $u(n3, Rs(n3), t3);
      }
      function Fu(n3, r3) {
        return function(e3, u3) {
          var i2 = bh2(e3) ? t2 : Lr2, o3 = r3 ? r3() : {};
          return i2(e3, n3, mi2(u3, 2), o3);
        };
      }
      function Nu(n3) {
        return uu(function(t3, r3) {
          var e3 = -1, u3 = r3.length, i2 = u3 > 1 ? r3[u3 - 1] : X2, o3 = u3 > 2 ? r3[2] : X2;
          for (i2 = n3.length > 3 && typeof i2 == "function" ? (u3--, i2) : X2, o3 && Ui2(r3[0], r3[1], o3) && (i2 = u3 < 3 ? X2 : i2, u3 = 1), t3 = ll(t3); ++e3 < u3; ) {
            var f3 = r3[e3];
            f3 && n3(t3, f3, e3, i2);
          }
          return t3;
        });
      }
      function Pu(n3, t3) {
        return function(r3, e3) {
          if (r3 == null)
            return r3;
          if (!Hf2(r3))
            return n3(r3, e3);
          for (var u3 = r3.length, i2 = t3 ? u3 : -1, o3 = ll(r3); (t3 ? i2-- : ++i2 < u3) && e3(o3[i2], i2, o3) !== false; )
            ;
          return r3;
        };
      }
      function qu(n3) {
        return function(t3, r3, e3) {
          for (var u3 = -1, i2 = ll(t3), o3 = e3(t3), f3 = o3.length; f3--; ) {
            var c3 = o3[n3 ? f3 : ++u3];
            if (r3(i2[c3], c3, i2) === false)
              break;
          }
          return t3;
        };
      }
      function Zu(n3, t3, r3) {
        function e3() {
          return (this && this !== re2 && this instanceof e3 ? i2 : n3).apply(u3 ? r3 : this, arguments);
        }
        var u3 = t3 & _n, i2 = Gu(n3);
        return e3;
      }
      function Ku(n3) {
        return function(t3) {
          t3 = Ec2(t3);
          var r3 = T2(t3) ? G2(t3) : X2, e3 = r3 ? r3[0] : t3.charAt(0), u3 = r3 ? Ou(r3, 1).join("") : t3.slice(1);
          return e3[n3]() + u3;
        };
      }
      function Vu(n3) {
        return function(t3) {
          return l2(Ra2(ca2(t3).replace($r, "")), n3, "");
        };
      }
      function Gu(n3) {
        return function() {
          var t3 = arguments;
          switch (t3.length) {
            case 0:
              return new n3();
            case 1:
              return new n3(t3[0]);
            case 2:
              return new n3(t3[0], t3[1]);
            case 3:
              return new n3(t3[0], t3[1], t3[2]);
            case 4:
              return new n3(t3[0], t3[1], t3[2], t3[3]);
            case 5:
              return new n3(t3[0], t3[1], t3[2], t3[3], t3[4]);
            case 6:
              return new n3(t3[0], t3[1], t3[2], t3[3], t3[4], t3[5]);
            case 7:
              return new n3(t3[0], t3[1], t3[2], t3[3], t3[4], t3[5], t3[6]);
          }
          var r3 = gs(n3.prototype), e3 = n3.apply(r3, t3);
          return fc2(e3) ? e3 : r3;
        };
      }
      function Hu(t3, r3, e3) {
        function u3() {
          for (var o3 = arguments.length, f3 = il(o3), c3 = o3, a3 = wi2(u3); c3--; )
            f3[c3] = arguments[c3];
          var l3 = o3 < 3 && f3[0] !== a3 && f3[o3 - 1] !== a3 ? [] : N2(f3, a3);
          return o3 -= l3.length, o3 < e3 ? oi2(t3, r3, Qu, u3.placeholder, X2, f3, l3, X2, X2, e3 - o3) : n2(this && this !== re2 && this instanceof u3 ? i2 : t3, this, f3);
        }
        var i2 = Gu(t3);
        return u3;
      }
      function Ju(n3) {
        return function(t3, r3, e3) {
          var u3 = ll(t3);
          if (!Hf2(t3)) {
            var i2 = mi2(r3, 3);
            t3 = Pc2(t3), r3 = function(n4) {
              return i2(u3[n4], n4, u3);
            };
          }
          var o3 = n3(t3, r3, e3);
          return o3 > -1 ? u3[i2 ? t3[o3] : o3] : X2;
        };
      }
      function Yu(n3) {
        return gi2(function(t3) {
          var r3 = t3.length, e3 = r3, u3 = Y3.prototype.thru;
          for (n3 && t3.reverse(); e3--; ) {
            var i2 = t3[e3];
            if (typeof i2 != "function")
              throw new pl(en);
            if (u3 && !o3 && bi2(i2) == "wrapper")
              var o3 = new Y3([], true);
          }
          for (e3 = o3 ? e3 : r3; ++e3 < r3; ) {
            i2 = t3[e3];
            var f3 = bi2(i2), c3 = f3 == "wrapper" ? Os(i2) : X2;
            o3 = c3 && $i2(c3[0]) && c3[1] == (mn | yn | bn | xn) && !c3[4].length && c3[9] == 1 ? o3[bi2(c3[0])].apply(o3, c3[3]) : i2.length == 1 && $i2(i2) ? o3[f3]() : o3.thru(i2);
          }
          return function() {
            var n4 = arguments, e4 = n4[0];
            if (o3 && n4.length == 1 && bh2(e4))
              return o3.plant(e4).value();
            for (var u4 = 0, i3 = r3 ? t3[u4].apply(this, n4) : e4; ++u4 < r3; )
              i3 = t3[u4].call(this, i3);
            return i3;
          };
        });
      }
      function Qu(n3, t3, r3, e3, u3, i2, o3, f3, c3, a3) {
        function l3() {
          for (var y3 = arguments.length, d3 = il(y3), b3 = y3; b3--; )
            d3[b3] = arguments[b3];
          if (_3)
            var w3 = wi2(l3), m3 = C2(d3, w3);
          if (e3 && (d3 = Uu(d3, e3, u3, _3)), i2 && (d3 = Bu(d3, i2, o3, _3)), y3 -= m3, _3 && y3 < a3) {
            return oi2(n3, t3, Qu, l3.placeholder, r3, d3, N2(d3, w3), f3, c3, a3 - y3);
          }
          var x4 = h3 ? r3 : this, j3 = p4 ? x4[n3] : n3;
          return y3 = d3.length, f3 ? d3 = Hi2(d3, f3) : v3 && y3 > 1 && d3.reverse(), s2 && c3 < y3 && (d3.length = c3), this && this !== re2 && this instanceof l3 && (j3 = g3 || Gu(j3)), j3.apply(x4, d3);
        }
        var s2 = t3 & mn, h3 = t3 & _n, p4 = t3 & vn, _3 = t3 & (yn | dn), v3 = t3 & jn, g3 = p4 ? X2 : Gu(n3);
        return l3;
      }
      function Xu(n3, t3) {
        return function(r3, e3) {
          return Oe2(r3, n3, t3(e3), {});
        };
      }
      function ni2(n3, t3) {
        return function(r3, e3) {
          var u3;
          if (r3 === X2 && e3 === X2)
            return t3;
          if (r3 !== X2 && (u3 = r3), e3 !== X2) {
            if (u3 === X2)
              return e3;
            typeof r3 == "string" || typeof e3 == "string" ? (r3 = vu(r3), e3 = vu(e3)) : (r3 = _u(r3), e3 = _u(e3)), u3 = n3(r3, e3);
          }
          return u3;
        };
      }
      function ti2(t3) {
        return gi2(function(r3) {
          return r3 = c2(r3, z2(mi2())), uu(function(e3) {
            var u3 = this;
            return t3(r3, function(t4) {
              return n2(t4, u3, e3);
            });
          });
        });
      }
      function ri2(n3, t3) {
        t3 = t3 === X2 ? " " : vu(t3);
        var r3 = t3.length;
        if (r3 < 2)
          return r3 ? eu(t3, n3) : t3;
        var e3 = eu(t3, Fl(n3 / V2(t3)));
        return T2(t3) ? Ou(G2(e3), 0, n3).join("") : e3.slice(0, n3);
      }
      function ei2(t3, r3, e3, u3) {
        function i2() {
          for (var r4 = -1, c3 = arguments.length, a3 = -1, l3 = u3.length, s2 = il(l3 + c3), h3 = this && this !== re2 && this instanceof i2 ? f3 : t3; ++a3 < l3; )
            s2[a3] = u3[a3];
          for (; c3--; )
            s2[a3++] = arguments[++r4];
          return n2(h3, o3 ? e3 : this, s2);
        }
        var o3 = r3 & _n, f3 = Gu(t3);
        return i2;
      }
      function ui2(n3) {
        return function(t3, r3, e3) {
          return e3 && typeof e3 != "number" && Ui2(t3, r3, e3) && (r3 = e3 = X2), t3 = Ac2(t3), r3 === X2 ? (r3 = t3, t3 = 0) : r3 = Ac2(r3), e3 = e3 === X2 ? t3 < r3 ? 1 : -1 : Ac2(e3), ru(t3, r3, e3, n3);
        };
      }
      function ii2(n3) {
        return function(t3, r3) {
          return typeof t3 == "string" && typeof r3 == "string" || (t3 = Ic2(t3), r3 = Ic2(r3)), n3(t3, r3);
        };
      }
      function oi2(n3, t3, r3, e3, u3, i2, o3, f3, c3, a3) {
        var l3 = t3 & yn, s2 = l3 ? o3 : X2, h3 = l3 ? X2 : o3, p4 = l3 ? i2 : X2, _3 = l3 ? X2 : i2;
        t3 |= l3 ? bn : wn, t3 &= ~(l3 ? wn : bn), t3 & gn || (t3 &= ~(_n | vn));
        var v3 = [n3, t3, u3, p4, s2, _3, h3, f3, c3, a3], g3 = r3.apply(X2, v3);
        return $i2(n3) && Ss(g3, v3), g3.placeholder = e3, Yi2(g3, n3, t3);
      }
      function fi2(n3) {
        var t3 = al[n3];
        return function(n4, r3) {
          if (n4 = Ic2(n4), r3 = r3 == null ? 0 : Hl(kc2(r3), 292), r3 && Zl(n4)) {
            var e3 = (Ec2(n4) + "e").split("e");
            return e3 = (Ec2(t3(e3[0] + "e" + (+e3[1] + r3))) + "e").split("e"), +(e3[0] + "e" + (+e3[1] - r3));
          }
          return t3(n4);
        };
      }
      function ci2(n3) {
        return function(t3) {
          var r3 = zs(t3);
          return r3 == Gn ? M2(t3) : r3 == tt ? q2(t3) : I2(t3, n3(t3));
        };
      }
      function ai2(n3, t3, r3, e3, u3, i2, o3, f3) {
        var c3 = t3 & vn;
        if (!c3 && typeof n3 != "function")
          throw new pl(en);
        var a3 = e3 ? e3.length : 0;
        if (a3 || (t3 &= ~(bn | wn), e3 = u3 = X2), o3 = o3 === X2 ? o3 : Gl(kc2(o3), 0), f3 = f3 === X2 ? f3 : kc2(f3), a3 -= u3 ? u3.length : 0, t3 & wn) {
          var l3 = e3, s2 = u3;
          e3 = u3 = X2;
        }
        var h3 = c3 ? X2 : Os(n3), p4 = [n3, t3, r3, e3, u3, l3, s2, i2, o3, f3];
        if (h3 && qi2(p4, h3), n3 = p4[0], t3 = p4[1], r3 = p4[2], e3 = p4[3], u3 = p4[4], f3 = p4[9] = p4[9] === X2 ? c3 ? 0 : n3.length : Gl(p4[9] - a3, 0), !f3 && t3 & (yn | dn) && (t3 &= ~(yn | dn)), t3 && t3 != _n)
          _3 = t3 == yn || t3 == dn ? Hu(n3, t3, f3) : t3 != bn && t3 != (_n | bn) || u3.length ? Qu.apply(X2, p4) : ei2(n3, t3, r3, e3);
        else
          var _3 = Zu(n3, t3, r3);
        return Yi2((h3 ? ms : Ss)(_3, p4), n3, t3);
      }
      function li2(n3, t3, r3, e3) {
        return n3 === X2 || Gf2(n3, gl[r3]) && !bl.call(e3, r3) ? t3 : n3;
      }
      function si2(n3, t3, r3, e3, u3, i2) {
        return fc2(n3) && fc2(t3) && (i2.set(t3, n3), Ke2(n3, t3, X2, si2, i2), i2.delete(t3)), n3;
      }
      function hi2(n3) {
        return gc2(n3) ? X2 : n3;
      }
      function pi2(n3, t3, r3, e3, u3, i2) {
        var o3 = r3 & hn, f3 = n3.length, c3 = t3.length;
        if (f3 != c3 && !(o3 && c3 > f3))
          return false;
        var a3 = i2.get(n3), l3 = i2.get(t3);
        if (a3 && l3)
          return a3 == t3 && l3 == n3;
        var s2 = -1, p4 = true, _3 = r3 & pn ? new yr2() : X2;
        for (i2.set(n3, t3), i2.set(t3, n3); ++s2 < f3; ) {
          var v3 = n3[s2], g3 = t3[s2];
          if (e3)
            var y3 = o3 ? e3(g3, v3, s2, t3, n3, i2) : e3(v3, g3, s2, n3, t3, i2);
          if (y3 !== X2) {
            if (y3)
              continue;
            p4 = false;
            break;
          }
          if (_3) {
            if (!h2(t3, function(n4, t4) {
              if (!S2(_3, t4) && (v3 === n4 || u3(v3, n4, r3, e3, i2)))
                return _3.push(t4);
            })) {
              p4 = false;
              break;
            }
          } else if (v3 !== g3 && !u3(v3, g3, r3, e3, i2)) {
            p4 = false;
            break;
          }
        }
        return i2.delete(n3), i2.delete(t3), p4;
      }
      function _i(n3, t3, r3, e3, u3, i2, o3) {
        switch (r3) {
          case ct:
            if (n3.byteLength != t3.byteLength || n3.byteOffset != t3.byteOffset)
              return false;
            n3 = n3.buffer, t3 = t3.buffer;
          case ft:
            return !(n3.byteLength != t3.byteLength || !i2(new Rl(n3), new Rl(t3)));
          case Nn:
          case Pn:
          case Hn:
            return Gf2(+n3, +t3);
          case Zn:
            return n3.name == t3.name && n3.message == t3.message;
          case nt:
          case rt:
            return n3 == t3 + "";
          case Gn:
            var f3 = M2;
          case tt:
            var c3 = e3 & hn;
            if (f3 || (f3 = P2), n3.size != t3.size && !c3)
              return false;
            var a3 = o3.get(n3);
            if (a3)
              return a3 == t3;
            e3 |= pn, o3.set(n3, t3);
            var l3 = pi2(f3(n3), f3(t3), e3, u3, i2, o3);
            return o3.delete(n3), l3;
          case et:
            if (_s)
              return _s.call(n3) == _s.call(t3);
        }
        return false;
      }
      function vi2(n3, t3, r3, e3, u3, i2) {
        var o3 = r3 & hn, f3 = yi2(n3), c3 = f3.length;
        if (c3 != yi2(t3).length && !o3)
          return false;
        for (var a3 = c3; a3--; ) {
          var l3 = f3[a3];
          if (!(o3 ? l3 in t3 : bl.call(t3, l3)))
            return false;
        }
        var s2 = i2.get(n3), h3 = i2.get(t3);
        if (s2 && h3)
          return s2 == t3 && h3 == n3;
        var p4 = true;
        i2.set(n3, t3), i2.set(t3, n3);
        for (var _3 = o3; ++a3 < c3; ) {
          l3 = f3[a3];
          var v3 = n3[l3], g3 = t3[l3];
          if (e3)
            var y3 = o3 ? e3(g3, v3, l3, t3, n3, i2) : e3(v3, g3, l3, n3, t3, i2);
          if (!(y3 === X2 ? v3 === g3 || u3(v3, g3, r3, e3, i2) : y3)) {
            p4 = false;
            break;
          }
          _3 || (_3 = l3 == "constructor");
        }
        if (p4 && !_3) {
          var d3 = n3.constructor, b3 = t3.constructor;
          d3 != b3 && "constructor" in n3 && "constructor" in t3 && !(typeof d3 == "function" && d3 instanceof d3 && typeof b3 == "function" && b3 instanceof b3) && (p4 = false);
        }
        return i2.delete(n3), i2.delete(t3), p4;
      }
      function gi2(n3) {
        return Ls(Vi2(n3, X2, _o), n3 + "");
      }
      function yi2(n3) {
        return de3(n3, Pc2, Is);
      }
      function di2(n3) {
        return de3(n3, qc2, Rs);
      }
      function bi2(n3) {
        for (var t3 = n3.name + "", r3 = fs[t3], e3 = bl.call(fs, t3) ? r3.length : 0; e3--; ) {
          var u3 = r3[e3], i2 = u3.func;
          if (i2 == null || i2 == n3)
            return u3.name;
        }
        return t3;
      }
      function wi2(n3) {
        return (bl.call(Z3, "placeholder") ? Z3 : n3).placeholder;
      }
      function mi2() {
        var n3 = Z3.iteratee || Ca2;
        return n3 = n3 === Ca2 ? De2 : n3, arguments.length ? n3(arguments[0], arguments[1]) : n3;
      }
      function xi2(n3, t3) {
        var r3 = n3.__data__;
        return Ti2(t3) ? r3[typeof t3 == "string" ? "string" : "hash"] : r3.map;
      }
      function ji2(n3) {
        for (var t3 = Pc2(n3), r3 = t3.length; r3--; ) {
          var e3 = t3[r3], u3 = n3[e3];
          t3[r3] = [e3, u3, Fi2(u3)];
        }
        return t3;
      }
      function Ai2(n3, t3) {
        var r3 = B2(n3, t3);
        return Ue2(r3) ? r3 : X2;
      }
      function ki2(n3) {
        var t3 = bl.call(n3, Bl), r3 = n3[Bl];
        try {
          n3[Bl] = X2;
          var e3 = true;
        } catch (n4) {
        }
        var u3 = xl.call(n3);
        return e3 && (t3 ? n3[Bl] = r3 : delete n3[Bl]), u3;
      }
      function Oi2(n3, t3, r3) {
        for (var e3 = -1, u3 = r3.length; ++e3 < u3; ) {
          var i2 = r3[e3], o3 = i2.size;
          switch (i2.type) {
            case "drop":
              n3 += o3;
              break;
            case "dropRight":
              t3 -= o3;
              break;
            case "take":
              t3 = Hl(t3, n3 + o3);
              break;
            case "takeRight":
              n3 = Gl(n3, t3 - o3);
          }
        }
        return { start: n3, end: t3 };
      }
      function Ii2(n3) {
        var t3 = n3.match(Bt);
        return t3 ? t3[1].split(Tt) : [];
      }
      function Ri2(n3, t3, r3) {
        t3 = ku(t3, n3);
        for (var e3 = -1, u3 = t3.length, i2 = false; ++e3 < u3; ) {
          var o3 = no(t3[e3]);
          if (!(i2 = n3 != null && r3(n3, o3)))
            break;
          n3 = n3[o3];
        }
        return i2 || ++e3 != u3 ? i2 : (u3 = n3 == null ? 0 : n3.length, !!u3 && oc2(u3) && Ci2(o3, u3) && (bh2(n3) || dh2(n3)));
      }
      function zi2(n3) {
        var t3 = n3.length, r3 = new n3.constructor(t3);
        return t3 && typeof n3[0] == "string" && bl.call(n3, "index") && (r3.index = n3.index, r3.input = n3.input), r3;
      }
      function Ei2(n3) {
        return typeof n3.constructor != "function" || Mi2(n3) ? {} : gs(El(n3));
      }
      function Si2(n3, t3, r3) {
        var e3 = n3.constructor;
        switch (t3) {
          case ft:
            return Ru(n3);
          case Nn:
          case Pn:
            return new e3(+n3);
          case ct:
            return zu(n3, r3);
          case at:
          case lt:
          case st:
          case ht:
          case pt:
          case _t:
          case vt:
          case gt:
          case yt:
            return Wu(n3, r3);
          case Gn:
            return new e3();
          case Hn:
          case rt:
            return new e3(n3);
          case nt:
            return Eu(n3);
          case tt:
            return new e3();
          case et:
            return Su(n3);
        }
      }
      function Wi2(n3, t3) {
        var r3 = t3.length;
        if (!r3)
          return n3;
        var e3 = r3 - 1;
        return t3[e3] = (r3 > 1 ? "& " : "") + t3[e3], t3 = t3.join(r3 > 2 ? ", " : " "), n3.replace(Ut, "{\n/* [wrapped with " + t3 + "] */\n");
      }
      function Li2(n3) {
        return bh2(n3) || dh2(n3) || !!(Cl && n3 && n3[Cl]);
      }
      function Ci2(n3, t3) {
        var r3 = typeof n3;
        return t3 = t3 == null ? Wn : t3, !!t3 && (r3 == "number" || r3 != "symbol" && Vt.test(n3)) && n3 > -1 && n3 % 1 == 0 && n3 < t3;
      }
      function Ui2(n3, t3, r3) {
        if (!fc2(r3))
          return false;
        var e3 = typeof t3;
        return !!(e3 == "number" ? Hf2(r3) && Ci2(t3, r3.length) : e3 == "string" && t3 in r3) && Gf2(r3[t3], n3);
      }
      function Bi2(n3, t3) {
        if (bh2(n3))
          return false;
        var r3 = typeof n3;
        return !(r3 != "number" && r3 != "symbol" && r3 != "boolean" && n3 != null && !bc2(n3)) || (zt.test(n3) || !Rt.test(n3) || t3 != null && n3 in ll(t3));
      }
      function Ti2(n3) {
        var t3 = typeof n3;
        return t3 == "string" || t3 == "number" || t3 == "symbol" || t3 == "boolean" ? n3 !== "__proto__" : n3 === null;
      }
      function $i2(n3) {
        var t3 = bi2(n3), r3 = Z3[t3];
        if (typeof r3 != "function" || !(t3 in Ct2.prototype))
          return false;
        if (n3 === r3)
          return true;
        var e3 = Os(r3);
        return !!e3 && n3 === e3[0];
      }
      function Di2(n3) {
        return !!ml && ml in n3;
      }
      function Mi2(n3) {
        var t3 = n3 && n3.constructor;
        return n3 === (typeof t3 == "function" && t3.prototype || gl);
      }
      function Fi2(n3) {
        return n3 === n3 && !fc2(n3);
      }
      function Ni2(n3, t3) {
        return function(r3) {
          return r3 != null && (r3[n3] === t3 && (t3 !== X2 || n3 in ll(r3)));
        };
      }
      function Pi2(n3) {
        var t3 = Cf2(n3, function(n4) {
          return r3.size === fn && r3.clear(), n4;
        }), r3 = t3.cache;
        return t3;
      }
      function qi2(n3, t3) {
        var r3 = n3[1], e3 = t3[1], u3 = r3 | e3, i2 = u3 < (_n | vn | mn), o3 = e3 == mn && r3 == yn || e3 == mn && r3 == xn && n3[7].length <= t3[8] || e3 == (mn | xn) && t3[7].length <= t3[8] && r3 == yn;
        if (!i2 && !o3)
          return n3;
        e3 & _n && (n3[2] = t3[2], u3 |= r3 & _n ? 0 : gn);
        var f3 = t3[3];
        if (f3) {
          var c3 = n3[3];
          n3[3] = c3 ? Uu(c3, f3, t3[4]) : f3, n3[4] = c3 ? N2(n3[3], cn) : t3[4];
        }
        return f3 = t3[5], f3 && (c3 = n3[5], n3[5] = c3 ? Bu(c3, f3, t3[6]) : f3, n3[6] = c3 ? N2(n3[5], cn) : t3[6]), f3 = t3[7], f3 && (n3[7] = f3), e3 & mn && (n3[8] = n3[8] == null ? t3[8] : Hl(n3[8], t3[8])), n3[9] == null && (n3[9] = t3[9]), n3[0] = t3[0], n3[1] = u3, n3;
      }
      function Zi2(n3) {
        var t3 = [];
        if (n3 != null)
          for (var r3 in ll(n3))
            t3.push(r3);
        return t3;
      }
      function Ki2(n3) {
        return xl.call(n3);
      }
      function Vi2(t3, r3, e3) {
        return r3 = Gl(r3 === X2 ? t3.length - 1 : r3, 0), function() {
          for (var u3 = arguments, i2 = -1, o3 = Gl(u3.length - r3, 0), f3 = il(o3); ++i2 < o3; )
            f3[i2] = u3[r3 + i2];
          i2 = -1;
          for (var c3 = il(r3 + 1); ++i2 < r3; )
            c3[i2] = u3[i2];
          return c3[r3] = e3(f3), n2(t3, this, c3);
        };
      }
      function Gi2(n3, t3) {
        return t3.length < 2 ? n3 : _e2(n3, au(t3, 0, -1));
      }
      function Hi2(n3, t3) {
        for (var r3 = n3.length, e3 = Hl(t3.length, r3), u3 = Tu(n3); e3--; ) {
          var i2 = t3[e3];
          n3[e3] = Ci2(i2, r3) ? u3[i2] : X2;
        }
        return n3;
      }
      function Ji2(n3, t3) {
        if ((t3 !== "constructor" || typeof n3[t3] != "function") && t3 != "__proto__")
          return n3[t3];
      }
      function Yi2(n3, t3, r3) {
        var e3 = t3 + "";
        return Ls(n3, Wi2(e3, ro(Ii2(e3), r3)));
      }
      function Qi2(n3) {
        var t3 = 0, r3 = 0;
        return function() {
          var e3 = Jl(), u3 = In - (e3 - r3);
          if (r3 = e3, u3 > 0) {
            if (++t3 >= On)
              return arguments[0];
          } else
            t3 = 0;
          return n3.apply(X2, arguments);
        };
      }
      function Xi2(n3, t3) {
        var r3 = -1, e3 = n3.length, u3 = e3 - 1;
        for (t3 = t3 === X2 ? e3 : t3; ++r3 < t3; ) {
          var i2 = tu(r3, u3), o3 = n3[i2];
          n3[i2] = n3[r3], n3[r3] = o3;
        }
        return n3.length = t3, n3;
      }
      function no(n3) {
        if (typeof n3 == "string" || bc2(n3))
          return n3;
        var t3 = n3 + "";
        return t3 == "0" && 1 / n3 == -Sn ? "-0" : t3;
      }
      function to(n3) {
        if (n3 != null) {
          try {
            return dl.call(n3);
          } catch (n4) {
          }
          try {
            return n3 + "";
          } catch (n4) {
          }
        }
        return "";
      }
      function ro(n3, t3) {
        return r2($n, function(r3) {
          var e3 = "_." + r3[0];
          t3 & r3[1] && !o2(n3, e3) && n3.push(e3);
        }), n3.sort();
      }
      function eo(n3) {
        if (n3 instanceof Ct2)
          return n3.clone();
        var t3 = new Y3(n3.__wrapped__, n3.__chain__);
        return t3.__actions__ = Tu(n3.__actions__), t3.__index__ = n3.__index__, t3.__values__ = n3.__values__, t3;
      }
      function uo(n3, t3, r3) {
        t3 = (r3 ? Ui2(n3, t3, r3) : t3 === X2) ? 1 : Gl(kc2(t3), 0);
        var e3 = n3 == null ? 0 : n3.length;
        if (!e3 || t3 < 1)
          return [];
        for (var u3 = 0, i2 = 0, o3 = il(Fl(e3 / t3)); u3 < e3; )
          o3[i2++] = au(n3, u3, u3 += t3);
        return o3;
      }
      function io(n3) {
        for (var t3 = -1, r3 = n3 == null ? 0 : n3.length, e3 = 0, u3 = []; ++t3 < r3; ) {
          var i2 = n3[t3];
          i2 && (u3[e3++] = i2);
        }
        return u3;
      }
      function oo() {
        var n3 = arguments.length;
        if (!n3)
          return [];
        for (var t3 = il(n3 - 1), r3 = arguments[0], e3 = n3; e3--; )
          t3[e3 - 1] = arguments[e3];
        return a2(bh2(r3) ? Tu(r3) : [r3], ee3(t3, 1));
      }
      function fo(n3, t3, r3) {
        var e3 = n3 == null ? 0 : n3.length;
        return e3 ? (t3 = r3 || t3 === X2 ? 1 : kc2(t3), au(n3, t3 < 0 ? 0 : t3, e3)) : [];
      }
      function co(n3, t3, r3) {
        var e3 = n3 == null ? 0 : n3.length;
        return e3 ? (t3 = r3 || t3 === X2 ? 1 : kc2(t3), t3 = e3 - t3, au(n3, 0, t3 < 0 ? 0 : t3)) : [];
      }
      function ao(n3, t3) {
        return n3 && n3.length ? bu(n3, mi2(t3, 3), true, true) : [];
      }
      function lo(n3, t3) {
        return n3 && n3.length ? bu(n3, mi2(t3, 3), true) : [];
      }
      function so(n3, t3, r3, e3) {
        var u3 = n3 == null ? 0 : n3.length;
        return u3 ? (r3 && typeof r3 != "number" && Ui2(n3, t3, r3) && (r3 = 0, e3 = u3), ne3(n3, t3, r3, e3)) : [];
      }
      function ho(n3, t3, r3) {
        var e3 = n3 == null ? 0 : n3.length;
        if (!e3)
          return -1;
        var u3 = r3 == null ? 0 : kc2(r3);
        return u3 < 0 && (u3 = Gl(e3 + u3, 0)), g2(n3, mi2(t3, 3), u3);
      }
      function po(n3, t3, r3) {
        var e3 = n3 == null ? 0 : n3.length;
        if (!e3)
          return -1;
        var u3 = e3 - 1;
        return r3 !== X2 && (u3 = kc2(r3), u3 = r3 < 0 ? Gl(e3 + u3, 0) : Hl(u3, e3 - 1)), g2(n3, mi2(t3, 3), u3, true);
      }
      function _o(n3) {
        return (n3 == null ? 0 : n3.length) ? ee3(n3, 1) : [];
      }
      function vo(n3) {
        return (n3 == null ? 0 : n3.length) ? ee3(n3, Sn) : [];
      }
      function go(n3, t3) {
        return (n3 == null ? 0 : n3.length) ? (t3 = t3 === X2 ? 1 : kc2(t3), ee3(n3, t3)) : [];
      }
      function yo(n3) {
        for (var t3 = -1, r3 = n3 == null ? 0 : n3.length, e3 = {}; ++t3 < r3; ) {
          var u3 = n3[t3];
          e3[u3[0]] = u3[1];
        }
        return e3;
      }
      function bo(n3) {
        return n3 && n3.length ? n3[0] : X2;
      }
      function wo(n3, t3, r3) {
        var e3 = n3 == null ? 0 : n3.length;
        if (!e3)
          return -1;
        var u3 = r3 == null ? 0 : kc2(r3);
        return u3 < 0 && (u3 = Gl(e3 + u3, 0)), y2(n3, t3, u3);
      }
      function mo(n3) {
        return (n3 == null ? 0 : n3.length) ? au(n3, 0, -1) : [];
      }
      function xo(n3, t3) {
        return n3 == null ? "" : Kl.call(n3, t3);
      }
      function jo(n3) {
        var t3 = n3 == null ? 0 : n3.length;
        return t3 ? n3[t3 - 1] : X2;
      }
      function Ao(n3, t3, r3) {
        var e3 = n3 == null ? 0 : n3.length;
        if (!e3)
          return -1;
        var u3 = e3;
        return r3 !== X2 && (u3 = kc2(r3), u3 = u3 < 0 ? Gl(e3 + u3, 0) : Hl(u3, e3 - 1)), t3 === t3 ? K2(n3, t3, u3) : g2(n3, b2, u3, true);
      }
      function ko(n3, t3) {
        return n3 && n3.length ? Ge2(n3, kc2(t3)) : X2;
      }
      function Oo(n3, t3) {
        return n3 && n3.length && t3 && t3.length ? Xe2(n3, t3) : n3;
      }
      function Io(n3, t3, r3) {
        return n3 && n3.length && t3 && t3.length ? Xe2(n3, t3, mi2(r3, 2)) : n3;
      }
      function Ro(n3, t3, r3) {
        return n3 && n3.length && t3 && t3.length ? Xe2(n3, t3, X2, r3) : n3;
      }
      function zo(n3, t3) {
        var r3 = [];
        if (!n3 || !n3.length)
          return r3;
        var e3 = -1, u3 = [], i2 = n3.length;
        for (t3 = mi2(t3, 3); ++e3 < i2; ) {
          var o3 = n3[e3];
          t3(o3, e3, n3) && (r3.push(o3), u3.push(e3));
        }
        return nu(n3, u3), r3;
      }
      function Eo(n3) {
        return n3 == null ? n3 : Xl.call(n3);
      }
      function So(n3, t3, r3) {
        var e3 = n3 == null ? 0 : n3.length;
        return e3 ? (r3 && typeof r3 != "number" && Ui2(n3, t3, r3) ? (t3 = 0, r3 = e3) : (t3 = t3 == null ? 0 : kc2(t3), r3 = r3 === X2 ? e3 : kc2(r3)), au(n3, t3, r3)) : [];
      }
      function Wo(n3, t3) {
        return su(n3, t3);
      }
      function Lo(n3, t3, r3) {
        return hu(n3, t3, mi2(r3, 2));
      }
      function Co(n3, t3) {
        var r3 = n3 == null ? 0 : n3.length;
        if (r3) {
          var e3 = su(n3, t3);
          if (e3 < r3 && Gf2(n3[e3], t3))
            return e3;
        }
        return -1;
      }
      function Uo(n3, t3) {
        return su(n3, t3, true);
      }
      function Bo(n3, t3, r3) {
        return hu(n3, t3, mi2(r3, 2), true);
      }
      function To(n3, t3) {
        if (n3 == null ? 0 : n3.length) {
          var r3 = su(n3, t3, true) - 1;
          if (Gf2(n3[r3], t3))
            return r3;
        }
        return -1;
      }
      function $o(n3) {
        return n3 && n3.length ? pu(n3) : [];
      }
      function Do(n3, t3) {
        return n3 && n3.length ? pu(n3, mi2(t3, 2)) : [];
      }
      function Mo(n3) {
        var t3 = n3 == null ? 0 : n3.length;
        return t3 ? au(n3, 1, t3) : [];
      }
      function Fo(n3, t3, r3) {
        return n3 && n3.length ? (t3 = r3 || t3 === X2 ? 1 : kc2(t3), au(n3, 0, t3 < 0 ? 0 : t3)) : [];
      }
      function No(n3, t3, r3) {
        var e3 = n3 == null ? 0 : n3.length;
        return e3 ? (t3 = r3 || t3 === X2 ? 1 : kc2(t3), t3 = e3 - t3, au(n3, t3 < 0 ? 0 : t3, e3)) : [];
      }
      function Po(n3, t3) {
        return n3 && n3.length ? bu(n3, mi2(t3, 3), false, true) : [];
      }
      function qo(n3, t3) {
        return n3 && n3.length ? bu(n3, mi2(t3, 3)) : [];
      }
      function Zo(n3) {
        return n3 && n3.length ? gu(n3) : [];
      }
      function Ko(n3, t3) {
        return n3 && n3.length ? gu(n3, mi2(t3, 2)) : [];
      }
      function Vo(n3, t3) {
        return t3 = typeof t3 == "function" ? t3 : X2, n3 && n3.length ? gu(n3, X2, t3) : [];
      }
      function Go(n3) {
        if (!n3 || !n3.length)
          return [];
        var t3 = 0;
        return n3 = i(n3, function(n4) {
          if (Jf2(n4))
            return t3 = Gl(n4.length, t3), true;
        }), O2(t3, function(t4) {
          return c2(n3, m2(t4));
        });
      }
      function Ho(t3, r3) {
        if (!t3 || !t3.length)
          return [];
        var e3 = Go(t3);
        return r3 == null ? e3 : c2(e3, function(t4) {
          return n2(r3, X2, t4);
        });
      }
      function Jo(n3, t3) {
        return xu(n3 || [], t3 || [], Sr2);
      }
      function Yo(n3, t3) {
        return xu(n3 || [], t3 || [], fu);
      }
      function Qo(n3) {
        var t3 = Z3(n3);
        return t3.__chain__ = true, t3;
      }
      function Xo(n3, t3) {
        return t3(n3), n3;
      }
      function nf2(n3, t3) {
        return t3(n3);
      }
      function tf2() {
        return Qo(this);
      }
      function rf2() {
        return new Y3(this.value(), this.__chain__);
      }
      function ef2() {
        this.__values__ === X2 && (this.__values__ = jc2(this.value()));
        var n3 = this.__index__ >= this.__values__.length;
        return { done: n3, value: n3 ? X2 : this.__values__[this.__index__++] };
      }
      function uf2() {
        return this;
      }
      function of2(n3) {
        for (var t3, r3 = this; r3 instanceof J3; ) {
          var e3 = eo(r3);
          e3.__index__ = 0, e3.__values__ = X2, t3 ? u3.__wrapped__ = e3 : t3 = e3;
          var u3 = e3;
          r3 = r3.__wrapped__;
        }
        return u3.__wrapped__ = n3, t3;
      }
      function ff2() {
        var n3 = this.__wrapped__;
        if (n3 instanceof Ct2) {
          var t3 = n3;
          return this.__actions__.length && (t3 = new Ct2(this)), t3 = t3.reverse(), t3.__actions__.push({ func: nf2, args: [Eo], thisArg: X2 }), new Y3(t3, this.__chain__);
        }
        return this.thru(Eo);
      }
      function cf2() {
        return wu(this.__wrapped__, this.__actions__);
      }
      function af2(n3, t3, r3) {
        var e3 = bh2(n3) ? u2 : Jr2;
        return r3 && Ui2(n3, t3, r3) && (t3 = X2), e3(n3, mi2(t3, 3));
      }
      function lf2(n3, t3) {
        return (bh2(n3) ? i : te3)(n3, mi2(t3, 3));
      }
      function sf2(n3, t3) {
        return ee3(yf2(n3, t3), 1);
      }
      function hf2(n3, t3) {
        return ee3(yf2(n3, t3), Sn);
      }
      function pf2(n3, t3, r3) {
        return r3 = r3 === X2 ? 1 : kc2(r3), ee3(yf2(n3, t3), r3);
      }
      function _f(n3, t3) {
        return (bh2(n3) ? r2 : ys)(n3, mi2(t3, 3));
      }
      function vf2(n3, t3) {
        return (bh2(n3) ? e2 : ds)(n3, mi2(t3, 3));
      }
      function gf2(n3, t3, r3, e3) {
        n3 = Hf2(n3) ? n3 : ra2(n3), r3 = r3 && !e3 ? kc2(r3) : 0;
        var u3 = n3.length;
        return r3 < 0 && (r3 = Gl(u3 + r3, 0)), dc2(n3) ? r3 <= u3 && n3.indexOf(t3, r3) > -1 : !!u3 && y2(n3, t3, r3) > -1;
      }
      function yf2(n3, t3) {
        return (bh2(n3) ? c2 : Pe2)(n3, mi2(t3, 3));
      }
      function df2(n3, t3, r3, e3) {
        return n3 == null ? [] : (bh2(t3) || (t3 = t3 == null ? [] : [t3]), r3 = e3 ? X2 : r3, bh2(r3) || (r3 = r3 == null ? [] : [r3]), He2(n3, t3, r3));
      }
      function bf2(n3, t3, r3) {
        var e3 = bh2(n3) ? l2 : j2, u3 = arguments.length < 3;
        return e3(n3, mi2(t3, 4), r3, u3, ys);
      }
      function wf2(n3, t3, r3) {
        var e3 = bh2(n3) ? s : j2, u3 = arguments.length < 3;
        return e3(n3, mi2(t3, 4), r3, u3, ds);
      }
      function mf2(n3, t3) {
        return (bh2(n3) ? i : te3)(n3, Uf2(mi2(t3, 3)));
      }
      function xf2(n3) {
        return (bh2(n3) ? Ir2 : iu)(n3);
      }
      function jf2(n3, t3, r3) {
        return t3 = (r3 ? Ui2(n3, t3, r3) : t3 === X2) ? 1 : kc2(t3), (bh2(n3) ? Rr2 : ou)(n3, t3);
      }
      function Af2(n3) {
        return (bh2(n3) ? zr2 : cu)(n3);
      }
      function kf2(n3) {
        if (n3 == null)
          return 0;
        if (Hf2(n3))
          return dc2(n3) ? V2(n3) : n3.length;
        var t3 = zs(n3);
        return t3 == Gn || t3 == tt ? n3.size : Me2(n3).length;
      }
      function Of2(n3, t3, r3) {
        var e3 = bh2(n3) ? h2 : lu;
        return r3 && Ui2(n3, t3, r3) && (t3 = X2), e3(n3, mi2(t3, 3));
      }
      function If2(n3, t3) {
        if (typeof t3 != "function")
          throw new pl(en);
        return n3 = kc2(n3), function() {
          if (--n3 < 1)
            return t3.apply(this, arguments);
        };
      }
      function Rf2(n3, t3, r3) {
        return t3 = r3 ? X2 : t3, t3 = n3 && t3 == null ? n3.length : t3, ai2(n3, mn, X2, X2, X2, X2, t3);
      }
      function zf2(n3, t3) {
        var r3;
        if (typeof t3 != "function")
          throw new pl(en);
        return n3 = kc2(n3), function() {
          return --n3 > 0 && (r3 = t3.apply(this, arguments)), n3 <= 1 && (t3 = X2), r3;
        };
      }
      function Ef2(n3, t3, r3) {
        t3 = r3 ? X2 : t3;
        var e3 = ai2(n3, yn, X2, X2, X2, X2, X2, t3);
        return e3.placeholder = Ef2.placeholder, e3;
      }
      function Sf2(n3, t3, r3) {
        t3 = r3 ? X2 : t3;
        var e3 = ai2(n3, dn, X2, X2, X2, X2, X2, t3);
        return e3.placeholder = Sf2.placeholder, e3;
      }
      function Wf2(n3, t3, r3) {
        function e3(t4) {
          var r4 = h3, e4 = p4;
          return h3 = p4 = X2, d3 = t4, v3 = n3.apply(e4, r4);
        }
        function u3(n4) {
          return d3 = n4, g3 = Ws(f3, t3), b3 ? e3(n4) : v3;
        }
        function i2(n4) {
          var r4 = n4 - y3, e4 = n4 - d3, u4 = t3 - r4;
          return w3 ? Hl(u4, _3 - e4) : u4;
        }
        function o3(n4) {
          var r4 = n4 - y3, e4 = n4 - d3;
          return y3 === X2 || r4 >= t3 || r4 < 0 || w3 && e4 >= _3;
        }
        function f3() {
          var n4 = fh2();
          return o3(n4) ? c3(n4) : (g3 = Ws(f3, i2(n4)), X2);
        }
        function c3(n4) {
          return g3 = X2, m3 && h3 ? e3(n4) : (h3 = p4 = X2, v3);
        }
        function a3() {
          g3 !== X2 && As(g3), d3 = 0, h3 = y3 = p4 = g3 = X2;
        }
        function l3() {
          return g3 === X2 ? v3 : c3(fh2());
        }
        function s2() {
          var n4 = fh2(), r4 = o3(n4);
          if (h3 = arguments, p4 = this, y3 = n4, r4) {
            if (g3 === X2)
              return u3(y3);
            if (w3)
              return As(g3), g3 = Ws(f3, t3), e3(y3);
          }
          return g3 === X2 && (g3 = Ws(f3, t3)), v3;
        }
        var h3, p4, _3, v3, g3, y3, d3 = 0, b3 = false, w3 = false, m3 = true;
        if (typeof n3 != "function")
          throw new pl(en);
        return t3 = Ic2(t3) || 0, fc2(r3) && (b3 = !!r3.leading, w3 = "maxWait" in r3, _3 = w3 ? Gl(Ic2(r3.maxWait) || 0, t3) : _3, m3 = "trailing" in r3 ? !!r3.trailing : m3), s2.cancel = a3, s2.flush = l3, s2;
      }
      function Lf2(n3) {
        return ai2(n3, jn);
      }
      function Cf2(n3, t3) {
        if (typeof n3 != "function" || t3 != null && typeof t3 != "function")
          throw new pl(en);
        var r3 = function() {
          var e3 = arguments, u3 = t3 ? t3.apply(this, e3) : e3[0], i2 = r3.cache;
          if (i2.has(u3))
            return i2.get(u3);
          var o3 = n3.apply(this, e3);
          return r3.cache = i2.set(u3, o3) || i2, o3;
        };
        return r3.cache = new (Cf2.Cache || sr2)(), r3;
      }
      function Uf2(n3) {
        if (typeof n3 != "function")
          throw new pl(en);
        return function() {
          var t3 = arguments;
          switch (t3.length) {
            case 0:
              return !n3.call(this);
            case 1:
              return !n3.call(this, t3[0]);
            case 2:
              return !n3.call(this, t3[0], t3[1]);
            case 3:
              return !n3.call(this, t3[0], t3[1], t3[2]);
          }
          return !n3.apply(this, t3);
        };
      }
      function Bf2(n3) {
        return zf2(2, n3);
      }
      function Tf2(n3, t3) {
        if (typeof n3 != "function")
          throw new pl(en);
        return t3 = t3 === X2 ? t3 : kc2(t3), uu(n3, t3);
      }
      function $f2(t3, r3) {
        if (typeof t3 != "function")
          throw new pl(en);
        return r3 = r3 == null ? 0 : Gl(kc2(r3), 0), uu(function(e3) {
          var u3 = e3[r3], i2 = Ou(e3, 0, r3);
          return u3 && a2(i2, u3), n2(t3, this, i2);
        });
      }
      function Df2(n3, t3, r3) {
        var e3 = true, u3 = true;
        if (typeof n3 != "function")
          throw new pl(en);
        return fc2(r3) && (e3 = "leading" in r3 ? !!r3.leading : e3, u3 = "trailing" in r3 ? !!r3.trailing : u3), Wf2(n3, t3, { leading: e3, maxWait: t3, trailing: u3 });
      }
      function Mf2(n3) {
        return Rf2(n3, 1);
      }
      function Ff2(n3, t3) {
        return ph2(Au(t3), n3);
      }
      function Nf2() {
        if (!arguments.length)
          return [];
        var n3 = arguments[0];
        return bh2(n3) ? n3 : [n3];
      }
      function Pf2(n3) {
        return Fr2(n3, sn);
      }
      function qf2(n3, t3) {
        return t3 = typeof t3 == "function" ? t3 : X2, Fr2(n3, sn, t3);
      }
      function Zf2(n3) {
        return Fr2(n3, an | sn);
      }
      function Kf2(n3, t3) {
        return t3 = typeof t3 == "function" ? t3 : X2, Fr2(n3, an | sn, t3);
      }
      function Vf2(n3, t3) {
        return t3 == null || Pr2(n3, t3, Pc2(t3));
      }
      function Gf2(n3, t3) {
        return n3 === t3 || n3 !== n3 && t3 !== t3;
      }
      function Hf2(n3) {
        return n3 != null && oc2(n3.length) && !uc2(n3);
      }
      function Jf2(n3) {
        return cc2(n3) && Hf2(n3);
      }
      function Yf2(n3) {
        return n3 === true || n3 === false || cc2(n3) && we2(n3) == Nn;
      }
      function Qf2(n3) {
        return cc2(n3) && n3.nodeType === 1 && !gc2(n3);
      }
      function Xf2(n3) {
        if (n3 == null)
          return true;
        if (Hf2(n3) && (bh2(n3) || typeof n3 == "string" || typeof n3.splice == "function" || mh2(n3) || Oh2(n3) || dh2(n3)))
          return !n3.length;
        var t3 = zs(n3);
        if (t3 == Gn || t3 == tt)
          return !n3.size;
        if (Mi2(n3))
          return !Me2(n3).length;
        for (var r3 in n3)
          if (bl.call(n3, r3))
            return false;
        return true;
      }
      function nc2(n3, t3) {
        return Se2(n3, t3);
      }
      function tc2(n3, t3, r3) {
        r3 = typeof r3 == "function" ? r3 : X2;
        var e3 = r3 ? r3(n3, t3) : X2;
        return e3 === X2 ? Se2(n3, t3, X2, r3) : !!e3;
      }
      function rc2(n3) {
        if (!cc2(n3))
          return false;
        var t3 = we2(n3);
        return t3 == Zn || t3 == qn || typeof n3.message == "string" && typeof n3.name == "string" && !gc2(n3);
      }
      function ec2(n3) {
        return typeof n3 == "number" && Zl(n3);
      }
      function uc2(n3) {
        if (!fc2(n3))
          return false;
        var t3 = we2(n3);
        return t3 == Kn || t3 == Vn || t3 == Fn || t3 == Xn;
      }
      function ic2(n3) {
        return typeof n3 == "number" && n3 == kc2(n3);
      }
      function oc2(n3) {
        return typeof n3 == "number" && n3 > -1 && n3 % 1 == 0 && n3 <= Wn;
      }
      function fc2(n3) {
        var t3 = typeof n3;
        return n3 != null && (t3 == "object" || t3 == "function");
      }
      function cc2(n3) {
        return n3 != null && typeof n3 == "object";
      }
      function ac2(n3, t3) {
        return n3 === t3 || Ce2(n3, t3, ji2(t3));
      }
      function lc2(n3, t3, r3) {
        return r3 = typeof r3 == "function" ? r3 : X2, Ce2(n3, t3, ji2(t3), r3);
      }
      function sc2(n3) {
        return vc2(n3) && n3 != +n3;
      }
      function hc2(n3) {
        if (Es(n3))
          throw new fl(rn);
        return Ue2(n3);
      }
      function pc2(n3) {
        return n3 === null;
      }
      function _c(n3) {
        return n3 == null;
      }
      function vc2(n3) {
        return typeof n3 == "number" || cc2(n3) && we2(n3) == Hn;
      }
      function gc2(n3) {
        if (!cc2(n3) || we2(n3) != Yn)
          return false;
        var t3 = El(n3);
        if (t3 === null)
          return true;
        var r3 = bl.call(t3, "constructor") && t3.constructor;
        return typeof r3 == "function" && r3 instanceof r3 && dl.call(r3) == jl;
      }
      function yc2(n3) {
        return ic2(n3) && n3 >= -Wn && n3 <= Wn;
      }
      function dc2(n3) {
        return typeof n3 == "string" || !bh2(n3) && cc2(n3) && we2(n3) == rt;
      }
      function bc2(n3) {
        return typeof n3 == "symbol" || cc2(n3) && we2(n3) == et;
      }
      function wc2(n3) {
        return n3 === X2;
      }
      function mc2(n3) {
        return cc2(n3) && zs(n3) == it;
      }
      function xc2(n3) {
        return cc2(n3) && we2(n3) == ot;
      }
      function jc2(n3) {
        if (!n3)
          return [];
        if (Hf2(n3))
          return dc2(n3) ? G2(n3) : Tu(n3);
        if (Ul && n3[Ul])
          return D2(n3[Ul]());
        var t3 = zs(n3);
        return (t3 == Gn ? M2 : t3 == tt ? P2 : ra2)(n3);
      }
      function Ac2(n3) {
        if (!n3)
          return n3 === 0 ? n3 : 0;
        if (n3 = Ic2(n3), n3 === Sn || n3 === -Sn) {
          return (n3 < 0 ? -1 : 1) * Ln;
        }
        return n3 === n3 ? n3 : 0;
      }
      function kc2(n3) {
        var t3 = Ac2(n3), r3 = t3 % 1;
        return t3 === t3 ? r3 ? t3 - r3 : t3 : 0;
      }
      function Oc2(n3) {
        return n3 ? Mr2(kc2(n3), 0, Un) : 0;
      }
      function Ic2(n3) {
        if (typeof n3 == "number")
          return n3;
        if (bc2(n3))
          return Cn;
        if (fc2(n3)) {
          var t3 = typeof n3.valueOf == "function" ? n3.valueOf() : n3;
          n3 = fc2(t3) ? t3 + "" : t3;
        }
        if (typeof n3 != "string")
          return n3 === 0 ? n3 : +n3;
        n3 = R2(n3);
        var r3 = qt.test(n3);
        return r3 || Kt.test(n3) ? Xr(n3.slice(2), r3 ? 2 : 8) : Pt.test(n3) ? Cn : +n3;
      }
      function Rc2(n3) {
        return $u(n3, qc2(n3));
      }
      function zc2(n3) {
        return n3 ? Mr2(kc2(n3), -Wn, Wn) : n3 === 0 ? n3 : 0;
      }
      function Ec2(n3) {
        return n3 == null ? "" : vu(n3);
      }
      function Sc2(n3, t3) {
        var r3 = gs(n3);
        return t3 == null ? r3 : Cr2(r3, t3);
      }
      function Wc2(n3, t3) {
        return v2(n3, mi2(t3, 3), ue3);
      }
      function Lc2(n3, t3) {
        return v2(n3, mi2(t3, 3), oe3);
      }
      function Cc2(n3, t3) {
        return n3 == null ? n3 : bs(n3, mi2(t3, 3), qc2);
      }
      function Uc2(n3, t3) {
        return n3 == null ? n3 : ws(n3, mi2(t3, 3), qc2);
      }
      function Bc2(n3, t3) {
        return n3 && ue3(n3, mi2(t3, 3));
      }
      function Tc2(n3, t3) {
        return n3 && oe3(n3, mi2(t3, 3));
      }
      function $c2(n3) {
        return n3 == null ? [] : fe3(n3, Pc2(n3));
      }
      function Dc2(n3) {
        return n3 == null ? [] : fe3(n3, qc2(n3));
      }
      function Mc2(n3, t3, r3) {
        var e3 = n3 == null ? X2 : _e2(n3, t3);
        return e3 === X2 ? r3 : e3;
      }
      function Fc2(n3, t3) {
        return n3 != null && Ri2(n3, t3, xe);
      }
      function Nc2(n3, t3) {
        return n3 != null && Ri2(n3, t3, je2);
      }
      function Pc2(n3) {
        return Hf2(n3) ? Or2(n3) : Me2(n3);
      }
      function qc2(n3) {
        return Hf2(n3) ? Or2(n3, true) : Fe2(n3);
      }
      function Zc2(n3, t3) {
        var r3 = {};
        return t3 = mi2(t3, 3), ue3(n3, function(n4, e3, u3) {
          Br2(r3, t3(n4, e3, u3), n4);
        }), r3;
      }
      function Kc2(n3, t3) {
        var r3 = {};
        return t3 = mi2(t3, 3), ue3(n3, function(n4, e3, u3) {
          Br2(r3, e3, t3(n4, e3, u3));
        }), r3;
      }
      function Vc2(n3, t3) {
        return Gc2(n3, Uf2(mi2(t3)));
      }
      function Gc2(n3, t3) {
        if (n3 == null)
          return {};
        var r3 = c2(di2(n3), function(n4) {
          return [n4];
        });
        return t3 = mi2(t3), Ye2(n3, r3, function(n4, r4) {
          return t3(n4, r4[0]);
        });
      }
      function Hc2(n3, t3, r3) {
        t3 = ku(t3, n3);
        var e3 = -1, u3 = t3.length;
        for (u3 || (u3 = 1, n3 = X2); ++e3 < u3; ) {
          var i2 = n3 == null ? X2 : n3[no(t3[e3])];
          i2 === X2 && (e3 = u3, i2 = r3), n3 = uc2(i2) ? i2.call(n3) : i2;
        }
        return n3;
      }
      function Jc2(n3, t3, r3) {
        return n3 == null ? n3 : fu(n3, t3, r3);
      }
      function Yc2(n3, t3, r3, e3) {
        return e3 = typeof e3 == "function" ? e3 : X2, n3 == null ? n3 : fu(n3, t3, r3, e3);
      }
      function Qc2(n3, t3, e3) {
        var u3 = bh2(n3), i2 = u3 || mh2(n3) || Oh2(n3);
        if (t3 = mi2(t3, 4), e3 == null) {
          var o3 = n3 && n3.constructor;
          e3 = i2 ? u3 ? new o3() : [] : fc2(n3) && uc2(o3) ? gs(El(n3)) : {};
        }
        return (i2 ? r2 : ue3)(n3, function(n4, r3, u4) {
          return t3(e3, n4, r3, u4);
        }), e3;
      }
      function Xc2(n3, t3) {
        return n3 == null || yu(n3, t3);
      }
      function na2(n3, t3, r3) {
        return n3 == null ? n3 : du(n3, t3, Au(r3));
      }
      function ta2(n3, t3, r3, e3) {
        return e3 = typeof e3 == "function" ? e3 : X2, n3 == null ? n3 : du(n3, t3, Au(r3), e3);
      }
      function ra2(n3) {
        return n3 == null ? [] : E2(n3, Pc2(n3));
      }
      function ea2(n3) {
        return n3 == null ? [] : E2(n3, qc2(n3));
      }
      function ua2(n3, t3, r3) {
        return r3 === X2 && (r3 = t3, t3 = X2), r3 !== X2 && (r3 = Ic2(r3), r3 = r3 === r3 ? r3 : 0), t3 !== X2 && (t3 = Ic2(t3), t3 = t3 === t3 ? t3 : 0), Mr2(Ic2(n3), t3, r3);
      }
      function ia2(n3, t3, r3) {
        return t3 = Ac2(t3), r3 === X2 ? (r3 = t3, t3 = 0) : r3 = Ac2(r3), n3 = Ic2(n3), Ae2(n3, t3, r3);
      }
      function oa2(n3, t3, r3) {
        if (r3 && typeof r3 != "boolean" && Ui2(n3, t3, r3) && (t3 = r3 = X2), r3 === X2 && (typeof t3 == "boolean" ? (r3 = t3, t3 = X2) : typeof n3 == "boolean" && (r3 = n3, n3 = X2)), n3 === X2 && t3 === X2 ? (n3 = 0, t3 = 1) : (n3 = Ac2(n3), t3 === X2 ? (t3 = n3, n3 = 0) : t3 = Ac2(t3)), n3 > t3) {
          var e3 = n3;
          n3 = t3, t3 = e3;
        }
        if (r3 || n3 % 1 || t3 % 1) {
          var u3 = Ql();
          return Hl(n3 + u3 * (t3 - n3 + Qr("1e-" + ((u3 + "").length - 1))), t3);
        }
        return tu(n3, t3);
      }
      function fa2(n3) {
        return Qh2(Ec2(n3).toLowerCase());
      }
      function ca2(n3) {
        return n3 = Ec2(n3), n3 && n3.replace(Gt, ve2).replace(Dr, "");
      }
      function aa2(n3, t3, r3) {
        n3 = Ec2(n3), t3 = vu(t3);
        var e3 = n3.length;
        r3 = r3 === X2 ? e3 : Mr2(kc2(r3), 0, e3);
        var u3 = r3;
        return r3 -= t3.length, r3 >= 0 && n3.slice(r3, u3) == t3;
      }
      function la2(n3) {
        return n3 = Ec2(n3), n3 && At.test(n3) ? n3.replace(xt, ge2) : n3;
      }
      function sa2(n3) {
        return n3 = Ec2(n3), n3 && Wt.test(n3) ? n3.replace(St, "\\$&") : n3;
      }
      function ha2(n3, t3, r3) {
        n3 = Ec2(n3), t3 = kc2(t3);
        var e3 = t3 ? V2(n3) : 0;
        if (!t3 || e3 >= t3)
          return n3;
        var u3 = (t3 - e3) / 2;
        return ri2(Nl(u3), r3) + n3 + ri2(Fl(u3), r3);
      }
      function pa2(n3, t3, r3) {
        n3 = Ec2(n3), t3 = kc2(t3);
        var e3 = t3 ? V2(n3) : 0;
        return t3 && e3 < t3 ? n3 + ri2(t3 - e3, r3) : n3;
      }
      function _a2(n3, t3, r3) {
        n3 = Ec2(n3), t3 = kc2(t3);
        var e3 = t3 ? V2(n3) : 0;
        return t3 && e3 < t3 ? ri2(t3 - e3, r3) + n3 : n3;
      }
      function va(n3, t3, r3) {
        return r3 || t3 == null ? t3 = 0 : t3 && (t3 = +t3), Yl(Ec2(n3).replace(Lt, ""), t3 || 0);
      }
      function ga(n3, t3, r3) {
        return t3 = (r3 ? Ui2(n3, t3, r3) : t3 === X2) ? 1 : kc2(t3), eu(Ec2(n3), t3);
      }
      function ya2() {
        var n3 = arguments, t3 = Ec2(n3[0]);
        return n3.length < 3 ? t3 : t3.replace(n3[1], n3[2]);
      }
      function da2(n3, t3, r3) {
        return r3 && typeof r3 != "number" && Ui2(n3, t3, r3) && (t3 = r3 = X2), (r3 = r3 === X2 ? Un : r3 >>> 0) ? (n3 = Ec2(n3), n3 && (typeof t3 == "string" || t3 != null && !Ah2(t3)) && (t3 = vu(t3), !t3 && T2(n3)) ? Ou(G2(n3), 0, r3) : n3.split(t3, r3)) : [];
      }
      function ba2(n3, t3, r3) {
        return n3 = Ec2(n3), r3 = r3 == null ? 0 : Mr2(kc2(r3), 0, n3.length), t3 = vu(t3), n3.slice(r3, r3 + t3.length) == t3;
      }
      function wa2(n3, t3, r3) {
        var e3 = Z3.templateSettings;
        r3 && Ui2(n3, t3, r3) && (t3 = X2), n3 = Ec2(n3), t3 = Sh2({}, t3, e3, li2);
        var u3, i2, o3 = Sh2({}, t3.imports, e3.imports, li2), f3 = Pc2(o3), c3 = E2(o3, f3), a3 = 0, l3 = t3.interpolate || Ht, s2 = "__p += '", h3 = sl((t3.escape || Ht).source + "|" + l3.source + "|" + (l3 === It ? Ft : Ht).source + "|" + (t3.evaluate || Ht).source + "|$", "g"), p4 = "//# sourceURL=" + (bl.call(t3, "sourceURL") ? (t3.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++Zr + "]") + "\n";
        n3.replace(h3, function(t4, r4, e4, o4, f4, c4) {
          return e4 || (e4 = o4), s2 += n3.slice(a3, c4).replace(Jt, U2), r4 && (u3 = true, s2 += "' +\n__e(" + r4 + ") +\n'"), f4 && (i2 = true, s2 += "';\n" + f4 + ";\n__p += '"), e4 && (s2 += "' +\n((__t = (" + e4 + ")) == null ? '' : __t) +\n'"), a3 = c4 + t4.length, t4;
        }), s2 += "';\n";
        var _3 = bl.call(t3, "variable") && t3.variable;
        if (_3) {
          if (Dt.test(_3))
            throw new fl(un);
        } else
          s2 = "with (obj) {\n" + s2 + "\n}\n";
        s2 = (i2 ? s2.replace(dt, "") : s2).replace(bt, "$1").replace(wt, "$1;"), s2 = "function(" + (_3 || "obj") + ") {\n" + (_3 ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (u3 ? ", __e = _.escape" : "") + (i2 ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + s2 + "return __p\n}";
        var v3 = Xh2(function() {
          return cl(f3, p4 + "return " + s2).apply(X2, c3);
        });
        if (v3.source = s2, rc2(v3))
          throw v3;
        return v3;
      }
      function ma2(n3) {
        return Ec2(n3).toLowerCase();
      }
      function xa2(n3) {
        return Ec2(n3).toUpperCase();
      }
      function ja2(n3, t3, r3) {
        if (n3 = Ec2(n3), n3 && (r3 || t3 === X2))
          return R2(n3);
        if (!n3 || !(t3 = vu(t3)))
          return n3;
        var e3 = G2(n3), u3 = G2(t3);
        return Ou(e3, W2(e3, u3), L2(e3, u3) + 1).join("");
      }
      function Aa2(n3, t3, r3) {
        if (n3 = Ec2(n3), n3 && (r3 || t3 === X2))
          return n3.slice(0, H2(n3) + 1);
        if (!n3 || !(t3 = vu(t3)))
          return n3;
        var e3 = G2(n3);
        return Ou(e3, 0, L2(e3, G2(t3)) + 1).join("");
      }
      function ka2(n3, t3, r3) {
        if (n3 = Ec2(n3), n3 && (r3 || t3 === X2))
          return n3.replace(Lt, "");
        if (!n3 || !(t3 = vu(t3)))
          return n3;
        var e3 = G2(n3);
        return Ou(e3, W2(e3, G2(t3))).join("");
      }
      function Oa2(n3, t3) {
        var r3 = An, e3 = kn;
        if (fc2(t3)) {
          var u3 = "separator" in t3 ? t3.separator : u3;
          r3 = "length" in t3 ? kc2(t3.length) : r3, e3 = "omission" in t3 ? vu(t3.omission) : e3;
        }
        n3 = Ec2(n3);
        var i2 = n3.length;
        if (T2(n3)) {
          var o3 = G2(n3);
          i2 = o3.length;
        }
        if (r3 >= i2)
          return n3;
        var f3 = r3 - V2(e3);
        if (f3 < 1)
          return e3;
        var c3 = o3 ? Ou(o3, 0, f3).join("") : n3.slice(0, f3);
        if (u3 === X2)
          return c3 + e3;
        if (o3 && (f3 += c3.length - f3), Ah2(u3)) {
          if (n3.slice(f3).search(u3)) {
            var a3, l3 = c3;
            for (u3.global || (u3 = sl(u3.source, Ec2(Nt.exec(u3)) + "g")), u3.lastIndex = 0; a3 = u3.exec(l3); )
              var s2 = a3.index;
            c3 = c3.slice(0, s2 === X2 ? f3 : s2);
          }
        } else if (n3.indexOf(vu(u3), f3) != f3) {
          var h3 = c3.lastIndexOf(u3);
          h3 > -1 && (c3 = c3.slice(0, h3));
        }
        return c3 + e3;
      }
      function Ia2(n3) {
        return n3 = Ec2(n3), n3 && jt.test(n3) ? n3.replace(mt, ye) : n3;
      }
      function Ra2(n3, t3, r3) {
        return n3 = Ec2(n3), t3 = r3 ? X2 : t3, t3 === X2 ? $2(n3) ? Q2(n3) : _2(n3) : n3.match(t3) || [];
      }
      function za2(t3) {
        var r3 = t3 == null ? 0 : t3.length, e3 = mi2();
        return t3 = r3 ? c2(t3, function(n3) {
          if (typeof n3[1] != "function")
            throw new pl(en);
          return [e3(n3[0]), n3[1]];
        }) : [], uu(function(e4) {
          for (var u3 = -1; ++u3 < r3; ) {
            var i2 = t3[u3];
            if (n2(i2[0], this, e4))
              return n2(i2[1], this, e4);
          }
        });
      }
      function Ea2(n3) {
        return Nr2(Fr2(n3, an));
      }
      function Sa2(n3) {
        return function() {
          return n3;
        };
      }
      function Wa2(n3, t3) {
        return n3 == null || n3 !== n3 ? t3 : n3;
      }
      function La2(n3) {
        return n3;
      }
      function Ca2(n3) {
        return De2(typeof n3 == "function" ? n3 : Fr2(n3, an));
      }
      function Ua2(n3) {
        return qe2(Fr2(n3, an));
      }
      function Ba2(n3, t3) {
        return Ze2(n3, Fr2(t3, an));
      }
      function Ta2(n3, t3, e3) {
        var u3 = Pc2(t3), i2 = fe3(t3, u3);
        e3 != null || fc2(t3) && (i2.length || !u3.length) || (e3 = t3, t3 = n3, n3 = this, i2 = fe3(t3, Pc2(t3)));
        var o3 = !(fc2(e3) && "chain" in e3 && !e3.chain), f3 = uc2(n3);
        return r2(i2, function(r3) {
          var e4 = t3[r3];
          n3[r3] = e4, f3 && (n3.prototype[r3] = function() {
            var t4 = this.__chain__;
            if (o3 || t4) {
              var r4 = n3(this.__wrapped__);
              return (r4.__actions__ = Tu(this.__actions__)).push({ func: e4, args: arguments, thisArg: n3 }), r4.__chain__ = t4, r4;
            }
            return e4.apply(n3, a2([this.value()], arguments));
          });
        }), n3;
      }
      function $a2() {
        return re2._ === this && (re2._ = Al), this;
      }
      function Da2() {
      }
      function Ma2(n3) {
        return n3 = kc2(n3), uu(function(t3) {
          return Ge2(t3, n3);
        });
      }
      function Fa2(n3) {
        return Bi2(n3) ? m2(no(n3)) : Qe2(n3);
      }
      function Na2(n3) {
        return function(t3) {
          return n3 == null ? X2 : _e2(n3, t3);
        };
      }
      function Pa2() {
        return [];
      }
      function qa2() {
        return false;
      }
      function Za2() {
        return {};
      }
      function Ka2() {
        return "";
      }
      function Va2() {
        return true;
      }
      function Ga2(n3, t3) {
        if (n3 = kc2(n3), n3 < 1 || n3 > Wn)
          return [];
        var r3 = Un, e3 = Hl(n3, Un);
        t3 = mi2(t3), n3 -= Un;
        for (var u3 = O2(e3, t3); ++r3 < n3; )
          t3(r3);
        return u3;
      }
      function Ha2(n3) {
        return bh2(n3) ? c2(n3, no) : bc2(n3) ? [n3] : Tu(Cs(Ec2(n3)));
      }
      function Ja2(n3) {
        var t3 = ++wl;
        return Ec2(n3) + t3;
      }
      function Ya2(n3) {
        return n3 && n3.length ? Yr2(n3, La2, me2) : X2;
      }
      function Qa2(n3, t3) {
        return n3 && n3.length ? Yr2(n3, mi2(t3, 2), me2) : X2;
      }
      function Xa2(n3) {
        return w2(n3, La2);
      }
      function nl(n3, t3) {
        return w2(n3, mi2(t3, 2));
      }
      function tl(n3) {
        return n3 && n3.length ? Yr2(n3, La2, Ne2) : X2;
      }
      function rl(n3, t3) {
        return n3 && n3.length ? Yr2(n3, mi2(t3, 2), Ne2) : X2;
      }
      function el(n3) {
        return n3 && n3.length ? k2(n3, La2) : 0;
      }
      function ul(n3, t3) {
        return n3 && n3.length ? k2(n3, mi2(t3, 2)) : 0;
      }
      x3 = x3 == null ? re2 : be2.defaults(re2.Object(), x3, be2.pick(re2, qr));
      var il = x3.Array, ol = x3.Date, fl = x3.Error, cl = x3.Function, al = x3.Math, ll = x3.Object, sl = x3.RegExp, hl = x3.String, pl = x3.TypeError, _l = il.prototype, vl = cl.prototype, gl = ll.prototype, yl = x3["__core-js_shared__"], dl = vl.toString, bl = gl.hasOwnProperty, wl = 0, ml = function() {
        var n3 = /[^.]+$/.exec(yl && yl.keys && yl.keys.IE_PROTO || "");
        return n3 ? "Symbol(src)_1." + n3 : "";
      }(), xl = gl.toString, jl = dl.call(ll), Al = re2._, kl = sl("^" + dl.call(bl).replace(St, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), Ol = ie2 ? x3.Buffer : X2, Il = x3.Symbol, Rl = x3.Uint8Array, zl = Ol ? Ol.allocUnsafe : X2, El = F2(ll.getPrototypeOf, ll), Sl = ll.create, Wl = gl.propertyIsEnumerable, Ll = _l.splice, Cl = Il ? Il.isConcatSpreadable : X2, Ul = Il ? Il.iterator : X2, Bl = Il ? Il.toStringTag : X2, Tl = function() {
        try {
          var n3 = Ai2(ll, "defineProperty");
          return n3({}, "", {}), n3;
        } catch (n4) {
        }
      }(), $l = x3.clearTimeout !== re2.clearTimeout && x3.clearTimeout, Dl = ol && ol.now !== re2.Date.now && ol.now, Ml = x3.setTimeout !== re2.setTimeout && x3.setTimeout, Fl = al.ceil, Nl = al.floor, Pl = ll.getOwnPropertySymbols, ql = Ol ? Ol.isBuffer : X2, Zl = x3.isFinite, Kl = _l.join, Vl = F2(ll.keys, ll), Gl = al.max, Hl = al.min, Jl = ol.now, Yl = x3.parseInt, Ql = al.random, Xl = _l.reverse, ns = Ai2(x3, "DataView"), ts = Ai2(x3, "Map"), rs = Ai2(x3, "Promise"), es = Ai2(x3, "Set"), us = Ai2(x3, "WeakMap"), is = Ai2(ll, "create"), os = us && new us(), fs = {}, cs = to(ns), as = to(ts), ls = to(rs), ss = to(es), hs = to(us), ps = Il ? Il.prototype : X2, _s = ps ? ps.valueOf : X2, vs = ps ? ps.toString : X2, gs = function() {
        function n3() {
        }
        return function(t3) {
          if (!fc2(t3))
            return {};
          if (Sl)
            return Sl(t3);
          n3.prototype = t3;
          var r3 = new n3();
          return n3.prototype = X2, r3;
        };
      }();
      Z3.templateSettings = { escape: kt, evaluate: Ot, interpolate: It, variable: "", imports: { _: Z3 } }, Z3.prototype = J3.prototype, Z3.prototype.constructor = Z3, Y3.prototype = gs(J3.prototype), Y3.prototype.constructor = Y3, Ct2.prototype = gs(J3.prototype), Ct2.prototype.constructor = Ct2, Xt2.prototype.clear = nr2, Xt2.prototype.delete = tr2, Xt2.prototype.get = rr2, Xt2.prototype.has = er2, Xt2.prototype.set = ur2, ir2.prototype.clear = or2, ir2.prototype.delete = fr2, ir2.prototype.get = cr2, ir2.prototype.has = ar2, ir2.prototype.set = lr2, sr2.prototype.clear = hr2, sr2.prototype.delete = pr2, sr2.prototype.get = _r2, sr2.prototype.has = vr2, sr2.prototype.set = gr2, yr2.prototype.add = yr2.prototype.push = dr2, yr2.prototype.has = br2, wr2.prototype.clear = mr2, wr2.prototype.delete = xr2, wr2.prototype.get = jr2, wr2.prototype.has = Ar2, wr2.prototype.set = kr2;
      var ys = Pu(ue3), ds = Pu(oe3, true), bs = qu(), ws = qu(true), ms = os ? function(n3, t3) {
        return os.set(n3, t3), n3;
      } : La2, xs = Tl ? function(n3, t3) {
        return Tl(n3, "toString", {
          configurable: true,
          enumerable: false,
          value: Sa2(t3),
          writable: true
        });
      } : La2, js = uu, As = $l || function(n3) {
        return re2.clearTimeout(n3);
      }, ks = es && 1 / P2(new es([, -0]))[1] == Sn ? function(n3) {
        return new es(n3);
      } : Da2, Os = os ? function(n3) {
        return os.get(n3);
      } : Da2, Is = Pl ? function(n3) {
        return n3 == null ? [] : (n3 = ll(n3), i(Pl(n3), function(t3) {
          return Wl.call(n3, t3);
        }));
      } : Pa2, Rs = Pl ? function(n3) {
        for (var t3 = []; n3; )
          a2(t3, Is(n3)), n3 = El(n3);
        return t3;
      } : Pa2, zs = we2;
      (ns && zs(new ns(new ArrayBuffer(1))) != ct || ts && zs(new ts()) != Gn || rs && zs(rs.resolve()) != Qn || es && zs(new es()) != tt || us && zs(new us()) != it) && (zs = function(n3) {
        var t3 = we2(n3), r3 = t3 == Yn ? n3.constructor : X2, e3 = r3 ? to(r3) : "";
        if (e3)
          switch (e3) {
            case cs:
              return ct;
            case as:
              return Gn;
            case ls:
              return Qn;
            case ss:
              return tt;
            case hs:
              return it;
          }
        return t3;
      });
      var Es = yl ? uc2 : qa2, Ss = Qi2(ms), Ws = Ml || function(n3, t3) {
        return re2.setTimeout(n3, t3);
      }, Ls = Qi2(xs), Cs = Pi2(function(n3) {
        var t3 = [];
        return n3.charCodeAt(0) === 46 && t3.push(""), n3.replace(Et, function(n4, r3, e3, u3) {
          t3.push(e3 ? u3.replace(Mt, "$1") : r3 || n4);
        }), t3;
      }), Us = uu(function(n3, t3) {
        return Jf2(n3) ? Hr2(n3, ee3(t3, 1, Jf2, true)) : [];
      }), Bs = uu(function(n3, t3) {
        var r3 = jo(t3);
        return Jf2(r3) && (r3 = X2), Jf2(n3) ? Hr2(n3, ee3(t3, 1, Jf2, true), mi2(r3, 2)) : [];
      }), Ts = uu(function(n3, t3) {
        var r3 = jo(t3);
        return Jf2(r3) && (r3 = X2), Jf2(n3) ? Hr2(n3, ee3(t3, 1, Jf2, true), X2, r3) : [];
      }), $s = uu(function(n3) {
        var t3 = c2(n3, ju);
        return t3.length && t3[0] === n3[0] ? ke2(t3) : [];
      }), Ds = uu(function(n3) {
        var t3 = jo(n3), r3 = c2(n3, ju);
        return t3 === jo(r3) ? t3 = X2 : r3.pop(), r3.length && r3[0] === n3[0] ? ke2(r3, mi2(t3, 2)) : [];
      }), Ms = uu(function(n3) {
        var t3 = jo(n3), r3 = c2(n3, ju);
        return t3 = typeof t3 == "function" ? t3 : X2, t3 && r3.pop(), r3.length && r3[0] === n3[0] ? ke2(r3, X2, t3) : [];
      }), Fs = uu(Oo), Ns = gi2(function(n3, t3) {
        var r3 = n3 == null ? 0 : n3.length, e3 = Tr2(n3, t3);
        return nu(n3, c2(t3, function(n4) {
          return Ci2(n4, r3) ? +n4 : n4;
        }).sort(Lu)), e3;
      }), Ps = uu(function(n3) {
        return gu(ee3(n3, 1, Jf2, true));
      }), qs = uu(function(n3) {
        var t3 = jo(n3);
        return Jf2(t3) && (t3 = X2), gu(ee3(n3, 1, Jf2, true), mi2(t3, 2));
      }), Zs = uu(function(n3) {
        var t3 = jo(n3);
        return t3 = typeof t3 == "function" ? t3 : X2, gu(ee3(n3, 1, Jf2, true), X2, t3);
      }), Ks = uu(function(n3, t3) {
        return Jf2(n3) ? Hr2(n3, t3) : [];
      }), Vs = uu(function(n3) {
        return mu(i(n3, Jf2));
      }), Gs = uu(function(n3) {
        var t3 = jo(n3);
        return Jf2(t3) && (t3 = X2), mu(i(n3, Jf2), mi2(t3, 2));
      }), Hs = uu(function(n3) {
        var t3 = jo(n3);
        return t3 = typeof t3 == "function" ? t3 : X2, mu(i(n3, Jf2), X2, t3);
      }), Js = uu(Go), Ys = uu(function(n3) {
        var t3 = n3.length, r3 = t3 > 1 ? n3[t3 - 1] : X2;
        return r3 = typeof r3 == "function" ? (n3.pop(), r3) : X2, Ho(n3, r3);
      }), Qs = gi2(function(n3) {
        var t3 = n3.length, r3 = t3 ? n3[0] : 0, e3 = this.__wrapped__, u3 = function(t4) {
          return Tr2(t4, n3);
        };
        return !(t3 > 1 || this.__actions__.length) && e3 instanceof Ct2 && Ci2(r3) ? (e3 = e3.slice(r3, +r3 + (t3 ? 1 : 0)), e3.__actions__.push({ func: nf2, args: [u3], thisArg: X2 }), new Y3(e3, this.__chain__).thru(function(n4) {
          return t3 && !n4.length && n4.push(X2), n4;
        })) : this.thru(u3);
      }), Xs = Fu(function(n3, t3, r3) {
        bl.call(n3, r3) ? ++n3[r3] : Br2(n3, r3, 1);
      }), nh2 = Ju(ho), th2 = Ju(po), rh2 = Fu(function(n3, t3, r3) {
        bl.call(n3, r3) ? n3[r3].push(t3) : Br2(n3, r3, [t3]);
      }), eh2 = uu(function(t3, r3, e3) {
        var u3 = -1, i2 = typeof r3 == "function", o3 = Hf2(t3) ? il(t3.length) : [];
        return ys(t3, function(t4) {
          o3[++u3] = i2 ? n2(r3, t4, e3) : Ie2(t4, r3, e3);
        }), o3;
      }), uh2 = Fu(function(n3, t3, r3) {
        Br2(n3, r3, t3);
      }), ih2 = Fu(function(n3, t3, r3) {
        n3[r3 ? 0 : 1].push(t3);
      }, function() {
        return [[], []];
      }), oh2 = uu(function(n3, t3) {
        if (n3 == null)
          return [];
        var r3 = t3.length;
        return r3 > 1 && Ui2(n3, t3[0], t3[1]) ? t3 = [] : r3 > 2 && Ui2(t3[0], t3[1], t3[2]) && (t3 = [t3[0]]), He2(n3, ee3(t3, 1), []);
      }), fh2 = Dl || function() {
        return re2.Date.now();
      }, ch2 = uu(function(n3, t3, r3) {
        var e3 = _n;
        if (r3.length) {
          var u3 = N2(r3, wi2(ch2));
          e3 |= bn;
        }
        return ai2(n3, e3, t3, r3, u3);
      }), ah2 = uu(function(n3, t3, r3) {
        var e3 = _n | vn;
        if (r3.length) {
          var u3 = N2(r3, wi2(ah2));
          e3 |= bn;
        }
        return ai2(t3, e3, n3, r3, u3);
      }), lh2 = uu(function(n3, t3) {
        return Gr2(n3, 1, t3);
      }), sh2 = uu(function(n3, t3, r3) {
        return Gr2(n3, Ic2(t3) || 0, r3);
      });
      Cf2.Cache = sr2;
      var hh2 = js(function(t3, r3) {
        r3 = r3.length == 1 && bh2(r3[0]) ? c2(r3[0], z2(mi2())) : c2(ee3(r3, 1), z2(mi2()));
        var e3 = r3.length;
        return uu(function(u3) {
          for (var i2 = -1, o3 = Hl(u3.length, e3); ++i2 < o3; )
            u3[i2] = r3[i2].call(this, u3[i2]);
          return n2(t3, this, u3);
        });
      }), ph2 = uu(function(n3, t3) {
        return ai2(n3, bn, X2, t3, N2(t3, wi2(ph2)));
      }), _h = uu(function(n3, t3) {
        return ai2(n3, wn, X2, t3, N2(t3, wi2(_h)));
      }), vh2 = gi2(function(n3, t3) {
        return ai2(n3, xn, X2, X2, X2, t3);
      }), gh2 = ii2(me2), yh2 = ii2(function(n3, t3) {
        return n3 >= t3;
      }), dh2 = Re2(function() {
        return arguments;
      }()) ? Re2 : function(n3) {
        return cc2(n3) && bl.call(n3, "callee") && !Wl.call(n3, "callee");
      }, bh2 = il.isArray, wh2 = ce2 ? z2(ce2) : ze, mh2 = ql || qa2, xh2 = ae2 ? z2(ae2) : Ee2, jh2 = le2 ? z2(le2) : Le2, Ah2 = se2 ? z2(se2) : Be2, kh2 = he2 ? z2(he2) : Te2, Oh2 = pe2 ? z2(pe2) : $e2, Ih2 = ii2(Ne2), Rh2 = ii2(function(n3, t3) {
        return n3 <= t3;
      }), zh2 = Nu(function(n3, t3) {
        if (Mi2(t3) || Hf2(t3))
          return $u(t3, Pc2(t3), n3), X2;
        for (var r3 in t3)
          bl.call(t3, r3) && Sr2(n3, r3, t3[r3]);
      }), Eh2 = Nu(function(n3, t3) {
        $u(t3, qc2(t3), n3);
      }), Sh2 = Nu(function(n3, t3, r3, e3) {
        $u(t3, qc2(t3), n3, e3);
      }), Wh2 = Nu(function(n3, t3, r3, e3) {
        $u(t3, Pc2(t3), n3, e3);
      }), Lh2 = gi2(Tr2), Ch2 = uu(function(n3, t3) {
        n3 = ll(n3);
        var r3 = -1, e3 = t3.length, u3 = e3 > 2 ? t3[2] : X2;
        for (u3 && Ui2(t3[0], t3[1], u3) && (e3 = 1); ++r3 < e3; )
          for (var i2 = t3[r3], o3 = qc2(i2), f3 = -1, c3 = o3.length; ++f3 < c3; ) {
            var a3 = o3[f3], l3 = n3[a3];
            (l3 === X2 || Gf2(l3, gl[a3]) && !bl.call(n3, a3)) && (n3[a3] = i2[a3]);
          }
        return n3;
      }), Uh2 = uu(function(t3) {
        return t3.push(X2, si2), n2(Mh2, X2, t3);
      }), Bh2 = Xu(function(n3, t3, r3) {
        t3 != null && typeof t3.toString != "function" && (t3 = xl.call(t3)), n3[t3] = r3;
      }, Sa2(La2)), Th2 = Xu(function(n3, t3, r3) {
        t3 != null && typeof t3.toString != "function" && (t3 = xl.call(t3)), bl.call(n3, t3) ? n3[t3].push(r3) : n3[t3] = [r3];
      }, mi2), $h2 = uu(Ie2), Dh2 = Nu(function(n3, t3, r3) {
        Ke2(n3, t3, r3);
      }), Mh2 = Nu(function(n3, t3, r3, e3) {
        Ke2(n3, t3, r3, e3);
      }), Fh2 = gi2(function(n3, t3) {
        var r3 = {};
        if (n3 == null)
          return r3;
        var e3 = false;
        t3 = c2(t3, function(t4) {
          return t4 = ku(t4, n3), e3 || (e3 = t4.length > 1), t4;
        }), $u(n3, di2(n3), r3), e3 && (r3 = Fr2(r3, an | ln | sn, hi2));
        for (var u3 = t3.length; u3--; )
          yu(r3, t3[u3]);
        return r3;
      }), Nh2 = gi2(function(n3, t3) {
        return n3 == null ? {} : Je2(n3, t3);
      }), Ph2 = ci2(Pc2), qh2 = ci2(qc2), Zh2 = Vu(function(n3, t3, r3) {
        return t3 = t3.toLowerCase(), n3 + (r3 ? fa2(t3) : t3);
      }), Kh2 = Vu(function(n3, t3, r3) {
        return n3 + (r3 ? "-" : "") + t3.toLowerCase();
      }), Vh2 = Vu(function(n3, t3, r3) {
        return n3 + (r3 ? " " : "") + t3.toLowerCase();
      }), Gh2 = Ku("toLowerCase"), Hh2 = Vu(function(n3, t3, r3) {
        return n3 + (r3 ? "_" : "") + t3.toLowerCase();
      }), Jh2 = Vu(function(n3, t3, r3) {
        return n3 + (r3 ? " " : "") + Qh2(t3);
      }), Yh2 = Vu(function(n3, t3, r3) {
        return n3 + (r3 ? " " : "") + t3.toUpperCase();
      }), Qh2 = Ku("toUpperCase"), Xh2 = uu(function(t3, r3) {
        try {
          return n2(t3, X2, r3);
        } catch (n3) {
          return rc2(n3) ? n3 : new fl(n3);
        }
      }), np = gi2(function(n3, t3) {
        return r2(t3, function(t4) {
          t4 = no(t4), Br2(n3, t4, ch2(n3[t4], n3));
        }), n3;
      }), tp = Yu(), rp = Yu(true), ep = uu(function(n3, t3) {
        return function(r3) {
          return Ie2(r3, n3, t3);
        };
      }), up = uu(function(n3, t3) {
        return function(r3) {
          return Ie2(n3, r3, t3);
        };
      }), ip = ti2(c2), op = ti2(u2), fp2 = ti2(h2), cp = ui2(), ap = ui2(true), lp = ni2(function(n3, t3) {
        return n3 + t3;
      }, 0), sp = fi2("ceil"), hp = ni2(function(n3, t3) {
        return n3 / t3;
      }, 1), pp = fi2("floor"), _p = ni2(function(n3, t3) {
        return n3 * t3;
      }, 1), vp = fi2("round"), gp = ni2(function(n3, t3) {
        return n3 - t3;
      }, 0);
      return Z3.after = If2, Z3.ary = Rf2, Z3.assign = zh2, Z3.assignIn = Eh2, Z3.assignInWith = Sh2, Z3.assignWith = Wh2, Z3.at = Lh2, Z3.before = zf2, Z3.bind = ch2, Z3.bindAll = np, Z3.bindKey = ah2, Z3.castArray = Nf2, Z3.chain = Qo, Z3.chunk = uo, Z3.compact = io, Z3.concat = oo, Z3.cond = za2, Z3.conforms = Ea2, Z3.constant = Sa2, Z3.countBy = Xs, Z3.create = Sc2, Z3.curry = Ef2, Z3.curryRight = Sf2, Z3.debounce = Wf2, Z3.defaults = Ch2, Z3.defaultsDeep = Uh2, Z3.defer = lh2, Z3.delay = sh2, Z3.difference = Us, Z3.differenceBy = Bs, Z3.differenceWith = Ts, Z3.drop = fo, Z3.dropRight = co, Z3.dropRightWhile = ao, Z3.dropWhile = lo, Z3.fill = so, Z3.filter = lf2, Z3.flatMap = sf2, Z3.flatMapDeep = hf2, Z3.flatMapDepth = pf2, Z3.flatten = _o, Z3.flattenDeep = vo, Z3.flattenDepth = go, Z3.flip = Lf2, Z3.flow = tp, Z3.flowRight = rp, Z3.fromPairs = yo, Z3.functions = $c2, Z3.functionsIn = Dc2, Z3.groupBy = rh2, Z3.initial = mo, Z3.intersection = $s, Z3.intersectionBy = Ds, Z3.intersectionWith = Ms, Z3.invert = Bh2, Z3.invertBy = Th2, Z3.invokeMap = eh2, Z3.iteratee = Ca2, Z3.keyBy = uh2, Z3.keys = Pc2, Z3.keysIn = qc2, Z3.map = yf2, Z3.mapKeys = Zc2, Z3.mapValues = Kc2, Z3.matches = Ua2, Z3.matchesProperty = Ba2, Z3.memoize = Cf2, Z3.merge = Dh2, Z3.mergeWith = Mh2, Z3.method = ep, Z3.methodOf = up, Z3.mixin = Ta2, Z3.negate = Uf2, Z3.nthArg = Ma2, Z3.omit = Fh2, Z3.omitBy = Vc2, Z3.once = Bf2, Z3.orderBy = df2, Z3.over = ip, Z3.overArgs = hh2, Z3.overEvery = op, Z3.overSome = fp2, Z3.partial = ph2, Z3.partialRight = _h, Z3.partition = ih2, Z3.pick = Nh2, Z3.pickBy = Gc2, Z3.property = Fa2, Z3.propertyOf = Na2, Z3.pull = Fs, Z3.pullAll = Oo, Z3.pullAllBy = Io, Z3.pullAllWith = Ro, Z3.pullAt = Ns, Z3.range = cp, Z3.rangeRight = ap, Z3.rearg = vh2, Z3.reject = mf2, Z3.remove = zo, Z3.rest = Tf2, Z3.reverse = Eo, Z3.sampleSize = jf2, Z3.set = Jc2, Z3.setWith = Yc2, Z3.shuffle = Af2, Z3.slice = So, Z3.sortBy = oh2, Z3.sortedUniq = $o, Z3.sortedUniqBy = Do, Z3.split = da2, Z3.spread = $f2, Z3.tail = Mo, Z3.take = Fo, Z3.takeRight = No, Z3.takeRightWhile = Po, Z3.takeWhile = qo, Z3.tap = Xo, Z3.throttle = Df2, Z3.thru = nf2, Z3.toArray = jc2, Z3.toPairs = Ph2, Z3.toPairsIn = qh2, Z3.toPath = Ha2, Z3.toPlainObject = Rc2, Z3.transform = Qc2, Z3.unary = Mf2, Z3.union = Ps, Z3.unionBy = qs, Z3.unionWith = Zs, Z3.uniq = Zo, Z3.uniqBy = Ko, Z3.uniqWith = Vo, Z3.unset = Xc2, Z3.unzip = Go, Z3.unzipWith = Ho, Z3.update = na2, Z3.updateWith = ta2, Z3.values = ra2, Z3.valuesIn = ea2, Z3.without = Ks, Z3.words = Ra2, Z3.wrap = Ff2, Z3.xor = Vs, Z3.xorBy = Gs, Z3.xorWith = Hs, Z3.zip = Js, Z3.zipObject = Jo, Z3.zipObjectDeep = Yo, Z3.zipWith = Ys, Z3.entries = Ph2, Z3.entriesIn = qh2, Z3.extend = Eh2, Z3.extendWith = Sh2, Ta2(Z3, Z3), Z3.add = lp, Z3.attempt = Xh2, Z3.camelCase = Zh2, Z3.capitalize = fa2, Z3.ceil = sp, Z3.clamp = ua2, Z3.clone = Pf2, Z3.cloneDeep = Zf2, Z3.cloneDeepWith = Kf2, Z3.cloneWith = qf2, Z3.conformsTo = Vf2, Z3.deburr = ca2, Z3.defaultTo = Wa2, Z3.divide = hp, Z3.endsWith = aa2, Z3.eq = Gf2, Z3.escape = la2, Z3.escapeRegExp = sa2, Z3.every = af2, Z3.find = nh2, Z3.findIndex = ho, Z3.findKey = Wc2, Z3.findLast = th2, Z3.findLastIndex = po, Z3.findLastKey = Lc2, Z3.floor = pp, Z3.forEach = _f, Z3.forEachRight = vf2, Z3.forIn = Cc2, Z3.forInRight = Uc2, Z3.forOwn = Bc2, Z3.forOwnRight = Tc2, Z3.get = Mc2, Z3.gt = gh2, Z3.gte = yh2, Z3.has = Fc2, Z3.hasIn = Nc2, Z3.head = bo, Z3.identity = La2, Z3.includes = gf2, Z3.indexOf = wo, Z3.inRange = ia2, Z3.invoke = $h2, Z3.isArguments = dh2, Z3.isArray = bh2, Z3.isArrayBuffer = wh2, Z3.isArrayLike = Hf2, Z3.isArrayLikeObject = Jf2, Z3.isBoolean = Yf2, Z3.isBuffer = mh2, Z3.isDate = xh2, Z3.isElement = Qf2, Z3.isEmpty = Xf2, Z3.isEqual = nc2, Z3.isEqualWith = tc2, Z3.isError = rc2, Z3.isFinite = ec2, Z3.isFunction = uc2, Z3.isInteger = ic2, Z3.isLength = oc2, Z3.isMap = jh2, Z3.isMatch = ac2, Z3.isMatchWith = lc2, Z3.isNaN = sc2, Z3.isNative = hc2, Z3.isNil = _c, Z3.isNull = pc2, Z3.isNumber = vc2, Z3.isObject = fc2, Z3.isObjectLike = cc2, Z3.isPlainObject = gc2, Z3.isRegExp = Ah2, Z3.isSafeInteger = yc2, Z3.isSet = kh2, Z3.isString = dc2, Z3.isSymbol = bc2, Z3.isTypedArray = Oh2, Z3.isUndefined = wc2, Z3.isWeakMap = mc2, Z3.isWeakSet = xc2, Z3.join = xo, Z3.kebabCase = Kh2, Z3.last = jo, Z3.lastIndexOf = Ao, Z3.lowerCase = Vh2, Z3.lowerFirst = Gh2, Z3.lt = Ih2, Z3.lte = Rh2, Z3.max = Ya2, Z3.maxBy = Qa2, Z3.mean = Xa2, Z3.meanBy = nl, Z3.min = tl, Z3.minBy = rl, Z3.stubArray = Pa2, Z3.stubFalse = qa2, Z3.stubObject = Za2, Z3.stubString = Ka2, Z3.stubTrue = Va2, Z3.multiply = _p, Z3.nth = ko, Z3.noConflict = $a2, Z3.noop = Da2, Z3.now = fh2, Z3.pad = ha2, Z3.padEnd = pa2, Z3.padStart = _a2, Z3.parseInt = va, Z3.random = oa2, Z3.reduce = bf2, Z3.reduceRight = wf2, Z3.repeat = ga, Z3.replace = ya2, Z3.result = Hc2, Z3.round = vp, Z3.runInContext = p3, Z3.sample = xf2, Z3.size = kf2, Z3.snakeCase = Hh2, Z3.some = Of2, Z3.sortedIndex = Wo, Z3.sortedIndexBy = Lo, Z3.sortedIndexOf = Co, Z3.sortedLastIndex = Uo, Z3.sortedLastIndexBy = Bo, Z3.sortedLastIndexOf = To, Z3.startCase = Jh2, Z3.startsWith = ba2, Z3.subtract = gp, Z3.sum = el, Z3.sumBy = ul, Z3.template = wa2, Z3.times = Ga2, Z3.toFinite = Ac2, Z3.toInteger = kc2, Z3.toLength = Oc2, Z3.toLower = ma2, Z3.toNumber = Ic2, Z3.toSafeInteger = zc2, Z3.toString = Ec2, Z3.toUpper = xa2, Z3.trim = ja2, Z3.trimEnd = Aa2, Z3.trimStart = ka2, Z3.truncate = Oa2, Z3.unescape = Ia2, Z3.uniqueId = Ja2, Z3.upperCase = Yh2, Z3.upperFirst = Qh2, Z3.each = _f, Z3.eachRight = vf2, Z3.first = bo, Ta2(Z3, function() {
        var n3 = {};
        return ue3(Z3, function(t3, r3) {
          bl.call(Z3.prototype, r3) || (n3[r3] = t3);
        }), n3;
      }(), { chain: false }), Z3.VERSION = nn, r2(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(n3) {
        Z3[n3].placeholder = Z3;
      }), r2(["drop", "take"], function(n3, t3) {
        Ct2.prototype[n3] = function(r3) {
          r3 = r3 === X2 ? 1 : Gl(kc2(r3), 0);
          var e3 = this.__filtered__ && !t3 ? new Ct2(this) : this.clone();
          return e3.__filtered__ ? e3.__takeCount__ = Hl(r3, e3.__takeCount__) : e3.__views__.push({ size: Hl(r3, Un), type: n3 + (e3.__dir__ < 0 ? "Right" : "") }), e3;
        }, Ct2.prototype[n3 + "Right"] = function(t4) {
          return this.reverse()[n3](t4).reverse();
        };
      }), r2(["filter", "map", "takeWhile"], function(n3, t3) {
        var r3 = t3 + 1, e3 = r3 == Rn || r3 == En;
        Ct2.prototype[n3] = function(n4) {
          var t4 = this.clone();
          return t4.__iteratees__.push({ iteratee: mi2(n4, 3), type: r3 }), t4.__filtered__ = t4.__filtered__ || e3, t4;
        };
      }), r2(["head", "last"], function(n3, t3) {
        var r3 = "take" + (t3 ? "Right" : "");
        Ct2.prototype[n3] = function() {
          return this[r3](1).value()[0];
        };
      }), r2(["initial", "tail"], function(n3, t3) {
        var r3 = "drop" + (t3 ? "" : "Right");
        Ct2.prototype[n3] = function() {
          return this.__filtered__ ? new Ct2(this) : this[r3](1);
        };
      }), Ct2.prototype.compact = function() {
        return this.filter(La2);
      }, Ct2.prototype.find = function(n3) {
        return this.filter(n3).head();
      }, Ct2.prototype.findLast = function(n3) {
        return this.reverse().find(n3);
      }, Ct2.prototype.invokeMap = uu(function(n3, t3) {
        return typeof n3 == "function" ? new Ct2(this) : this.map(function(r3) {
          return Ie2(r3, n3, t3);
        });
      }), Ct2.prototype.reject = function(n3) {
        return this.filter(Uf2(mi2(n3)));
      }, Ct2.prototype.slice = function(n3, t3) {
        n3 = kc2(n3);
        var r3 = this;
        return r3.__filtered__ && (n3 > 0 || t3 < 0) ? new Ct2(r3) : (n3 < 0 ? r3 = r3.takeRight(-n3) : n3 && (r3 = r3.drop(n3)), t3 !== X2 && (t3 = kc2(t3), r3 = t3 < 0 ? r3.dropRight(-t3) : r3.take(t3 - n3)), r3);
      }, Ct2.prototype.takeRightWhile = function(n3) {
        return this.reverse().takeWhile(n3).reverse();
      }, Ct2.prototype.toArray = function() {
        return this.take(Un);
      }, ue3(Ct2.prototype, function(n3, t3) {
        var r3 = /^(?:filter|find|map|reject)|While$/.test(t3), e3 = /^(?:head|last)$/.test(t3), u3 = Z3[e3 ? "take" + (t3 == "last" ? "Right" : "") : t3], i2 = e3 || /^find/.test(t3);
        u3 && (Z3.prototype[t3] = function() {
          var t4 = this.__wrapped__, o3 = e3 ? [1] : arguments, f3 = t4 instanceof Ct2, c3 = o3[0], l3 = f3 || bh2(t4), s2 = function(n4) {
            var t5 = u3.apply(Z3, a2([n4], o3));
            return e3 && h3 ? t5[0] : t5;
          };
          l3 && r3 && typeof c3 == "function" && c3.length != 1 && (f3 = l3 = false);
          var h3 = this.__chain__, p4 = !!this.__actions__.length, _3 = i2 && !h3, v3 = f3 && !p4;
          if (!i2 && l3) {
            t4 = v3 ? t4 : new Ct2(this);
            var g3 = n3.apply(t4, o3);
            return g3.__actions__.push({ func: nf2, args: [s2], thisArg: X2 }), new Y3(g3, h3);
          }
          return _3 && v3 ? n3.apply(this, o3) : (g3 = this.thru(s2), _3 ? e3 ? g3.value()[0] : g3.value() : g3);
        });
      }), r2(["pop", "push", "shift", "sort", "splice", "unshift"], function(n3) {
        var t3 = _l[n3], r3 = /^(?:push|sort|unshift)$/.test(n3) ? "tap" : "thru", e3 = /^(?:pop|shift)$/.test(n3);
        Z3.prototype[n3] = function() {
          var n4 = arguments;
          if (e3 && !this.__chain__) {
            var u3 = this.value();
            return t3.apply(bh2(u3) ? u3 : [], n4);
          }
          return this[r3](function(r4) {
            return t3.apply(bh2(r4) ? r4 : [], n4);
          });
        };
      }), ue3(Ct2.prototype, function(n3, t3) {
        var r3 = Z3[t3];
        if (r3) {
          var e3 = r3.name + "";
          bl.call(fs, e3) || (fs[e3] = []), fs[e3].push({ name: t3, func: r3 });
        }
      }), fs[Qu(X2, vn).name] = [{ name: "wrapper", func: X2 }], Ct2.prototype.clone = $t2, Ct2.prototype.reverse = Yt2, Ct2.prototype.value = Qt2, Z3.prototype.at = Qs, Z3.prototype.chain = tf2, Z3.prototype.commit = rf2, Z3.prototype.next = ef2, Z3.prototype.plant = of2, Z3.prototype.reverse = ff2, Z3.prototype.toJSON = Z3.prototype.valueOf = Z3.prototype.value = cf2, Z3.prototype.first = Z3.prototype.head, Ul && (Z3.prototype[Ul] = uf2), Z3;
    }, be2 = de2();
    ue2 ? ((ue2.exports = be2)._ = be2, ee2._ = be2) : re2._ = be2;
  }).call(commonjsGlobal);
})(lodash_min, lodash_min.exports);
var _mapping = {};
(function(exports) {
  exports.aliasToReal = {
    "each": "forEach",
    "eachRight": "forEachRight",
    "entries": "toPairs",
    "entriesIn": "toPairsIn",
    "extend": "assignIn",
    "extendAll": "assignInAll",
    "extendAllWith": "assignInAllWith",
    "extendWith": "assignInWith",
    "first": "head",
    "conforms": "conformsTo",
    "matches": "isMatch",
    "property": "get",
    "__": "placeholder",
    "F": "stubFalse",
    "T": "stubTrue",
    "all": "every",
    "allPass": "overEvery",
    "always": "constant",
    "any": "some",
    "anyPass": "overSome",
    "apply": "spread",
    "assoc": "set",
    "assocPath": "set",
    "complement": "negate",
    "compose": "flowRight",
    "contains": "includes",
    "dissoc": "unset",
    "dissocPath": "unset",
    "dropLast": "dropRight",
    "dropLastWhile": "dropRightWhile",
    "equals": "isEqual",
    "identical": "eq",
    "indexBy": "keyBy",
    "init": "initial",
    "invertObj": "invert",
    "juxt": "over",
    "omitAll": "omit",
    "nAry": "ary",
    "path": "get",
    "pathEq": "matchesProperty",
    "pathOr": "getOr",
    "paths": "at",
    "pickAll": "pick",
    "pipe": "flow",
    "pluck": "map",
    "prop": "get",
    "propEq": "matchesProperty",
    "propOr": "getOr",
    "props": "at",
    "symmetricDifference": "xor",
    "symmetricDifferenceBy": "xorBy",
    "symmetricDifferenceWith": "xorWith",
    "takeLast": "takeRight",
    "takeLastWhile": "takeRightWhile",
    "unapply": "rest",
    "unnest": "flatten",
    "useWith": "overArgs",
    "where": "conformsTo",
    "whereEq": "isMatch",
    "zipObj": "zipObject"
  };
  exports.aryMethod = {
    "1": [
      "assignAll",
      "assignInAll",
      "attempt",
      "castArray",
      "ceil",
      "create",
      "curry",
      "curryRight",
      "defaultsAll",
      "defaultsDeepAll",
      "floor",
      "flow",
      "flowRight",
      "fromPairs",
      "invert",
      "iteratee",
      "memoize",
      "method",
      "mergeAll",
      "methodOf",
      "mixin",
      "nthArg",
      "over",
      "overEvery",
      "overSome",
      "rest",
      "reverse",
      "round",
      "runInContext",
      "spread",
      "template",
      "trim",
      "trimEnd",
      "trimStart",
      "uniqueId",
      "words",
      "zipAll"
    ],
    "2": [
      "add",
      "after",
      "ary",
      "assign",
      "assignAllWith",
      "assignIn",
      "assignInAllWith",
      "at",
      "before",
      "bind",
      "bindAll",
      "bindKey",
      "chunk",
      "cloneDeepWith",
      "cloneWith",
      "concat",
      "conformsTo",
      "countBy",
      "curryN",
      "curryRightN",
      "debounce",
      "defaults",
      "defaultsDeep",
      "defaultTo",
      "delay",
      "difference",
      "divide",
      "drop",
      "dropRight",
      "dropRightWhile",
      "dropWhile",
      "endsWith",
      "eq",
      "every",
      "filter",
      "find",
      "findIndex",
      "findKey",
      "findLast",
      "findLastIndex",
      "findLastKey",
      "flatMap",
      "flatMapDeep",
      "flattenDepth",
      "forEach",
      "forEachRight",
      "forIn",
      "forInRight",
      "forOwn",
      "forOwnRight",
      "get",
      "groupBy",
      "gt",
      "gte",
      "has",
      "hasIn",
      "includes",
      "indexOf",
      "intersection",
      "invertBy",
      "invoke",
      "invokeMap",
      "isEqual",
      "isMatch",
      "join",
      "keyBy",
      "lastIndexOf",
      "lt",
      "lte",
      "map",
      "mapKeys",
      "mapValues",
      "matchesProperty",
      "maxBy",
      "meanBy",
      "merge",
      "mergeAllWith",
      "minBy",
      "multiply",
      "nth",
      "omit",
      "omitBy",
      "overArgs",
      "pad",
      "padEnd",
      "padStart",
      "parseInt",
      "partial",
      "partialRight",
      "partition",
      "pick",
      "pickBy",
      "propertyOf",
      "pull",
      "pullAll",
      "pullAt",
      "random",
      "range",
      "rangeRight",
      "rearg",
      "reject",
      "remove",
      "repeat",
      "restFrom",
      "result",
      "sampleSize",
      "some",
      "sortBy",
      "sortedIndex",
      "sortedIndexOf",
      "sortedLastIndex",
      "sortedLastIndexOf",
      "sortedUniqBy",
      "split",
      "spreadFrom",
      "startsWith",
      "subtract",
      "sumBy",
      "take",
      "takeRight",
      "takeRightWhile",
      "takeWhile",
      "tap",
      "throttle",
      "thru",
      "times",
      "trimChars",
      "trimCharsEnd",
      "trimCharsStart",
      "truncate",
      "union",
      "uniqBy",
      "uniqWith",
      "unset",
      "unzipWith",
      "without",
      "wrap",
      "xor",
      "zip",
      "zipObject",
      "zipObjectDeep"
    ],
    "3": [
      "assignInWith",
      "assignWith",
      "clamp",
      "differenceBy",
      "differenceWith",
      "findFrom",
      "findIndexFrom",
      "findLastFrom",
      "findLastIndexFrom",
      "getOr",
      "includesFrom",
      "indexOfFrom",
      "inRange",
      "intersectionBy",
      "intersectionWith",
      "invokeArgs",
      "invokeArgsMap",
      "isEqualWith",
      "isMatchWith",
      "flatMapDepth",
      "lastIndexOfFrom",
      "mergeWith",
      "orderBy",
      "padChars",
      "padCharsEnd",
      "padCharsStart",
      "pullAllBy",
      "pullAllWith",
      "rangeStep",
      "rangeStepRight",
      "reduce",
      "reduceRight",
      "replace",
      "set",
      "slice",
      "sortedIndexBy",
      "sortedLastIndexBy",
      "transform",
      "unionBy",
      "unionWith",
      "update",
      "xorBy",
      "xorWith",
      "zipWith"
    ],
    "4": [
      "fill",
      "setWith",
      "updateWith"
    ]
  };
  exports.aryRearg = {
    "2": [1, 0],
    "3": [2, 0, 1],
    "4": [3, 2, 0, 1]
  };
  exports.iterateeAry = {
    "dropRightWhile": 1,
    "dropWhile": 1,
    "every": 1,
    "filter": 1,
    "find": 1,
    "findFrom": 1,
    "findIndex": 1,
    "findIndexFrom": 1,
    "findKey": 1,
    "findLast": 1,
    "findLastFrom": 1,
    "findLastIndex": 1,
    "findLastIndexFrom": 1,
    "findLastKey": 1,
    "flatMap": 1,
    "flatMapDeep": 1,
    "flatMapDepth": 1,
    "forEach": 1,
    "forEachRight": 1,
    "forIn": 1,
    "forInRight": 1,
    "forOwn": 1,
    "forOwnRight": 1,
    "map": 1,
    "mapKeys": 1,
    "mapValues": 1,
    "partition": 1,
    "reduce": 2,
    "reduceRight": 2,
    "reject": 1,
    "remove": 1,
    "some": 1,
    "takeRightWhile": 1,
    "takeWhile": 1,
    "times": 1,
    "transform": 2
  };
  exports.iterateeRearg = {
    "mapKeys": [1],
    "reduceRight": [1, 0]
  };
  exports.methodRearg = {
    "assignInAllWith": [1, 0],
    "assignInWith": [1, 2, 0],
    "assignAllWith": [1, 0],
    "assignWith": [1, 2, 0],
    "differenceBy": [1, 2, 0],
    "differenceWith": [1, 2, 0],
    "getOr": [2, 1, 0],
    "intersectionBy": [1, 2, 0],
    "intersectionWith": [1, 2, 0],
    "isEqualWith": [1, 2, 0],
    "isMatchWith": [2, 1, 0],
    "mergeAllWith": [1, 0],
    "mergeWith": [1, 2, 0],
    "padChars": [2, 1, 0],
    "padCharsEnd": [2, 1, 0],
    "padCharsStart": [2, 1, 0],
    "pullAllBy": [2, 1, 0],
    "pullAllWith": [2, 1, 0],
    "rangeStep": [1, 2, 0],
    "rangeStepRight": [1, 2, 0],
    "setWith": [3, 1, 2, 0],
    "sortedIndexBy": [2, 1, 0],
    "sortedLastIndexBy": [2, 1, 0],
    "unionBy": [1, 2, 0],
    "unionWith": [1, 2, 0],
    "updateWith": [3, 1, 2, 0],
    "xorBy": [1, 2, 0],
    "xorWith": [1, 2, 0],
    "zipWith": [1, 2, 0]
  };
  exports.methodSpread = {
    "assignAll": { "start": 0 },
    "assignAllWith": { "start": 0 },
    "assignInAll": { "start": 0 },
    "assignInAllWith": { "start": 0 },
    "defaultsAll": { "start": 0 },
    "defaultsDeepAll": { "start": 0 },
    "invokeArgs": { "start": 2 },
    "invokeArgsMap": { "start": 2 },
    "mergeAll": { "start": 0 },
    "mergeAllWith": { "start": 0 },
    "partial": { "start": 1 },
    "partialRight": { "start": 1 },
    "without": { "start": 1 },
    "zipAll": { "start": 0 }
  };
  exports.mutate = {
    "array": {
      "fill": true,
      "pull": true,
      "pullAll": true,
      "pullAllBy": true,
      "pullAllWith": true,
      "pullAt": true,
      "remove": true,
      "reverse": true
    },
    "object": {
      "assign": true,
      "assignAll": true,
      "assignAllWith": true,
      "assignIn": true,
      "assignInAll": true,
      "assignInAllWith": true,
      "assignInWith": true,
      "assignWith": true,
      "defaults": true,
      "defaultsAll": true,
      "defaultsDeep": true,
      "defaultsDeepAll": true,
      "merge": true,
      "mergeAll": true,
      "mergeAllWith": true,
      "mergeWith": true
    },
    "set": {
      "set": true,
      "setWith": true,
      "unset": true,
      "update": true,
      "updateWith": true
    }
  };
  exports.realToAlias = function() {
    var hasOwnProperty2 = Object.prototype.hasOwnProperty, object2 = exports.aliasToReal, result = {};
    for (var key in object2) {
      var value = object2[key];
      if (hasOwnProperty2.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }
    return result;
  }();
  exports.remap = {
    "assignAll": "assign",
    "assignAllWith": "assignWith",
    "assignInAll": "assignIn",
    "assignInAllWith": "assignInWith",
    "curryN": "curry",
    "curryRightN": "curryRight",
    "defaultsAll": "defaults",
    "defaultsDeepAll": "defaultsDeep",
    "findFrom": "find",
    "findIndexFrom": "findIndex",
    "findLastFrom": "findLast",
    "findLastIndexFrom": "findLastIndex",
    "getOr": "get",
    "includesFrom": "includes",
    "indexOfFrom": "indexOf",
    "invokeArgs": "invoke",
    "invokeArgsMap": "invokeMap",
    "lastIndexOfFrom": "lastIndexOf",
    "mergeAll": "merge",
    "mergeAllWith": "mergeWith",
    "padChars": "pad",
    "padCharsEnd": "padEnd",
    "padCharsStart": "padStart",
    "propertyOf": "get",
    "rangeStep": "range",
    "rangeStepRight": "rangeRight",
    "restFrom": "rest",
    "spreadFrom": "spread",
    "trimChars": "trim",
    "trimCharsEnd": "trimEnd",
    "trimCharsStart": "trimStart",
    "zipAll": "zip"
  };
  exports.skipFixed = {
    "castArray": true,
    "flow": true,
    "flowRight": true,
    "iteratee": true,
    "mixin": true,
    "rearg": true,
    "runInContext": true
  };
  exports.skipRearg = {
    "add": true,
    "assign": true,
    "assignIn": true,
    "bind": true,
    "bindKey": true,
    "concat": true,
    "difference": true,
    "divide": true,
    "eq": true,
    "gt": true,
    "gte": true,
    "isEqual": true,
    "lt": true,
    "lte": true,
    "matchesProperty": true,
    "merge": true,
    "multiply": true,
    "overArgs": true,
    "partial": true,
    "partialRight": true,
    "propertyOf": true,
    "random": true,
    "range": true,
    "rangeRight": true,
    "subtract": true,
    "zip": true,
    "zipObject": true,
    "zipObjectDeep": true
  };
})(_mapping);
var placeholder = {};
var mapping = _mapping, fallbackHolder = placeholder;
var push = Array.prototype.push;
function baseArity(func, n2) {
  return n2 == 2 ? function(a2, b2) {
    return func.apply(void 0, arguments);
  } : function(a2) {
    return func.apply(void 0, arguments);
  };
}
function baseAry(func, n2) {
  return n2 == 2 ? function(a2, b2) {
    return func(a2, b2);
  } : function(a2) {
    return func(a2);
  };
}
function cloneArray(array3) {
  var length2 = array3 ? array3.length : 0, result = Array(length2);
  while (length2--) {
    result[length2] = array3[length2];
  }
  return result;
}
function createCloner(func) {
  return function(object2) {
    return func({}, object2);
  };
}
function flatSpread(func, start) {
  return function() {
    var length2 = arguments.length, lastIndex = length2 - 1, args = Array(length2);
    while (length2--) {
      args[length2] = arguments[length2];
    }
    var array3 = args[start], otherArgs = args.slice(0, start);
    if (array3) {
      push.apply(otherArgs, array3);
    }
    if (start != lastIndex) {
      push.apply(otherArgs, args.slice(start + 1));
    }
    return func.apply(this, otherArgs);
  };
}
function wrapImmutable(func, cloner) {
  return function() {
    var length2 = arguments.length;
    if (!length2) {
      return;
    }
    var args = Array(length2);
    while (length2--) {
      args[length2] = arguments[length2];
    }
    var result = args[0] = cloner.apply(void 0, args);
    func.apply(void 0, args);
    return result;
  };
}
function baseConvert(util, name, func, options) {
  var isLib = typeof name == "function", isObj = name === Object(name);
  if (isObj) {
    options = func;
    func = name;
    name = void 0;
  }
  if (func == null) {
    throw new TypeError();
  }
  options || (options = {});
  var config2 = {
    "cap": "cap" in options ? options.cap : true,
    "curry": "curry" in options ? options.curry : true,
    "fixed": "fixed" in options ? options.fixed : true,
    "immutable": "immutable" in options ? options.immutable : true,
    "rearg": "rearg" in options ? options.rearg : true
  };
  var defaultHolder = isLib ? func : fallbackHolder, forceCurry = "curry" in options && options.curry, forceFixed = "fixed" in options && options.fixed, forceRearg = "rearg" in options && options.rearg, pristine = isLib ? func.runInContext() : void 0;
  var helpers = isLib ? func : {
    "ary": util.ary,
    "assign": util.assign,
    "clone": util.clone,
    "curry": util.curry,
    "forEach": util.forEach,
    "isArray": util.isArray,
    "isError": util.isError,
    "isFunction": util.isFunction,
    "isWeakMap": util.isWeakMap,
    "iteratee": util.iteratee,
    "keys": util.keys,
    "rearg": util.rearg,
    "toInteger": util.toInteger,
    "toPath": util.toPath
  };
  var ary = helpers.ary, assign2 = helpers.assign, clone = helpers.clone, curry = helpers.curry, each = helpers.forEach, isArray2 = helpers.isArray, isError = helpers.isError, isFunction2 = helpers.isFunction, isWeakMap = helpers.isWeakMap, keys2 = helpers.keys, rearg = helpers.rearg, toInteger = helpers.toInteger, toPath = helpers.toPath;
  var aryMethodKeys = keys2(mapping.aryMethod);
  var wrappers = {
    "castArray": function(castArray) {
      return function() {
        var value = arguments[0];
        return isArray2(value) ? castArray(cloneArray(value)) : castArray.apply(void 0, arguments);
      };
    },
    "iteratee": function(iteratee) {
      return function() {
        var func2 = arguments[0], arity = arguments[1], result = iteratee(func2, arity), length2 = result.length;
        if (config2.cap && typeof arity == "number") {
          arity = arity > 2 ? arity - 2 : 1;
          return length2 && length2 <= arity ? result : baseAry(result, arity);
        }
        return result;
      };
    },
    "mixin": function(mixin) {
      return function(source) {
        var func2 = this;
        if (!isFunction2(func2)) {
          return mixin(func2, Object(source));
        }
        var pairs2 = [];
        each(keys2(source), function(key) {
          if (isFunction2(source[key])) {
            pairs2.push([key, func2.prototype[key]]);
          }
        });
        mixin(func2, Object(source));
        each(pairs2, function(pair) {
          var value = pair[1];
          if (isFunction2(value)) {
            func2.prototype[pair[0]] = value;
          } else {
            delete func2.prototype[pair[0]];
          }
        });
        return func2;
      };
    },
    "nthArg": function(nthArg) {
      return function(n2) {
        var arity = n2 < 0 ? 1 : toInteger(n2) + 1;
        return curry(nthArg(n2), arity);
      };
    },
    "rearg": function(rearg2) {
      return function(func2, indexes) {
        var arity = indexes ? indexes.length : 0;
        return curry(rearg2(func2, indexes), arity);
      };
    },
    "runInContext": function(runInContext) {
      return function(context) {
        return baseConvert(util, runInContext(context), options);
      };
    }
  };
  function castCap(name2, func2) {
    if (config2.cap) {
      var indexes = mapping.iterateeRearg[name2];
      if (indexes) {
        return iterateeRearg(func2, indexes);
      }
      var n2 = !isLib && mapping.iterateeAry[name2];
      if (n2) {
        return iterateeAry(func2, n2);
      }
    }
    return func2;
  }
  function castCurry(name2, func2, n2) {
    return forceCurry || config2.curry && n2 > 1 ? curry(func2, n2) : func2;
  }
  function castFixed(name2, func2, n2) {
    if (config2.fixed && (forceFixed || !mapping.skipFixed[name2])) {
      var data = mapping.methodSpread[name2], start = data && data.start;
      return start === void 0 ? ary(func2, n2) : flatSpread(func2, start);
    }
    return func2;
  }
  function castRearg(name2, func2, n2) {
    return config2.rearg && n2 > 1 && (forceRearg || !mapping.skipRearg[name2]) ? rearg(func2, mapping.methodRearg[name2] || mapping.aryRearg[n2]) : func2;
  }
  function cloneByPath(object2, path) {
    path = toPath(path);
    var index = -1, length2 = path.length, lastIndex = length2 - 1, result = clone(Object(object2)), nested = result;
    while (nested != null && ++index < length2) {
      var key = path[index], value = nested[key];
      if (value != null && !(isFunction2(value) || isError(value) || isWeakMap(value))) {
        nested[key] = clone(index == lastIndex ? value : Object(value));
      }
      nested = nested[key];
    }
    return result;
  }
  function convertLib(options2) {
    return _2.runInContext.convert(options2)(void 0);
  }
  function createConverter(name2, func2) {
    var realName = mapping.aliasToReal[name2] || name2, methodName = mapping.remap[realName] || realName, oldOptions = options;
    return function(options2) {
      var newUtil = isLib ? pristine : helpers, newFunc = isLib ? pristine[methodName] : func2, newOptions = assign2(assign2({}, oldOptions), options2);
      return baseConvert(newUtil, realName, newFunc, newOptions);
    };
  }
  function iterateeAry(func2, n2) {
    return overArg(func2, function(func3) {
      return typeof func3 == "function" ? baseAry(func3, n2) : func3;
    });
  }
  function iterateeRearg(func2, indexes) {
    return overArg(func2, function(func3) {
      var n2 = indexes.length;
      return baseArity(rearg(baseAry(func3, n2), indexes), n2);
    });
  }
  function overArg(func2, transform10) {
    return function() {
      var length2 = arguments.length;
      if (!length2) {
        return func2();
      }
      var args = Array(length2);
      while (length2--) {
        args[length2] = arguments[length2];
      }
      var index = config2.rearg ? 0 : length2 - 1;
      args[index] = transform10(args[index]);
      return func2.apply(void 0, args);
    };
  }
  function wrap3(name2, func2, placeholder2) {
    var result, realName = mapping.aliasToReal[name2] || name2, wrapped = func2, wrapper = wrappers[realName];
    if (wrapper) {
      wrapped = wrapper(func2);
    } else if (config2.immutable) {
      if (mapping.mutate.array[realName]) {
        wrapped = wrapImmutable(func2, cloneArray);
      } else if (mapping.mutate.object[realName]) {
        wrapped = wrapImmutable(func2, createCloner(func2));
      } else if (mapping.mutate.set[realName]) {
        wrapped = wrapImmutable(func2, cloneByPath);
      }
    }
    each(aryMethodKeys, function(aryKey) {
      each(mapping.aryMethod[aryKey], function(otherName) {
        if (realName == otherName) {
          var data = mapping.methodSpread[realName], afterRearg = data && data.afterRearg;
          result = afterRearg ? castFixed(realName, castRearg(realName, wrapped, aryKey), aryKey) : castRearg(realName, castFixed(realName, wrapped, aryKey), aryKey);
          result = castCap(realName, result);
          result = castCurry(realName, result, aryKey);
          return false;
        }
      });
      return !result;
    });
    result || (result = wrapped);
    if (result == func2) {
      result = forceCurry ? curry(result, 1) : function() {
        return func2.apply(this, arguments);
      };
    }
    result.convert = createConverter(realName, func2);
    result.placeholder = func2.placeholder = placeholder2;
    return result;
  }
  if (!isObj) {
    return wrap3(name, func, defaultHolder);
  }
  var _2 = func;
  var pairs = [];
  each(aryMethodKeys, function(aryKey) {
    each(mapping.aryMethod[aryKey], function(key) {
      var func2 = _2[mapping.remap[key] || key];
      if (func2) {
        pairs.push([key, wrap3(key, func2, _2)]);
      }
    });
  });
  each(keys2(_2), function(key) {
    var func2 = _2[key];
    if (typeof func2 == "function") {
      var length2 = pairs.length;
      while (length2--) {
        if (pairs[length2][0] == key) {
          return;
        }
      }
      func2.convert = createConverter(key, func2);
      pairs.push([key, func2]);
    }
  });
  each(pairs, function(pair) {
    _2[pair[0]] = pair[1];
  });
  _2.convert = convertLib;
  _2.placeholder = _2;
  each(keys2(_2), function(key) {
    each(mapping.realToAlias[key] || [], function(alias) {
      _2[alias] = _2[key];
    });
  });
  return _2;
}
var _baseConvert = baseConvert;
var _ = lodash_min.exports.runInContext();
var fp = _baseConvert(_, _);
var react = { exports: {} };
var react_production_min = {};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
function toObject(val) {
  if (val === null || val === void 0) {
    throw new TypeError("Object.assign cannot be called with null or undefined");
  }
  return Object(val);
}
function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    }
    var test1 = new String("abc");
    test1[5] = "de";
    if (Object.getOwnPropertyNames(test1)[0] === "5") {
      return false;
    }
    var test2 = {};
    for (var i = 0; i < 10; i++) {
      test2["_" + String.fromCharCode(i)] = i;
    }
    var order2 = Object.getOwnPropertyNames(test2).map(function(n2) {
      return test2[n2];
    });
    if (order2.join("") !== "0123456789") {
      return false;
    }
    var test3 = {};
    "abcdefghijklmnopqrst".split("").forEach(function(letter) {
      test3[letter] = letter;
    });
    if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
      return false;
    }
    return true;
  } catch (err) {
    return false;
  }
}
var objectAssign = shouldUseNative() ? Object.assign : function(target, source) {
  var from2;
  var to = toObject(target);
  var symbols;
  for (var s = 1; s < arguments.length; s++) {
    from2 = Object(arguments[s]);
    for (var key in from2) {
      if (hasOwnProperty.call(from2, key)) {
        to[key] = from2[key];
      }
    }
    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from2);
      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from2, symbols[i])) {
          to[symbols[i]] = from2[symbols[i]];
        }
      }
    }
  }
  return to;
};
/** @license React v17.0.2
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var l$1 = objectAssign, n$2 = 60103, p$3 = 60106;
react_production_min.Fragment = 60107;
react_production_min.StrictMode = 60108;
react_production_min.Profiler = 60114;
var q$3 = 60109, r$2 = 60110, t$2 = 60112;
react_production_min.Suspense = 60113;
var u$1 = 60115, v$2 = 60116;
if (typeof Symbol === "function" && Symbol.for) {
  var w$2 = Symbol.for;
  n$2 = w$2("react.element");
  p$3 = w$2("react.portal");
  react_production_min.Fragment = w$2("react.fragment");
  react_production_min.StrictMode = w$2("react.strict_mode");
  react_production_min.Profiler = w$2("react.profiler");
  q$3 = w$2("react.provider");
  r$2 = w$2("react.context");
  t$2 = w$2("react.forward_ref");
  react_production_min.Suspense = w$2("react.suspense");
  u$1 = w$2("react.memo");
  v$2 = w$2("react.lazy");
}
var x$2 = typeof Symbol === "function" && Symbol.iterator;
function y$3(a2) {
  if (a2 === null || typeof a2 !== "object")
    return null;
  a2 = x$2 && a2[x$2] || a2["@@iterator"];
  return typeof a2 === "function" ? a2 : null;
}
function z$2(a2) {
  for (var b2 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a2, c2 = 1; c2 < arguments.length; c2++)
    b2 += "&args[]=" + encodeURIComponent(arguments[c2]);
  return "Minified React error #" + a2 + "; visit " + b2 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var A$2 = { isMounted: function() {
  return false;
}, enqueueForceUpdate: function() {
}, enqueueReplaceState: function() {
}, enqueueSetState: function() {
} }, B$2 = {};
function C(a2, b2, c2) {
  this.props = a2;
  this.context = b2;
  this.refs = B$2;
  this.updater = c2 || A$2;
}
C.prototype.isReactComponent = {};
C.prototype.setState = function(a2, b2) {
  if (typeof a2 !== "object" && typeof a2 !== "function" && a2 != null)
    throw Error(z$2(85));
  this.updater.enqueueSetState(this, a2, b2, "setState");
};
C.prototype.forceUpdate = function(a2) {
  this.updater.enqueueForceUpdate(this, a2, "forceUpdate");
};
function D$2() {
}
D$2.prototype = C.prototype;
function E$2(a2, b2, c2) {
  this.props = a2;
  this.context = b2;
  this.refs = B$2;
  this.updater = c2 || A$2;
}
var F$2 = E$2.prototype = new D$2();
F$2.constructor = E$2;
l$1(F$2, C.prototype);
F$2.isPureReactComponent = true;
var G$1 = { current: null }, H$1 = Object.prototype.hasOwnProperty, I$2 = { key: true, ref: true, __self: true, __source: true };
function J(a2, b2, c2) {
  var e2, d2 = {}, k2 = null, h2 = null;
  if (b2 != null)
    for (e2 in b2.ref !== void 0 && (h2 = b2.ref), b2.key !== void 0 && (k2 = "" + b2.key), b2)
      H$1.call(b2, e2) && !I$2.hasOwnProperty(e2) && (d2[e2] = b2[e2]);
  var g2 = arguments.length - 2;
  if (g2 === 1)
    d2.children = c2;
  else if (1 < g2) {
    for (var f2 = Array(g2), m2 = 0; m2 < g2; m2++)
      f2[m2] = arguments[m2 + 2];
    d2.children = f2;
  }
  if (a2 && a2.defaultProps)
    for (e2 in g2 = a2.defaultProps, g2)
      d2[e2] === void 0 && (d2[e2] = g2[e2]);
  return { $$typeof: n$2, type: a2, key: k2, ref: h2, props: d2, _owner: G$1.current };
}
function K(a2, b2) {
  return { $$typeof: n$2, type: a2.type, key: b2, ref: a2.ref, props: a2.props, _owner: a2._owner };
}
function L$1(a2) {
  return typeof a2 === "object" && a2 !== null && a2.$$typeof === n$2;
}
function escape$2(a2) {
  var b2 = { "=": "=0", ":": "=2" };
  return "$" + a2.replace(/[=:]/g, function(a3) {
    return b2[a3];
  });
}
var M$1 = /\/+/g;
function N$2(a2, b2) {
  return typeof a2 === "object" && a2 !== null && a2.key != null ? escape$2("" + a2.key) : b2.toString(36);
}
function O$2(a2, b2, c2, e2, d2) {
  var k2 = typeof a2;
  if (k2 === "undefined" || k2 === "boolean")
    a2 = null;
  var h2 = false;
  if (a2 === null)
    h2 = true;
  else
    switch (k2) {
      case "string":
      case "number":
        h2 = true;
        break;
      case "object":
        switch (a2.$$typeof) {
          case n$2:
          case p$3:
            h2 = true;
        }
    }
  if (h2)
    return h2 = a2, d2 = d2(h2), a2 = e2 === "" ? "." + N$2(h2, 0) : e2, Array.isArray(d2) ? (c2 = "", a2 != null && (c2 = a2.replace(M$1, "$&/") + "/"), O$2(d2, b2, c2, "", function(a3) {
      return a3;
    })) : d2 != null && (L$1(d2) && (d2 = K(d2, c2 + (!d2.key || h2 && h2.key === d2.key ? "" : ("" + d2.key).replace(M$1, "$&/") + "/") + a2)), b2.push(d2)), 1;
  h2 = 0;
  e2 = e2 === "" ? "." : e2 + ":";
  if (Array.isArray(a2))
    for (var g2 = 0; g2 < a2.length; g2++) {
      k2 = a2[g2];
      var f2 = e2 + N$2(k2, g2);
      h2 += O$2(k2, b2, c2, f2, d2);
    }
  else if (f2 = y$3(a2), typeof f2 === "function")
    for (a2 = f2.call(a2), g2 = 0; !(k2 = a2.next()).done; )
      k2 = k2.value, f2 = e2 + N$2(k2, g2++), h2 += O$2(k2, b2, c2, f2, d2);
  else if (k2 === "object")
    throw b2 = "" + a2, Error(z$2(31, b2 === "[object Object]" ? "object with keys {" + Object.keys(a2).join(", ") + "}" : b2));
  return h2;
}
function P$2(a2, b2, c2) {
  if (a2 == null)
    return a2;
  var e2 = [], d2 = 0;
  O$2(a2, e2, "", "", function(a3) {
    return b2.call(c2, a3, d2++);
  });
  return e2;
}
function Q(a2) {
  if (a2._status === -1) {
    var b2 = a2._result;
    b2 = b2();
    a2._status = 0;
    a2._result = b2;
    b2.then(function(b3) {
      a2._status === 0 && (b3 = b3.default, a2._status = 1, a2._result = b3);
    }, function(b3) {
      a2._status === 0 && (a2._status = 2, a2._result = b3);
    });
  }
  if (a2._status === 1)
    return a2._result;
  throw a2._result;
}
var R$1 = { current: null };
function S$2() {
  var a2 = R$1.current;
  if (a2 === null)
    throw Error(z$2(321));
  return a2;
}
var T$1 = { ReactCurrentDispatcher: R$1, ReactCurrentBatchConfig: { transition: 0 }, ReactCurrentOwner: G$1, IsSomeRendererActing: { current: false }, assign: l$1 };
react_production_min.Children = { map: P$2, forEach: function(a2, b2, c2) {
  P$2(a2, function() {
    b2.apply(this, arguments);
  }, c2);
}, count: function(a2) {
  var b2 = 0;
  P$2(a2, function() {
    b2++;
  });
  return b2;
}, toArray: function(a2) {
  return P$2(a2, function(a3) {
    return a3;
  }) || [];
}, only: function(a2) {
  if (!L$1(a2))
    throw Error(z$2(143));
  return a2;
} };
react_production_min.Component = C;
react_production_min.PureComponent = E$2;
react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = T$1;
react_production_min.cloneElement = function(a2, b2, c2) {
  if (a2 === null || a2 === void 0)
    throw Error(z$2(267, a2));
  var e2 = l$1({}, a2.props), d2 = a2.key, k2 = a2.ref, h2 = a2._owner;
  if (b2 != null) {
    b2.ref !== void 0 && (k2 = b2.ref, h2 = G$1.current);
    b2.key !== void 0 && (d2 = "" + b2.key);
    if (a2.type && a2.type.defaultProps)
      var g2 = a2.type.defaultProps;
    for (f2 in b2)
      H$1.call(b2, f2) && !I$2.hasOwnProperty(f2) && (e2[f2] = b2[f2] === void 0 && g2 !== void 0 ? g2[f2] : b2[f2]);
  }
  var f2 = arguments.length - 2;
  if (f2 === 1)
    e2.children = c2;
  else if (1 < f2) {
    g2 = Array(f2);
    for (var m2 = 0; m2 < f2; m2++)
      g2[m2] = arguments[m2 + 2];
    e2.children = g2;
  }
  return {
    $$typeof: n$2,
    type: a2.type,
    key: d2,
    ref: k2,
    props: e2,
    _owner: h2
  };
};
react_production_min.createContext = function(a2, b2) {
  b2 === void 0 && (b2 = null);
  a2 = { $$typeof: r$2, _calculateChangedBits: b2, _currentValue: a2, _currentValue2: a2, _threadCount: 0, Provider: null, Consumer: null };
  a2.Provider = { $$typeof: q$3, _context: a2 };
  return a2.Consumer = a2;
};
react_production_min.createElement = J;
react_production_min.createFactory = function(a2) {
  var b2 = J.bind(null, a2);
  b2.type = a2;
  return b2;
};
react_production_min.createRef = function() {
  return { current: null };
};
react_production_min.forwardRef = function(a2) {
  return { $$typeof: t$2, render: a2 };
};
react_production_min.isValidElement = L$1;
react_production_min.lazy = function(a2) {
  return { $$typeof: v$2, _payload: { _status: -1, _result: a2 }, _init: Q };
};
react_production_min.memo = function(a2, b2) {
  return { $$typeof: u$1, type: a2, compare: b2 === void 0 ? null : b2 };
};
react_production_min.useCallback = function(a2, b2) {
  return S$2().useCallback(a2, b2);
};
react_production_min.useContext = function(a2, b2) {
  return S$2().useContext(a2, b2);
};
react_production_min.useDebugValue = function() {
};
react_production_min.useEffect = function(a2, b2) {
  return S$2().useEffect(a2, b2);
};
react_production_min.useImperativeHandle = function(a2, b2, c2) {
  return S$2().useImperativeHandle(a2, b2, c2);
};
react_production_min.useLayoutEffect = function(a2, b2) {
  return S$2().useLayoutEffect(a2, b2);
};
react_production_min.useMemo = function(a2, b2) {
  return S$2().useMemo(a2, b2);
};
react_production_min.useReducer = function(a2, b2, c2) {
  return S$2().useReducer(a2, b2, c2);
};
react_production_min.useRef = function(a2) {
  return S$2().useRef(a2);
};
react_production_min.useState = function(a2) {
  return S$2().useState(a2);
};
react_production_min.version = "17.0.2";
{
  react.exports = react_production_min;
}
var React = react.exports;
var reactDom = { exports: {} };
var reactDom_production_min = {};
var scheduler = { exports: {} };
var scheduler_production_min = {};
/** @license React v0.20.2
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
(function(exports) {
  var f2, g2, h2, k2;
  if (typeof performance === "object" && typeof performance.now === "function") {
    var l2 = performance;
    exports.unstable_now = function() {
      return l2.now();
    };
  } else {
    var p2 = Date, q2 = p2.now();
    exports.unstable_now = function() {
      return p2.now() - q2;
    };
  }
  if (typeof window === "undefined" || typeof MessageChannel !== "function") {
    var t2 = null, u2 = null, w2 = function() {
      if (t2 !== null)
        try {
          var a2 = exports.unstable_now();
          t2(true, a2);
          t2 = null;
        } catch (b2) {
          throw setTimeout(w2, 0), b2;
        }
    };
    f2 = function(a2) {
      t2 !== null ? setTimeout(f2, 0, a2) : (t2 = a2, setTimeout(w2, 0));
    };
    g2 = function(a2, b2) {
      u2 = setTimeout(a2, b2);
    };
    h2 = function() {
      clearTimeout(u2);
    };
    exports.unstable_shouldYield = function() {
      return false;
    };
    k2 = exports.unstable_forceFrameRate = function() {
    };
  } else {
    var x2 = window.setTimeout, y2 = window.clearTimeout;
    if (typeof console !== "undefined") {
      var z2 = window.cancelAnimationFrame;
      typeof window.requestAnimationFrame !== "function" && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
      typeof z2 !== "function" && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
    }
    var A2 = false, B2 = null, C2 = -1, D2 = 5, E2 = 0;
    exports.unstable_shouldYield = function() {
      return exports.unstable_now() >= E2;
    };
    k2 = function() {
    };
    exports.unstable_forceFrameRate = function(a2) {
      0 > a2 || 125 < a2 ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : D2 = 0 < a2 ? Math.floor(1e3 / a2) : 5;
    };
    var F2 = new MessageChannel(), G2 = F2.port2;
    F2.port1.onmessage = function() {
      if (B2 !== null) {
        var a2 = exports.unstable_now();
        E2 = a2 + D2;
        try {
          B2(true, a2) ? G2.postMessage(null) : (A2 = false, B2 = null);
        } catch (b2) {
          throw G2.postMessage(null), b2;
        }
      } else
        A2 = false;
    };
    f2 = function(a2) {
      B2 = a2;
      A2 || (A2 = true, G2.postMessage(null));
    };
    g2 = function(a2, b2) {
      C2 = x2(function() {
        a2(exports.unstable_now());
      }, b2);
    };
    h2 = function() {
      y2(C2);
      C2 = -1;
    };
  }
  function H2(a2, b2) {
    var c2 = a2.length;
    a2.push(b2);
    a:
      for (; ; ) {
        var d2 = c2 - 1 >>> 1, e2 = a2[d2];
        if (e2 !== void 0 && 0 < I2(e2, b2))
          a2[d2] = b2, a2[c2] = e2, c2 = d2;
        else
          break a;
      }
  }
  function J2(a2) {
    a2 = a2[0];
    return a2 === void 0 ? null : a2;
  }
  function K2(a2) {
    var b2 = a2[0];
    if (b2 !== void 0) {
      var c2 = a2.pop();
      if (c2 !== b2) {
        a2[0] = c2;
        a:
          for (var d2 = 0, e2 = a2.length; d2 < e2; ) {
            var m2 = 2 * (d2 + 1) - 1, n2 = a2[m2], v2 = m2 + 1, r2 = a2[v2];
            if (n2 !== void 0 && 0 > I2(n2, c2))
              r2 !== void 0 && 0 > I2(r2, n2) ? (a2[d2] = r2, a2[v2] = c2, d2 = v2) : (a2[d2] = n2, a2[m2] = c2, d2 = m2);
            else if (r2 !== void 0 && 0 > I2(r2, c2))
              a2[d2] = r2, a2[v2] = c2, d2 = v2;
            else
              break a;
          }
      }
      return b2;
    }
    return null;
  }
  function I2(a2, b2) {
    var c2 = a2.sortIndex - b2.sortIndex;
    return c2 !== 0 ? c2 : a2.id - b2.id;
  }
  var L2 = [], M2 = [], N2 = 1, O2 = null, P2 = 3, Q2 = false, R2 = false, S2 = false;
  function T2(a2) {
    for (var b2 = J2(M2); b2 !== null; ) {
      if (b2.callback === null)
        K2(M2);
      else if (b2.startTime <= a2)
        K2(M2), b2.sortIndex = b2.expirationTime, H2(L2, b2);
      else
        break;
      b2 = J2(M2);
    }
  }
  function U2(a2) {
    S2 = false;
    T2(a2);
    if (!R2)
      if (J2(L2) !== null)
        R2 = true, f2(V2);
      else {
        var b2 = J2(M2);
        b2 !== null && g2(U2, b2.startTime - a2);
      }
  }
  function V2(a2, b2) {
    R2 = false;
    S2 && (S2 = false, h2());
    Q2 = true;
    var c2 = P2;
    try {
      T2(b2);
      for (O2 = J2(L2); O2 !== null && (!(O2.expirationTime > b2) || a2 && !exports.unstable_shouldYield()); ) {
        var d2 = O2.callback;
        if (typeof d2 === "function") {
          O2.callback = null;
          P2 = O2.priorityLevel;
          var e2 = d2(O2.expirationTime <= b2);
          b2 = exports.unstable_now();
          typeof e2 === "function" ? O2.callback = e2 : O2 === J2(L2) && K2(L2);
          T2(b2);
        } else
          K2(L2);
        O2 = J2(L2);
      }
      if (O2 !== null)
        var m2 = true;
      else {
        var n2 = J2(M2);
        n2 !== null && g2(U2, n2.startTime - b2);
        m2 = false;
      }
      return m2;
    } finally {
      O2 = null, P2 = c2, Q2 = false;
    }
  }
  var W2 = k2;
  exports.unstable_IdlePriority = 5;
  exports.unstable_ImmediatePriority = 1;
  exports.unstable_LowPriority = 4;
  exports.unstable_NormalPriority = 3;
  exports.unstable_Profiling = null;
  exports.unstable_UserBlockingPriority = 2;
  exports.unstable_cancelCallback = function(a2) {
    a2.callback = null;
  };
  exports.unstable_continueExecution = function() {
    R2 || Q2 || (R2 = true, f2(V2));
  };
  exports.unstable_getCurrentPriorityLevel = function() {
    return P2;
  };
  exports.unstable_getFirstCallbackNode = function() {
    return J2(L2);
  };
  exports.unstable_next = function(a2) {
    switch (P2) {
      case 1:
      case 2:
      case 3:
        var b2 = 3;
        break;
      default:
        b2 = P2;
    }
    var c2 = P2;
    P2 = b2;
    try {
      return a2();
    } finally {
      P2 = c2;
    }
  };
  exports.unstable_pauseExecution = function() {
  };
  exports.unstable_requestPaint = W2;
  exports.unstable_runWithPriority = function(a2, b2) {
    switch (a2) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;
      default:
        a2 = 3;
    }
    var c2 = P2;
    P2 = a2;
    try {
      return b2();
    } finally {
      P2 = c2;
    }
  };
  exports.unstable_scheduleCallback = function(a2, b2, c2) {
    var d2 = exports.unstable_now();
    typeof c2 === "object" && c2 !== null ? (c2 = c2.delay, c2 = typeof c2 === "number" && 0 < c2 ? d2 + c2 : d2) : c2 = d2;
    switch (a2) {
      case 1:
        var e2 = -1;
        break;
      case 2:
        e2 = 250;
        break;
      case 5:
        e2 = 1073741823;
        break;
      case 4:
        e2 = 1e4;
        break;
      default:
        e2 = 5e3;
    }
    e2 = c2 + e2;
    a2 = { id: N2++, callback: b2, priorityLevel: a2, startTime: c2, expirationTime: e2, sortIndex: -1 };
    c2 > d2 ? (a2.sortIndex = c2, H2(M2, a2), J2(L2) === null && a2 === J2(M2) && (S2 ? h2() : S2 = true, g2(U2, c2 - d2))) : (a2.sortIndex = e2, H2(L2, a2), R2 || Q2 || (R2 = true, f2(V2)));
    return a2;
  };
  exports.unstable_wrapCallback = function(a2) {
    var b2 = P2;
    return function() {
      var c2 = P2;
      P2 = b2;
      try {
        return a2.apply(this, arguments);
      } finally {
        P2 = c2;
      }
    };
  };
})(scheduler_production_min);
{
  scheduler.exports = scheduler_production_min;
}
/** @license React v17.0.2
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aa = react.exports, m$3 = objectAssign, r$1 = scheduler.exports;
function y$2(a2) {
  for (var b2 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a2, c2 = 1; c2 < arguments.length; c2++)
    b2 += "&args[]=" + encodeURIComponent(arguments[c2]);
  return "Minified React error #" + a2 + "; visit " + b2 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
if (!aa)
  throw Error(y$2(227));
var ba = new Set(), ca$1 = {};
function da(a2, b2) {
  ea(a2, b2);
  ea(a2 + "Capture", b2);
}
function ea(a2, b2) {
  ca$1[a2] = b2;
  for (a2 = 0; a2 < b2.length; a2++)
    ba.add(b2[a2]);
}
var fa = !(typeof window === "undefined" || typeof window.document === "undefined" || typeof window.document.createElement === "undefined"), ha = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, ia = Object.prototype.hasOwnProperty, ja = {}, ka = {};
function la(a2) {
  if (ia.call(ka, a2))
    return true;
  if (ia.call(ja, a2))
    return false;
  if (ha.test(a2))
    return ka[a2] = true;
  ja[a2] = true;
  return false;
}
function ma(a2, b2, c2, d2) {
  if (c2 !== null && c2.type === 0)
    return false;
  switch (typeof b2) {
    case "function":
    case "symbol":
      return true;
    case "boolean":
      if (d2)
        return false;
      if (c2 !== null)
        return !c2.acceptsBooleans;
      a2 = a2.toLowerCase().slice(0, 5);
      return a2 !== "data-" && a2 !== "aria-";
    default:
      return false;
  }
}
function na(a2, b2, c2, d2) {
  if (b2 === null || typeof b2 === "undefined" || ma(a2, b2, c2, d2))
    return true;
  if (d2)
    return false;
  if (c2 !== null)
    switch (c2.type) {
      case 3:
        return !b2;
      case 4:
        return b2 === false;
      case 5:
        return isNaN(b2);
      case 6:
        return isNaN(b2) || 1 > b2;
    }
  return false;
}
function B$1(a2, b2, c2, d2, e2, f2, g2) {
  this.acceptsBooleans = b2 === 2 || b2 === 3 || b2 === 4;
  this.attributeName = d2;
  this.attributeNamespace = e2;
  this.mustUseProperty = c2;
  this.propertyName = a2;
  this.type = b2;
  this.sanitizeURL = f2;
  this.removeEmptyString = g2;
}
var D$1 = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a2) {
  D$1[a2] = new B$1(a2, 0, false, a2, null, false, false);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a2) {
  var b2 = a2[0];
  D$1[b2] = new B$1(b2, 1, false, a2[1], null, false, false);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a2) {
  D$1[a2] = new B$1(a2, 2, false, a2.toLowerCase(), null, false, false);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a2) {
  D$1[a2] = new B$1(a2, 2, false, a2, null, false, false);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a2) {
  D$1[a2] = new B$1(a2, 3, false, a2.toLowerCase(), null, false, false);
});
["checked", "multiple", "muted", "selected"].forEach(function(a2) {
  D$1[a2] = new B$1(a2, 3, true, a2, null, false, false);
});
["capture", "download"].forEach(function(a2) {
  D$1[a2] = new B$1(a2, 4, false, a2, null, false, false);
});
["cols", "rows", "size", "span"].forEach(function(a2) {
  D$1[a2] = new B$1(a2, 6, false, a2, null, false, false);
});
["rowSpan", "start"].forEach(function(a2) {
  D$1[a2] = new B$1(a2, 5, false, a2.toLowerCase(), null, false, false);
});
var oa = /[\-:]([a-z])/g;
function pa(a2) {
  return a2[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a2) {
  var b2 = a2.replace(oa, pa);
  D$1[b2] = new B$1(b2, 1, false, a2, null, false, false);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a2) {
  var b2 = a2.replace(oa, pa);
  D$1[b2] = new B$1(b2, 1, false, a2, "http://www.w3.org/1999/xlink", false, false);
});
["xml:base", "xml:lang", "xml:space"].forEach(function(a2) {
  var b2 = a2.replace(oa, pa);
  D$1[b2] = new B$1(b2, 1, false, a2, "http://www.w3.org/XML/1998/namespace", false, false);
});
["tabIndex", "crossOrigin"].forEach(function(a2) {
  D$1[a2] = new B$1(a2, 1, false, a2.toLowerCase(), null, false, false);
});
D$1.xlinkHref = new B$1("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
["src", "href", "action", "formAction"].forEach(function(a2) {
  D$1[a2] = new B$1(a2, 1, false, a2.toLowerCase(), null, true, true);
});
function qa(a2, b2, c2, d2) {
  var e2 = D$1.hasOwnProperty(b2) ? D$1[b2] : null;
  var f2 = e2 !== null ? e2.type === 0 : d2 ? false : !(2 < b2.length) || b2[0] !== "o" && b2[0] !== "O" || b2[1] !== "n" && b2[1] !== "N" ? false : true;
  f2 || (na(b2, c2, e2, d2) && (c2 = null), d2 || e2 === null ? la(b2) && (c2 === null ? a2.removeAttribute(b2) : a2.setAttribute(b2, "" + c2)) : e2.mustUseProperty ? a2[e2.propertyName] = c2 === null ? e2.type === 3 ? false : "" : c2 : (b2 = e2.attributeName, d2 = e2.attributeNamespace, c2 === null ? a2.removeAttribute(b2) : (e2 = e2.type, c2 = e2 === 3 || e2 === 4 && c2 === true ? "" : "" + c2, d2 ? a2.setAttributeNS(d2, b2, c2) : a2.setAttribute(b2, c2))));
}
var ra = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, sa = 60103, ta = 60106, ua = 60107, wa = 60108, xa = 60114, ya = 60109, za = 60110, Aa = 60112, Ba = 60113, Ca = 60120, Da = 60115, Ea = 60116, Fa = 60121, Ga = 60128, Ha = 60129, Ia = 60130, Ja = 60131;
if (typeof Symbol === "function" && Symbol.for) {
  var E$1 = Symbol.for;
  sa = E$1("react.element");
  ta = E$1("react.portal");
  ua = E$1("react.fragment");
  wa = E$1("react.strict_mode");
  xa = E$1("react.profiler");
  ya = E$1("react.provider");
  za = E$1("react.context");
  Aa = E$1("react.forward_ref");
  Ba = E$1("react.suspense");
  Ca = E$1("react.suspense_list");
  Da = E$1("react.memo");
  Ea = E$1("react.lazy");
  Fa = E$1("react.block");
  E$1("react.scope");
  Ga = E$1("react.opaque.id");
  Ha = E$1("react.debug_trace_mode");
  Ia = E$1("react.offscreen");
  Ja = E$1("react.legacy_hidden");
}
var Ka = typeof Symbol === "function" && Symbol.iterator;
function La(a2) {
  if (a2 === null || typeof a2 !== "object")
    return null;
  a2 = Ka && a2[Ka] || a2["@@iterator"];
  return typeof a2 === "function" ? a2 : null;
}
var Ma;
function Na(a2) {
  if (Ma === void 0)
    try {
      throw Error();
    } catch (c2) {
      var b2 = c2.stack.trim().match(/\n( *(at )?)/);
      Ma = b2 && b2[1] || "";
    }
  return "\n" + Ma + a2;
}
var Oa = false;
function Pa(a2, b2) {
  if (!a2 || Oa)
    return "";
  Oa = true;
  var c2 = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (b2)
      if (b2 = function() {
        throw Error();
      }, Object.defineProperty(b2.prototype, "props", { set: function() {
        throw Error();
      } }), typeof Reflect === "object" && Reflect.construct) {
        try {
          Reflect.construct(b2, []);
        } catch (k2) {
          var d2 = k2;
        }
        Reflect.construct(a2, [], b2);
      } else {
        try {
          b2.call();
        } catch (k2) {
          d2 = k2;
        }
        a2.call(b2.prototype);
      }
    else {
      try {
        throw Error();
      } catch (k2) {
        d2 = k2;
      }
      a2();
    }
  } catch (k2) {
    if (k2 && d2 && typeof k2.stack === "string") {
      for (var e2 = k2.stack.split("\n"), f2 = d2.stack.split("\n"), g2 = e2.length - 1, h2 = f2.length - 1; 1 <= g2 && 0 <= h2 && e2[g2] !== f2[h2]; )
        h2--;
      for (; 1 <= g2 && 0 <= h2; g2--, h2--)
        if (e2[g2] !== f2[h2]) {
          if (g2 !== 1 || h2 !== 1) {
            do
              if (g2--, h2--, 0 > h2 || e2[g2] !== f2[h2])
                return "\n" + e2[g2].replace(" at new ", " at ");
            while (1 <= g2 && 0 <= h2);
          }
          break;
        }
    }
  } finally {
    Oa = false, Error.prepareStackTrace = c2;
  }
  return (a2 = a2 ? a2.displayName || a2.name : "") ? Na(a2) : "";
}
function Qa(a2) {
  switch (a2.tag) {
    case 5:
      return Na(a2.type);
    case 16:
      return Na("Lazy");
    case 13:
      return Na("Suspense");
    case 19:
      return Na("SuspenseList");
    case 0:
    case 2:
    case 15:
      return a2 = Pa(a2.type, false), a2;
    case 11:
      return a2 = Pa(a2.type.render, false), a2;
    case 22:
      return a2 = Pa(a2.type._render, false), a2;
    case 1:
      return a2 = Pa(a2.type, true), a2;
    default:
      return "";
  }
}
function Ra(a2) {
  if (a2 == null)
    return null;
  if (typeof a2 === "function")
    return a2.displayName || a2.name || null;
  if (typeof a2 === "string")
    return a2;
  switch (a2) {
    case ua:
      return "Fragment";
    case ta:
      return "Portal";
    case xa:
      return "Profiler";
    case wa:
      return "StrictMode";
    case Ba:
      return "Suspense";
    case Ca:
      return "SuspenseList";
  }
  if (typeof a2 === "object")
    switch (a2.$$typeof) {
      case za:
        return (a2.displayName || "Context") + ".Consumer";
      case ya:
        return (a2._context.displayName || "Context") + ".Provider";
      case Aa:
        var b2 = a2.render;
        b2 = b2.displayName || b2.name || "";
        return a2.displayName || (b2 !== "" ? "ForwardRef(" + b2 + ")" : "ForwardRef");
      case Da:
        return Ra(a2.type);
      case Fa:
        return Ra(a2._render);
      case Ea:
        b2 = a2._payload;
        a2 = a2._init;
        try {
          return Ra(a2(b2));
        } catch (c2) {
        }
    }
  return null;
}
function Sa(a2) {
  switch (typeof a2) {
    case "boolean":
    case "number":
    case "object":
    case "string":
    case "undefined":
      return a2;
    default:
      return "";
  }
}
function Ta(a2) {
  var b2 = a2.type;
  return (a2 = a2.nodeName) && a2.toLowerCase() === "input" && (b2 === "checkbox" || b2 === "radio");
}
function Ua(a2) {
  var b2 = Ta(a2) ? "checked" : "value", c2 = Object.getOwnPropertyDescriptor(a2.constructor.prototype, b2), d2 = "" + a2[b2];
  if (!a2.hasOwnProperty(b2) && typeof c2 !== "undefined" && typeof c2.get === "function" && typeof c2.set === "function") {
    var e2 = c2.get, f2 = c2.set;
    Object.defineProperty(a2, b2, { configurable: true, get: function() {
      return e2.call(this);
    }, set: function(a3) {
      d2 = "" + a3;
      f2.call(this, a3);
    } });
    Object.defineProperty(a2, b2, { enumerable: c2.enumerable });
    return { getValue: function() {
      return d2;
    }, setValue: function(a3) {
      d2 = "" + a3;
    }, stopTracking: function() {
      a2._valueTracker = null;
      delete a2[b2];
    } };
  }
}
function Va(a2) {
  a2._valueTracker || (a2._valueTracker = Ua(a2));
}
function Wa(a2) {
  if (!a2)
    return false;
  var b2 = a2._valueTracker;
  if (!b2)
    return true;
  var c2 = b2.getValue();
  var d2 = "";
  a2 && (d2 = Ta(a2) ? a2.checked ? "true" : "false" : a2.value);
  a2 = d2;
  return a2 !== c2 ? (b2.setValue(a2), true) : false;
}
function Xa(a2) {
  a2 = a2 || (typeof document !== "undefined" ? document : void 0);
  if (typeof a2 === "undefined")
    return null;
  try {
    return a2.activeElement || a2.body;
  } catch (b2) {
    return a2.body;
  }
}
function Ya(a2, b2) {
  var c2 = b2.checked;
  return m$3({}, b2, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: c2 != null ? c2 : a2._wrapperState.initialChecked });
}
function Za(a2, b2) {
  var c2 = b2.defaultValue == null ? "" : b2.defaultValue, d2 = b2.checked != null ? b2.checked : b2.defaultChecked;
  c2 = Sa(b2.value != null ? b2.value : c2);
  a2._wrapperState = { initialChecked: d2, initialValue: c2, controlled: b2.type === "checkbox" || b2.type === "radio" ? b2.checked != null : b2.value != null };
}
function $a(a2, b2) {
  b2 = b2.checked;
  b2 != null && qa(a2, "checked", b2, false);
}
function ab(a2, b2) {
  $a(a2, b2);
  var c2 = Sa(b2.value), d2 = b2.type;
  if (c2 != null)
    if (d2 === "number") {
      if (c2 === 0 && a2.value === "" || a2.value != c2)
        a2.value = "" + c2;
    } else
      a2.value !== "" + c2 && (a2.value = "" + c2);
  else if (d2 === "submit" || d2 === "reset") {
    a2.removeAttribute("value");
    return;
  }
  b2.hasOwnProperty("value") ? bb(a2, b2.type, c2) : b2.hasOwnProperty("defaultValue") && bb(a2, b2.type, Sa(b2.defaultValue));
  b2.checked == null && b2.defaultChecked != null && (a2.defaultChecked = !!b2.defaultChecked);
}
function cb$1(a2, b2, c2) {
  if (b2.hasOwnProperty("value") || b2.hasOwnProperty("defaultValue")) {
    var d2 = b2.type;
    if (!(d2 !== "submit" && d2 !== "reset" || b2.value !== void 0 && b2.value !== null))
      return;
    b2 = "" + a2._wrapperState.initialValue;
    c2 || b2 === a2.value || (a2.value = b2);
    a2.defaultValue = b2;
  }
  c2 = a2.name;
  c2 !== "" && (a2.name = "");
  a2.defaultChecked = !!a2._wrapperState.initialChecked;
  c2 !== "" && (a2.name = c2);
}
function bb(a2, b2, c2) {
  if (b2 !== "number" || Xa(a2.ownerDocument) !== a2)
    c2 == null ? a2.defaultValue = "" + a2._wrapperState.initialValue : a2.defaultValue !== "" + c2 && (a2.defaultValue = "" + c2);
}
function db(a2) {
  var b2 = "";
  aa.Children.forEach(a2, function(a3) {
    a3 != null && (b2 += a3);
  });
  return b2;
}
function eb(a2, b2) {
  a2 = m$3({ children: void 0 }, b2);
  if (b2 = db(b2.children))
    a2.children = b2;
  return a2;
}
function fb(a2, b2, c2, d2) {
  a2 = a2.options;
  if (b2) {
    b2 = {};
    for (var e2 = 0; e2 < c2.length; e2++)
      b2["$" + c2[e2]] = true;
    for (c2 = 0; c2 < a2.length; c2++)
      e2 = b2.hasOwnProperty("$" + a2[c2].value), a2[c2].selected !== e2 && (a2[c2].selected = e2), e2 && d2 && (a2[c2].defaultSelected = true);
  } else {
    c2 = "" + Sa(c2);
    b2 = null;
    for (e2 = 0; e2 < a2.length; e2++) {
      if (a2[e2].value === c2) {
        a2[e2].selected = true;
        d2 && (a2[e2].defaultSelected = true);
        return;
      }
      b2 !== null || a2[e2].disabled || (b2 = a2[e2]);
    }
    b2 !== null && (b2.selected = true);
  }
}
function gb(a2, b2) {
  if (b2.dangerouslySetInnerHTML != null)
    throw Error(y$2(91));
  return m$3({}, b2, { value: void 0, defaultValue: void 0, children: "" + a2._wrapperState.initialValue });
}
function hb(a2, b2) {
  var c2 = b2.value;
  if (c2 == null) {
    c2 = b2.children;
    b2 = b2.defaultValue;
    if (c2 != null) {
      if (b2 != null)
        throw Error(y$2(92));
      if (Array.isArray(c2)) {
        if (!(1 >= c2.length))
          throw Error(y$2(93));
        c2 = c2[0];
      }
      b2 = c2;
    }
    b2 == null && (b2 = "");
    c2 = b2;
  }
  a2._wrapperState = { initialValue: Sa(c2) };
}
function ib(a2, b2) {
  var c2 = Sa(b2.value), d2 = Sa(b2.defaultValue);
  c2 != null && (c2 = "" + c2, c2 !== a2.value && (a2.value = c2), b2.defaultValue == null && a2.defaultValue !== c2 && (a2.defaultValue = c2));
  d2 != null && (a2.defaultValue = "" + d2);
}
function jb(a2) {
  var b2 = a2.textContent;
  b2 === a2._wrapperState.initialValue && b2 !== "" && b2 !== null && (a2.value = b2);
}
var kb = { html: "http://www.w3.org/1999/xhtml", mathml: "http://www.w3.org/1998/Math/MathML", svg: "http://www.w3.org/2000/svg" };
function lb(a2) {
  switch (a2) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function mb(a2, b2) {
  return a2 == null || a2 === "http://www.w3.org/1999/xhtml" ? lb(b2) : a2 === "http://www.w3.org/2000/svg" && b2 === "foreignObject" ? "http://www.w3.org/1999/xhtml" : a2;
}
var nb, ob = function(a2) {
  return typeof MSApp !== "undefined" && MSApp.execUnsafeLocalFunction ? function(b2, c2, d2, e2) {
    MSApp.execUnsafeLocalFunction(function() {
      return a2(b2, c2, d2, e2);
    });
  } : a2;
}(function(a2, b2) {
  if (a2.namespaceURI !== kb.svg || "innerHTML" in a2)
    a2.innerHTML = b2;
  else {
    nb = nb || document.createElement("div");
    nb.innerHTML = "<svg>" + b2.valueOf().toString() + "</svg>";
    for (b2 = nb.firstChild; a2.firstChild; )
      a2.removeChild(a2.firstChild);
    for (; b2.firstChild; )
      a2.appendChild(b2.firstChild);
  }
});
function pb(a2, b2) {
  if (b2) {
    var c2 = a2.firstChild;
    if (c2 && c2 === a2.lastChild && c2.nodeType === 3) {
      c2.nodeValue = b2;
      return;
    }
  }
  a2.textContent = b2;
}
var qb = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
}, rb = ["Webkit", "ms", "Moz", "O"];
Object.keys(qb).forEach(function(a2) {
  rb.forEach(function(b2) {
    b2 = b2 + a2.charAt(0).toUpperCase() + a2.substring(1);
    qb[b2] = qb[a2];
  });
});
function sb(a2, b2, c2) {
  return b2 == null || typeof b2 === "boolean" || b2 === "" ? "" : c2 || typeof b2 !== "number" || b2 === 0 || qb.hasOwnProperty(a2) && qb[a2] ? ("" + b2).trim() : b2 + "px";
}
function tb(a2, b2) {
  a2 = a2.style;
  for (var c2 in b2)
    if (b2.hasOwnProperty(c2)) {
      var d2 = c2.indexOf("--") === 0, e2 = sb(c2, b2[c2], d2);
      c2 === "float" && (c2 = "cssFloat");
      d2 ? a2.setProperty(c2, e2) : a2[c2] = e2;
    }
}
var ub = m$3({ menuitem: true }, { area: true, base: true, br: true, col: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true });
function vb(a2, b2) {
  if (b2) {
    if (ub[a2] && (b2.children != null || b2.dangerouslySetInnerHTML != null))
      throw Error(y$2(137, a2));
    if (b2.dangerouslySetInnerHTML != null) {
      if (b2.children != null)
        throw Error(y$2(60));
      if (!(typeof b2.dangerouslySetInnerHTML === "object" && "__html" in b2.dangerouslySetInnerHTML))
        throw Error(y$2(61));
    }
    if (b2.style != null && typeof b2.style !== "object")
      throw Error(y$2(62));
  }
}
function wb(a2, b2) {
  if (a2.indexOf("-") === -1)
    return typeof b2.is === "string";
  switch (a2) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return false;
    default:
      return true;
  }
}
function xb(a2) {
  a2 = a2.target || a2.srcElement || window;
  a2.correspondingUseElement && (a2 = a2.correspondingUseElement);
  return a2.nodeType === 3 ? a2.parentNode : a2;
}
var yb = null, zb = null, Ab = null;
function Bb(a2) {
  if (a2 = Cb(a2)) {
    if (typeof yb !== "function")
      throw Error(y$2(280));
    var b2 = a2.stateNode;
    b2 && (b2 = Db(b2), yb(a2.stateNode, a2.type, b2));
  }
}
function Eb(a2) {
  zb ? Ab ? Ab.push(a2) : Ab = [a2] : zb = a2;
}
function Fb() {
  if (zb) {
    var a2 = zb, b2 = Ab;
    Ab = zb = null;
    Bb(a2);
    if (b2)
      for (a2 = 0; a2 < b2.length; a2++)
        Bb(b2[a2]);
  }
}
function Gb(a2, b2) {
  return a2(b2);
}
function Hb(a2, b2, c2, d2, e2) {
  return a2(b2, c2, d2, e2);
}
function Ib() {
}
var Jb = Gb, Kb = false, Lb = false;
function Mb() {
  if (zb !== null || Ab !== null)
    Ib(), Fb();
}
function Nb(a2, b2, c2) {
  if (Lb)
    return a2(b2, c2);
  Lb = true;
  try {
    return Jb(a2, b2, c2);
  } finally {
    Lb = false, Mb();
  }
}
function Ob(a2, b2) {
  var c2 = a2.stateNode;
  if (c2 === null)
    return null;
  var d2 = Db(c2);
  if (d2 === null)
    return null;
  c2 = d2[b2];
  a:
    switch (b2) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
      case "onMouseEnter":
        (d2 = !d2.disabled) || (a2 = a2.type, d2 = !(a2 === "button" || a2 === "input" || a2 === "select" || a2 === "textarea"));
        a2 = !d2;
        break a;
      default:
        a2 = false;
    }
  if (a2)
    return null;
  if (c2 && typeof c2 !== "function")
    throw Error(y$2(231, b2, typeof c2));
  return c2;
}
var Pb = false;
if (fa)
  try {
    var Qb = {};
    Object.defineProperty(Qb, "passive", { get: function() {
      Pb = true;
    } });
    window.addEventListener("test", Qb, Qb);
    window.removeEventListener("test", Qb, Qb);
  } catch (a2) {
    Pb = false;
  }
function Rb(a2, b2, c2, d2, e2, f2, g2, h2, k2) {
  var l2 = Array.prototype.slice.call(arguments, 3);
  try {
    b2.apply(c2, l2);
  } catch (n2) {
    this.onError(n2);
  }
}
var Sb = false, Tb = null, Ub = false, Vb = null, Wb = { onError: function(a2) {
  Sb = true;
  Tb = a2;
} };
function Xb(a2, b2, c2, d2, e2, f2, g2, h2, k2) {
  Sb = false;
  Tb = null;
  Rb.apply(Wb, arguments);
}
function Yb(a2, b2, c2, d2, e2, f2, g2, h2, k2) {
  Xb.apply(this, arguments);
  if (Sb) {
    if (Sb) {
      var l2 = Tb;
      Sb = false;
      Tb = null;
    } else
      throw Error(y$2(198));
    Ub || (Ub = true, Vb = l2);
  }
}
function Zb(a2) {
  var b2 = a2, c2 = a2;
  if (a2.alternate)
    for (; b2.return; )
      b2 = b2.return;
  else {
    a2 = b2;
    do
      b2 = a2, (b2.flags & 1026) !== 0 && (c2 = b2.return), a2 = b2.return;
    while (a2);
  }
  return b2.tag === 3 ? c2 : null;
}
function $b(a2) {
  if (a2.tag === 13) {
    var b2 = a2.memoizedState;
    b2 === null && (a2 = a2.alternate, a2 !== null && (b2 = a2.memoizedState));
    if (b2 !== null)
      return b2.dehydrated;
  }
  return null;
}
function ac(a2) {
  if (Zb(a2) !== a2)
    throw Error(y$2(188));
}
function bc(a2) {
  var b2 = a2.alternate;
  if (!b2) {
    b2 = Zb(a2);
    if (b2 === null)
      throw Error(y$2(188));
    return b2 !== a2 ? null : a2;
  }
  for (var c2 = a2, d2 = b2; ; ) {
    var e2 = c2.return;
    if (e2 === null)
      break;
    var f2 = e2.alternate;
    if (f2 === null) {
      d2 = e2.return;
      if (d2 !== null) {
        c2 = d2;
        continue;
      }
      break;
    }
    if (e2.child === f2.child) {
      for (f2 = e2.child; f2; ) {
        if (f2 === c2)
          return ac(e2), a2;
        if (f2 === d2)
          return ac(e2), b2;
        f2 = f2.sibling;
      }
      throw Error(y$2(188));
    }
    if (c2.return !== d2.return)
      c2 = e2, d2 = f2;
    else {
      for (var g2 = false, h2 = e2.child; h2; ) {
        if (h2 === c2) {
          g2 = true;
          c2 = e2;
          d2 = f2;
          break;
        }
        if (h2 === d2) {
          g2 = true;
          d2 = e2;
          c2 = f2;
          break;
        }
        h2 = h2.sibling;
      }
      if (!g2) {
        for (h2 = f2.child; h2; ) {
          if (h2 === c2) {
            g2 = true;
            c2 = f2;
            d2 = e2;
            break;
          }
          if (h2 === d2) {
            g2 = true;
            d2 = f2;
            c2 = e2;
            break;
          }
          h2 = h2.sibling;
        }
        if (!g2)
          throw Error(y$2(189));
      }
    }
    if (c2.alternate !== d2)
      throw Error(y$2(190));
  }
  if (c2.tag !== 3)
    throw Error(y$2(188));
  return c2.stateNode.current === c2 ? a2 : b2;
}
function cc$1(a2) {
  a2 = bc(a2);
  if (!a2)
    return null;
  for (var b2 = a2; ; ) {
    if (b2.tag === 5 || b2.tag === 6)
      return b2;
    if (b2.child)
      b2.child.return = b2, b2 = b2.child;
    else {
      if (b2 === a2)
        break;
      for (; !b2.sibling; ) {
        if (!b2.return || b2.return === a2)
          return null;
        b2 = b2.return;
      }
      b2.sibling.return = b2.return;
      b2 = b2.sibling;
    }
  }
  return null;
}
function dc(a2, b2) {
  for (var c2 = a2.alternate; b2 !== null; ) {
    if (b2 === a2 || b2 === c2)
      return true;
    b2 = b2.return;
  }
  return false;
}
var ec, fc, gc, hc, ic = false, jc = [], kc = null, lc = null, mc = null, nc = new Map(), oc = new Map(), pc = [], qc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function rc(a2, b2, c2, d2, e2) {
  return { blockedOn: a2, domEventName: b2, eventSystemFlags: c2 | 16, nativeEvent: e2, targetContainers: [d2] };
}
function sc(a2, b2) {
  switch (a2) {
    case "focusin":
    case "focusout":
      kc = null;
      break;
    case "dragenter":
    case "dragleave":
      lc = null;
      break;
    case "mouseover":
    case "mouseout":
      mc = null;
      break;
    case "pointerover":
    case "pointerout":
      nc.delete(b2.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      oc.delete(b2.pointerId);
  }
}
function tc(a2, b2, c2, d2, e2, f2) {
  if (a2 === null || a2.nativeEvent !== f2)
    return a2 = rc(b2, c2, d2, e2, f2), b2 !== null && (b2 = Cb(b2), b2 !== null && fc(b2)), a2;
  a2.eventSystemFlags |= d2;
  b2 = a2.targetContainers;
  e2 !== null && b2.indexOf(e2) === -1 && b2.push(e2);
  return a2;
}
function uc(a2, b2, c2, d2, e2) {
  switch (b2) {
    case "focusin":
      return kc = tc(kc, a2, b2, c2, d2, e2), true;
    case "dragenter":
      return lc = tc(lc, a2, b2, c2, d2, e2), true;
    case "mouseover":
      return mc = tc(mc, a2, b2, c2, d2, e2), true;
    case "pointerover":
      var f2 = e2.pointerId;
      nc.set(f2, tc(nc.get(f2) || null, a2, b2, c2, d2, e2));
      return true;
    case "gotpointercapture":
      return f2 = e2.pointerId, oc.set(f2, tc(oc.get(f2) || null, a2, b2, c2, d2, e2)), true;
  }
  return false;
}
function vc(a2) {
  var b2 = wc(a2.target);
  if (b2 !== null) {
    var c2 = Zb(b2);
    if (c2 !== null) {
      if (b2 = c2.tag, b2 === 13) {
        if (b2 = $b(c2), b2 !== null) {
          a2.blockedOn = b2;
          hc(a2.lanePriority, function() {
            r$1.unstable_runWithPriority(a2.priority, function() {
              gc(c2);
            });
          });
          return;
        }
      } else if (b2 === 3 && c2.stateNode.hydrate) {
        a2.blockedOn = c2.tag === 3 ? c2.stateNode.containerInfo : null;
        return;
      }
    }
  }
  a2.blockedOn = null;
}
function xc(a2) {
  if (a2.blockedOn !== null)
    return false;
  for (var b2 = a2.targetContainers; 0 < b2.length; ) {
    var c2 = yc(a2.domEventName, a2.eventSystemFlags, b2[0], a2.nativeEvent);
    if (c2 !== null)
      return b2 = Cb(c2), b2 !== null && fc(b2), a2.blockedOn = c2, false;
    b2.shift();
  }
  return true;
}
function zc(a2, b2, c2) {
  xc(a2) && c2.delete(b2);
}
function Ac() {
  for (ic = false; 0 < jc.length; ) {
    var a2 = jc[0];
    if (a2.blockedOn !== null) {
      a2 = Cb(a2.blockedOn);
      a2 !== null && ec(a2);
      break;
    }
    for (var b2 = a2.targetContainers; 0 < b2.length; ) {
      var c2 = yc(a2.domEventName, a2.eventSystemFlags, b2[0], a2.nativeEvent);
      if (c2 !== null) {
        a2.blockedOn = c2;
        break;
      }
      b2.shift();
    }
    a2.blockedOn === null && jc.shift();
  }
  kc !== null && xc(kc) && (kc = null);
  lc !== null && xc(lc) && (lc = null);
  mc !== null && xc(mc) && (mc = null);
  nc.forEach(zc);
  oc.forEach(zc);
}
function Bc(a2, b2) {
  a2.blockedOn === b2 && (a2.blockedOn = null, ic || (ic = true, r$1.unstable_scheduleCallback(r$1.unstable_NormalPriority, Ac)));
}
function Cc(a2) {
  function b2(b3) {
    return Bc(b3, a2);
  }
  if (0 < jc.length) {
    Bc(jc[0], a2);
    for (var c2 = 1; c2 < jc.length; c2++) {
      var d2 = jc[c2];
      d2.blockedOn === a2 && (d2.blockedOn = null);
    }
  }
  kc !== null && Bc(kc, a2);
  lc !== null && Bc(lc, a2);
  mc !== null && Bc(mc, a2);
  nc.forEach(b2);
  oc.forEach(b2);
  for (c2 = 0; c2 < pc.length; c2++)
    d2 = pc[c2], d2.blockedOn === a2 && (d2.blockedOn = null);
  for (; 0 < pc.length && (c2 = pc[0], c2.blockedOn === null); )
    vc(c2), c2.blockedOn === null && pc.shift();
}
function Dc(a2, b2) {
  var c2 = {};
  c2[a2.toLowerCase()] = b2.toLowerCase();
  c2["Webkit" + a2] = "webkit" + b2;
  c2["Moz" + a2] = "moz" + b2;
  return c2;
}
var Ec = { animationend: Dc("Animation", "AnimationEnd"), animationiteration: Dc("Animation", "AnimationIteration"), animationstart: Dc("Animation", "AnimationStart"), transitionend: Dc("Transition", "TransitionEnd") }, Fc = {}, Gc = {};
fa && (Gc = document.createElement("div").style, "AnimationEvent" in window || (delete Ec.animationend.animation, delete Ec.animationiteration.animation, delete Ec.animationstart.animation), "TransitionEvent" in window || delete Ec.transitionend.transition);
function Hc(a2) {
  if (Fc[a2])
    return Fc[a2];
  if (!Ec[a2])
    return a2;
  var b2 = Ec[a2], c2;
  for (c2 in b2)
    if (b2.hasOwnProperty(c2) && c2 in Gc)
      return Fc[a2] = b2[c2];
  return a2;
}
var Ic = Hc("animationend"), Jc = Hc("animationiteration"), Kc = Hc("animationstart"), Lc = Hc("transitionend"), Mc = new Map(), Nc = new Map(), Oc = [
  "abort",
  "abort",
  Ic,
  "animationEnd",
  Jc,
  "animationIteration",
  Kc,
  "animationStart",
  "canplay",
  "canPlay",
  "canplaythrough",
  "canPlayThrough",
  "durationchange",
  "durationChange",
  "emptied",
  "emptied",
  "encrypted",
  "encrypted",
  "ended",
  "ended",
  "error",
  "error",
  "gotpointercapture",
  "gotPointerCapture",
  "load",
  "load",
  "loadeddata",
  "loadedData",
  "loadedmetadata",
  "loadedMetadata",
  "loadstart",
  "loadStart",
  "lostpointercapture",
  "lostPointerCapture",
  "playing",
  "playing",
  "progress",
  "progress",
  "seeking",
  "seeking",
  "stalled",
  "stalled",
  "suspend",
  "suspend",
  "timeupdate",
  "timeUpdate",
  Lc,
  "transitionEnd",
  "waiting",
  "waiting"
];
function Pc(a2, b2) {
  for (var c2 = 0; c2 < a2.length; c2 += 2) {
    var d2 = a2[c2], e2 = a2[c2 + 1];
    e2 = "on" + (e2[0].toUpperCase() + e2.slice(1));
    Nc.set(d2, b2);
    Mc.set(d2, e2);
    da(e2, [d2]);
  }
}
var Qc = r$1.unstable_now;
Qc();
var F$1 = 8;
function Rc(a2) {
  if ((1 & a2) !== 0)
    return F$1 = 15, 1;
  if ((2 & a2) !== 0)
    return F$1 = 14, 2;
  if ((4 & a2) !== 0)
    return F$1 = 13, 4;
  var b2 = 24 & a2;
  if (b2 !== 0)
    return F$1 = 12, b2;
  if ((a2 & 32) !== 0)
    return F$1 = 11, 32;
  b2 = 192 & a2;
  if (b2 !== 0)
    return F$1 = 10, b2;
  if ((a2 & 256) !== 0)
    return F$1 = 9, 256;
  b2 = 3584 & a2;
  if (b2 !== 0)
    return F$1 = 8, b2;
  if ((a2 & 4096) !== 0)
    return F$1 = 7, 4096;
  b2 = 4186112 & a2;
  if (b2 !== 0)
    return F$1 = 6, b2;
  b2 = 62914560 & a2;
  if (b2 !== 0)
    return F$1 = 5, b2;
  if (a2 & 67108864)
    return F$1 = 4, 67108864;
  if ((a2 & 134217728) !== 0)
    return F$1 = 3, 134217728;
  b2 = 805306368 & a2;
  if (b2 !== 0)
    return F$1 = 2, b2;
  if ((1073741824 & a2) !== 0)
    return F$1 = 1, 1073741824;
  F$1 = 8;
  return a2;
}
function Sc(a2) {
  switch (a2) {
    case 99:
      return 15;
    case 98:
      return 10;
    case 97:
    case 96:
      return 8;
    case 95:
      return 2;
    default:
      return 0;
  }
}
function Tc(a2) {
  switch (a2) {
    case 15:
    case 14:
      return 99;
    case 13:
    case 12:
    case 11:
    case 10:
      return 98;
    case 9:
    case 8:
    case 7:
    case 6:
    case 4:
    case 5:
      return 97;
    case 3:
    case 2:
    case 1:
      return 95;
    case 0:
      return 90;
    default:
      throw Error(y$2(358, a2));
  }
}
function Uc(a2, b2) {
  var c2 = a2.pendingLanes;
  if (c2 === 0)
    return F$1 = 0;
  var d2 = 0, e2 = 0, f2 = a2.expiredLanes, g2 = a2.suspendedLanes, h2 = a2.pingedLanes;
  if (f2 !== 0)
    d2 = f2, e2 = F$1 = 15;
  else if (f2 = c2 & 134217727, f2 !== 0) {
    var k2 = f2 & ~g2;
    k2 !== 0 ? (d2 = Rc(k2), e2 = F$1) : (h2 &= f2, h2 !== 0 && (d2 = Rc(h2), e2 = F$1));
  } else
    f2 = c2 & ~g2, f2 !== 0 ? (d2 = Rc(f2), e2 = F$1) : h2 !== 0 && (d2 = Rc(h2), e2 = F$1);
  if (d2 === 0)
    return 0;
  d2 = 31 - Vc(d2);
  d2 = c2 & ((0 > d2 ? 0 : 1 << d2) << 1) - 1;
  if (b2 !== 0 && b2 !== d2 && (b2 & g2) === 0) {
    Rc(b2);
    if (e2 <= F$1)
      return b2;
    F$1 = e2;
  }
  b2 = a2.entangledLanes;
  if (b2 !== 0)
    for (a2 = a2.entanglements, b2 &= d2; 0 < b2; )
      c2 = 31 - Vc(b2), e2 = 1 << c2, d2 |= a2[c2], b2 &= ~e2;
  return d2;
}
function Wc(a2) {
  a2 = a2.pendingLanes & -1073741825;
  return a2 !== 0 ? a2 : a2 & 1073741824 ? 1073741824 : 0;
}
function Xc(a2, b2) {
  switch (a2) {
    case 15:
      return 1;
    case 14:
      return 2;
    case 12:
      return a2 = Yc(24 & ~b2), a2 === 0 ? Xc(10, b2) : a2;
    case 10:
      return a2 = Yc(192 & ~b2), a2 === 0 ? Xc(8, b2) : a2;
    case 8:
      return a2 = Yc(3584 & ~b2), a2 === 0 && (a2 = Yc(4186112 & ~b2), a2 === 0 && (a2 = 512)), a2;
    case 2:
      return b2 = Yc(805306368 & ~b2), b2 === 0 && (b2 = 268435456), b2;
  }
  throw Error(y$2(358, a2));
}
function Yc(a2) {
  return a2 & -a2;
}
function Zc(a2) {
  for (var b2 = [], c2 = 0; 31 > c2; c2++)
    b2.push(a2);
  return b2;
}
function $c(a2, b2, c2) {
  a2.pendingLanes |= b2;
  var d2 = b2 - 1;
  a2.suspendedLanes &= d2;
  a2.pingedLanes &= d2;
  a2 = a2.eventTimes;
  b2 = 31 - Vc(b2);
  a2[b2] = c2;
}
var Vc = Math.clz32 ? Math.clz32 : ad, bd = Math.log, cd = Math.LN2;
function ad(a2) {
  return a2 === 0 ? 32 : 31 - (bd(a2) / cd | 0) | 0;
}
var dd = r$1.unstable_UserBlockingPriority, ed = r$1.unstable_runWithPriority, fd = true;
function gd(a2, b2, c2, d2) {
  Kb || Ib();
  var e2 = hd, f2 = Kb;
  Kb = true;
  try {
    Hb(e2, a2, b2, c2, d2);
  } finally {
    (Kb = f2) || Mb();
  }
}
function id(a2, b2, c2, d2) {
  ed(dd, hd.bind(null, a2, b2, c2, d2));
}
function hd(a2, b2, c2, d2) {
  if (fd) {
    var e2;
    if ((e2 = (b2 & 4) === 0) && 0 < jc.length && -1 < qc.indexOf(a2))
      a2 = rc(null, a2, b2, c2, d2), jc.push(a2);
    else {
      var f2 = yc(a2, b2, c2, d2);
      if (f2 === null)
        e2 && sc(a2, d2);
      else {
        if (e2) {
          if (-1 < qc.indexOf(a2)) {
            a2 = rc(f2, a2, b2, c2, d2);
            jc.push(a2);
            return;
          }
          if (uc(f2, a2, b2, c2, d2))
            return;
          sc(a2, d2);
        }
        jd(a2, b2, d2, null, c2);
      }
    }
  }
}
function yc(a2, b2, c2, d2) {
  var e2 = xb(d2);
  e2 = wc(e2);
  if (e2 !== null) {
    var f2 = Zb(e2);
    if (f2 === null)
      e2 = null;
    else {
      var g2 = f2.tag;
      if (g2 === 13) {
        e2 = $b(f2);
        if (e2 !== null)
          return e2;
        e2 = null;
      } else if (g2 === 3) {
        if (f2.stateNode.hydrate)
          return f2.tag === 3 ? f2.stateNode.containerInfo : null;
        e2 = null;
      } else
        f2 !== e2 && (e2 = null);
    }
  }
  jd(a2, b2, d2, e2, c2);
  return null;
}
var kd = null, ld = null, md = null;
function nd() {
  if (md)
    return md;
  var a2, b2 = ld, c2 = b2.length, d2, e2 = "value" in kd ? kd.value : kd.textContent, f2 = e2.length;
  for (a2 = 0; a2 < c2 && b2[a2] === e2[a2]; a2++)
    ;
  var g2 = c2 - a2;
  for (d2 = 1; d2 <= g2 && b2[c2 - d2] === e2[f2 - d2]; d2++)
    ;
  return md = e2.slice(a2, 1 < d2 ? 1 - d2 : void 0);
}
function od(a2) {
  var b2 = a2.keyCode;
  "charCode" in a2 ? (a2 = a2.charCode, a2 === 0 && b2 === 13 && (a2 = 13)) : a2 = b2;
  a2 === 10 && (a2 = 13);
  return 32 <= a2 || a2 === 13 ? a2 : 0;
}
function pd() {
  return true;
}
function qd() {
  return false;
}
function rd(a2) {
  function b2(b3, d2, e2, f2, g2) {
    this._reactName = b3;
    this._targetInst = e2;
    this.type = d2;
    this.nativeEvent = f2;
    this.target = g2;
    this.currentTarget = null;
    for (var c2 in a2)
      a2.hasOwnProperty(c2) && (b3 = a2[c2], this[c2] = b3 ? b3(f2) : f2[c2]);
    this.isDefaultPrevented = (f2.defaultPrevented != null ? f2.defaultPrevented : f2.returnValue === false) ? pd : qd;
    this.isPropagationStopped = qd;
    return this;
  }
  m$3(b2.prototype, { preventDefault: function() {
    this.defaultPrevented = true;
    var a3 = this.nativeEvent;
    a3 && (a3.preventDefault ? a3.preventDefault() : typeof a3.returnValue !== "unknown" && (a3.returnValue = false), this.isDefaultPrevented = pd);
  }, stopPropagation: function() {
    var a3 = this.nativeEvent;
    a3 && (a3.stopPropagation ? a3.stopPropagation() : typeof a3.cancelBubble !== "unknown" && (a3.cancelBubble = true), this.isPropagationStopped = pd);
  }, persist: function() {
  }, isPersistent: pd });
  return b2;
}
var sd = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(a2) {
  return a2.timeStamp || Date.now();
}, defaultPrevented: 0, isTrusted: 0 }, td = rd(sd), ud = m$3({}, sd, { view: 0, detail: 0 }), vd = rd(ud), wd, xd, yd, Ad = m$3({}, ud, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: zd, button: 0, buttons: 0, relatedTarget: function(a2) {
  return a2.relatedTarget === void 0 ? a2.fromElement === a2.srcElement ? a2.toElement : a2.fromElement : a2.relatedTarget;
}, movementX: function(a2) {
  if ("movementX" in a2)
    return a2.movementX;
  a2 !== yd && (yd && a2.type === "mousemove" ? (wd = a2.screenX - yd.screenX, xd = a2.screenY - yd.screenY) : xd = wd = 0, yd = a2);
  return wd;
}, movementY: function(a2) {
  return "movementY" in a2 ? a2.movementY : xd;
} }), Bd = rd(Ad), Cd = m$3({}, Ad, { dataTransfer: 0 }), Dd = rd(Cd), Ed = m$3({}, ud, { relatedTarget: 0 }), Fd = rd(Ed), Gd = m$3({}, sd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), Hd = rd(Gd), Id = m$3({}, sd, { clipboardData: function(a2) {
  return "clipboardData" in a2 ? a2.clipboardData : window.clipboardData;
} }), Jd = rd(Id), Kd = m$3({}, sd, { data: 0 }), Ld = rd(Kd), Md = {
  Esc: "Escape",
  Spacebar: " ",
  Left: "ArrowLeft",
  Up: "ArrowUp",
  Right: "ArrowRight",
  Down: "ArrowDown",
  Del: "Delete",
  Win: "OS",
  Menu: "ContextMenu",
  Apps: "ContextMenu",
  Scroll: "ScrollLock",
  MozPrintableKey: "Unidentified"
}, Nd = {
  8: "Backspace",
  9: "Tab",
  12: "Clear",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  19: "Pause",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  45: "Insert",
  46: "Delete",
  112: "F1",
  113: "F2",
  114: "F3",
  115: "F4",
  116: "F5",
  117: "F6",
  118: "F7",
  119: "F8",
  120: "F9",
  121: "F10",
  122: "F11",
  123: "F12",
  144: "NumLock",
  145: "ScrollLock",
  224: "Meta"
}, Od = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
function Pd(a2) {
  var b2 = this.nativeEvent;
  return b2.getModifierState ? b2.getModifierState(a2) : (a2 = Od[a2]) ? !!b2[a2] : false;
}
function zd() {
  return Pd;
}
var Qd = m$3({}, ud, { key: function(a2) {
  if (a2.key) {
    var b2 = Md[a2.key] || a2.key;
    if (b2 !== "Unidentified")
      return b2;
  }
  return a2.type === "keypress" ? (a2 = od(a2), a2 === 13 ? "Enter" : String.fromCharCode(a2)) : a2.type === "keydown" || a2.type === "keyup" ? Nd[a2.keyCode] || "Unidentified" : "";
}, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: zd, charCode: function(a2) {
  return a2.type === "keypress" ? od(a2) : 0;
}, keyCode: function(a2) {
  return a2.type === "keydown" || a2.type === "keyup" ? a2.keyCode : 0;
}, which: function(a2) {
  return a2.type === "keypress" ? od(a2) : a2.type === "keydown" || a2.type === "keyup" ? a2.keyCode : 0;
} }), Rd = rd(Qd), Sd = m$3({}, Ad, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), Td = rd(Sd), Ud = m$3({}, ud, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: zd }), Vd = rd(Ud), Wd = m$3({}, sd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), Xd = rd(Wd), Yd = m$3({}, Ad, {
  deltaX: function(a2) {
    return "deltaX" in a2 ? a2.deltaX : "wheelDeltaX" in a2 ? -a2.wheelDeltaX : 0;
  },
  deltaY: function(a2) {
    return "deltaY" in a2 ? a2.deltaY : "wheelDeltaY" in a2 ? -a2.wheelDeltaY : "wheelDelta" in a2 ? -a2.wheelDelta : 0;
  },
  deltaZ: 0,
  deltaMode: 0
}), Zd = rd(Yd), $d = [9, 13, 27, 32], ae = fa && "CompositionEvent" in window, be = null;
fa && "documentMode" in document && (be = document.documentMode);
var ce = fa && "TextEvent" in window && !be, de = fa && (!ae || be && 8 < be && 11 >= be), ee = String.fromCharCode(32), fe = false;
function ge(a2, b2) {
  switch (a2) {
    case "keyup":
      return $d.indexOf(b2.keyCode) !== -1;
    case "keydown":
      return b2.keyCode !== 229;
    case "keypress":
    case "mousedown":
    case "focusout":
      return true;
    default:
      return false;
  }
}
function he(a2) {
  a2 = a2.detail;
  return typeof a2 === "object" && "data" in a2 ? a2.data : null;
}
var ie = false;
function je(a2, b2) {
  switch (a2) {
    case "compositionend":
      return he(b2);
    case "keypress":
      if (b2.which !== 32)
        return null;
      fe = true;
      return ee;
    case "textInput":
      return a2 = b2.data, a2 === ee && fe ? null : a2;
    default:
      return null;
  }
}
function ke(a2, b2) {
  if (ie)
    return a2 === "compositionend" || !ae && ge(a2, b2) ? (a2 = nd(), md = ld = kd = null, ie = false, a2) : null;
  switch (a2) {
    case "paste":
      return null;
    case "keypress":
      if (!(b2.ctrlKey || b2.altKey || b2.metaKey) || b2.ctrlKey && b2.altKey) {
        if (b2.char && 1 < b2.char.length)
          return b2.char;
        if (b2.which)
          return String.fromCharCode(b2.which);
      }
      return null;
    case "compositionend":
      return de && b2.locale !== "ko" ? null : b2.data;
    default:
      return null;
  }
}
var le = { color: true, date: true, datetime: true, "datetime-local": true, email: true, month: true, number: true, password: true, range: true, search: true, tel: true, text: true, time: true, url: true, week: true };
function me(a2) {
  var b2 = a2 && a2.nodeName && a2.nodeName.toLowerCase();
  return b2 === "input" ? !!le[a2.type] : b2 === "textarea" ? true : false;
}
function ne(a2, b2, c2, d2) {
  Eb(d2);
  b2 = oe(b2, "onChange");
  0 < b2.length && (c2 = new td("onChange", "change", null, c2, d2), a2.push({ event: c2, listeners: b2 }));
}
var pe = null, qe = null;
function re(a2) {
  se(a2, 0);
}
function te(a2) {
  var b2 = ue(a2);
  if (Wa(b2))
    return a2;
}
function ve(a2, b2) {
  if (a2 === "change")
    return b2;
}
var we = false;
if (fa) {
  var xe;
  if (fa) {
    var ye = "oninput" in document;
    if (!ye) {
      var ze = document.createElement("div");
      ze.setAttribute("oninput", "return;");
      ye = typeof ze.oninput === "function";
    }
    xe = ye;
  } else
    xe = false;
  we = xe && (!document.documentMode || 9 < document.documentMode);
}
function Ae() {
  pe && (pe.detachEvent("onpropertychange", Be), qe = pe = null);
}
function Be(a2) {
  if (a2.propertyName === "value" && te(qe)) {
    var b2 = [];
    ne(b2, qe, a2, xb(a2));
    a2 = re;
    if (Kb)
      a2(b2);
    else {
      Kb = true;
      try {
        Gb(a2, b2);
      } finally {
        Kb = false, Mb();
      }
    }
  }
}
function Ce(a2, b2, c2) {
  a2 === "focusin" ? (Ae(), pe = b2, qe = c2, pe.attachEvent("onpropertychange", Be)) : a2 === "focusout" && Ae();
}
function De(a2) {
  if (a2 === "selectionchange" || a2 === "keyup" || a2 === "keydown")
    return te(qe);
}
function Ee(a2, b2) {
  if (a2 === "click")
    return te(b2);
}
function Fe(a2, b2) {
  if (a2 === "input" || a2 === "change")
    return te(b2);
}
function Ge(a2, b2) {
  return a2 === b2 && (a2 !== 0 || 1 / a2 === 1 / b2) || a2 !== a2 && b2 !== b2;
}
var He = typeof Object.is === "function" ? Object.is : Ge, Ie = Object.prototype.hasOwnProperty;
function Je(a2, b2) {
  if (He(a2, b2))
    return true;
  if (typeof a2 !== "object" || a2 === null || typeof b2 !== "object" || b2 === null)
    return false;
  var c2 = Object.keys(a2), d2 = Object.keys(b2);
  if (c2.length !== d2.length)
    return false;
  for (d2 = 0; d2 < c2.length; d2++)
    if (!Ie.call(b2, c2[d2]) || !He(a2[c2[d2]], b2[c2[d2]]))
      return false;
  return true;
}
function Ke(a2) {
  for (; a2 && a2.firstChild; )
    a2 = a2.firstChild;
  return a2;
}
function Le(a2, b2) {
  var c2 = Ke(a2);
  a2 = 0;
  for (var d2; c2; ) {
    if (c2.nodeType === 3) {
      d2 = a2 + c2.textContent.length;
      if (a2 <= b2 && d2 >= b2)
        return { node: c2, offset: b2 - a2 };
      a2 = d2;
    }
    a: {
      for (; c2; ) {
        if (c2.nextSibling) {
          c2 = c2.nextSibling;
          break a;
        }
        c2 = c2.parentNode;
      }
      c2 = void 0;
    }
    c2 = Ke(c2);
  }
}
function Me(a2, b2) {
  return a2 && b2 ? a2 === b2 ? true : a2 && a2.nodeType === 3 ? false : b2 && b2.nodeType === 3 ? Me(a2, b2.parentNode) : "contains" in a2 ? a2.contains(b2) : a2.compareDocumentPosition ? !!(a2.compareDocumentPosition(b2) & 16) : false : false;
}
function Ne() {
  for (var a2 = window, b2 = Xa(); b2 instanceof a2.HTMLIFrameElement; ) {
    try {
      var c2 = typeof b2.contentWindow.location.href === "string";
    } catch (d2) {
      c2 = false;
    }
    if (c2)
      a2 = b2.contentWindow;
    else
      break;
    b2 = Xa(a2.document);
  }
  return b2;
}
function Oe(a2) {
  var b2 = a2 && a2.nodeName && a2.nodeName.toLowerCase();
  return b2 && (b2 === "input" && (a2.type === "text" || a2.type === "search" || a2.type === "tel" || a2.type === "url" || a2.type === "password") || b2 === "textarea" || a2.contentEditable === "true");
}
var Pe = fa && "documentMode" in document && 11 >= document.documentMode, Qe = null, Re = null, Se = null, Te = false;
function Ue(a2, b2, c2) {
  var d2 = c2.window === c2 ? c2.document : c2.nodeType === 9 ? c2 : c2.ownerDocument;
  Te || Qe == null || Qe !== Xa(d2) || (d2 = Qe, "selectionStart" in d2 && Oe(d2) ? d2 = { start: d2.selectionStart, end: d2.selectionEnd } : (d2 = (d2.ownerDocument && d2.ownerDocument.defaultView || window).getSelection(), d2 = { anchorNode: d2.anchorNode, anchorOffset: d2.anchorOffset, focusNode: d2.focusNode, focusOffset: d2.focusOffset }), Se && Je(Se, d2) || (Se = d2, d2 = oe(Re, "onSelect"), 0 < d2.length && (b2 = new td("onSelect", "select", null, b2, c2), a2.push({ event: b2, listeners: d2 }), b2.target = Qe)));
}
Pc("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "), 0);
Pc("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "), 1);
Pc(Oc, 2);
for (var Ve = "change selectionchange textInput compositionstart compositionend compositionupdate".split(" "), We = 0; We < Ve.length; We++)
  Nc.set(Ve[We], 0);
ea("onMouseEnter", ["mouseout", "mouseover"]);
ea("onMouseLeave", ["mouseout", "mouseover"]);
ea("onPointerEnter", ["pointerout", "pointerover"]);
ea("onPointerLeave", ["pointerout", "pointerover"]);
da("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
da("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
da("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
da("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
da("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
da("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var Xe = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), Ye = new Set("cancel close invalid load scroll toggle".split(" ").concat(Xe));
function Ze(a2, b2, c2) {
  var d2 = a2.type || "unknown-event";
  a2.currentTarget = c2;
  Yb(d2, b2, void 0, a2);
  a2.currentTarget = null;
}
function se(a2, b2) {
  b2 = (b2 & 4) !== 0;
  for (var c2 = 0; c2 < a2.length; c2++) {
    var d2 = a2[c2], e2 = d2.event;
    d2 = d2.listeners;
    a: {
      var f2 = void 0;
      if (b2)
        for (var g2 = d2.length - 1; 0 <= g2; g2--) {
          var h2 = d2[g2], k2 = h2.instance, l2 = h2.currentTarget;
          h2 = h2.listener;
          if (k2 !== f2 && e2.isPropagationStopped())
            break a;
          Ze(e2, h2, l2);
          f2 = k2;
        }
      else
        for (g2 = 0; g2 < d2.length; g2++) {
          h2 = d2[g2];
          k2 = h2.instance;
          l2 = h2.currentTarget;
          h2 = h2.listener;
          if (k2 !== f2 && e2.isPropagationStopped())
            break a;
          Ze(e2, h2, l2);
          f2 = k2;
        }
    }
  }
  if (Ub)
    throw a2 = Vb, Ub = false, Vb = null, a2;
}
function G(a2, b2) {
  var c2 = $e(b2), d2 = a2 + "__bubble";
  c2.has(d2) || (af(b2, a2, 2, false), c2.add(d2));
}
var bf = "_reactListening" + Math.random().toString(36).slice(2);
function cf(a2) {
  a2[bf] || (a2[bf] = true, ba.forEach(function(b2) {
    Ye.has(b2) || df(b2, false, a2, null);
    df(b2, true, a2, null);
  }));
}
function df(a2, b2, c2, d2) {
  var e2 = 4 < arguments.length && arguments[4] !== void 0 ? arguments[4] : 0, f2 = c2;
  a2 === "selectionchange" && c2.nodeType !== 9 && (f2 = c2.ownerDocument);
  if (d2 !== null && !b2 && Ye.has(a2)) {
    if (a2 !== "scroll")
      return;
    e2 |= 2;
    f2 = d2;
  }
  var g2 = $e(f2), h2 = a2 + "__" + (b2 ? "capture" : "bubble");
  g2.has(h2) || (b2 && (e2 |= 4), af(f2, a2, e2, b2), g2.add(h2));
}
function af(a2, b2, c2, d2) {
  var e2 = Nc.get(b2);
  switch (e2 === void 0 ? 2 : e2) {
    case 0:
      e2 = gd;
      break;
    case 1:
      e2 = id;
      break;
    default:
      e2 = hd;
  }
  c2 = e2.bind(null, b2, c2, a2);
  e2 = void 0;
  !Pb || b2 !== "touchstart" && b2 !== "touchmove" && b2 !== "wheel" || (e2 = true);
  d2 ? e2 !== void 0 ? a2.addEventListener(b2, c2, { capture: true, passive: e2 }) : a2.addEventListener(b2, c2, true) : e2 !== void 0 ? a2.addEventListener(b2, c2, { passive: e2 }) : a2.addEventListener(b2, c2, false);
}
function jd(a2, b2, c2, d2, e2) {
  var f2 = d2;
  if ((b2 & 1) === 0 && (b2 & 2) === 0 && d2 !== null)
    a:
      for (; ; ) {
        if (d2 === null)
          return;
        var g2 = d2.tag;
        if (g2 === 3 || g2 === 4) {
          var h2 = d2.stateNode.containerInfo;
          if (h2 === e2 || h2.nodeType === 8 && h2.parentNode === e2)
            break;
          if (g2 === 4)
            for (g2 = d2.return; g2 !== null; ) {
              var k2 = g2.tag;
              if (k2 === 3 || k2 === 4) {
                if (k2 = g2.stateNode.containerInfo, k2 === e2 || k2.nodeType === 8 && k2.parentNode === e2)
                  return;
              }
              g2 = g2.return;
            }
          for (; h2 !== null; ) {
            g2 = wc(h2);
            if (g2 === null)
              return;
            k2 = g2.tag;
            if (k2 === 5 || k2 === 6) {
              d2 = f2 = g2;
              continue a;
            }
            h2 = h2.parentNode;
          }
        }
        d2 = d2.return;
      }
  Nb(function() {
    var d3 = f2, e3 = xb(c2), g3 = [];
    a: {
      var h3 = Mc.get(a2);
      if (h3 !== void 0) {
        var k3 = td, x2 = a2;
        switch (a2) {
          case "keypress":
            if (od(c2) === 0)
              break a;
          case "keydown":
          case "keyup":
            k3 = Rd;
            break;
          case "focusin":
            x2 = "focus";
            k3 = Fd;
            break;
          case "focusout":
            x2 = "blur";
            k3 = Fd;
            break;
          case "beforeblur":
          case "afterblur":
            k3 = Fd;
            break;
          case "click":
            if (c2.button === 2)
              break a;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            k3 = Bd;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            k3 = Dd;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            k3 = Vd;
            break;
          case Ic:
          case Jc:
          case Kc:
            k3 = Hd;
            break;
          case Lc:
            k3 = Xd;
            break;
          case "scroll":
            k3 = vd;
            break;
          case "wheel":
            k3 = Zd;
            break;
          case "copy":
          case "cut":
          case "paste":
            k3 = Jd;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            k3 = Td;
        }
        var w2 = (b2 & 4) !== 0, z2 = !w2 && a2 === "scroll", u2 = w2 ? h3 !== null ? h3 + "Capture" : null : h3;
        w2 = [];
        for (var t2 = d3, q2; t2 !== null; ) {
          q2 = t2;
          var v2 = q2.stateNode;
          q2.tag === 5 && v2 !== null && (q2 = v2, u2 !== null && (v2 = Ob(t2, u2), v2 != null && w2.push(ef(t2, v2, q2))));
          if (z2)
            break;
          t2 = t2.return;
        }
        0 < w2.length && (h3 = new k3(h3, x2, null, c2, e3), g3.push({ event: h3, listeners: w2 }));
      }
    }
    if ((b2 & 7) === 0) {
      a: {
        h3 = a2 === "mouseover" || a2 === "pointerover";
        k3 = a2 === "mouseout" || a2 === "pointerout";
        if (h3 && (b2 & 16) === 0 && (x2 = c2.relatedTarget || c2.fromElement) && (wc(x2) || x2[ff]))
          break a;
        if (k3 || h3) {
          h3 = e3.window === e3 ? e3 : (h3 = e3.ownerDocument) ? h3.defaultView || h3.parentWindow : window;
          if (k3) {
            if (x2 = c2.relatedTarget || c2.toElement, k3 = d3, x2 = x2 ? wc(x2) : null, x2 !== null && (z2 = Zb(x2), x2 !== z2 || x2.tag !== 5 && x2.tag !== 6))
              x2 = null;
          } else
            k3 = null, x2 = d3;
          if (k3 !== x2) {
            w2 = Bd;
            v2 = "onMouseLeave";
            u2 = "onMouseEnter";
            t2 = "mouse";
            if (a2 === "pointerout" || a2 === "pointerover")
              w2 = Td, v2 = "onPointerLeave", u2 = "onPointerEnter", t2 = "pointer";
            z2 = k3 == null ? h3 : ue(k3);
            q2 = x2 == null ? h3 : ue(x2);
            h3 = new w2(v2, t2 + "leave", k3, c2, e3);
            h3.target = z2;
            h3.relatedTarget = q2;
            v2 = null;
            wc(e3) === d3 && (w2 = new w2(u2, t2 + "enter", x2, c2, e3), w2.target = q2, w2.relatedTarget = z2, v2 = w2);
            z2 = v2;
            if (k3 && x2)
              b: {
                w2 = k3;
                u2 = x2;
                t2 = 0;
                for (q2 = w2; q2; q2 = gf(q2))
                  t2++;
                q2 = 0;
                for (v2 = u2; v2; v2 = gf(v2))
                  q2++;
                for (; 0 < t2 - q2; )
                  w2 = gf(w2), t2--;
                for (; 0 < q2 - t2; )
                  u2 = gf(u2), q2--;
                for (; t2--; ) {
                  if (w2 === u2 || u2 !== null && w2 === u2.alternate)
                    break b;
                  w2 = gf(w2);
                  u2 = gf(u2);
                }
                w2 = null;
              }
            else
              w2 = null;
            k3 !== null && hf(g3, h3, k3, w2, false);
            x2 !== null && z2 !== null && hf(g3, z2, x2, w2, true);
          }
        }
      }
      a: {
        h3 = d3 ? ue(d3) : window;
        k3 = h3.nodeName && h3.nodeName.toLowerCase();
        if (k3 === "select" || k3 === "input" && h3.type === "file")
          var J2 = ve;
        else if (me(h3))
          if (we)
            J2 = Fe;
          else {
            J2 = De;
            var K2 = Ce;
          }
        else
          (k3 = h3.nodeName) && k3.toLowerCase() === "input" && (h3.type === "checkbox" || h3.type === "radio") && (J2 = Ee);
        if (J2 && (J2 = J2(a2, d3))) {
          ne(g3, J2, c2, e3);
          break a;
        }
        K2 && K2(a2, h3, d3);
        a2 === "focusout" && (K2 = h3._wrapperState) && K2.controlled && h3.type === "number" && bb(h3, "number", h3.value);
      }
      K2 = d3 ? ue(d3) : window;
      switch (a2) {
        case "focusin":
          if (me(K2) || K2.contentEditable === "true")
            Qe = K2, Re = d3, Se = null;
          break;
        case "focusout":
          Se = Re = Qe = null;
          break;
        case "mousedown":
          Te = true;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          Te = false;
          Ue(g3, c2, e3);
          break;
        case "selectionchange":
          if (Pe)
            break;
        case "keydown":
        case "keyup":
          Ue(g3, c2, e3);
      }
      var Q2;
      if (ae)
        b: {
          switch (a2) {
            case "compositionstart":
              var L2 = "onCompositionStart";
              break b;
            case "compositionend":
              L2 = "onCompositionEnd";
              break b;
            case "compositionupdate":
              L2 = "onCompositionUpdate";
              break b;
          }
          L2 = void 0;
        }
      else
        ie ? ge(a2, c2) && (L2 = "onCompositionEnd") : a2 === "keydown" && c2.keyCode === 229 && (L2 = "onCompositionStart");
      L2 && (de && c2.locale !== "ko" && (ie || L2 !== "onCompositionStart" ? L2 === "onCompositionEnd" && ie && (Q2 = nd()) : (kd = e3, ld = "value" in kd ? kd.value : kd.textContent, ie = true)), K2 = oe(d3, L2), 0 < K2.length && (L2 = new Ld(L2, a2, null, c2, e3), g3.push({ event: L2, listeners: K2 }), Q2 ? L2.data = Q2 : (Q2 = he(c2), Q2 !== null && (L2.data = Q2))));
      if (Q2 = ce ? je(a2, c2) : ke(a2, c2))
        d3 = oe(d3, "onBeforeInput"), 0 < d3.length && (e3 = new Ld("onBeforeInput", "beforeinput", null, c2, e3), g3.push({ event: e3, listeners: d3 }), e3.data = Q2);
    }
    se(g3, b2);
  });
}
function ef(a2, b2, c2) {
  return { instance: a2, listener: b2, currentTarget: c2 };
}
function oe(a2, b2) {
  for (var c2 = b2 + "Capture", d2 = []; a2 !== null; ) {
    var e2 = a2, f2 = e2.stateNode;
    e2.tag === 5 && f2 !== null && (e2 = f2, f2 = Ob(a2, c2), f2 != null && d2.unshift(ef(a2, f2, e2)), f2 = Ob(a2, b2), f2 != null && d2.push(ef(a2, f2, e2)));
    a2 = a2.return;
  }
  return d2;
}
function gf(a2) {
  if (a2 === null)
    return null;
  do
    a2 = a2.return;
  while (a2 && a2.tag !== 5);
  return a2 ? a2 : null;
}
function hf(a2, b2, c2, d2, e2) {
  for (var f2 = b2._reactName, g2 = []; c2 !== null && c2 !== d2; ) {
    var h2 = c2, k2 = h2.alternate, l2 = h2.stateNode;
    if (k2 !== null && k2 === d2)
      break;
    h2.tag === 5 && l2 !== null && (h2 = l2, e2 ? (k2 = Ob(c2, f2), k2 != null && g2.unshift(ef(c2, k2, h2))) : e2 || (k2 = Ob(c2, f2), k2 != null && g2.push(ef(c2, k2, h2))));
    c2 = c2.return;
  }
  g2.length !== 0 && a2.push({ event: b2, listeners: g2 });
}
function jf() {
}
var kf = null, lf = null;
function mf(a2, b2) {
  switch (a2) {
    case "button":
    case "input":
    case "select":
    case "textarea":
      return !!b2.autoFocus;
  }
  return false;
}
function nf(a2, b2) {
  return a2 === "textarea" || a2 === "option" || a2 === "noscript" || typeof b2.children === "string" || typeof b2.children === "number" || typeof b2.dangerouslySetInnerHTML === "object" && b2.dangerouslySetInnerHTML !== null && b2.dangerouslySetInnerHTML.__html != null;
}
var of = typeof setTimeout === "function" ? setTimeout : void 0, pf = typeof clearTimeout === "function" ? clearTimeout : void 0;
function qf(a2) {
  a2.nodeType === 1 ? a2.textContent = "" : a2.nodeType === 9 && (a2 = a2.body, a2 != null && (a2.textContent = ""));
}
function rf(a2) {
  for (; a2 != null; a2 = a2.nextSibling) {
    var b2 = a2.nodeType;
    if (b2 === 1 || b2 === 3)
      break;
  }
  return a2;
}
function sf(a2) {
  a2 = a2.previousSibling;
  for (var b2 = 0; a2; ) {
    if (a2.nodeType === 8) {
      var c2 = a2.data;
      if (c2 === "$" || c2 === "$!" || c2 === "$?") {
        if (b2 === 0)
          return a2;
        b2--;
      } else
        c2 === "/$" && b2++;
    }
    a2 = a2.previousSibling;
  }
  return null;
}
var tf = 0;
function uf(a2) {
  return { $$typeof: Ga, toString: a2, valueOf: a2 };
}
var vf = Math.random().toString(36).slice(2), wf = "__reactFiber$" + vf, xf = "__reactProps$" + vf, ff = "__reactContainer$" + vf, yf = "__reactEvents$" + vf;
function wc(a2) {
  var b2 = a2[wf];
  if (b2)
    return b2;
  for (var c2 = a2.parentNode; c2; ) {
    if (b2 = c2[ff] || c2[wf]) {
      c2 = b2.alternate;
      if (b2.child !== null || c2 !== null && c2.child !== null)
        for (a2 = sf(a2); a2 !== null; ) {
          if (c2 = a2[wf])
            return c2;
          a2 = sf(a2);
        }
      return b2;
    }
    a2 = c2;
    c2 = a2.parentNode;
  }
  return null;
}
function Cb(a2) {
  a2 = a2[wf] || a2[ff];
  return !a2 || a2.tag !== 5 && a2.tag !== 6 && a2.tag !== 13 && a2.tag !== 3 ? null : a2;
}
function ue(a2) {
  if (a2.tag === 5 || a2.tag === 6)
    return a2.stateNode;
  throw Error(y$2(33));
}
function Db(a2) {
  return a2[xf] || null;
}
function $e(a2) {
  var b2 = a2[yf];
  b2 === void 0 && (b2 = a2[yf] = new Set());
  return b2;
}
var zf = [], Af = -1;
function Bf(a2) {
  return { current: a2 };
}
function H(a2) {
  0 > Af || (a2.current = zf[Af], zf[Af] = null, Af--);
}
function I$1(a2, b2) {
  Af++;
  zf[Af] = a2.current;
  a2.current = b2;
}
var Cf = {}, M = Bf(Cf), N$1 = Bf(false), Df = Cf;
function Ef(a2, b2) {
  var c2 = a2.type.contextTypes;
  if (!c2)
    return Cf;
  var d2 = a2.stateNode;
  if (d2 && d2.__reactInternalMemoizedUnmaskedChildContext === b2)
    return d2.__reactInternalMemoizedMaskedChildContext;
  var e2 = {}, f2;
  for (f2 in c2)
    e2[f2] = b2[f2];
  d2 && (a2 = a2.stateNode, a2.__reactInternalMemoizedUnmaskedChildContext = b2, a2.__reactInternalMemoizedMaskedChildContext = e2);
  return e2;
}
function Ff(a2) {
  a2 = a2.childContextTypes;
  return a2 !== null && a2 !== void 0;
}
function Gf() {
  H(N$1);
  H(M);
}
function Hf(a2, b2, c2) {
  if (M.current !== Cf)
    throw Error(y$2(168));
  I$1(M, b2);
  I$1(N$1, c2);
}
function If(a2, b2, c2) {
  var d2 = a2.stateNode;
  a2 = b2.childContextTypes;
  if (typeof d2.getChildContext !== "function")
    return c2;
  d2 = d2.getChildContext();
  for (var e2 in d2)
    if (!(e2 in a2))
      throw Error(y$2(108, Ra(b2) || "Unknown", e2));
  return m$3({}, c2, d2);
}
function Jf(a2) {
  a2 = (a2 = a2.stateNode) && a2.__reactInternalMemoizedMergedChildContext || Cf;
  Df = M.current;
  I$1(M, a2);
  I$1(N$1, N$1.current);
  return true;
}
function Kf(a2, b2, c2) {
  var d2 = a2.stateNode;
  if (!d2)
    throw Error(y$2(169));
  c2 ? (a2 = If(a2, b2, Df), d2.__reactInternalMemoizedMergedChildContext = a2, H(N$1), H(M), I$1(M, a2)) : H(N$1);
  I$1(N$1, c2);
}
var Lf = null, Mf = null, Nf = r$1.unstable_runWithPriority, Of = r$1.unstable_scheduleCallback, Pf = r$1.unstable_cancelCallback, Qf = r$1.unstable_shouldYield, Rf = r$1.unstable_requestPaint, Sf = r$1.unstable_now, Tf = r$1.unstable_getCurrentPriorityLevel, Uf = r$1.unstable_ImmediatePriority, Vf = r$1.unstable_UserBlockingPriority, Wf = r$1.unstable_NormalPriority, Xf = r$1.unstable_LowPriority, Yf = r$1.unstable_IdlePriority, Zf = {}, $f = Rf !== void 0 ? Rf : function() {
}, ag = null, bg = null, cg = false, dg = Sf(), O$1 = 1e4 > dg ? Sf : function() {
  return Sf() - dg;
};
function eg() {
  switch (Tf()) {
    case Uf:
      return 99;
    case Vf:
      return 98;
    case Wf:
      return 97;
    case Xf:
      return 96;
    case Yf:
      return 95;
    default:
      throw Error(y$2(332));
  }
}
function fg(a2) {
  switch (a2) {
    case 99:
      return Uf;
    case 98:
      return Vf;
    case 97:
      return Wf;
    case 96:
      return Xf;
    case 95:
      return Yf;
    default:
      throw Error(y$2(332));
  }
}
function gg(a2, b2) {
  a2 = fg(a2);
  return Nf(a2, b2);
}
function hg(a2, b2, c2) {
  a2 = fg(a2);
  return Of(a2, b2, c2);
}
function ig() {
  if (bg !== null) {
    var a2 = bg;
    bg = null;
    Pf(a2);
  }
  jg();
}
function jg() {
  if (!cg && ag !== null) {
    cg = true;
    var a2 = 0;
    try {
      var b2 = ag;
      gg(99, function() {
        for (; a2 < b2.length; a2++) {
          var c2 = b2[a2];
          do
            c2 = c2(true);
          while (c2 !== null);
        }
      });
      ag = null;
    } catch (c2) {
      throw ag !== null && (ag = ag.slice(a2 + 1)), Of(Uf, ig), c2;
    } finally {
      cg = false;
    }
  }
}
var kg = ra.ReactCurrentBatchConfig;
function lg(a2, b2) {
  if (a2 && a2.defaultProps) {
    b2 = m$3({}, b2);
    a2 = a2.defaultProps;
    for (var c2 in a2)
      b2[c2] === void 0 && (b2[c2] = a2[c2]);
    return b2;
  }
  return b2;
}
var mg = Bf(null), ng = null, og = null, pg = null;
function qg() {
  pg = og = ng = null;
}
function rg(a2) {
  var b2 = mg.current;
  H(mg);
  a2.type._context._currentValue = b2;
}
function sg(a2, b2) {
  for (; a2 !== null; ) {
    var c2 = a2.alternate;
    if ((a2.childLanes & b2) === b2)
      if (c2 === null || (c2.childLanes & b2) === b2)
        break;
      else
        c2.childLanes |= b2;
    else
      a2.childLanes |= b2, c2 !== null && (c2.childLanes |= b2);
    a2 = a2.return;
  }
}
function tg(a2, b2) {
  ng = a2;
  pg = og = null;
  a2 = a2.dependencies;
  a2 !== null && a2.firstContext !== null && ((a2.lanes & b2) !== 0 && (ug = true), a2.firstContext = null);
}
function vg(a2, b2) {
  if (pg !== a2 && b2 !== false && b2 !== 0) {
    if (typeof b2 !== "number" || b2 === 1073741823)
      pg = a2, b2 = 1073741823;
    b2 = { context: a2, observedBits: b2, next: null };
    if (og === null) {
      if (ng === null)
        throw Error(y$2(308));
      og = b2;
      ng.dependencies = { lanes: 0, firstContext: b2, responders: null };
    } else
      og = og.next = b2;
  }
  return a2._currentValue;
}
var wg = false;
function xg(a2) {
  a2.updateQueue = { baseState: a2.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null }, effects: null };
}
function yg(a2, b2) {
  a2 = a2.updateQueue;
  b2.updateQueue === a2 && (b2.updateQueue = { baseState: a2.baseState, firstBaseUpdate: a2.firstBaseUpdate, lastBaseUpdate: a2.lastBaseUpdate, shared: a2.shared, effects: a2.effects });
}
function zg(a2, b2) {
  return { eventTime: a2, lane: b2, tag: 0, payload: null, callback: null, next: null };
}
function Ag(a2, b2) {
  a2 = a2.updateQueue;
  if (a2 !== null) {
    a2 = a2.shared;
    var c2 = a2.pending;
    c2 === null ? b2.next = b2 : (b2.next = c2.next, c2.next = b2);
    a2.pending = b2;
  }
}
function Bg(a2, b2) {
  var c2 = a2.updateQueue, d2 = a2.alternate;
  if (d2 !== null && (d2 = d2.updateQueue, c2 === d2)) {
    var e2 = null, f2 = null;
    c2 = c2.firstBaseUpdate;
    if (c2 !== null) {
      do {
        var g2 = { eventTime: c2.eventTime, lane: c2.lane, tag: c2.tag, payload: c2.payload, callback: c2.callback, next: null };
        f2 === null ? e2 = f2 = g2 : f2 = f2.next = g2;
        c2 = c2.next;
      } while (c2 !== null);
      f2 === null ? e2 = f2 = b2 : f2 = f2.next = b2;
    } else
      e2 = f2 = b2;
    c2 = { baseState: d2.baseState, firstBaseUpdate: e2, lastBaseUpdate: f2, shared: d2.shared, effects: d2.effects };
    a2.updateQueue = c2;
    return;
  }
  a2 = c2.lastBaseUpdate;
  a2 === null ? c2.firstBaseUpdate = b2 : a2.next = b2;
  c2.lastBaseUpdate = b2;
}
function Cg(a2, b2, c2, d2) {
  var e2 = a2.updateQueue;
  wg = false;
  var f2 = e2.firstBaseUpdate, g2 = e2.lastBaseUpdate, h2 = e2.shared.pending;
  if (h2 !== null) {
    e2.shared.pending = null;
    var k2 = h2, l2 = k2.next;
    k2.next = null;
    g2 === null ? f2 = l2 : g2.next = l2;
    g2 = k2;
    var n2 = a2.alternate;
    if (n2 !== null) {
      n2 = n2.updateQueue;
      var A2 = n2.lastBaseUpdate;
      A2 !== g2 && (A2 === null ? n2.firstBaseUpdate = l2 : A2.next = l2, n2.lastBaseUpdate = k2);
    }
  }
  if (f2 !== null) {
    A2 = e2.baseState;
    g2 = 0;
    n2 = l2 = k2 = null;
    do {
      h2 = f2.lane;
      var p2 = f2.eventTime;
      if ((d2 & h2) === h2) {
        n2 !== null && (n2 = n2.next = {
          eventTime: p2,
          lane: 0,
          tag: f2.tag,
          payload: f2.payload,
          callback: f2.callback,
          next: null
        });
        a: {
          var C2 = a2, x2 = f2;
          h2 = b2;
          p2 = c2;
          switch (x2.tag) {
            case 1:
              C2 = x2.payload;
              if (typeof C2 === "function") {
                A2 = C2.call(p2, A2, h2);
                break a;
              }
              A2 = C2;
              break a;
            case 3:
              C2.flags = C2.flags & -4097 | 64;
            case 0:
              C2 = x2.payload;
              h2 = typeof C2 === "function" ? C2.call(p2, A2, h2) : C2;
              if (h2 === null || h2 === void 0)
                break a;
              A2 = m$3({}, A2, h2);
              break a;
            case 2:
              wg = true;
          }
        }
        f2.callback !== null && (a2.flags |= 32, h2 = e2.effects, h2 === null ? e2.effects = [f2] : h2.push(f2));
      } else
        p2 = { eventTime: p2, lane: h2, tag: f2.tag, payload: f2.payload, callback: f2.callback, next: null }, n2 === null ? (l2 = n2 = p2, k2 = A2) : n2 = n2.next = p2, g2 |= h2;
      f2 = f2.next;
      if (f2 === null)
        if (h2 = e2.shared.pending, h2 === null)
          break;
        else
          f2 = h2.next, h2.next = null, e2.lastBaseUpdate = h2, e2.shared.pending = null;
    } while (1);
    n2 === null && (k2 = A2);
    e2.baseState = k2;
    e2.firstBaseUpdate = l2;
    e2.lastBaseUpdate = n2;
    Dg |= g2;
    a2.lanes = g2;
    a2.memoizedState = A2;
  }
}
function Eg(a2, b2, c2) {
  a2 = b2.effects;
  b2.effects = null;
  if (a2 !== null)
    for (b2 = 0; b2 < a2.length; b2++) {
      var d2 = a2[b2], e2 = d2.callback;
      if (e2 !== null) {
        d2.callback = null;
        d2 = c2;
        if (typeof e2 !== "function")
          throw Error(y$2(191, e2));
        e2.call(d2);
      }
    }
}
var Fg = new aa.Component().refs;
function Gg(a2, b2, c2, d2) {
  b2 = a2.memoizedState;
  c2 = c2(d2, b2);
  c2 = c2 === null || c2 === void 0 ? b2 : m$3({}, b2, c2);
  a2.memoizedState = c2;
  a2.lanes === 0 && (a2.updateQueue.baseState = c2);
}
var Kg = { isMounted: function(a2) {
  return (a2 = a2._reactInternals) ? Zb(a2) === a2 : false;
}, enqueueSetState: function(a2, b2, c2) {
  a2 = a2._reactInternals;
  var d2 = Hg(), e2 = Ig(a2), f2 = zg(d2, e2);
  f2.payload = b2;
  c2 !== void 0 && c2 !== null && (f2.callback = c2);
  Ag(a2, f2);
  Jg(a2, e2, d2);
}, enqueueReplaceState: function(a2, b2, c2) {
  a2 = a2._reactInternals;
  var d2 = Hg(), e2 = Ig(a2), f2 = zg(d2, e2);
  f2.tag = 1;
  f2.payload = b2;
  c2 !== void 0 && c2 !== null && (f2.callback = c2);
  Ag(a2, f2);
  Jg(a2, e2, d2);
}, enqueueForceUpdate: function(a2, b2) {
  a2 = a2._reactInternals;
  var c2 = Hg(), d2 = Ig(a2), e2 = zg(c2, d2);
  e2.tag = 2;
  b2 !== void 0 && b2 !== null && (e2.callback = b2);
  Ag(a2, e2);
  Jg(a2, d2, c2);
} };
function Lg(a2, b2, c2, d2, e2, f2, g2) {
  a2 = a2.stateNode;
  return typeof a2.shouldComponentUpdate === "function" ? a2.shouldComponentUpdate(d2, f2, g2) : b2.prototype && b2.prototype.isPureReactComponent ? !Je(c2, d2) || !Je(e2, f2) : true;
}
function Mg(a2, b2, c2) {
  var d2 = false, e2 = Cf;
  var f2 = b2.contextType;
  typeof f2 === "object" && f2 !== null ? f2 = vg(f2) : (e2 = Ff(b2) ? Df : M.current, d2 = b2.contextTypes, f2 = (d2 = d2 !== null && d2 !== void 0) ? Ef(a2, e2) : Cf);
  b2 = new b2(c2, f2);
  a2.memoizedState = b2.state !== null && b2.state !== void 0 ? b2.state : null;
  b2.updater = Kg;
  a2.stateNode = b2;
  b2._reactInternals = a2;
  d2 && (a2 = a2.stateNode, a2.__reactInternalMemoizedUnmaskedChildContext = e2, a2.__reactInternalMemoizedMaskedChildContext = f2);
  return b2;
}
function Ng(a2, b2, c2, d2) {
  a2 = b2.state;
  typeof b2.componentWillReceiveProps === "function" && b2.componentWillReceiveProps(c2, d2);
  typeof b2.UNSAFE_componentWillReceiveProps === "function" && b2.UNSAFE_componentWillReceiveProps(c2, d2);
  b2.state !== a2 && Kg.enqueueReplaceState(b2, b2.state, null);
}
function Og(a2, b2, c2, d2) {
  var e2 = a2.stateNode;
  e2.props = c2;
  e2.state = a2.memoizedState;
  e2.refs = Fg;
  xg(a2);
  var f2 = b2.contextType;
  typeof f2 === "object" && f2 !== null ? e2.context = vg(f2) : (f2 = Ff(b2) ? Df : M.current, e2.context = Ef(a2, f2));
  Cg(a2, c2, e2, d2);
  e2.state = a2.memoizedState;
  f2 = b2.getDerivedStateFromProps;
  typeof f2 === "function" && (Gg(a2, b2, f2, c2), e2.state = a2.memoizedState);
  typeof b2.getDerivedStateFromProps === "function" || typeof e2.getSnapshotBeforeUpdate === "function" || typeof e2.UNSAFE_componentWillMount !== "function" && typeof e2.componentWillMount !== "function" || (b2 = e2.state, typeof e2.componentWillMount === "function" && e2.componentWillMount(), typeof e2.UNSAFE_componentWillMount === "function" && e2.UNSAFE_componentWillMount(), b2 !== e2.state && Kg.enqueueReplaceState(e2, e2.state, null), Cg(a2, c2, e2, d2), e2.state = a2.memoizedState);
  typeof e2.componentDidMount === "function" && (a2.flags |= 4);
}
var Pg = Array.isArray;
function Qg(a2, b2, c2) {
  a2 = c2.ref;
  if (a2 !== null && typeof a2 !== "function" && typeof a2 !== "object") {
    if (c2._owner) {
      c2 = c2._owner;
      if (c2) {
        if (c2.tag !== 1)
          throw Error(y$2(309));
        var d2 = c2.stateNode;
      }
      if (!d2)
        throw Error(y$2(147, a2));
      var e2 = "" + a2;
      if (b2 !== null && b2.ref !== null && typeof b2.ref === "function" && b2.ref._stringRef === e2)
        return b2.ref;
      b2 = function(a3) {
        var b3 = d2.refs;
        b3 === Fg && (b3 = d2.refs = {});
        a3 === null ? delete b3[e2] : b3[e2] = a3;
      };
      b2._stringRef = e2;
      return b2;
    }
    if (typeof a2 !== "string")
      throw Error(y$2(284));
    if (!c2._owner)
      throw Error(y$2(290, a2));
  }
  return a2;
}
function Rg(a2, b2) {
  if (a2.type !== "textarea")
    throw Error(y$2(31, Object.prototype.toString.call(b2) === "[object Object]" ? "object with keys {" + Object.keys(b2).join(", ") + "}" : b2));
}
function Sg(a2) {
  function b2(b3, c3) {
    if (a2) {
      var d3 = b3.lastEffect;
      d3 !== null ? (d3.nextEffect = c3, b3.lastEffect = c3) : b3.firstEffect = b3.lastEffect = c3;
      c3.nextEffect = null;
      c3.flags = 8;
    }
  }
  function c2(c3, d3) {
    if (!a2)
      return null;
    for (; d3 !== null; )
      b2(c3, d3), d3 = d3.sibling;
    return null;
  }
  function d2(a3, b3) {
    for (a3 = new Map(); b3 !== null; )
      b3.key !== null ? a3.set(b3.key, b3) : a3.set(b3.index, b3), b3 = b3.sibling;
    return a3;
  }
  function e2(a3, b3) {
    a3 = Tg(a3, b3);
    a3.index = 0;
    a3.sibling = null;
    return a3;
  }
  function f2(b3, c3, d3) {
    b3.index = d3;
    if (!a2)
      return c3;
    d3 = b3.alternate;
    if (d3 !== null)
      return d3 = d3.index, d3 < c3 ? (b3.flags = 2, c3) : d3;
    b3.flags = 2;
    return c3;
  }
  function g2(b3) {
    a2 && b3.alternate === null && (b3.flags = 2);
    return b3;
  }
  function h2(a3, b3, c3, d3) {
    if (b3 === null || b3.tag !== 6)
      return b3 = Ug(c3, a3.mode, d3), b3.return = a3, b3;
    b3 = e2(b3, c3);
    b3.return = a3;
    return b3;
  }
  function k2(a3, b3, c3, d3) {
    if (b3 !== null && b3.elementType === c3.type)
      return d3 = e2(b3, c3.props), d3.ref = Qg(a3, b3, c3), d3.return = a3, d3;
    d3 = Vg(c3.type, c3.key, c3.props, null, a3.mode, d3);
    d3.ref = Qg(a3, b3, c3);
    d3.return = a3;
    return d3;
  }
  function l2(a3, b3, c3, d3) {
    if (b3 === null || b3.tag !== 4 || b3.stateNode.containerInfo !== c3.containerInfo || b3.stateNode.implementation !== c3.implementation)
      return b3 = Wg(c3, a3.mode, d3), b3.return = a3, b3;
    b3 = e2(b3, c3.children || []);
    b3.return = a3;
    return b3;
  }
  function n2(a3, b3, c3, d3, f3) {
    if (b3 === null || b3.tag !== 7)
      return b3 = Xg(c3, a3.mode, d3, f3), b3.return = a3, b3;
    b3 = e2(b3, c3);
    b3.return = a3;
    return b3;
  }
  function A2(a3, b3, c3) {
    if (typeof b3 === "string" || typeof b3 === "number")
      return b3 = Ug("" + b3, a3.mode, c3), b3.return = a3, b3;
    if (typeof b3 === "object" && b3 !== null) {
      switch (b3.$$typeof) {
        case sa:
          return c3 = Vg(b3.type, b3.key, b3.props, null, a3.mode, c3), c3.ref = Qg(a3, null, b3), c3.return = a3, c3;
        case ta:
          return b3 = Wg(b3, a3.mode, c3), b3.return = a3, b3;
      }
      if (Pg(b3) || La(b3))
        return b3 = Xg(b3, a3.mode, c3, null), b3.return = a3, b3;
      Rg(a3, b3);
    }
    return null;
  }
  function p2(a3, b3, c3, d3) {
    var e3 = b3 !== null ? b3.key : null;
    if (typeof c3 === "string" || typeof c3 === "number")
      return e3 !== null ? null : h2(a3, b3, "" + c3, d3);
    if (typeof c3 === "object" && c3 !== null) {
      switch (c3.$$typeof) {
        case sa:
          return c3.key === e3 ? c3.type === ua ? n2(a3, b3, c3.props.children, d3, e3) : k2(a3, b3, c3, d3) : null;
        case ta:
          return c3.key === e3 ? l2(a3, b3, c3, d3) : null;
      }
      if (Pg(c3) || La(c3))
        return e3 !== null ? null : n2(a3, b3, c3, d3, null);
      Rg(a3, c3);
    }
    return null;
  }
  function C2(a3, b3, c3, d3, e3) {
    if (typeof d3 === "string" || typeof d3 === "number")
      return a3 = a3.get(c3) || null, h2(b3, a3, "" + d3, e3);
    if (typeof d3 === "object" && d3 !== null) {
      switch (d3.$$typeof) {
        case sa:
          return a3 = a3.get(d3.key === null ? c3 : d3.key) || null, d3.type === ua ? n2(b3, a3, d3.props.children, e3, d3.key) : k2(b3, a3, d3, e3);
        case ta:
          return a3 = a3.get(d3.key === null ? c3 : d3.key) || null, l2(b3, a3, d3, e3);
      }
      if (Pg(d3) || La(d3))
        return a3 = a3.get(c3) || null, n2(b3, a3, d3, e3, null);
      Rg(b3, d3);
    }
    return null;
  }
  function x2(e3, g3, h3, k3) {
    for (var l3 = null, t2 = null, u2 = g3, z2 = g3 = 0, q2 = null; u2 !== null && z2 < h3.length; z2++) {
      u2.index > z2 ? (q2 = u2, u2 = null) : q2 = u2.sibling;
      var n3 = p2(e3, u2, h3[z2], k3);
      if (n3 === null) {
        u2 === null && (u2 = q2);
        break;
      }
      a2 && u2 && n3.alternate === null && b2(e3, u2);
      g3 = f2(n3, g3, z2);
      t2 === null ? l3 = n3 : t2.sibling = n3;
      t2 = n3;
      u2 = q2;
    }
    if (z2 === h3.length)
      return c2(e3, u2), l3;
    if (u2 === null) {
      for (; z2 < h3.length; z2++)
        u2 = A2(e3, h3[z2], k3), u2 !== null && (g3 = f2(u2, g3, z2), t2 === null ? l3 = u2 : t2.sibling = u2, t2 = u2);
      return l3;
    }
    for (u2 = d2(e3, u2); z2 < h3.length; z2++)
      q2 = C2(u2, e3, z2, h3[z2], k3), q2 !== null && (a2 && q2.alternate !== null && u2.delete(q2.key === null ? z2 : q2.key), g3 = f2(q2, g3, z2), t2 === null ? l3 = q2 : t2.sibling = q2, t2 = q2);
    a2 && u2.forEach(function(a3) {
      return b2(e3, a3);
    });
    return l3;
  }
  function w2(e3, g3, h3, k3) {
    var l3 = La(h3);
    if (typeof l3 !== "function")
      throw Error(y$2(150));
    h3 = l3.call(h3);
    if (h3 == null)
      throw Error(y$2(151));
    for (var t2 = l3 = null, u2 = g3, z2 = g3 = 0, q2 = null, n3 = h3.next(); u2 !== null && !n3.done; z2++, n3 = h3.next()) {
      u2.index > z2 ? (q2 = u2, u2 = null) : q2 = u2.sibling;
      var w3 = p2(e3, u2, n3.value, k3);
      if (w3 === null) {
        u2 === null && (u2 = q2);
        break;
      }
      a2 && u2 && w3.alternate === null && b2(e3, u2);
      g3 = f2(w3, g3, z2);
      t2 === null ? l3 = w3 : t2.sibling = w3;
      t2 = w3;
      u2 = q2;
    }
    if (n3.done)
      return c2(e3, u2), l3;
    if (u2 === null) {
      for (; !n3.done; z2++, n3 = h3.next())
        n3 = A2(e3, n3.value, k3), n3 !== null && (g3 = f2(n3, g3, z2), t2 === null ? l3 = n3 : t2.sibling = n3, t2 = n3);
      return l3;
    }
    for (u2 = d2(e3, u2); !n3.done; z2++, n3 = h3.next())
      n3 = C2(u2, e3, z2, n3.value, k3), n3 !== null && (a2 && n3.alternate !== null && u2.delete(n3.key === null ? z2 : n3.key), g3 = f2(n3, g3, z2), t2 === null ? l3 = n3 : t2.sibling = n3, t2 = n3);
    a2 && u2.forEach(function(a3) {
      return b2(e3, a3);
    });
    return l3;
  }
  return function(a3, d3, f3, h3) {
    var k3 = typeof f3 === "object" && f3 !== null && f3.type === ua && f3.key === null;
    k3 && (f3 = f3.props.children);
    var l3 = typeof f3 === "object" && f3 !== null;
    if (l3)
      switch (f3.$$typeof) {
        case sa:
          a: {
            l3 = f3.key;
            for (k3 = d3; k3 !== null; ) {
              if (k3.key === l3) {
                switch (k3.tag) {
                  case 7:
                    if (f3.type === ua) {
                      c2(a3, k3.sibling);
                      d3 = e2(k3, f3.props.children);
                      d3.return = a3;
                      a3 = d3;
                      break a;
                    }
                    break;
                  default:
                    if (k3.elementType === f3.type) {
                      c2(a3, k3.sibling);
                      d3 = e2(k3, f3.props);
                      d3.ref = Qg(a3, k3, f3);
                      d3.return = a3;
                      a3 = d3;
                      break a;
                    }
                }
                c2(a3, k3);
                break;
              } else
                b2(a3, k3);
              k3 = k3.sibling;
            }
            f3.type === ua ? (d3 = Xg(f3.props.children, a3.mode, h3, f3.key), d3.return = a3, a3 = d3) : (h3 = Vg(f3.type, f3.key, f3.props, null, a3.mode, h3), h3.ref = Qg(a3, d3, f3), h3.return = a3, a3 = h3);
          }
          return g2(a3);
        case ta:
          a: {
            for (k3 = f3.key; d3 !== null; ) {
              if (d3.key === k3)
                if (d3.tag === 4 && d3.stateNode.containerInfo === f3.containerInfo && d3.stateNode.implementation === f3.implementation) {
                  c2(a3, d3.sibling);
                  d3 = e2(d3, f3.children || []);
                  d3.return = a3;
                  a3 = d3;
                  break a;
                } else {
                  c2(a3, d3);
                  break;
                }
              else
                b2(a3, d3);
              d3 = d3.sibling;
            }
            d3 = Wg(f3, a3.mode, h3);
            d3.return = a3;
            a3 = d3;
          }
          return g2(a3);
      }
    if (typeof f3 === "string" || typeof f3 === "number")
      return f3 = "" + f3, d3 !== null && d3.tag === 6 ? (c2(a3, d3.sibling), d3 = e2(d3, f3), d3.return = a3, a3 = d3) : (c2(a3, d3), d3 = Ug(f3, a3.mode, h3), d3.return = a3, a3 = d3), g2(a3);
    if (Pg(f3))
      return x2(a3, d3, f3, h3);
    if (La(f3))
      return w2(a3, d3, f3, h3);
    l3 && Rg(a3, f3);
    if (typeof f3 === "undefined" && !k3)
      switch (a3.tag) {
        case 1:
        case 22:
        case 0:
        case 11:
        case 15:
          throw Error(y$2(152, Ra(a3.type) || "Component"));
      }
    return c2(a3, d3);
  };
}
var Yg = Sg(true), Zg = Sg(false), $g = {}, ah = Bf($g), bh = Bf($g), ch = Bf($g);
function dh(a2) {
  if (a2 === $g)
    throw Error(y$2(174));
  return a2;
}
function eh(a2, b2) {
  I$1(ch, b2);
  I$1(bh, a2);
  I$1(ah, $g);
  a2 = b2.nodeType;
  switch (a2) {
    case 9:
    case 11:
      b2 = (b2 = b2.documentElement) ? b2.namespaceURI : mb(null, "");
      break;
    default:
      a2 = a2 === 8 ? b2.parentNode : b2, b2 = a2.namespaceURI || null, a2 = a2.tagName, b2 = mb(b2, a2);
  }
  H(ah);
  I$1(ah, b2);
}
function fh() {
  H(ah);
  H(bh);
  H(ch);
}
function gh(a2) {
  dh(ch.current);
  var b2 = dh(ah.current);
  var c2 = mb(b2, a2.type);
  b2 !== c2 && (I$1(bh, a2), I$1(ah, c2));
}
function hh(a2) {
  bh.current === a2 && (H(ah), H(bh));
}
var P$1 = Bf(0);
function ih(a2) {
  for (var b2 = a2; b2 !== null; ) {
    if (b2.tag === 13) {
      var c2 = b2.memoizedState;
      if (c2 !== null && (c2 = c2.dehydrated, c2 === null || c2.data === "$?" || c2.data === "$!"))
        return b2;
    } else if (b2.tag === 19 && b2.memoizedProps.revealOrder !== void 0) {
      if ((b2.flags & 64) !== 0)
        return b2;
    } else if (b2.child !== null) {
      b2.child.return = b2;
      b2 = b2.child;
      continue;
    }
    if (b2 === a2)
      break;
    for (; b2.sibling === null; ) {
      if (b2.return === null || b2.return === a2)
        return null;
      b2 = b2.return;
    }
    b2.sibling.return = b2.return;
    b2 = b2.sibling;
  }
  return null;
}
var jh = null, kh = null, lh = false;
function mh(a2, b2) {
  var c2 = nh(5, null, null, 0);
  c2.elementType = "DELETED";
  c2.type = "DELETED";
  c2.stateNode = b2;
  c2.return = a2;
  c2.flags = 8;
  a2.lastEffect !== null ? (a2.lastEffect.nextEffect = c2, a2.lastEffect = c2) : a2.firstEffect = a2.lastEffect = c2;
}
function oh(a2, b2) {
  switch (a2.tag) {
    case 5:
      var c2 = a2.type;
      b2 = b2.nodeType !== 1 || c2.toLowerCase() !== b2.nodeName.toLowerCase() ? null : b2;
      return b2 !== null ? (a2.stateNode = b2, true) : false;
    case 6:
      return b2 = a2.pendingProps === "" || b2.nodeType !== 3 ? null : b2, b2 !== null ? (a2.stateNode = b2, true) : false;
    case 13:
      return false;
    default:
      return false;
  }
}
function ph(a2) {
  if (lh) {
    var b2 = kh;
    if (b2) {
      var c2 = b2;
      if (!oh(a2, b2)) {
        b2 = rf(c2.nextSibling);
        if (!b2 || !oh(a2, b2)) {
          a2.flags = a2.flags & -1025 | 2;
          lh = false;
          jh = a2;
          return;
        }
        mh(jh, c2);
      }
      jh = a2;
      kh = rf(b2.firstChild);
    } else
      a2.flags = a2.flags & -1025 | 2, lh = false, jh = a2;
  }
}
function qh(a2) {
  for (a2 = a2.return; a2 !== null && a2.tag !== 5 && a2.tag !== 3 && a2.tag !== 13; )
    a2 = a2.return;
  jh = a2;
}
function rh(a2) {
  if (a2 !== jh)
    return false;
  if (!lh)
    return qh(a2), lh = true, false;
  var b2 = a2.type;
  if (a2.tag !== 5 || b2 !== "head" && b2 !== "body" && !nf(b2, a2.memoizedProps))
    for (b2 = kh; b2; )
      mh(a2, b2), b2 = rf(b2.nextSibling);
  qh(a2);
  if (a2.tag === 13) {
    a2 = a2.memoizedState;
    a2 = a2 !== null ? a2.dehydrated : null;
    if (!a2)
      throw Error(y$2(317));
    a: {
      a2 = a2.nextSibling;
      for (b2 = 0; a2; ) {
        if (a2.nodeType === 8) {
          var c2 = a2.data;
          if (c2 === "/$") {
            if (b2 === 0) {
              kh = rf(a2.nextSibling);
              break a;
            }
            b2--;
          } else
            c2 !== "$" && c2 !== "$!" && c2 !== "$?" || b2++;
        }
        a2 = a2.nextSibling;
      }
      kh = null;
    }
  } else
    kh = jh ? rf(a2.stateNode.nextSibling) : null;
  return true;
}
function sh() {
  kh = jh = null;
  lh = false;
}
var th = [];
function uh() {
  for (var a2 = 0; a2 < th.length; a2++)
    th[a2]._workInProgressVersionPrimary = null;
  th.length = 0;
}
var vh$1 = ra.ReactCurrentDispatcher, wh = ra.ReactCurrentBatchConfig, xh = 0, R = null, S$1 = null, T = null, yh = false, zh = false;
function Ah() {
  throw Error(y$2(321));
}
function Bh(a2, b2) {
  if (b2 === null)
    return false;
  for (var c2 = 0; c2 < b2.length && c2 < a2.length; c2++)
    if (!He(a2[c2], b2[c2]))
      return false;
  return true;
}
function Ch(a2, b2, c2, d2, e2, f2) {
  xh = f2;
  R = b2;
  b2.memoizedState = null;
  b2.updateQueue = null;
  b2.lanes = 0;
  vh$1.current = a2 === null || a2.memoizedState === null ? Dh : Eh;
  a2 = c2(d2, e2);
  if (zh) {
    f2 = 0;
    do {
      zh = false;
      if (!(25 > f2))
        throw Error(y$2(301));
      f2 += 1;
      T = S$1 = null;
      b2.updateQueue = null;
      vh$1.current = Fh;
      a2 = c2(d2, e2);
    } while (zh);
  }
  vh$1.current = Gh;
  b2 = S$1 !== null && S$1.next !== null;
  xh = 0;
  T = S$1 = R = null;
  yh = false;
  if (b2)
    throw Error(y$2(300));
  return a2;
}
function Hh() {
  var a2 = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
  T === null ? R.memoizedState = T = a2 : T = T.next = a2;
  return T;
}
function Ih() {
  if (S$1 === null) {
    var a2 = R.alternate;
    a2 = a2 !== null ? a2.memoizedState : null;
  } else
    a2 = S$1.next;
  var b2 = T === null ? R.memoizedState : T.next;
  if (b2 !== null)
    T = b2, S$1 = a2;
  else {
    if (a2 === null)
      throw Error(y$2(310));
    S$1 = a2;
    a2 = { memoizedState: S$1.memoizedState, baseState: S$1.baseState, baseQueue: S$1.baseQueue, queue: S$1.queue, next: null };
    T === null ? R.memoizedState = T = a2 : T = T.next = a2;
  }
  return T;
}
function Jh(a2, b2) {
  return typeof b2 === "function" ? b2(a2) : b2;
}
function Kh(a2) {
  var b2 = Ih(), c2 = b2.queue;
  if (c2 === null)
    throw Error(y$2(311));
  c2.lastRenderedReducer = a2;
  var d2 = S$1, e2 = d2.baseQueue, f2 = c2.pending;
  if (f2 !== null) {
    if (e2 !== null) {
      var g2 = e2.next;
      e2.next = f2.next;
      f2.next = g2;
    }
    d2.baseQueue = e2 = f2;
    c2.pending = null;
  }
  if (e2 !== null) {
    e2 = e2.next;
    d2 = d2.baseState;
    var h2 = g2 = f2 = null, k2 = e2;
    do {
      var l2 = k2.lane;
      if ((xh & l2) === l2)
        h2 !== null && (h2 = h2.next = { lane: 0, action: k2.action, eagerReducer: k2.eagerReducer, eagerState: k2.eagerState, next: null }), d2 = k2.eagerReducer === a2 ? k2.eagerState : a2(d2, k2.action);
      else {
        var n2 = {
          lane: l2,
          action: k2.action,
          eagerReducer: k2.eagerReducer,
          eagerState: k2.eagerState,
          next: null
        };
        h2 === null ? (g2 = h2 = n2, f2 = d2) : h2 = h2.next = n2;
        R.lanes |= l2;
        Dg |= l2;
      }
      k2 = k2.next;
    } while (k2 !== null && k2 !== e2);
    h2 === null ? f2 = d2 : h2.next = g2;
    He(d2, b2.memoizedState) || (ug = true);
    b2.memoizedState = d2;
    b2.baseState = f2;
    b2.baseQueue = h2;
    c2.lastRenderedState = d2;
  }
  return [b2.memoizedState, c2.dispatch];
}
function Lh(a2) {
  var b2 = Ih(), c2 = b2.queue;
  if (c2 === null)
    throw Error(y$2(311));
  c2.lastRenderedReducer = a2;
  var d2 = c2.dispatch, e2 = c2.pending, f2 = b2.memoizedState;
  if (e2 !== null) {
    c2.pending = null;
    var g2 = e2 = e2.next;
    do
      f2 = a2(f2, g2.action), g2 = g2.next;
    while (g2 !== e2);
    He(f2, b2.memoizedState) || (ug = true);
    b2.memoizedState = f2;
    b2.baseQueue === null && (b2.baseState = f2);
    c2.lastRenderedState = f2;
  }
  return [f2, d2];
}
function Mh(a2, b2, c2) {
  var d2 = b2._getVersion;
  d2 = d2(b2._source);
  var e2 = b2._workInProgressVersionPrimary;
  if (e2 !== null)
    a2 = e2 === d2;
  else if (a2 = a2.mutableReadLanes, a2 = (xh & a2) === a2)
    b2._workInProgressVersionPrimary = d2, th.push(b2);
  if (a2)
    return c2(b2._source);
  th.push(b2);
  throw Error(y$2(350));
}
function Nh(a2, b2, c2, d2) {
  var e2 = U$1;
  if (e2 === null)
    throw Error(y$2(349));
  var f2 = b2._getVersion, g2 = f2(b2._source), h2 = vh$1.current, k2 = h2.useState(function() {
    return Mh(e2, b2, c2);
  }), l2 = k2[1], n2 = k2[0];
  k2 = T;
  var A2 = a2.memoizedState, p2 = A2.refs, C2 = p2.getSnapshot, x2 = A2.source;
  A2 = A2.subscribe;
  var w2 = R;
  a2.memoizedState = { refs: p2, source: b2, subscribe: d2 };
  h2.useEffect(function() {
    p2.getSnapshot = c2;
    p2.setSnapshot = l2;
    var a3 = f2(b2._source);
    if (!He(g2, a3)) {
      a3 = c2(b2._source);
      He(n2, a3) || (l2(a3), a3 = Ig(w2), e2.mutableReadLanes |= a3 & e2.pendingLanes);
      a3 = e2.mutableReadLanes;
      e2.entangledLanes |= a3;
      for (var d3 = e2.entanglements, h3 = a3; 0 < h3; ) {
        var k3 = 31 - Vc(h3), v2 = 1 << k3;
        d3[k3] |= a3;
        h3 &= ~v2;
      }
    }
  }, [c2, b2, d2]);
  h2.useEffect(function() {
    return d2(b2._source, function() {
      var a3 = p2.getSnapshot, c3 = p2.setSnapshot;
      try {
        c3(a3(b2._source));
        var d3 = Ig(w2);
        e2.mutableReadLanes |= d3 & e2.pendingLanes;
      } catch (q2) {
        c3(function() {
          throw q2;
        });
      }
    });
  }, [b2, d2]);
  He(C2, c2) && He(x2, b2) && He(A2, d2) || (a2 = { pending: null, dispatch: null, lastRenderedReducer: Jh, lastRenderedState: n2 }, a2.dispatch = l2 = Oh.bind(null, R, a2), k2.queue = a2, k2.baseQueue = null, n2 = Mh(e2, b2, c2), k2.memoizedState = k2.baseState = n2);
  return n2;
}
function Ph(a2, b2, c2) {
  var d2 = Ih();
  return Nh(d2, a2, b2, c2);
}
function Qh(a2) {
  var b2 = Hh();
  typeof a2 === "function" && (a2 = a2());
  b2.memoizedState = b2.baseState = a2;
  a2 = b2.queue = { pending: null, dispatch: null, lastRenderedReducer: Jh, lastRenderedState: a2 };
  a2 = a2.dispatch = Oh.bind(null, R, a2);
  return [b2.memoizedState, a2];
}
function Rh(a2, b2, c2, d2) {
  a2 = { tag: a2, create: b2, destroy: c2, deps: d2, next: null };
  b2 = R.updateQueue;
  b2 === null ? (b2 = { lastEffect: null }, R.updateQueue = b2, b2.lastEffect = a2.next = a2) : (c2 = b2.lastEffect, c2 === null ? b2.lastEffect = a2.next = a2 : (d2 = c2.next, c2.next = a2, a2.next = d2, b2.lastEffect = a2));
  return a2;
}
function Sh(a2) {
  var b2 = Hh();
  a2 = { current: a2 };
  return b2.memoizedState = a2;
}
function Th() {
  return Ih().memoizedState;
}
function Uh(a2, b2, c2, d2) {
  var e2 = Hh();
  R.flags |= a2;
  e2.memoizedState = Rh(1 | b2, c2, void 0, d2 === void 0 ? null : d2);
}
function Vh(a2, b2, c2, d2) {
  var e2 = Ih();
  d2 = d2 === void 0 ? null : d2;
  var f2 = void 0;
  if (S$1 !== null) {
    var g2 = S$1.memoizedState;
    f2 = g2.destroy;
    if (d2 !== null && Bh(d2, g2.deps)) {
      Rh(b2, c2, f2, d2);
      return;
    }
  }
  R.flags |= a2;
  e2.memoizedState = Rh(1 | b2, c2, f2, d2);
}
function Wh(a2, b2) {
  return Uh(516, 4, a2, b2);
}
function Xh(a2, b2) {
  return Vh(516, 4, a2, b2);
}
function Yh(a2, b2) {
  return Vh(4, 2, a2, b2);
}
function Zh(a2, b2) {
  if (typeof b2 === "function")
    return a2 = a2(), b2(a2), function() {
      b2(null);
    };
  if (b2 !== null && b2 !== void 0)
    return a2 = a2(), b2.current = a2, function() {
      b2.current = null;
    };
}
function $h(a2, b2, c2) {
  c2 = c2 !== null && c2 !== void 0 ? c2.concat([a2]) : null;
  return Vh(4, 2, Zh.bind(null, b2, a2), c2);
}
function ai() {
}
function bi(a2, b2) {
  var c2 = Ih();
  b2 = b2 === void 0 ? null : b2;
  var d2 = c2.memoizedState;
  if (d2 !== null && b2 !== null && Bh(b2, d2[1]))
    return d2[0];
  c2.memoizedState = [a2, b2];
  return a2;
}
function ci(a2, b2) {
  var c2 = Ih();
  b2 = b2 === void 0 ? null : b2;
  var d2 = c2.memoizedState;
  if (d2 !== null && b2 !== null && Bh(b2, d2[1]))
    return d2[0];
  a2 = a2();
  c2.memoizedState = [a2, b2];
  return a2;
}
function di(a2, b2) {
  var c2 = eg();
  gg(98 > c2 ? 98 : c2, function() {
    a2(true);
  });
  gg(97 < c2 ? 97 : c2, function() {
    var c3 = wh.transition;
    wh.transition = 1;
    try {
      a2(false), b2();
    } finally {
      wh.transition = c3;
    }
  });
}
function Oh(a2, b2, c2) {
  var d2 = Hg(), e2 = Ig(a2), f2 = { lane: e2, action: c2, eagerReducer: null, eagerState: null, next: null }, g2 = b2.pending;
  g2 === null ? f2.next = f2 : (f2.next = g2.next, g2.next = f2);
  b2.pending = f2;
  g2 = a2.alternate;
  if (a2 === R || g2 !== null && g2 === R)
    zh = yh = true;
  else {
    if (a2.lanes === 0 && (g2 === null || g2.lanes === 0) && (g2 = b2.lastRenderedReducer, g2 !== null))
      try {
        var h2 = b2.lastRenderedState, k2 = g2(h2, c2);
        f2.eagerReducer = g2;
        f2.eagerState = k2;
        if (He(k2, h2))
          return;
      } catch (l2) {
      } finally {
      }
    Jg(a2, e2, d2);
  }
}
var Gh = { readContext: vg, useCallback: Ah, useContext: Ah, useEffect: Ah, useImperativeHandle: Ah, useLayoutEffect: Ah, useMemo: Ah, useReducer: Ah, useRef: Ah, useState: Ah, useDebugValue: Ah, useDeferredValue: Ah, useTransition: Ah, useMutableSource: Ah, useOpaqueIdentifier: Ah, unstable_isNewReconciler: false }, Dh = { readContext: vg, useCallback: function(a2, b2) {
  Hh().memoizedState = [a2, b2 === void 0 ? null : b2];
  return a2;
}, useContext: vg, useEffect: Wh, useImperativeHandle: function(a2, b2, c2) {
  c2 = c2 !== null && c2 !== void 0 ? c2.concat([a2]) : null;
  return Uh(4, 2, Zh.bind(null, b2, a2), c2);
}, useLayoutEffect: function(a2, b2) {
  return Uh(4, 2, a2, b2);
}, useMemo: function(a2, b2) {
  var c2 = Hh();
  b2 = b2 === void 0 ? null : b2;
  a2 = a2();
  c2.memoizedState = [a2, b2];
  return a2;
}, useReducer: function(a2, b2, c2) {
  var d2 = Hh();
  b2 = c2 !== void 0 ? c2(b2) : b2;
  d2.memoizedState = d2.baseState = b2;
  a2 = d2.queue = { pending: null, dispatch: null, lastRenderedReducer: a2, lastRenderedState: b2 };
  a2 = a2.dispatch = Oh.bind(null, R, a2);
  return [d2.memoizedState, a2];
}, useRef: Sh, useState: Qh, useDebugValue: ai, useDeferredValue: function(a2) {
  var b2 = Qh(a2), c2 = b2[0], d2 = b2[1];
  Wh(function() {
    var b3 = wh.transition;
    wh.transition = 1;
    try {
      d2(a2);
    } finally {
      wh.transition = b3;
    }
  }, [a2]);
  return c2;
}, useTransition: function() {
  var a2 = Qh(false), b2 = a2[0];
  a2 = di.bind(null, a2[1]);
  Sh(a2);
  return [a2, b2];
}, useMutableSource: function(a2, b2, c2) {
  var d2 = Hh();
  d2.memoizedState = { refs: { getSnapshot: b2, setSnapshot: null }, source: a2, subscribe: c2 };
  return Nh(d2, a2, b2, c2);
}, useOpaqueIdentifier: function() {
  if (lh) {
    var a2 = false, b2 = uf(function() {
      a2 || (a2 = true, c2("r:" + (tf++).toString(36)));
      throw Error(y$2(355));
    }), c2 = Qh(b2)[1];
    (R.mode & 2) === 0 && (R.flags |= 516, Rh(5, function() {
      c2("r:" + (tf++).toString(36));
    }, void 0, null));
    return b2;
  }
  b2 = "r:" + (tf++).toString(36);
  Qh(b2);
  return b2;
}, unstable_isNewReconciler: false }, Eh = { readContext: vg, useCallback: bi, useContext: vg, useEffect: Xh, useImperativeHandle: $h, useLayoutEffect: Yh, useMemo: ci, useReducer: Kh, useRef: Th, useState: function() {
  return Kh(Jh);
}, useDebugValue: ai, useDeferredValue: function(a2) {
  var b2 = Kh(Jh), c2 = b2[0], d2 = b2[1];
  Xh(function() {
    var b3 = wh.transition;
    wh.transition = 1;
    try {
      d2(a2);
    } finally {
      wh.transition = b3;
    }
  }, [a2]);
  return c2;
}, useTransition: function() {
  var a2 = Kh(Jh)[0];
  return [
    Th().current,
    a2
  ];
}, useMutableSource: Ph, useOpaqueIdentifier: function() {
  return Kh(Jh)[0];
}, unstable_isNewReconciler: false }, Fh = { readContext: vg, useCallback: bi, useContext: vg, useEffect: Xh, useImperativeHandle: $h, useLayoutEffect: Yh, useMemo: ci, useReducer: Lh, useRef: Th, useState: function() {
  return Lh(Jh);
}, useDebugValue: ai, useDeferredValue: function(a2) {
  var b2 = Lh(Jh), c2 = b2[0], d2 = b2[1];
  Xh(function() {
    var b3 = wh.transition;
    wh.transition = 1;
    try {
      d2(a2);
    } finally {
      wh.transition = b3;
    }
  }, [a2]);
  return c2;
}, useTransition: function() {
  var a2 = Lh(Jh)[0];
  return [
    Th().current,
    a2
  ];
}, useMutableSource: Ph, useOpaqueIdentifier: function() {
  return Lh(Jh)[0];
}, unstable_isNewReconciler: false }, ei = ra.ReactCurrentOwner, ug = false;
function fi(a2, b2, c2, d2) {
  b2.child = a2 === null ? Zg(b2, null, c2, d2) : Yg(b2, a2.child, c2, d2);
}
function gi(a2, b2, c2, d2, e2) {
  c2 = c2.render;
  var f2 = b2.ref;
  tg(b2, e2);
  d2 = Ch(a2, b2, c2, d2, f2, e2);
  if (a2 !== null && !ug)
    return b2.updateQueue = a2.updateQueue, b2.flags &= -517, a2.lanes &= ~e2, hi(a2, b2, e2);
  b2.flags |= 1;
  fi(a2, b2, d2, e2);
  return b2.child;
}
function ii(a2, b2, c2, d2, e2, f2) {
  if (a2 === null) {
    var g2 = c2.type;
    if (typeof g2 === "function" && !ji(g2) && g2.defaultProps === void 0 && c2.compare === null && c2.defaultProps === void 0)
      return b2.tag = 15, b2.type = g2, ki(a2, b2, g2, d2, e2, f2);
    a2 = Vg(c2.type, null, d2, b2, b2.mode, f2);
    a2.ref = b2.ref;
    a2.return = b2;
    return b2.child = a2;
  }
  g2 = a2.child;
  if ((e2 & f2) === 0 && (e2 = g2.memoizedProps, c2 = c2.compare, c2 = c2 !== null ? c2 : Je, c2(e2, d2) && a2.ref === b2.ref))
    return hi(a2, b2, f2);
  b2.flags |= 1;
  a2 = Tg(g2, d2);
  a2.ref = b2.ref;
  a2.return = b2;
  return b2.child = a2;
}
function ki(a2, b2, c2, d2, e2, f2) {
  if (a2 !== null && Je(a2.memoizedProps, d2) && a2.ref === b2.ref)
    if (ug = false, (f2 & e2) !== 0)
      (a2.flags & 16384) !== 0 && (ug = true);
    else
      return b2.lanes = a2.lanes, hi(a2, b2, f2);
  return li(a2, b2, c2, d2, f2);
}
function mi(a2, b2, c2) {
  var d2 = b2.pendingProps, e2 = d2.children, f2 = a2 !== null ? a2.memoizedState : null;
  if (d2.mode === "hidden" || d2.mode === "unstable-defer-without-hiding")
    if ((b2.mode & 4) === 0)
      b2.memoizedState = { baseLanes: 0 }, ni(b2, c2);
    else if ((c2 & 1073741824) !== 0)
      b2.memoizedState = { baseLanes: 0 }, ni(b2, f2 !== null ? f2.baseLanes : c2);
    else
      return a2 = f2 !== null ? f2.baseLanes | c2 : c2, b2.lanes = b2.childLanes = 1073741824, b2.memoizedState = { baseLanes: a2 }, ni(b2, a2), null;
  else
    f2 !== null ? (d2 = f2.baseLanes | c2, b2.memoizedState = null) : d2 = c2, ni(b2, d2);
  fi(a2, b2, e2, c2);
  return b2.child;
}
function oi(a2, b2) {
  var c2 = b2.ref;
  if (a2 === null && c2 !== null || a2 !== null && a2.ref !== c2)
    b2.flags |= 128;
}
function li(a2, b2, c2, d2, e2) {
  var f2 = Ff(c2) ? Df : M.current;
  f2 = Ef(b2, f2);
  tg(b2, e2);
  c2 = Ch(a2, b2, c2, d2, f2, e2);
  if (a2 !== null && !ug)
    return b2.updateQueue = a2.updateQueue, b2.flags &= -517, a2.lanes &= ~e2, hi(a2, b2, e2);
  b2.flags |= 1;
  fi(a2, b2, c2, e2);
  return b2.child;
}
function pi(a2, b2, c2, d2, e2) {
  if (Ff(c2)) {
    var f2 = true;
    Jf(b2);
  } else
    f2 = false;
  tg(b2, e2);
  if (b2.stateNode === null)
    a2 !== null && (a2.alternate = null, b2.alternate = null, b2.flags |= 2), Mg(b2, c2, d2), Og(b2, c2, d2, e2), d2 = true;
  else if (a2 === null) {
    var g2 = b2.stateNode, h2 = b2.memoizedProps;
    g2.props = h2;
    var k2 = g2.context, l2 = c2.contextType;
    typeof l2 === "object" && l2 !== null ? l2 = vg(l2) : (l2 = Ff(c2) ? Df : M.current, l2 = Ef(b2, l2));
    var n2 = c2.getDerivedStateFromProps, A2 = typeof n2 === "function" || typeof g2.getSnapshotBeforeUpdate === "function";
    A2 || typeof g2.UNSAFE_componentWillReceiveProps !== "function" && typeof g2.componentWillReceiveProps !== "function" || (h2 !== d2 || k2 !== l2) && Ng(b2, g2, d2, l2);
    wg = false;
    var p2 = b2.memoizedState;
    g2.state = p2;
    Cg(b2, d2, g2, e2);
    k2 = b2.memoizedState;
    h2 !== d2 || p2 !== k2 || N$1.current || wg ? (typeof n2 === "function" && (Gg(b2, c2, n2, d2), k2 = b2.memoizedState), (h2 = wg || Lg(b2, c2, h2, d2, p2, k2, l2)) ? (A2 || typeof g2.UNSAFE_componentWillMount !== "function" && typeof g2.componentWillMount !== "function" || (typeof g2.componentWillMount === "function" && g2.componentWillMount(), typeof g2.UNSAFE_componentWillMount === "function" && g2.UNSAFE_componentWillMount()), typeof g2.componentDidMount === "function" && (b2.flags |= 4)) : (typeof g2.componentDidMount === "function" && (b2.flags |= 4), b2.memoizedProps = d2, b2.memoizedState = k2), g2.props = d2, g2.state = k2, g2.context = l2, d2 = h2) : (typeof g2.componentDidMount === "function" && (b2.flags |= 4), d2 = false);
  } else {
    g2 = b2.stateNode;
    yg(a2, b2);
    h2 = b2.memoizedProps;
    l2 = b2.type === b2.elementType ? h2 : lg(b2.type, h2);
    g2.props = l2;
    A2 = b2.pendingProps;
    p2 = g2.context;
    k2 = c2.contextType;
    typeof k2 === "object" && k2 !== null ? k2 = vg(k2) : (k2 = Ff(c2) ? Df : M.current, k2 = Ef(b2, k2));
    var C2 = c2.getDerivedStateFromProps;
    (n2 = typeof C2 === "function" || typeof g2.getSnapshotBeforeUpdate === "function") || typeof g2.UNSAFE_componentWillReceiveProps !== "function" && typeof g2.componentWillReceiveProps !== "function" || (h2 !== A2 || p2 !== k2) && Ng(b2, g2, d2, k2);
    wg = false;
    p2 = b2.memoizedState;
    g2.state = p2;
    Cg(b2, d2, g2, e2);
    var x2 = b2.memoizedState;
    h2 !== A2 || p2 !== x2 || N$1.current || wg ? (typeof C2 === "function" && (Gg(b2, c2, C2, d2), x2 = b2.memoizedState), (l2 = wg || Lg(b2, c2, l2, d2, p2, x2, k2)) ? (n2 || typeof g2.UNSAFE_componentWillUpdate !== "function" && typeof g2.componentWillUpdate !== "function" || (typeof g2.componentWillUpdate === "function" && g2.componentWillUpdate(d2, x2, k2), typeof g2.UNSAFE_componentWillUpdate === "function" && g2.UNSAFE_componentWillUpdate(d2, x2, k2)), typeof g2.componentDidUpdate === "function" && (b2.flags |= 4), typeof g2.getSnapshotBeforeUpdate === "function" && (b2.flags |= 256)) : (typeof g2.componentDidUpdate !== "function" || h2 === a2.memoizedProps && p2 === a2.memoizedState || (b2.flags |= 4), typeof g2.getSnapshotBeforeUpdate !== "function" || h2 === a2.memoizedProps && p2 === a2.memoizedState || (b2.flags |= 256), b2.memoizedProps = d2, b2.memoizedState = x2), g2.props = d2, g2.state = x2, g2.context = k2, d2 = l2) : (typeof g2.componentDidUpdate !== "function" || h2 === a2.memoizedProps && p2 === a2.memoizedState || (b2.flags |= 4), typeof g2.getSnapshotBeforeUpdate !== "function" || h2 === a2.memoizedProps && p2 === a2.memoizedState || (b2.flags |= 256), d2 = false);
  }
  return qi(a2, b2, c2, d2, f2, e2);
}
function qi(a2, b2, c2, d2, e2, f2) {
  oi(a2, b2);
  var g2 = (b2.flags & 64) !== 0;
  if (!d2 && !g2)
    return e2 && Kf(b2, c2, false), hi(a2, b2, f2);
  d2 = b2.stateNode;
  ei.current = b2;
  var h2 = g2 && typeof c2.getDerivedStateFromError !== "function" ? null : d2.render();
  b2.flags |= 1;
  a2 !== null && g2 ? (b2.child = Yg(b2, a2.child, null, f2), b2.child = Yg(b2, null, h2, f2)) : fi(a2, b2, h2, f2);
  b2.memoizedState = d2.state;
  e2 && Kf(b2, c2, true);
  return b2.child;
}
function ri(a2) {
  var b2 = a2.stateNode;
  b2.pendingContext ? Hf(a2, b2.pendingContext, b2.pendingContext !== b2.context) : b2.context && Hf(a2, b2.context, false);
  eh(a2, b2.containerInfo);
}
var si = { dehydrated: null, retryLane: 0 };
function ti(a2, b2, c2) {
  var d2 = b2.pendingProps, e2 = P$1.current, f2 = false, g2;
  (g2 = (b2.flags & 64) !== 0) || (g2 = a2 !== null && a2.memoizedState === null ? false : (e2 & 2) !== 0);
  g2 ? (f2 = true, b2.flags &= -65) : a2 !== null && a2.memoizedState === null || d2.fallback === void 0 || d2.unstable_avoidThisFallback === true || (e2 |= 1);
  I$1(P$1, e2 & 1);
  if (a2 === null) {
    d2.fallback !== void 0 && ph(b2);
    a2 = d2.children;
    e2 = d2.fallback;
    if (f2)
      return a2 = ui(b2, a2, e2, c2), b2.child.memoizedState = { baseLanes: c2 }, b2.memoizedState = si, a2;
    if (typeof d2.unstable_expectedLoadTime === "number")
      return a2 = ui(b2, a2, e2, c2), b2.child.memoizedState = { baseLanes: c2 }, b2.memoizedState = si, b2.lanes = 33554432, a2;
    c2 = vi({ mode: "visible", children: a2 }, b2.mode, c2, null);
    c2.return = b2;
    return b2.child = c2;
  }
  if (a2.memoizedState !== null) {
    if (f2)
      return d2 = wi(a2, b2, d2.children, d2.fallback, c2), f2 = b2.child, e2 = a2.child.memoizedState, f2.memoizedState = e2 === null ? { baseLanes: c2 } : { baseLanes: e2.baseLanes | c2 }, f2.childLanes = a2.childLanes & ~c2, b2.memoizedState = si, d2;
    c2 = xi(a2, b2, d2.children, c2);
    b2.memoizedState = null;
    return c2;
  }
  if (f2)
    return d2 = wi(a2, b2, d2.children, d2.fallback, c2), f2 = b2.child, e2 = a2.child.memoizedState, f2.memoizedState = e2 === null ? { baseLanes: c2 } : { baseLanes: e2.baseLanes | c2 }, f2.childLanes = a2.childLanes & ~c2, b2.memoizedState = si, d2;
  c2 = xi(a2, b2, d2.children, c2);
  b2.memoizedState = null;
  return c2;
}
function ui(a2, b2, c2, d2) {
  var e2 = a2.mode, f2 = a2.child;
  b2 = { mode: "hidden", children: b2 };
  (e2 & 2) === 0 && f2 !== null ? (f2.childLanes = 0, f2.pendingProps = b2) : f2 = vi(b2, e2, 0, null);
  c2 = Xg(c2, e2, d2, null);
  f2.return = a2;
  c2.return = a2;
  f2.sibling = c2;
  a2.child = f2;
  return c2;
}
function xi(a2, b2, c2, d2) {
  var e2 = a2.child;
  a2 = e2.sibling;
  c2 = Tg(e2, { mode: "visible", children: c2 });
  (b2.mode & 2) === 0 && (c2.lanes = d2);
  c2.return = b2;
  c2.sibling = null;
  a2 !== null && (a2.nextEffect = null, a2.flags = 8, b2.firstEffect = b2.lastEffect = a2);
  return b2.child = c2;
}
function wi(a2, b2, c2, d2, e2) {
  var f2 = b2.mode, g2 = a2.child;
  a2 = g2.sibling;
  var h2 = { mode: "hidden", children: c2 };
  (f2 & 2) === 0 && b2.child !== g2 ? (c2 = b2.child, c2.childLanes = 0, c2.pendingProps = h2, g2 = c2.lastEffect, g2 !== null ? (b2.firstEffect = c2.firstEffect, b2.lastEffect = g2, g2.nextEffect = null) : b2.firstEffect = b2.lastEffect = null) : c2 = Tg(g2, h2);
  a2 !== null ? d2 = Tg(a2, d2) : (d2 = Xg(d2, f2, e2, null), d2.flags |= 2);
  d2.return = b2;
  c2.return = b2;
  c2.sibling = d2;
  b2.child = c2;
  return d2;
}
function yi(a2, b2) {
  a2.lanes |= b2;
  var c2 = a2.alternate;
  c2 !== null && (c2.lanes |= b2);
  sg(a2.return, b2);
}
function zi(a2, b2, c2, d2, e2, f2) {
  var g2 = a2.memoizedState;
  g2 === null ? a2.memoizedState = { isBackwards: b2, rendering: null, renderingStartTime: 0, last: d2, tail: c2, tailMode: e2, lastEffect: f2 } : (g2.isBackwards = b2, g2.rendering = null, g2.renderingStartTime = 0, g2.last = d2, g2.tail = c2, g2.tailMode = e2, g2.lastEffect = f2);
}
function Ai(a2, b2, c2) {
  var d2 = b2.pendingProps, e2 = d2.revealOrder, f2 = d2.tail;
  fi(a2, b2, d2.children, c2);
  d2 = P$1.current;
  if ((d2 & 2) !== 0)
    d2 = d2 & 1 | 2, b2.flags |= 64;
  else {
    if (a2 !== null && (a2.flags & 64) !== 0)
      a:
        for (a2 = b2.child; a2 !== null; ) {
          if (a2.tag === 13)
            a2.memoizedState !== null && yi(a2, c2);
          else if (a2.tag === 19)
            yi(a2, c2);
          else if (a2.child !== null) {
            a2.child.return = a2;
            a2 = a2.child;
            continue;
          }
          if (a2 === b2)
            break a;
          for (; a2.sibling === null; ) {
            if (a2.return === null || a2.return === b2)
              break a;
            a2 = a2.return;
          }
          a2.sibling.return = a2.return;
          a2 = a2.sibling;
        }
    d2 &= 1;
  }
  I$1(P$1, d2);
  if ((b2.mode & 2) === 0)
    b2.memoizedState = null;
  else
    switch (e2) {
      case "forwards":
        c2 = b2.child;
        for (e2 = null; c2 !== null; )
          a2 = c2.alternate, a2 !== null && ih(a2) === null && (e2 = c2), c2 = c2.sibling;
        c2 = e2;
        c2 === null ? (e2 = b2.child, b2.child = null) : (e2 = c2.sibling, c2.sibling = null);
        zi(b2, false, e2, c2, f2, b2.lastEffect);
        break;
      case "backwards":
        c2 = null;
        e2 = b2.child;
        for (b2.child = null; e2 !== null; ) {
          a2 = e2.alternate;
          if (a2 !== null && ih(a2) === null) {
            b2.child = e2;
            break;
          }
          a2 = e2.sibling;
          e2.sibling = c2;
          c2 = e2;
          e2 = a2;
        }
        zi(b2, true, c2, null, f2, b2.lastEffect);
        break;
      case "together":
        zi(b2, false, null, null, void 0, b2.lastEffect);
        break;
      default:
        b2.memoizedState = null;
    }
  return b2.child;
}
function hi(a2, b2, c2) {
  a2 !== null && (b2.dependencies = a2.dependencies);
  Dg |= b2.lanes;
  if ((c2 & b2.childLanes) !== 0) {
    if (a2 !== null && b2.child !== a2.child)
      throw Error(y$2(153));
    if (b2.child !== null) {
      a2 = b2.child;
      c2 = Tg(a2, a2.pendingProps);
      b2.child = c2;
      for (c2.return = b2; a2.sibling !== null; )
        a2 = a2.sibling, c2 = c2.sibling = Tg(a2, a2.pendingProps), c2.return = b2;
      c2.sibling = null;
    }
    return b2.child;
  }
  return null;
}
var Bi, Ci, Di, Ei;
Bi = function(a2, b2) {
  for (var c2 = b2.child; c2 !== null; ) {
    if (c2.tag === 5 || c2.tag === 6)
      a2.appendChild(c2.stateNode);
    else if (c2.tag !== 4 && c2.child !== null) {
      c2.child.return = c2;
      c2 = c2.child;
      continue;
    }
    if (c2 === b2)
      break;
    for (; c2.sibling === null; ) {
      if (c2.return === null || c2.return === b2)
        return;
      c2 = c2.return;
    }
    c2.sibling.return = c2.return;
    c2 = c2.sibling;
  }
};
Ci = function() {
};
Di = function(a2, b2, c2, d2) {
  var e2 = a2.memoizedProps;
  if (e2 !== d2) {
    a2 = b2.stateNode;
    dh(ah.current);
    var f2 = null;
    switch (c2) {
      case "input":
        e2 = Ya(a2, e2);
        d2 = Ya(a2, d2);
        f2 = [];
        break;
      case "option":
        e2 = eb(a2, e2);
        d2 = eb(a2, d2);
        f2 = [];
        break;
      case "select":
        e2 = m$3({}, e2, { value: void 0 });
        d2 = m$3({}, d2, { value: void 0 });
        f2 = [];
        break;
      case "textarea":
        e2 = gb(a2, e2);
        d2 = gb(a2, d2);
        f2 = [];
        break;
      default:
        typeof e2.onClick !== "function" && typeof d2.onClick === "function" && (a2.onclick = jf);
    }
    vb(c2, d2);
    var g2;
    c2 = null;
    for (l2 in e2)
      if (!d2.hasOwnProperty(l2) && e2.hasOwnProperty(l2) && e2[l2] != null)
        if (l2 === "style") {
          var h2 = e2[l2];
          for (g2 in h2)
            h2.hasOwnProperty(g2) && (c2 || (c2 = {}), c2[g2] = "");
        } else
          l2 !== "dangerouslySetInnerHTML" && l2 !== "children" && l2 !== "suppressContentEditableWarning" && l2 !== "suppressHydrationWarning" && l2 !== "autoFocus" && (ca$1.hasOwnProperty(l2) ? f2 || (f2 = []) : (f2 = f2 || []).push(l2, null));
    for (l2 in d2) {
      var k2 = d2[l2];
      h2 = e2 != null ? e2[l2] : void 0;
      if (d2.hasOwnProperty(l2) && k2 !== h2 && (k2 != null || h2 != null))
        if (l2 === "style")
          if (h2) {
            for (g2 in h2)
              !h2.hasOwnProperty(g2) || k2 && k2.hasOwnProperty(g2) || (c2 || (c2 = {}), c2[g2] = "");
            for (g2 in k2)
              k2.hasOwnProperty(g2) && h2[g2] !== k2[g2] && (c2 || (c2 = {}), c2[g2] = k2[g2]);
          } else
            c2 || (f2 || (f2 = []), f2.push(l2, c2)), c2 = k2;
        else
          l2 === "dangerouslySetInnerHTML" ? (k2 = k2 ? k2.__html : void 0, h2 = h2 ? h2.__html : void 0, k2 != null && h2 !== k2 && (f2 = f2 || []).push(l2, k2)) : l2 === "children" ? typeof k2 !== "string" && typeof k2 !== "number" || (f2 = f2 || []).push(l2, "" + k2) : l2 !== "suppressContentEditableWarning" && l2 !== "suppressHydrationWarning" && (ca$1.hasOwnProperty(l2) ? (k2 != null && l2 === "onScroll" && G("scroll", a2), f2 || h2 === k2 || (f2 = [])) : typeof k2 === "object" && k2 !== null && k2.$$typeof === Ga ? k2.toString() : (f2 = f2 || []).push(l2, k2));
    }
    c2 && (f2 = f2 || []).push("style", c2);
    var l2 = f2;
    if (b2.updateQueue = l2)
      b2.flags |= 4;
  }
};
Ei = function(a2, b2, c2, d2) {
  c2 !== d2 && (b2.flags |= 4);
};
function Fi(a2, b2) {
  if (!lh)
    switch (a2.tailMode) {
      case "hidden":
        b2 = a2.tail;
        for (var c2 = null; b2 !== null; )
          b2.alternate !== null && (c2 = b2), b2 = b2.sibling;
        c2 === null ? a2.tail = null : c2.sibling = null;
        break;
      case "collapsed":
        c2 = a2.tail;
        for (var d2 = null; c2 !== null; )
          c2.alternate !== null && (d2 = c2), c2 = c2.sibling;
        d2 === null ? b2 || a2.tail === null ? a2.tail = null : a2.tail.sibling = null : d2.sibling = null;
    }
}
function Gi(a2, b2, c2) {
  var d2 = b2.pendingProps;
  switch (b2.tag) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return null;
    case 1:
      return Ff(b2.type) && Gf(), null;
    case 3:
      fh();
      H(N$1);
      H(M);
      uh();
      d2 = b2.stateNode;
      d2.pendingContext && (d2.context = d2.pendingContext, d2.pendingContext = null);
      if (a2 === null || a2.child === null)
        rh(b2) ? b2.flags |= 4 : d2.hydrate || (b2.flags |= 256);
      Ci(b2);
      return null;
    case 5:
      hh(b2);
      var e2 = dh(ch.current);
      c2 = b2.type;
      if (a2 !== null && b2.stateNode != null)
        Di(a2, b2, c2, d2, e2), a2.ref !== b2.ref && (b2.flags |= 128);
      else {
        if (!d2) {
          if (b2.stateNode === null)
            throw Error(y$2(166));
          return null;
        }
        a2 = dh(ah.current);
        if (rh(b2)) {
          d2 = b2.stateNode;
          c2 = b2.type;
          var f2 = b2.memoizedProps;
          d2[wf] = b2;
          d2[xf] = f2;
          switch (c2) {
            case "dialog":
              G("cancel", d2);
              G("close", d2);
              break;
            case "iframe":
            case "object":
            case "embed":
              G("load", d2);
              break;
            case "video":
            case "audio":
              for (a2 = 0; a2 < Xe.length; a2++)
                G(Xe[a2], d2);
              break;
            case "source":
              G("error", d2);
              break;
            case "img":
            case "image":
            case "link":
              G("error", d2);
              G("load", d2);
              break;
            case "details":
              G("toggle", d2);
              break;
            case "input":
              Za(d2, f2);
              G("invalid", d2);
              break;
            case "select":
              d2._wrapperState = { wasMultiple: !!f2.multiple };
              G("invalid", d2);
              break;
            case "textarea":
              hb(d2, f2), G("invalid", d2);
          }
          vb(c2, f2);
          a2 = null;
          for (var g2 in f2)
            f2.hasOwnProperty(g2) && (e2 = f2[g2], g2 === "children" ? typeof e2 === "string" ? d2.textContent !== e2 && (a2 = ["children", e2]) : typeof e2 === "number" && d2.textContent !== "" + e2 && (a2 = ["children", "" + e2]) : ca$1.hasOwnProperty(g2) && e2 != null && g2 === "onScroll" && G("scroll", d2));
          switch (c2) {
            case "input":
              Va(d2);
              cb$1(d2, f2, true);
              break;
            case "textarea":
              Va(d2);
              jb(d2);
              break;
            case "select":
            case "option":
              break;
            default:
              typeof f2.onClick === "function" && (d2.onclick = jf);
          }
          d2 = a2;
          b2.updateQueue = d2;
          d2 !== null && (b2.flags |= 4);
        } else {
          g2 = e2.nodeType === 9 ? e2 : e2.ownerDocument;
          a2 === kb.html && (a2 = lb(c2));
          a2 === kb.html ? c2 === "script" ? (a2 = g2.createElement("div"), a2.innerHTML = "<script><\/script>", a2 = a2.removeChild(a2.firstChild)) : typeof d2.is === "string" ? a2 = g2.createElement(c2, { is: d2.is }) : (a2 = g2.createElement(c2), c2 === "select" && (g2 = a2, d2.multiple ? g2.multiple = true : d2.size && (g2.size = d2.size))) : a2 = g2.createElementNS(a2, c2);
          a2[wf] = b2;
          a2[xf] = d2;
          Bi(a2, b2, false, false);
          b2.stateNode = a2;
          g2 = wb(c2, d2);
          switch (c2) {
            case "dialog":
              G("cancel", a2);
              G("close", a2);
              e2 = d2;
              break;
            case "iframe":
            case "object":
            case "embed":
              G("load", a2);
              e2 = d2;
              break;
            case "video":
            case "audio":
              for (e2 = 0; e2 < Xe.length; e2++)
                G(Xe[e2], a2);
              e2 = d2;
              break;
            case "source":
              G("error", a2);
              e2 = d2;
              break;
            case "img":
            case "image":
            case "link":
              G("error", a2);
              G("load", a2);
              e2 = d2;
              break;
            case "details":
              G("toggle", a2);
              e2 = d2;
              break;
            case "input":
              Za(a2, d2);
              e2 = Ya(a2, d2);
              G("invalid", a2);
              break;
            case "option":
              e2 = eb(a2, d2);
              break;
            case "select":
              a2._wrapperState = { wasMultiple: !!d2.multiple };
              e2 = m$3({}, d2, { value: void 0 });
              G("invalid", a2);
              break;
            case "textarea":
              hb(a2, d2);
              e2 = gb(a2, d2);
              G("invalid", a2);
              break;
            default:
              e2 = d2;
          }
          vb(c2, e2);
          var h2 = e2;
          for (f2 in h2)
            if (h2.hasOwnProperty(f2)) {
              var k2 = h2[f2];
              f2 === "style" ? tb(a2, k2) : f2 === "dangerouslySetInnerHTML" ? (k2 = k2 ? k2.__html : void 0, k2 != null && ob(a2, k2)) : f2 === "children" ? typeof k2 === "string" ? (c2 !== "textarea" || k2 !== "") && pb(a2, k2) : typeof k2 === "number" && pb(a2, "" + k2) : f2 !== "suppressContentEditableWarning" && f2 !== "suppressHydrationWarning" && f2 !== "autoFocus" && (ca$1.hasOwnProperty(f2) ? k2 != null && f2 === "onScroll" && G("scroll", a2) : k2 != null && qa(a2, f2, k2, g2));
            }
          switch (c2) {
            case "input":
              Va(a2);
              cb$1(a2, d2, false);
              break;
            case "textarea":
              Va(a2);
              jb(a2);
              break;
            case "option":
              d2.value != null && a2.setAttribute("value", "" + Sa(d2.value));
              break;
            case "select":
              a2.multiple = !!d2.multiple;
              f2 = d2.value;
              f2 != null ? fb(a2, !!d2.multiple, f2, false) : d2.defaultValue != null && fb(a2, !!d2.multiple, d2.defaultValue, true);
              break;
            default:
              typeof e2.onClick === "function" && (a2.onclick = jf);
          }
          mf(c2, d2) && (b2.flags |= 4);
        }
        b2.ref !== null && (b2.flags |= 128);
      }
      return null;
    case 6:
      if (a2 && b2.stateNode != null)
        Ei(a2, b2, a2.memoizedProps, d2);
      else {
        if (typeof d2 !== "string" && b2.stateNode === null)
          throw Error(y$2(166));
        c2 = dh(ch.current);
        dh(ah.current);
        rh(b2) ? (d2 = b2.stateNode, c2 = b2.memoizedProps, d2[wf] = b2, d2.nodeValue !== c2 && (b2.flags |= 4)) : (d2 = (c2.nodeType === 9 ? c2 : c2.ownerDocument).createTextNode(d2), d2[wf] = b2, b2.stateNode = d2);
      }
      return null;
    case 13:
      H(P$1);
      d2 = b2.memoizedState;
      if ((b2.flags & 64) !== 0)
        return b2.lanes = c2, b2;
      d2 = d2 !== null;
      c2 = false;
      a2 === null ? b2.memoizedProps.fallback !== void 0 && rh(b2) : c2 = a2.memoizedState !== null;
      if (d2 && !c2 && (b2.mode & 2) !== 0)
        if (a2 === null && b2.memoizedProps.unstable_avoidThisFallback !== true || (P$1.current & 1) !== 0)
          V === 0 && (V = 3);
        else {
          if (V === 0 || V === 3)
            V = 4;
          U$1 === null || (Dg & 134217727) === 0 && (Hi & 134217727) === 0 || Ii(U$1, W$1);
        }
      if (d2 || c2)
        b2.flags |= 4;
      return null;
    case 4:
      return fh(), Ci(b2), a2 === null && cf(b2.stateNode.containerInfo), null;
    case 10:
      return rg(b2), null;
    case 17:
      return Ff(b2.type) && Gf(), null;
    case 19:
      H(P$1);
      d2 = b2.memoizedState;
      if (d2 === null)
        return null;
      f2 = (b2.flags & 64) !== 0;
      g2 = d2.rendering;
      if (g2 === null)
        if (f2)
          Fi(d2, false);
        else {
          if (V !== 0 || a2 !== null && (a2.flags & 64) !== 0)
            for (a2 = b2.child; a2 !== null; ) {
              g2 = ih(a2);
              if (g2 !== null) {
                b2.flags |= 64;
                Fi(d2, false);
                f2 = g2.updateQueue;
                f2 !== null && (b2.updateQueue = f2, b2.flags |= 4);
                d2.lastEffect === null && (b2.firstEffect = null);
                b2.lastEffect = d2.lastEffect;
                d2 = c2;
                for (c2 = b2.child; c2 !== null; )
                  f2 = c2, a2 = d2, f2.flags &= 2, f2.nextEffect = null, f2.firstEffect = null, f2.lastEffect = null, g2 = f2.alternate, g2 === null ? (f2.childLanes = 0, f2.lanes = a2, f2.child = null, f2.memoizedProps = null, f2.memoizedState = null, f2.updateQueue = null, f2.dependencies = null, f2.stateNode = null) : (f2.childLanes = g2.childLanes, f2.lanes = g2.lanes, f2.child = g2.child, f2.memoizedProps = g2.memoizedProps, f2.memoizedState = g2.memoizedState, f2.updateQueue = g2.updateQueue, f2.type = g2.type, a2 = g2.dependencies, f2.dependencies = a2 === null ? null : { lanes: a2.lanes, firstContext: a2.firstContext }), c2 = c2.sibling;
                I$1(P$1, P$1.current & 1 | 2);
                return b2.child;
              }
              a2 = a2.sibling;
            }
          d2.tail !== null && O$1() > Ji && (b2.flags |= 64, f2 = true, Fi(d2, false), b2.lanes = 33554432);
        }
      else {
        if (!f2)
          if (a2 = ih(g2), a2 !== null) {
            if (b2.flags |= 64, f2 = true, c2 = a2.updateQueue, c2 !== null && (b2.updateQueue = c2, b2.flags |= 4), Fi(d2, true), d2.tail === null && d2.tailMode === "hidden" && !g2.alternate && !lh)
              return b2 = b2.lastEffect = d2.lastEffect, b2 !== null && (b2.nextEffect = null), null;
          } else
            2 * O$1() - d2.renderingStartTime > Ji && c2 !== 1073741824 && (b2.flags |= 64, f2 = true, Fi(d2, false), b2.lanes = 33554432);
        d2.isBackwards ? (g2.sibling = b2.child, b2.child = g2) : (c2 = d2.last, c2 !== null ? c2.sibling = g2 : b2.child = g2, d2.last = g2);
      }
      return d2.tail !== null ? (c2 = d2.tail, d2.rendering = c2, d2.tail = c2.sibling, d2.lastEffect = b2.lastEffect, d2.renderingStartTime = O$1(), c2.sibling = null, b2 = P$1.current, I$1(P$1, f2 ? b2 & 1 | 2 : b2 & 1), c2) : null;
    case 23:
    case 24:
      return Ki(), a2 !== null && a2.memoizedState !== null !== (b2.memoizedState !== null) && d2.mode !== "unstable-defer-without-hiding" && (b2.flags |= 4), null;
  }
  throw Error(y$2(156, b2.tag));
}
function Li(a2) {
  switch (a2.tag) {
    case 1:
      Ff(a2.type) && Gf();
      var b2 = a2.flags;
      return b2 & 4096 ? (a2.flags = b2 & -4097 | 64, a2) : null;
    case 3:
      fh();
      H(N$1);
      H(M);
      uh();
      b2 = a2.flags;
      if ((b2 & 64) !== 0)
        throw Error(y$2(285));
      a2.flags = b2 & -4097 | 64;
      return a2;
    case 5:
      return hh(a2), null;
    case 13:
      return H(P$1), b2 = a2.flags, b2 & 4096 ? (a2.flags = b2 & -4097 | 64, a2) : null;
    case 19:
      return H(P$1), null;
    case 4:
      return fh(), null;
    case 10:
      return rg(a2), null;
    case 23:
    case 24:
      return Ki(), null;
    default:
      return null;
  }
}
function Mi(a2, b2) {
  try {
    var c2 = "", d2 = b2;
    do
      c2 += Qa(d2), d2 = d2.return;
    while (d2);
    var e2 = c2;
  } catch (f2) {
    e2 = "\nError generating stack: " + f2.message + "\n" + f2.stack;
  }
  return { value: a2, source: b2, stack: e2 };
}
function Ni(a2, b2) {
  try {
    console.error(b2.value);
  } catch (c2) {
    setTimeout(function() {
      throw c2;
    });
  }
}
var Oi = typeof WeakMap === "function" ? WeakMap : Map;
function Pi(a2, b2, c2) {
  c2 = zg(-1, c2);
  c2.tag = 3;
  c2.payload = { element: null };
  var d2 = b2.value;
  c2.callback = function() {
    Qi || (Qi = true, Ri = d2);
    Ni(a2, b2);
  };
  return c2;
}
function Si(a2, b2, c2) {
  c2 = zg(-1, c2);
  c2.tag = 3;
  var d2 = a2.type.getDerivedStateFromError;
  if (typeof d2 === "function") {
    var e2 = b2.value;
    c2.payload = function() {
      Ni(a2, b2);
      return d2(e2);
    };
  }
  var f2 = a2.stateNode;
  f2 !== null && typeof f2.componentDidCatch === "function" && (c2.callback = function() {
    typeof d2 !== "function" && (Ti === null ? Ti = new Set([this]) : Ti.add(this), Ni(a2, b2));
    var c3 = b2.stack;
    this.componentDidCatch(b2.value, { componentStack: c3 !== null ? c3 : "" });
  });
  return c2;
}
var Ui = typeof WeakSet === "function" ? WeakSet : Set;
function Vi(a2) {
  var b2 = a2.ref;
  if (b2 !== null)
    if (typeof b2 === "function")
      try {
        b2(null);
      } catch (c2) {
        Wi(a2, c2);
      }
    else
      b2.current = null;
}
function Xi(a2, b2) {
  switch (b2.tag) {
    case 0:
    case 11:
    case 15:
    case 22:
      return;
    case 1:
      if (b2.flags & 256 && a2 !== null) {
        var c2 = a2.memoizedProps, d2 = a2.memoizedState;
        a2 = b2.stateNode;
        b2 = a2.getSnapshotBeforeUpdate(b2.elementType === b2.type ? c2 : lg(b2.type, c2), d2);
        a2.__reactInternalSnapshotBeforeUpdate = b2;
      }
      return;
    case 3:
      b2.flags & 256 && qf(b2.stateNode.containerInfo);
      return;
    case 5:
    case 6:
    case 4:
    case 17:
      return;
  }
  throw Error(y$2(163));
}
function Yi(a2, b2, c2) {
  switch (c2.tag) {
    case 0:
    case 11:
    case 15:
    case 22:
      b2 = c2.updateQueue;
      b2 = b2 !== null ? b2.lastEffect : null;
      if (b2 !== null) {
        a2 = b2 = b2.next;
        do {
          if ((a2.tag & 3) === 3) {
            var d2 = a2.create;
            a2.destroy = d2();
          }
          a2 = a2.next;
        } while (a2 !== b2);
      }
      b2 = c2.updateQueue;
      b2 = b2 !== null ? b2.lastEffect : null;
      if (b2 !== null) {
        a2 = b2 = b2.next;
        do {
          var e2 = a2;
          d2 = e2.next;
          e2 = e2.tag;
          (e2 & 4) !== 0 && (e2 & 1) !== 0 && (Zi(c2, a2), $i(c2, a2));
          a2 = d2;
        } while (a2 !== b2);
      }
      return;
    case 1:
      a2 = c2.stateNode;
      c2.flags & 4 && (b2 === null ? a2.componentDidMount() : (d2 = c2.elementType === c2.type ? b2.memoizedProps : lg(c2.type, b2.memoizedProps), a2.componentDidUpdate(d2, b2.memoizedState, a2.__reactInternalSnapshotBeforeUpdate)));
      b2 = c2.updateQueue;
      b2 !== null && Eg(c2, b2, a2);
      return;
    case 3:
      b2 = c2.updateQueue;
      if (b2 !== null) {
        a2 = null;
        if (c2.child !== null)
          switch (c2.child.tag) {
            case 5:
              a2 = c2.child.stateNode;
              break;
            case 1:
              a2 = c2.child.stateNode;
          }
        Eg(c2, b2, a2);
      }
      return;
    case 5:
      a2 = c2.stateNode;
      b2 === null && c2.flags & 4 && mf(c2.type, c2.memoizedProps) && a2.focus();
      return;
    case 6:
      return;
    case 4:
      return;
    case 12:
      return;
    case 13:
      c2.memoizedState === null && (c2 = c2.alternate, c2 !== null && (c2 = c2.memoizedState, c2 !== null && (c2 = c2.dehydrated, c2 !== null && Cc(c2))));
      return;
    case 19:
    case 17:
    case 20:
    case 21:
    case 23:
    case 24:
      return;
  }
  throw Error(y$2(163));
}
function aj(a2, b2) {
  for (var c2 = a2; ; ) {
    if (c2.tag === 5) {
      var d2 = c2.stateNode;
      if (b2)
        d2 = d2.style, typeof d2.setProperty === "function" ? d2.setProperty("display", "none", "important") : d2.display = "none";
      else {
        d2 = c2.stateNode;
        var e2 = c2.memoizedProps.style;
        e2 = e2 !== void 0 && e2 !== null && e2.hasOwnProperty("display") ? e2.display : null;
        d2.style.display = sb("display", e2);
      }
    } else if (c2.tag === 6)
      c2.stateNode.nodeValue = b2 ? "" : c2.memoizedProps;
    else if ((c2.tag !== 23 && c2.tag !== 24 || c2.memoizedState === null || c2 === a2) && c2.child !== null) {
      c2.child.return = c2;
      c2 = c2.child;
      continue;
    }
    if (c2 === a2)
      break;
    for (; c2.sibling === null; ) {
      if (c2.return === null || c2.return === a2)
        return;
      c2 = c2.return;
    }
    c2.sibling.return = c2.return;
    c2 = c2.sibling;
  }
}
function bj(a2, b2) {
  if (Mf && typeof Mf.onCommitFiberUnmount === "function")
    try {
      Mf.onCommitFiberUnmount(Lf, b2);
    } catch (f2) {
    }
  switch (b2.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
    case 22:
      a2 = b2.updateQueue;
      if (a2 !== null && (a2 = a2.lastEffect, a2 !== null)) {
        var c2 = a2 = a2.next;
        do {
          var d2 = c2, e2 = d2.destroy;
          d2 = d2.tag;
          if (e2 !== void 0)
            if ((d2 & 4) !== 0)
              Zi(b2, c2);
            else {
              d2 = b2;
              try {
                e2();
              } catch (f2) {
                Wi(d2, f2);
              }
            }
          c2 = c2.next;
        } while (c2 !== a2);
      }
      break;
    case 1:
      Vi(b2);
      a2 = b2.stateNode;
      if (typeof a2.componentWillUnmount === "function")
        try {
          a2.props = b2.memoizedProps, a2.state = b2.memoizedState, a2.componentWillUnmount();
        } catch (f2) {
          Wi(b2, f2);
        }
      break;
    case 5:
      Vi(b2);
      break;
    case 4:
      cj(a2, b2);
  }
}
function dj(a2) {
  a2.alternate = null;
  a2.child = null;
  a2.dependencies = null;
  a2.firstEffect = null;
  a2.lastEffect = null;
  a2.memoizedProps = null;
  a2.memoizedState = null;
  a2.pendingProps = null;
  a2.return = null;
  a2.updateQueue = null;
}
function ej(a2) {
  return a2.tag === 5 || a2.tag === 3 || a2.tag === 4;
}
function fj(a2) {
  a: {
    for (var b2 = a2.return; b2 !== null; ) {
      if (ej(b2))
        break a;
      b2 = b2.return;
    }
    throw Error(y$2(160));
  }
  var c2 = b2;
  b2 = c2.stateNode;
  switch (c2.tag) {
    case 5:
      var d2 = false;
      break;
    case 3:
      b2 = b2.containerInfo;
      d2 = true;
      break;
    case 4:
      b2 = b2.containerInfo;
      d2 = true;
      break;
    default:
      throw Error(y$2(161));
  }
  c2.flags & 16 && (pb(b2, ""), c2.flags &= -17);
  a:
    b:
      for (c2 = a2; ; ) {
        for (; c2.sibling === null; ) {
          if (c2.return === null || ej(c2.return)) {
            c2 = null;
            break a;
          }
          c2 = c2.return;
        }
        c2.sibling.return = c2.return;
        for (c2 = c2.sibling; c2.tag !== 5 && c2.tag !== 6 && c2.tag !== 18; ) {
          if (c2.flags & 2)
            continue b;
          if (c2.child === null || c2.tag === 4)
            continue b;
          else
            c2.child.return = c2, c2 = c2.child;
        }
        if (!(c2.flags & 2)) {
          c2 = c2.stateNode;
          break a;
        }
      }
  d2 ? gj(a2, c2, b2) : hj(a2, c2, b2);
}
function gj(a2, b2, c2) {
  var d2 = a2.tag, e2 = d2 === 5 || d2 === 6;
  if (e2)
    a2 = e2 ? a2.stateNode : a2.stateNode.instance, b2 ? c2.nodeType === 8 ? c2.parentNode.insertBefore(a2, b2) : c2.insertBefore(a2, b2) : (c2.nodeType === 8 ? (b2 = c2.parentNode, b2.insertBefore(a2, c2)) : (b2 = c2, b2.appendChild(a2)), c2 = c2._reactRootContainer, c2 !== null && c2 !== void 0 || b2.onclick !== null || (b2.onclick = jf));
  else if (d2 !== 4 && (a2 = a2.child, a2 !== null))
    for (gj(a2, b2, c2), a2 = a2.sibling; a2 !== null; )
      gj(a2, b2, c2), a2 = a2.sibling;
}
function hj(a2, b2, c2) {
  var d2 = a2.tag, e2 = d2 === 5 || d2 === 6;
  if (e2)
    a2 = e2 ? a2.stateNode : a2.stateNode.instance, b2 ? c2.insertBefore(a2, b2) : c2.appendChild(a2);
  else if (d2 !== 4 && (a2 = a2.child, a2 !== null))
    for (hj(a2, b2, c2), a2 = a2.sibling; a2 !== null; )
      hj(a2, b2, c2), a2 = a2.sibling;
}
function cj(a2, b2) {
  for (var c2 = b2, d2 = false, e2, f2; ; ) {
    if (!d2) {
      d2 = c2.return;
      a:
        for (; ; ) {
          if (d2 === null)
            throw Error(y$2(160));
          e2 = d2.stateNode;
          switch (d2.tag) {
            case 5:
              f2 = false;
              break a;
            case 3:
              e2 = e2.containerInfo;
              f2 = true;
              break a;
            case 4:
              e2 = e2.containerInfo;
              f2 = true;
              break a;
          }
          d2 = d2.return;
        }
      d2 = true;
    }
    if (c2.tag === 5 || c2.tag === 6) {
      a:
        for (var g2 = a2, h2 = c2, k2 = h2; ; )
          if (bj(g2, k2), k2.child !== null && k2.tag !== 4)
            k2.child.return = k2, k2 = k2.child;
          else {
            if (k2 === h2)
              break a;
            for (; k2.sibling === null; ) {
              if (k2.return === null || k2.return === h2)
                break a;
              k2 = k2.return;
            }
            k2.sibling.return = k2.return;
            k2 = k2.sibling;
          }
      f2 ? (g2 = e2, h2 = c2.stateNode, g2.nodeType === 8 ? g2.parentNode.removeChild(h2) : g2.removeChild(h2)) : e2.removeChild(c2.stateNode);
    } else if (c2.tag === 4) {
      if (c2.child !== null) {
        e2 = c2.stateNode.containerInfo;
        f2 = true;
        c2.child.return = c2;
        c2 = c2.child;
        continue;
      }
    } else if (bj(a2, c2), c2.child !== null) {
      c2.child.return = c2;
      c2 = c2.child;
      continue;
    }
    if (c2 === b2)
      break;
    for (; c2.sibling === null; ) {
      if (c2.return === null || c2.return === b2)
        return;
      c2 = c2.return;
      c2.tag === 4 && (d2 = false);
    }
    c2.sibling.return = c2.return;
    c2 = c2.sibling;
  }
}
function ij(a2, b2) {
  switch (b2.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
    case 22:
      var c2 = b2.updateQueue;
      c2 = c2 !== null ? c2.lastEffect : null;
      if (c2 !== null) {
        var d2 = c2 = c2.next;
        do
          (d2.tag & 3) === 3 && (a2 = d2.destroy, d2.destroy = void 0, a2 !== void 0 && a2()), d2 = d2.next;
        while (d2 !== c2);
      }
      return;
    case 1:
      return;
    case 5:
      c2 = b2.stateNode;
      if (c2 != null) {
        d2 = b2.memoizedProps;
        var e2 = a2 !== null ? a2.memoizedProps : d2;
        a2 = b2.type;
        var f2 = b2.updateQueue;
        b2.updateQueue = null;
        if (f2 !== null) {
          c2[xf] = d2;
          a2 === "input" && d2.type === "radio" && d2.name != null && $a(c2, d2);
          wb(a2, e2);
          b2 = wb(a2, d2);
          for (e2 = 0; e2 < f2.length; e2 += 2) {
            var g2 = f2[e2], h2 = f2[e2 + 1];
            g2 === "style" ? tb(c2, h2) : g2 === "dangerouslySetInnerHTML" ? ob(c2, h2) : g2 === "children" ? pb(c2, h2) : qa(c2, g2, h2, b2);
          }
          switch (a2) {
            case "input":
              ab(c2, d2);
              break;
            case "textarea":
              ib(c2, d2);
              break;
            case "select":
              a2 = c2._wrapperState.wasMultiple, c2._wrapperState.wasMultiple = !!d2.multiple, f2 = d2.value, f2 != null ? fb(c2, !!d2.multiple, f2, false) : a2 !== !!d2.multiple && (d2.defaultValue != null ? fb(c2, !!d2.multiple, d2.defaultValue, true) : fb(c2, !!d2.multiple, d2.multiple ? [] : "", false));
          }
        }
      }
      return;
    case 6:
      if (b2.stateNode === null)
        throw Error(y$2(162));
      b2.stateNode.nodeValue = b2.memoizedProps;
      return;
    case 3:
      c2 = b2.stateNode;
      c2.hydrate && (c2.hydrate = false, Cc(c2.containerInfo));
      return;
    case 12:
      return;
    case 13:
      b2.memoizedState !== null && (jj = O$1(), aj(b2.child, true));
      kj(b2);
      return;
    case 19:
      kj(b2);
      return;
    case 17:
      return;
    case 23:
    case 24:
      aj(b2, b2.memoizedState !== null);
      return;
  }
  throw Error(y$2(163));
}
function kj(a2) {
  var b2 = a2.updateQueue;
  if (b2 !== null) {
    a2.updateQueue = null;
    var c2 = a2.stateNode;
    c2 === null && (c2 = a2.stateNode = new Ui());
    b2.forEach(function(b3) {
      var d2 = lj.bind(null, a2, b3);
      c2.has(b3) || (c2.add(b3), b3.then(d2, d2));
    });
  }
}
function mj(a2, b2) {
  return a2 !== null && (a2 = a2.memoizedState, a2 === null || a2.dehydrated !== null) ? (b2 = b2.memoizedState, b2 !== null && b2.dehydrated === null) : false;
}
var nj = Math.ceil, oj = ra.ReactCurrentDispatcher, pj = ra.ReactCurrentOwner, X = 0, U$1 = null, Y = null, W$1 = 0, qj = 0, rj = Bf(0), V = 0, sj = null, tj = 0, Dg = 0, Hi = 0, uj = 0, vj = null, jj = 0, Ji = Infinity;
function wj() {
  Ji = O$1() + 500;
}
var Z = null, Qi = false, Ri = null, Ti = null, xj = false, yj = null, zj = 90, Aj = [], Bj = [], Cj = null, Dj = 0, Ej = null, Fj = -1, Gj = 0, Hj = 0, Ij = null, Jj = false;
function Hg() {
  return (X & 48) !== 0 ? O$1() : Fj !== -1 ? Fj : Fj = O$1();
}
function Ig(a2) {
  a2 = a2.mode;
  if ((a2 & 2) === 0)
    return 1;
  if ((a2 & 4) === 0)
    return eg() === 99 ? 1 : 2;
  Gj === 0 && (Gj = tj);
  if (kg.transition !== 0) {
    Hj !== 0 && (Hj = vj !== null ? vj.pendingLanes : 0);
    a2 = Gj;
    var b2 = 4186112 & ~Hj;
    b2 &= -b2;
    b2 === 0 && (a2 = 4186112 & ~a2, b2 = a2 & -a2, b2 === 0 && (b2 = 8192));
    return b2;
  }
  a2 = eg();
  (X & 4) !== 0 && a2 === 98 ? a2 = Xc(12, Gj) : (a2 = Sc(a2), a2 = Xc(a2, Gj));
  return a2;
}
function Jg(a2, b2, c2) {
  if (50 < Dj)
    throw Dj = 0, Ej = null, Error(y$2(185));
  a2 = Kj(a2, b2);
  if (a2 === null)
    return null;
  $c(a2, b2, c2);
  a2 === U$1 && (Hi |= b2, V === 4 && Ii(a2, W$1));
  var d2 = eg();
  b2 === 1 ? (X & 8) !== 0 && (X & 48) === 0 ? Lj(a2) : (Mj(a2, c2), X === 0 && (wj(), ig())) : ((X & 4) === 0 || d2 !== 98 && d2 !== 99 || (Cj === null ? Cj = new Set([a2]) : Cj.add(a2)), Mj(a2, c2));
  vj = a2;
}
function Kj(a2, b2) {
  a2.lanes |= b2;
  var c2 = a2.alternate;
  c2 !== null && (c2.lanes |= b2);
  c2 = a2;
  for (a2 = a2.return; a2 !== null; )
    a2.childLanes |= b2, c2 = a2.alternate, c2 !== null && (c2.childLanes |= b2), c2 = a2, a2 = a2.return;
  return c2.tag === 3 ? c2.stateNode : null;
}
function Mj(a2, b2) {
  for (var c2 = a2.callbackNode, d2 = a2.suspendedLanes, e2 = a2.pingedLanes, f2 = a2.expirationTimes, g2 = a2.pendingLanes; 0 < g2; ) {
    var h2 = 31 - Vc(g2), k2 = 1 << h2, l2 = f2[h2];
    if (l2 === -1) {
      if ((k2 & d2) === 0 || (k2 & e2) !== 0) {
        l2 = b2;
        Rc(k2);
        var n2 = F$1;
        f2[h2] = 10 <= n2 ? l2 + 250 : 6 <= n2 ? l2 + 5e3 : -1;
      }
    } else
      l2 <= b2 && (a2.expiredLanes |= k2);
    g2 &= ~k2;
  }
  d2 = Uc(a2, a2 === U$1 ? W$1 : 0);
  b2 = F$1;
  if (d2 === 0)
    c2 !== null && (c2 !== Zf && Pf(c2), a2.callbackNode = null, a2.callbackPriority = 0);
  else {
    if (c2 !== null) {
      if (a2.callbackPriority === b2)
        return;
      c2 !== Zf && Pf(c2);
    }
    b2 === 15 ? (c2 = Lj.bind(null, a2), ag === null ? (ag = [c2], bg = Of(Uf, jg)) : ag.push(c2), c2 = Zf) : b2 === 14 ? c2 = hg(99, Lj.bind(null, a2)) : (c2 = Tc(b2), c2 = hg(c2, Nj.bind(null, a2)));
    a2.callbackPriority = b2;
    a2.callbackNode = c2;
  }
}
function Nj(a2) {
  Fj = -1;
  Hj = Gj = 0;
  if ((X & 48) !== 0)
    throw Error(y$2(327));
  var b2 = a2.callbackNode;
  if (Oj() && a2.callbackNode !== b2)
    return null;
  var c2 = Uc(a2, a2 === U$1 ? W$1 : 0);
  if (c2 === 0)
    return null;
  var d2 = c2;
  var e2 = X;
  X |= 16;
  var f2 = Pj();
  if (U$1 !== a2 || W$1 !== d2)
    wj(), Qj(a2, d2);
  do
    try {
      Rj();
      break;
    } catch (h2) {
      Sj(a2, h2);
    }
  while (1);
  qg();
  oj.current = f2;
  X = e2;
  Y !== null ? d2 = 0 : (U$1 = null, W$1 = 0, d2 = V);
  if ((tj & Hi) !== 0)
    Qj(a2, 0);
  else if (d2 !== 0) {
    d2 === 2 && (X |= 64, a2.hydrate && (a2.hydrate = false, qf(a2.containerInfo)), c2 = Wc(a2), c2 !== 0 && (d2 = Tj(a2, c2)));
    if (d2 === 1)
      throw b2 = sj, Qj(a2, 0), Ii(a2, c2), Mj(a2, O$1()), b2;
    a2.finishedWork = a2.current.alternate;
    a2.finishedLanes = c2;
    switch (d2) {
      case 0:
      case 1:
        throw Error(y$2(345));
      case 2:
        Uj(a2);
        break;
      case 3:
        Ii(a2, c2);
        if ((c2 & 62914560) === c2 && (d2 = jj + 500 - O$1(), 10 < d2)) {
          if (Uc(a2, 0) !== 0)
            break;
          e2 = a2.suspendedLanes;
          if ((e2 & c2) !== c2) {
            Hg();
            a2.pingedLanes |= a2.suspendedLanes & e2;
            break;
          }
          a2.timeoutHandle = of(Uj.bind(null, a2), d2);
          break;
        }
        Uj(a2);
        break;
      case 4:
        Ii(a2, c2);
        if ((c2 & 4186112) === c2)
          break;
        d2 = a2.eventTimes;
        for (e2 = -1; 0 < c2; ) {
          var g2 = 31 - Vc(c2);
          f2 = 1 << g2;
          g2 = d2[g2];
          g2 > e2 && (e2 = g2);
          c2 &= ~f2;
        }
        c2 = e2;
        c2 = O$1() - c2;
        c2 = (120 > c2 ? 120 : 480 > c2 ? 480 : 1080 > c2 ? 1080 : 1920 > c2 ? 1920 : 3e3 > c2 ? 3e3 : 4320 > c2 ? 4320 : 1960 * nj(c2 / 1960)) - c2;
        if (10 < c2) {
          a2.timeoutHandle = of(Uj.bind(null, a2), c2);
          break;
        }
        Uj(a2);
        break;
      case 5:
        Uj(a2);
        break;
      default:
        throw Error(y$2(329));
    }
  }
  Mj(a2, O$1());
  return a2.callbackNode === b2 ? Nj.bind(null, a2) : null;
}
function Ii(a2, b2) {
  b2 &= ~uj;
  b2 &= ~Hi;
  a2.suspendedLanes |= b2;
  a2.pingedLanes &= ~b2;
  for (a2 = a2.expirationTimes; 0 < b2; ) {
    var c2 = 31 - Vc(b2), d2 = 1 << c2;
    a2[c2] = -1;
    b2 &= ~d2;
  }
}
function Lj(a2) {
  if ((X & 48) !== 0)
    throw Error(y$2(327));
  Oj();
  if (a2 === U$1 && (a2.expiredLanes & W$1) !== 0) {
    var b2 = W$1;
    var c2 = Tj(a2, b2);
    (tj & Hi) !== 0 && (b2 = Uc(a2, b2), c2 = Tj(a2, b2));
  } else
    b2 = Uc(a2, 0), c2 = Tj(a2, b2);
  a2.tag !== 0 && c2 === 2 && (X |= 64, a2.hydrate && (a2.hydrate = false, qf(a2.containerInfo)), b2 = Wc(a2), b2 !== 0 && (c2 = Tj(a2, b2)));
  if (c2 === 1)
    throw c2 = sj, Qj(a2, 0), Ii(a2, b2), Mj(a2, O$1()), c2;
  a2.finishedWork = a2.current.alternate;
  a2.finishedLanes = b2;
  Uj(a2);
  Mj(a2, O$1());
  return null;
}
function Vj() {
  if (Cj !== null) {
    var a2 = Cj;
    Cj = null;
    a2.forEach(function(a3) {
      a3.expiredLanes |= 24 & a3.pendingLanes;
      Mj(a3, O$1());
    });
  }
  ig();
}
function Wj(a2, b2) {
  var c2 = X;
  X |= 1;
  try {
    return a2(b2);
  } finally {
    X = c2, X === 0 && (wj(), ig());
  }
}
function Xj(a2, b2) {
  var c2 = X;
  X &= -2;
  X |= 8;
  try {
    return a2(b2);
  } finally {
    X = c2, X === 0 && (wj(), ig());
  }
}
function ni(a2, b2) {
  I$1(rj, qj);
  qj |= b2;
  tj |= b2;
}
function Ki() {
  qj = rj.current;
  H(rj);
}
function Qj(a2, b2) {
  a2.finishedWork = null;
  a2.finishedLanes = 0;
  var c2 = a2.timeoutHandle;
  c2 !== -1 && (a2.timeoutHandle = -1, pf(c2));
  if (Y !== null)
    for (c2 = Y.return; c2 !== null; ) {
      var d2 = c2;
      switch (d2.tag) {
        case 1:
          d2 = d2.type.childContextTypes;
          d2 !== null && d2 !== void 0 && Gf();
          break;
        case 3:
          fh();
          H(N$1);
          H(M);
          uh();
          break;
        case 5:
          hh(d2);
          break;
        case 4:
          fh();
          break;
        case 13:
          H(P$1);
          break;
        case 19:
          H(P$1);
          break;
        case 10:
          rg(d2);
          break;
        case 23:
        case 24:
          Ki();
      }
      c2 = c2.return;
    }
  U$1 = a2;
  Y = Tg(a2.current, null);
  W$1 = qj = tj = b2;
  V = 0;
  sj = null;
  uj = Hi = Dg = 0;
}
function Sj(a2, b2) {
  do {
    var c2 = Y;
    try {
      qg();
      vh$1.current = Gh;
      if (yh) {
        for (var d2 = R.memoizedState; d2 !== null; ) {
          var e2 = d2.queue;
          e2 !== null && (e2.pending = null);
          d2 = d2.next;
        }
        yh = false;
      }
      xh = 0;
      T = S$1 = R = null;
      zh = false;
      pj.current = null;
      if (c2 === null || c2.return === null) {
        V = 1;
        sj = b2;
        Y = null;
        break;
      }
      a: {
        var f2 = a2, g2 = c2.return, h2 = c2, k2 = b2;
        b2 = W$1;
        h2.flags |= 2048;
        h2.firstEffect = h2.lastEffect = null;
        if (k2 !== null && typeof k2 === "object" && typeof k2.then === "function") {
          var l2 = k2;
          if ((h2.mode & 2) === 0) {
            var n2 = h2.alternate;
            n2 ? (h2.updateQueue = n2.updateQueue, h2.memoizedState = n2.memoizedState, h2.lanes = n2.lanes) : (h2.updateQueue = null, h2.memoizedState = null);
          }
          var A2 = (P$1.current & 1) !== 0, p2 = g2;
          do {
            var C2;
            if (C2 = p2.tag === 13) {
              var x2 = p2.memoizedState;
              if (x2 !== null)
                C2 = x2.dehydrated !== null ? true : false;
              else {
                var w2 = p2.memoizedProps;
                C2 = w2.fallback === void 0 ? false : w2.unstable_avoidThisFallback !== true ? true : A2 ? false : true;
              }
            }
            if (C2) {
              var z2 = p2.updateQueue;
              if (z2 === null) {
                var u2 = new Set();
                u2.add(l2);
                p2.updateQueue = u2;
              } else
                z2.add(l2);
              if ((p2.mode & 2) === 0) {
                p2.flags |= 64;
                h2.flags |= 16384;
                h2.flags &= -2981;
                if (h2.tag === 1)
                  if (h2.alternate === null)
                    h2.tag = 17;
                  else {
                    var t2 = zg(-1, 1);
                    t2.tag = 2;
                    Ag(h2, t2);
                  }
                h2.lanes |= 1;
                break a;
              }
              k2 = void 0;
              h2 = b2;
              var q2 = f2.pingCache;
              q2 === null ? (q2 = f2.pingCache = new Oi(), k2 = new Set(), q2.set(l2, k2)) : (k2 = q2.get(l2), k2 === void 0 && (k2 = new Set(), q2.set(l2, k2)));
              if (!k2.has(h2)) {
                k2.add(h2);
                var v2 = Yj.bind(null, f2, l2, h2);
                l2.then(v2, v2);
              }
              p2.flags |= 4096;
              p2.lanes = b2;
              break a;
            }
            p2 = p2.return;
          } while (p2 !== null);
          k2 = Error((Ra(h2.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.");
        }
        V !== 5 && (V = 2);
        k2 = Mi(k2, h2);
        p2 = g2;
        do {
          switch (p2.tag) {
            case 3:
              f2 = k2;
              p2.flags |= 4096;
              b2 &= -b2;
              p2.lanes |= b2;
              var J2 = Pi(p2, f2, b2);
              Bg(p2, J2);
              break a;
            case 1:
              f2 = k2;
              var K2 = p2.type, Q2 = p2.stateNode;
              if ((p2.flags & 64) === 0 && (typeof K2.getDerivedStateFromError === "function" || Q2 !== null && typeof Q2.componentDidCatch === "function" && (Ti === null || !Ti.has(Q2)))) {
                p2.flags |= 4096;
                b2 &= -b2;
                p2.lanes |= b2;
                var L2 = Si(p2, f2, b2);
                Bg(p2, L2);
                break a;
              }
          }
          p2 = p2.return;
        } while (p2 !== null);
      }
      Zj(c2);
    } catch (va) {
      b2 = va;
      Y === c2 && c2 !== null && (Y = c2 = c2.return);
      continue;
    }
    break;
  } while (1);
}
function Pj() {
  var a2 = oj.current;
  oj.current = Gh;
  return a2 === null ? Gh : a2;
}
function Tj(a2, b2) {
  var c2 = X;
  X |= 16;
  var d2 = Pj();
  U$1 === a2 && W$1 === b2 || Qj(a2, b2);
  do
    try {
      ak();
      break;
    } catch (e2) {
      Sj(a2, e2);
    }
  while (1);
  qg();
  X = c2;
  oj.current = d2;
  if (Y !== null)
    throw Error(y$2(261));
  U$1 = null;
  W$1 = 0;
  return V;
}
function ak() {
  for (; Y !== null; )
    bk(Y);
}
function Rj() {
  for (; Y !== null && !Qf(); )
    bk(Y);
}
function bk(a2) {
  var b2 = ck(a2.alternate, a2, qj);
  a2.memoizedProps = a2.pendingProps;
  b2 === null ? Zj(a2) : Y = b2;
  pj.current = null;
}
function Zj(a2) {
  var b2 = a2;
  do {
    var c2 = b2.alternate;
    a2 = b2.return;
    if ((b2.flags & 2048) === 0) {
      c2 = Gi(c2, b2, qj);
      if (c2 !== null) {
        Y = c2;
        return;
      }
      c2 = b2;
      if (c2.tag !== 24 && c2.tag !== 23 || c2.memoizedState === null || (qj & 1073741824) !== 0 || (c2.mode & 4) === 0) {
        for (var d2 = 0, e2 = c2.child; e2 !== null; )
          d2 |= e2.lanes | e2.childLanes, e2 = e2.sibling;
        c2.childLanes = d2;
      }
      a2 !== null && (a2.flags & 2048) === 0 && (a2.firstEffect === null && (a2.firstEffect = b2.firstEffect), b2.lastEffect !== null && (a2.lastEffect !== null && (a2.lastEffect.nextEffect = b2.firstEffect), a2.lastEffect = b2.lastEffect), 1 < b2.flags && (a2.lastEffect !== null ? a2.lastEffect.nextEffect = b2 : a2.firstEffect = b2, a2.lastEffect = b2));
    } else {
      c2 = Li(b2);
      if (c2 !== null) {
        c2.flags &= 2047;
        Y = c2;
        return;
      }
      a2 !== null && (a2.firstEffect = a2.lastEffect = null, a2.flags |= 2048);
    }
    b2 = b2.sibling;
    if (b2 !== null) {
      Y = b2;
      return;
    }
    Y = b2 = a2;
  } while (b2 !== null);
  V === 0 && (V = 5);
}
function Uj(a2) {
  var b2 = eg();
  gg(99, dk.bind(null, a2, b2));
  return null;
}
function dk(a2, b2) {
  do
    Oj();
  while (yj !== null);
  if ((X & 48) !== 0)
    throw Error(y$2(327));
  var c2 = a2.finishedWork;
  if (c2 === null)
    return null;
  a2.finishedWork = null;
  a2.finishedLanes = 0;
  if (c2 === a2.current)
    throw Error(y$2(177));
  a2.callbackNode = null;
  var d2 = c2.lanes | c2.childLanes, e2 = d2, f2 = a2.pendingLanes & ~e2;
  a2.pendingLanes = e2;
  a2.suspendedLanes = 0;
  a2.pingedLanes = 0;
  a2.expiredLanes &= e2;
  a2.mutableReadLanes &= e2;
  a2.entangledLanes &= e2;
  e2 = a2.entanglements;
  for (var g2 = a2.eventTimes, h2 = a2.expirationTimes; 0 < f2; ) {
    var k2 = 31 - Vc(f2), l2 = 1 << k2;
    e2[k2] = 0;
    g2[k2] = -1;
    h2[k2] = -1;
    f2 &= ~l2;
  }
  Cj !== null && (d2 & 24) === 0 && Cj.has(a2) && Cj.delete(a2);
  a2 === U$1 && (Y = U$1 = null, W$1 = 0);
  1 < c2.flags ? c2.lastEffect !== null ? (c2.lastEffect.nextEffect = c2, d2 = c2.firstEffect) : d2 = c2 : d2 = c2.firstEffect;
  if (d2 !== null) {
    e2 = X;
    X |= 32;
    pj.current = null;
    kf = fd;
    g2 = Ne();
    if (Oe(g2)) {
      if ("selectionStart" in g2)
        h2 = { start: g2.selectionStart, end: g2.selectionEnd };
      else
        a:
          if (h2 = (h2 = g2.ownerDocument) && h2.defaultView || window, (l2 = h2.getSelection && h2.getSelection()) && l2.rangeCount !== 0) {
            h2 = l2.anchorNode;
            f2 = l2.anchorOffset;
            k2 = l2.focusNode;
            l2 = l2.focusOffset;
            try {
              h2.nodeType, k2.nodeType;
            } catch (va) {
              h2 = null;
              break a;
            }
            var n2 = 0, A2 = -1, p2 = -1, C2 = 0, x2 = 0, w2 = g2, z2 = null;
            b:
              for (; ; ) {
                for (var u2; ; ) {
                  w2 !== h2 || f2 !== 0 && w2.nodeType !== 3 || (A2 = n2 + f2);
                  w2 !== k2 || l2 !== 0 && w2.nodeType !== 3 || (p2 = n2 + l2);
                  w2.nodeType === 3 && (n2 += w2.nodeValue.length);
                  if ((u2 = w2.firstChild) === null)
                    break;
                  z2 = w2;
                  w2 = u2;
                }
                for (; ; ) {
                  if (w2 === g2)
                    break b;
                  z2 === h2 && ++C2 === f2 && (A2 = n2);
                  z2 === k2 && ++x2 === l2 && (p2 = n2);
                  if ((u2 = w2.nextSibling) !== null)
                    break;
                  w2 = z2;
                  z2 = w2.parentNode;
                }
                w2 = u2;
              }
            h2 = A2 === -1 || p2 === -1 ? null : { start: A2, end: p2 };
          } else
            h2 = null;
      h2 = h2 || { start: 0, end: 0 };
    } else
      h2 = null;
    lf = { focusedElem: g2, selectionRange: h2 };
    fd = false;
    Ij = null;
    Jj = false;
    Z = d2;
    do
      try {
        ek();
      } catch (va) {
        if (Z === null)
          throw Error(y$2(330));
        Wi(Z, va);
        Z = Z.nextEffect;
      }
    while (Z !== null);
    Ij = null;
    Z = d2;
    do
      try {
        for (g2 = a2; Z !== null; ) {
          var t2 = Z.flags;
          t2 & 16 && pb(Z.stateNode, "");
          if (t2 & 128) {
            var q2 = Z.alternate;
            if (q2 !== null) {
              var v2 = q2.ref;
              v2 !== null && (typeof v2 === "function" ? v2(null) : v2.current = null);
            }
          }
          switch (t2 & 1038) {
            case 2:
              fj(Z);
              Z.flags &= -3;
              break;
            case 6:
              fj(Z);
              Z.flags &= -3;
              ij(Z.alternate, Z);
              break;
            case 1024:
              Z.flags &= -1025;
              break;
            case 1028:
              Z.flags &= -1025;
              ij(Z.alternate, Z);
              break;
            case 4:
              ij(Z.alternate, Z);
              break;
            case 8:
              h2 = Z;
              cj(g2, h2);
              var J2 = h2.alternate;
              dj(h2);
              J2 !== null && dj(J2);
          }
          Z = Z.nextEffect;
        }
      } catch (va) {
        if (Z === null)
          throw Error(y$2(330));
        Wi(Z, va);
        Z = Z.nextEffect;
      }
    while (Z !== null);
    v2 = lf;
    q2 = Ne();
    t2 = v2.focusedElem;
    g2 = v2.selectionRange;
    if (q2 !== t2 && t2 && t2.ownerDocument && Me(t2.ownerDocument.documentElement, t2)) {
      g2 !== null && Oe(t2) && (q2 = g2.start, v2 = g2.end, v2 === void 0 && (v2 = q2), "selectionStart" in t2 ? (t2.selectionStart = q2, t2.selectionEnd = Math.min(v2, t2.value.length)) : (v2 = (q2 = t2.ownerDocument || document) && q2.defaultView || window, v2.getSelection && (v2 = v2.getSelection(), h2 = t2.textContent.length, J2 = Math.min(g2.start, h2), g2 = g2.end === void 0 ? J2 : Math.min(g2.end, h2), !v2.extend && J2 > g2 && (h2 = g2, g2 = J2, J2 = h2), h2 = Le(t2, J2), f2 = Le(t2, g2), h2 && f2 && (v2.rangeCount !== 1 || v2.anchorNode !== h2.node || v2.anchorOffset !== h2.offset || v2.focusNode !== f2.node || v2.focusOffset !== f2.offset) && (q2 = q2.createRange(), q2.setStart(h2.node, h2.offset), v2.removeAllRanges(), J2 > g2 ? (v2.addRange(q2), v2.extend(f2.node, f2.offset)) : (q2.setEnd(f2.node, f2.offset), v2.addRange(q2))))));
      q2 = [];
      for (v2 = t2; v2 = v2.parentNode; )
        v2.nodeType === 1 && q2.push({ element: v2, left: v2.scrollLeft, top: v2.scrollTop });
      typeof t2.focus === "function" && t2.focus();
      for (t2 = 0; t2 < q2.length; t2++)
        v2 = q2[t2], v2.element.scrollLeft = v2.left, v2.element.scrollTop = v2.top;
    }
    fd = !!kf;
    lf = kf = null;
    a2.current = c2;
    Z = d2;
    do
      try {
        for (t2 = a2; Z !== null; ) {
          var K2 = Z.flags;
          K2 & 36 && Yi(t2, Z.alternate, Z);
          if (K2 & 128) {
            q2 = void 0;
            var Q2 = Z.ref;
            if (Q2 !== null) {
              var L2 = Z.stateNode;
              switch (Z.tag) {
                case 5:
                  q2 = L2;
                  break;
                default:
                  q2 = L2;
              }
              typeof Q2 === "function" ? Q2(q2) : Q2.current = q2;
            }
          }
          Z = Z.nextEffect;
        }
      } catch (va) {
        if (Z === null)
          throw Error(y$2(330));
        Wi(Z, va);
        Z = Z.nextEffect;
      }
    while (Z !== null);
    Z = null;
    $f();
    X = e2;
  } else
    a2.current = c2;
  if (xj)
    xj = false, yj = a2, zj = b2;
  else
    for (Z = d2; Z !== null; )
      b2 = Z.nextEffect, Z.nextEffect = null, Z.flags & 8 && (K2 = Z, K2.sibling = null, K2.stateNode = null), Z = b2;
  d2 = a2.pendingLanes;
  d2 === 0 && (Ti = null);
  d2 === 1 ? a2 === Ej ? Dj++ : (Dj = 0, Ej = a2) : Dj = 0;
  c2 = c2.stateNode;
  if (Mf && typeof Mf.onCommitFiberRoot === "function")
    try {
      Mf.onCommitFiberRoot(Lf, c2, void 0, (c2.current.flags & 64) === 64);
    } catch (va) {
    }
  Mj(a2, O$1());
  if (Qi)
    throw Qi = false, a2 = Ri, Ri = null, a2;
  if ((X & 8) !== 0)
    return null;
  ig();
  return null;
}
function ek() {
  for (; Z !== null; ) {
    var a2 = Z.alternate;
    Jj || Ij === null || ((Z.flags & 8) !== 0 ? dc(Z, Ij) && (Jj = true) : Z.tag === 13 && mj(a2, Z) && dc(Z, Ij) && (Jj = true));
    var b2 = Z.flags;
    (b2 & 256) !== 0 && Xi(a2, Z);
    (b2 & 512) === 0 || xj || (xj = true, hg(97, function() {
      Oj();
      return null;
    }));
    Z = Z.nextEffect;
  }
}
function Oj() {
  if (zj !== 90) {
    var a2 = 97 < zj ? 97 : zj;
    zj = 90;
    return gg(a2, fk);
  }
  return false;
}
function $i(a2, b2) {
  Aj.push(b2, a2);
  xj || (xj = true, hg(97, function() {
    Oj();
    return null;
  }));
}
function Zi(a2, b2) {
  Bj.push(b2, a2);
  xj || (xj = true, hg(97, function() {
    Oj();
    return null;
  }));
}
function fk() {
  if (yj === null)
    return false;
  var a2 = yj;
  yj = null;
  if ((X & 48) !== 0)
    throw Error(y$2(331));
  var b2 = X;
  X |= 32;
  var c2 = Bj;
  Bj = [];
  for (var d2 = 0; d2 < c2.length; d2 += 2) {
    var e2 = c2[d2], f2 = c2[d2 + 1], g2 = e2.destroy;
    e2.destroy = void 0;
    if (typeof g2 === "function")
      try {
        g2();
      } catch (k2) {
        if (f2 === null)
          throw Error(y$2(330));
        Wi(f2, k2);
      }
  }
  c2 = Aj;
  Aj = [];
  for (d2 = 0; d2 < c2.length; d2 += 2) {
    e2 = c2[d2];
    f2 = c2[d2 + 1];
    try {
      var h2 = e2.create;
      e2.destroy = h2();
    } catch (k2) {
      if (f2 === null)
        throw Error(y$2(330));
      Wi(f2, k2);
    }
  }
  for (h2 = a2.current.firstEffect; h2 !== null; )
    a2 = h2.nextEffect, h2.nextEffect = null, h2.flags & 8 && (h2.sibling = null, h2.stateNode = null), h2 = a2;
  X = b2;
  ig();
  return true;
}
function gk(a2, b2, c2) {
  b2 = Mi(c2, b2);
  b2 = Pi(a2, b2, 1);
  Ag(a2, b2);
  b2 = Hg();
  a2 = Kj(a2, 1);
  a2 !== null && ($c(a2, 1, b2), Mj(a2, b2));
}
function Wi(a2, b2) {
  if (a2.tag === 3)
    gk(a2, a2, b2);
  else
    for (var c2 = a2.return; c2 !== null; ) {
      if (c2.tag === 3) {
        gk(c2, a2, b2);
        break;
      } else if (c2.tag === 1) {
        var d2 = c2.stateNode;
        if (typeof c2.type.getDerivedStateFromError === "function" || typeof d2.componentDidCatch === "function" && (Ti === null || !Ti.has(d2))) {
          a2 = Mi(b2, a2);
          var e2 = Si(c2, a2, 1);
          Ag(c2, e2);
          e2 = Hg();
          c2 = Kj(c2, 1);
          if (c2 !== null)
            $c(c2, 1, e2), Mj(c2, e2);
          else if (typeof d2.componentDidCatch === "function" && (Ti === null || !Ti.has(d2)))
            try {
              d2.componentDidCatch(b2, a2);
            } catch (f2) {
            }
          break;
        }
      }
      c2 = c2.return;
    }
}
function Yj(a2, b2, c2) {
  var d2 = a2.pingCache;
  d2 !== null && d2.delete(b2);
  b2 = Hg();
  a2.pingedLanes |= a2.suspendedLanes & c2;
  U$1 === a2 && (W$1 & c2) === c2 && (V === 4 || V === 3 && (W$1 & 62914560) === W$1 && 500 > O$1() - jj ? Qj(a2, 0) : uj |= c2);
  Mj(a2, b2);
}
function lj(a2, b2) {
  var c2 = a2.stateNode;
  c2 !== null && c2.delete(b2);
  b2 = 0;
  b2 === 0 && (b2 = a2.mode, (b2 & 2) === 0 ? b2 = 1 : (b2 & 4) === 0 ? b2 = eg() === 99 ? 1 : 2 : (Gj === 0 && (Gj = tj), b2 = Yc(62914560 & ~Gj), b2 === 0 && (b2 = 4194304)));
  c2 = Hg();
  a2 = Kj(a2, b2);
  a2 !== null && ($c(a2, b2, c2), Mj(a2, c2));
}
var ck;
ck = function(a2, b2, c2) {
  var d2 = b2.lanes;
  if (a2 !== null)
    if (a2.memoizedProps !== b2.pendingProps || N$1.current)
      ug = true;
    else if ((c2 & d2) !== 0)
      ug = (a2.flags & 16384) !== 0 ? true : false;
    else {
      ug = false;
      switch (b2.tag) {
        case 3:
          ri(b2);
          sh();
          break;
        case 5:
          gh(b2);
          break;
        case 1:
          Ff(b2.type) && Jf(b2);
          break;
        case 4:
          eh(b2, b2.stateNode.containerInfo);
          break;
        case 10:
          d2 = b2.memoizedProps.value;
          var e2 = b2.type._context;
          I$1(mg, e2._currentValue);
          e2._currentValue = d2;
          break;
        case 13:
          if (b2.memoizedState !== null) {
            if ((c2 & b2.child.childLanes) !== 0)
              return ti(a2, b2, c2);
            I$1(P$1, P$1.current & 1);
            b2 = hi(a2, b2, c2);
            return b2 !== null ? b2.sibling : null;
          }
          I$1(P$1, P$1.current & 1);
          break;
        case 19:
          d2 = (c2 & b2.childLanes) !== 0;
          if ((a2.flags & 64) !== 0) {
            if (d2)
              return Ai(a2, b2, c2);
            b2.flags |= 64;
          }
          e2 = b2.memoizedState;
          e2 !== null && (e2.rendering = null, e2.tail = null, e2.lastEffect = null);
          I$1(P$1, P$1.current);
          if (d2)
            break;
          else
            return null;
        case 23:
        case 24:
          return b2.lanes = 0, mi(a2, b2, c2);
      }
      return hi(a2, b2, c2);
    }
  else
    ug = false;
  b2.lanes = 0;
  switch (b2.tag) {
    case 2:
      d2 = b2.type;
      a2 !== null && (a2.alternate = null, b2.alternate = null, b2.flags |= 2);
      a2 = b2.pendingProps;
      e2 = Ef(b2, M.current);
      tg(b2, c2);
      e2 = Ch(null, b2, d2, a2, e2, c2);
      b2.flags |= 1;
      if (typeof e2 === "object" && e2 !== null && typeof e2.render === "function" && e2.$$typeof === void 0) {
        b2.tag = 1;
        b2.memoizedState = null;
        b2.updateQueue = null;
        if (Ff(d2)) {
          var f2 = true;
          Jf(b2);
        } else
          f2 = false;
        b2.memoizedState = e2.state !== null && e2.state !== void 0 ? e2.state : null;
        xg(b2);
        var g2 = d2.getDerivedStateFromProps;
        typeof g2 === "function" && Gg(b2, d2, g2, a2);
        e2.updater = Kg;
        b2.stateNode = e2;
        e2._reactInternals = b2;
        Og(b2, d2, a2, c2);
        b2 = qi(null, b2, d2, true, f2, c2);
      } else
        b2.tag = 0, fi(null, b2, e2, c2), b2 = b2.child;
      return b2;
    case 16:
      e2 = b2.elementType;
      a: {
        a2 !== null && (a2.alternate = null, b2.alternate = null, b2.flags |= 2);
        a2 = b2.pendingProps;
        f2 = e2._init;
        e2 = f2(e2._payload);
        b2.type = e2;
        f2 = b2.tag = hk(e2);
        a2 = lg(e2, a2);
        switch (f2) {
          case 0:
            b2 = li(null, b2, e2, a2, c2);
            break a;
          case 1:
            b2 = pi(null, b2, e2, a2, c2);
            break a;
          case 11:
            b2 = gi(null, b2, e2, a2, c2);
            break a;
          case 14:
            b2 = ii(null, b2, e2, lg(e2.type, a2), d2, c2);
            break a;
        }
        throw Error(y$2(306, e2, ""));
      }
      return b2;
    case 0:
      return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : lg(d2, e2), li(a2, b2, d2, e2, c2);
    case 1:
      return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : lg(d2, e2), pi(a2, b2, d2, e2, c2);
    case 3:
      ri(b2);
      d2 = b2.updateQueue;
      if (a2 === null || d2 === null)
        throw Error(y$2(282));
      d2 = b2.pendingProps;
      e2 = b2.memoizedState;
      e2 = e2 !== null ? e2.element : null;
      yg(a2, b2);
      Cg(b2, d2, null, c2);
      d2 = b2.memoizedState.element;
      if (d2 === e2)
        sh(), b2 = hi(a2, b2, c2);
      else {
        e2 = b2.stateNode;
        if (f2 = e2.hydrate)
          kh = rf(b2.stateNode.containerInfo.firstChild), jh = b2, f2 = lh = true;
        if (f2) {
          a2 = e2.mutableSourceEagerHydrationData;
          if (a2 != null)
            for (e2 = 0; e2 < a2.length; e2 += 2)
              f2 = a2[e2], f2._workInProgressVersionPrimary = a2[e2 + 1], th.push(f2);
          c2 = Zg(b2, null, d2, c2);
          for (b2.child = c2; c2; )
            c2.flags = c2.flags & -3 | 1024, c2 = c2.sibling;
        } else
          fi(a2, b2, d2, c2), sh();
        b2 = b2.child;
      }
      return b2;
    case 5:
      return gh(b2), a2 === null && ph(b2), d2 = b2.type, e2 = b2.pendingProps, f2 = a2 !== null ? a2.memoizedProps : null, g2 = e2.children, nf(d2, e2) ? g2 = null : f2 !== null && nf(d2, f2) && (b2.flags |= 16), oi(a2, b2), fi(a2, b2, g2, c2), b2.child;
    case 6:
      return a2 === null && ph(b2), null;
    case 13:
      return ti(a2, b2, c2);
    case 4:
      return eh(b2, b2.stateNode.containerInfo), d2 = b2.pendingProps, a2 === null ? b2.child = Yg(b2, null, d2, c2) : fi(a2, b2, d2, c2), b2.child;
    case 11:
      return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : lg(d2, e2), gi(a2, b2, d2, e2, c2);
    case 7:
      return fi(a2, b2, b2.pendingProps, c2), b2.child;
    case 8:
      return fi(a2, b2, b2.pendingProps.children, c2), b2.child;
    case 12:
      return fi(a2, b2, b2.pendingProps.children, c2), b2.child;
    case 10:
      a: {
        d2 = b2.type._context;
        e2 = b2.pendingProps;
        g2 = b2.memoizedProps;
        f2 = e2.value;
        var h2 = b2.type._context;
        I$1(mg, h2._currentValue);
        h2._currentValue = f2;
        if (g2 !== null)
          if (h2 = g2.value, f2 = He(h2, f2) ? 0 : (typeof d2._calculateChangedBits === "function" ? d2._calculateChangedBits(h2, f2) : 1073741823) | 0, f2 === 0) {
            if (g2.children === e2.children && !N$1.current) {
              b2 = hi(a2, b2, c2);
              break a;
            }
          } else
            for (h2 = b2.child, h2 !== null && (h2.return = b2); h2 !== null; ) {
              var k2 = h2.dependencies;
              if (k2 !== null) {
                g2 = h2.child;
                for (var l2 = k2.firstContext; l2 !== null; ) {
                  if (l2.context === d2 && (l2.observedBits & f2) !== 0) {
                    h2.tag === 1 && (l2 = zg(-1, c2 & -c2), l2.tag = 2, Ag(h2, l2));
                    h2.lanes |= c2;
                    l2 = h2.alternate;
                    l2 !== null && (l2.lanes |= c2);
                    sg(h2.return, c2);
                    k2.lanes |= c2;
                    break;
                  }
                  l2 = l2.next;
                }
              } else
                g2 = h2.tag === 10 ? h2.type === b2.type ? null : h2.child : h2.child;
              if (g2 !== null)
                g2.return = h2;
              else
                for (g2 = h2; g2 !== null; ) {
                  if (g2 === b2) {
                    g2 = null;
                    break;
                  }
                  h2 = g2.sibling;
                  if (h2 !== null) {
                    h2.return = g2.return;
                    g2 = h2;
                    break;
                  }
                  g2 = g2.return;
                }
              h2 = g2;
            }
        fi(a2, b2, e2.children, c2);
        b2 = b2.child;
      }
      return b2;
    case 9:
      return e2 = b2.type, f2 = b2.pendingProps, d2 = f2.children, tg(b2, c2), e2 = vg(e2, f2.unstable_observedBits), d2 = d2(e2), b2.flags |= 1, fi(a2, b2, d2, c2), b2.child;
    case 14:
      return e2 = b2.type, f2 = lg(e2, b2.pendingProps), f2 = lg(e2.type, f2), ii(a2, b2, e2, f2, d2, c2);
    case 15:
      return ki(a2, b2, b2.type, b2.pendingProps, d2, c2);
    case 17:
      return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : lg(d2, e2), a2 !== null && (a2.alternate = null, b2.alternate = null, b2.flags |= 2), b2.tag = 1, Ff(d2) ? (a2 = true, Jf(b2)) : a2 = false, tg(b2, c2), Mg(b2, d2, e2), Og(b2, d2, e2, c2), qi(null, b2, d2, true, a2, c2);
    case 19:
      return Ai(a2, b2, c2);
    case 23:
      return mi(a2, b2, c2);
    case 24:
      return mi(a2, b2, c2);
  }
  throw Error(y$2(156, b2.tag));
};
function ik(a2, b2, c2, d2) {
  this.tag = a2;
  this.key = c2;
  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = b2;
  this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
  this.mode = d2;
  this.flags = 0;
  this.lastEffect = this.firstEffect = this.nextEffect = null;
  this.childLanes = this.lanes = 0;
  this.alternate = null;
}
function nh(a2, b2, c2, d2) {
  return new ik(a2, b2, c2, d2);
}
function ji(a2) {
  a2 = a2.prototype;
  return !(!a2 || !a2.isReactComponent);
}
function hk(a2) {
  if (typeof a2 === "function")
    return ji(a2) ? 1 : 0;
  if (a2 !== void 0 && a2 !== null) {
    a2 = a2.$$typeof;
    if (a2 === Aa)
      return 11;
    if (a2 === Da)
      return 14;
  }
  return 2;
}
function Tg(a2, b2) {
  var c2 = a2.alternate;
  c2 === null ? (c2 = nh(a2.tag, b2, a2.key, a2.mode), c2.elementType = a2.elementType, c2.type = a2.type, c2.stateNode = a2.stateNode, c2.alternate = a2, a2.alternate = c2) : (c2.pendingProps = b2, c2.type = a2.type, c2.flags = 0, c2.nextEffect = null, c2.firstEffect = null, c2.lastEffect = null);
  c2.childLanes = a2.childLanes;
  c2.lanes = a2.lanes;
  c2.child = a2.child;
  c2.memoizedProps = a2.memoizedProps;
  c2.memoizedState = a2.memoizedState;
  c2.updateQueue = a2.updateQueue;
  b2 = a2.dependencies;
  c2.dependencies = b2 === null ? null : { lanes: b2.lanes, firstContext: b2.firstContext };
  c2.sibling = a2.sibling;
  c2.index = a2.index;
  c2.ref = a2.ref;
  return c2;
}
function Vg(a2, b2, c2, d2, e2, f2) {
  var g2 = 2;
  d2 = a2;
  if (typeof a2 === "function")
    ji(a2) && (g2 = 1);
  else if (typeof a2 === "string")
    g2 = 5;
  else
    a:
      switch (a2) {
        case ua:
          return Xg(c2.children, e2, f2, b2);
        case Ha:
          g2 = 8;
          e2 |= 16;
          break;
        case wa:
          g2 = 8;
          e2 |= 1;
          break;
        case xa:
          return a2 = nh(12, c2, b2, e2 | 8), a2.elementType = xa, a2.type = xa, a2.lanes = f2, a2;
        case Ba:
          return a2 = nh(13, c2, b2, e2), a2.type = Ba, a2.elementType = Ba, a2.lanes = f2, a2;
        case Ca:
          return a2 = nh(19, c2, b2, e2), a2.elementType = Ca, a2.lanes = f2, a2;
        case Ia:
          return vi(c2, e2, f2, b2);
        case Ja:
          return a2 = nh(24, c2, b2, e2), a2.elementType = Ja, a2.lanes = f2, a2;
        default:
          if (typeof a2 === "object" && a2 !== null)
            switch (a2.$$typeof) {
              case ya:
                g2 = 10;
                break a;
              case za:
                g2 = 9;
                break a;
              case Aa:
                g2 = 11;
                break a;
              case Da:
                g2 = 14;
                break a;
              case Ea:
                g2 = 16;
                d2 = null;
                break a;
              case Fa:
                g2 = 22;
                break a;
            }
          throw Error(y$2(130, a2 == null ? a2 : typeof a2, ""));
      }
  b2 = nh(g2, c2, b2, e2);
  b2.elementType = a2;
  b2.type = d2;
  b2.lanes = f2;
  return b2;
}
function Xg(a2, b2, c2, d2) {
  a2 = nh(7, a2, d2, b2);
  a2.lanes = c2;
  return a2;
}
function vi(a2, b2, c2, d2) {
  a2 = nh(23, a2, d2, b2);
  a2.elementType = Ia;
  a2.lanes = c2;
  return a2;
}
function Ug(a2, b2, c2) {
  a2 = nh(6, a2, null, b2);
  a2.lanes = c2;
  return a2;
}
function Wg(a2, b2, c2) {
  b2 = nh(4, a2.children !== null ? a2.children : [], a2.key, b2);
  b2.lanes = c2;
  b2.stateNode = { containerInfo: a2.containerInfo, pendingChildren: null, implementation: a2.implementation };
  return b2;
}
function jk(a2, b2, c2) {
  this.tag = b2;
  this.containerInfo = a2;
  this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
  this.timeoutHandle = -1;
  this.pendingContext = this.context = null;
  this.hydrate = c2;
  this.callbackNode = null;
  this.callbackPriority = 0;
  this.eventTimes = Zc(0);
  this.expirationTimes = Zc(-1);
  this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
  this.entanglements = Zc(0);
  this.mutableSourceEagerHydrationData = null;
}
function kk(a2, b2, c2) {
  var d2 = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
  return { $$typeof: ta, key: d2 == null ? null : "" + d2, children: a2, containerInfo: b2, implementation: c2 };
}
function lk(a2, b2, c2, d2) {
  var e2 = b2.current, f2 = Hg(), g2 = Ig(e2);
  a:
    if (c2) {
      c2 = c2._reactInternals;
      b: {
        if (Zb(c2) !== c2 || c2.tag !== 1)
          throw Error(y$2(170));
        var h2 = c2;
        do {
          switch (h2.tag) {
            case 3:
              h2 = h2.stateNode.context;
              break b;
            case 1:
              if (Ff(h2.type)) {
                h2 = h2.stateNode.__reactInternalMemoizedMergedChildContext;
                break b;
              }
          }
          h2 = h2.return;
        } while (h2 !== null);
        throw Error(y$2(171));
      }
      if (c2.tag === 1) {
        var k2 = c2.type;
        if (Ff(k2)) {
          c2 = If(c2, k2, h2);
          break a;
        }
      }
      c2 = h2;
    } else
      c2 = Cf;
  b2.context === null ? b2.context = c2 : b2.pendingContext = c2;
  b2 = zg(f2, g2);
  b2.payload = { element: a2 };
  d2 = d2 === void 0 ? null : d2;
  d2 !== null && (b2.callback = d2);
  Ag(e2, b2);
  Jg(e2, g2, f2);
  return g2;
}
function mk(a2) {
  a2 = a2.current;
  if (!a2.child)
    return null;
  switch (a2.child.tag) {
    case 5:
      return a2.child.stateNode;
    default:
      return a2.child.stateNode;
  }
}
function nk(a2, b2) {
  a2 = a2.memoizedState;
  if (a2 !== null && a2.dehydrated !== null) {
    var c2 = a2.retryLane;
    a2.retryLane = c2 !== 0 && c2 < b2 ? c2 : b2;
  }
}
function ok(a2, b2) {
  nk(a2, b2);
  (a2 = a2.alternate) && nk(a2, b2);
}
function pk() {
  return null;
}
function qk(a2, b2, c2) {
  var d2 = c2 != null && c2.hydrationOptions != null && c2.hydrationOptions.mutableSources || null;
  c2 = new jk(a2, b2, c2 != null && c2.hydrate === true);
  b2 = nh(3, null, null, b2 === 2 ? 7 : b2 === 1 ? 3 : 0);
  c2.current = b2;
  b2.stateNode = c2;
  xg(b2);
  a2[ff] = c2.current;
  cf(a2.nodeType === 8 ? a2.parentNode : a2);
  if (d2)
    for (a2 = 0; a2 < d2.length; a2++) {
      b2 = d2[a2];
      var e2 = b2._getVersion;
      e2 = e2(b2._source);
      c2.mutableSourceEagerHydrationData == null ? c2.mutableSourceEagerHydrationData = [b2, e2] : c2.mutableSourceEagerHydrationData.push(b2, e2);
    }
  this._internalRoot = c2;
}
qk.prototype.render = function(a2) {
  lk(a2, this._internalRoot, null, null);
};
qk.prototype.unmount = function() {
  var a2 = this._internalRoot, b2 = a2.containerInfo;
  lk(null, a2, null, function() {
    b2[ff] = null;
  });
};
function rk(a2) {
  return !(!a2 || a2.nodeType !== 1 && a2.nodeType !== 9 && a2.nodeType !== 11 && (a2.nodeType !== 8 || a2.nodeValue !== " react-mount-point-unstable "));
}
function sk(a2, b2) {
  b2 || (b2 = a2 ? a2.nodeType === 9 ? a2.documentElement : a2.firstChild : null, b2 = !(!b2 || b2.nodeType !== 1 || !b2.hasAttribute("data-reactroot")));
  if (!b2)
    for (var c2; c2 = a2.lastChild; )
      a2.removeChild(c2);
  return new qk(a2, 0, b2 ? { hydrate: true } : void 0);
}
function tk(a2, b2, c2, d2, e2) {
  var f2 = c2._reactRootContainer;
  if (f2) {
    var g2 = f2._internalRoot;
    if (typeof e2 === "function") {
      var h2 = e2;
      e2 = function() {
        var a3 = mk(g2);
        h2.call(a3);
      };
    }
    lk(b2, g2, a2, e2);
  } else {
    f2 = c2._reactRootContainer = sk(c2, d2);
    g2 = f2._internalRoot;
    if (typeof e2 === "function") {
      var k2 = e2;
      e2 = function() {
        var a3 = mk(g2);
        k2.call(a3);
      };
    }
    Xj(function() {
      lk(b2, g2, a2, e2);
    });
  }
  return mk(g2);
}
ec = function(a2) {
  if (a2.tag === 13) {
    var b2 = Hg();
    Jg(a2, 4, b2);
    ok(a2, 4);
  }
};
fc = function(a2) {
  if (a2.tag === 13) {
    var b2 = Hg();
    Jg(a2, 67108864, b2);
    ok(a2, 67108864);
  }
};
gc = function(a2) {
  if (a2.tag === 13) {
    var b2 = Hg(), c2 = Ig(a2);
    Jg(a2, c2, b2);
    ok(a2, c2);
  }
};
hc = function(a2, b2) {
  return b2();
};
yb = function(a2, b2, c2) {
  switch (b2) {
    case "input":
      ab(a2, c2);
      b2 = c2.name;
      if (c2.type === "radio" && b2 != null) {
        for (c2 = a2; c2.parentNode; )
          c2 = c2.parentNode;
        c2 = c2.querySelectorAll("input[name=" + JSON.stringify("" + b2) + '][type="radio"]');
        for (b2 = 0; b2 < c2.length; b2++) {
          var d2 = c2[b2];
          if (d2 !== a2 && d2.form === a2.form) {
            var e2 = Db(d2);
            if (!e2)
              throw Error(y$2(90));
            Wa(d2);
            ab(d2, e2);
          }
        }
      }
      break;
    case "textarea":
      ib(a2, c2);
      break;
    case "select":
      b2 = c2.value, b2 != null && fb(a2, !!c2.multiple, b2, false);
  }
};
Gb = Wj;
Hb = function(a2, b2, c2, d2, e2) {
  var f2 = X;
  X |= 4;
  try {
    return gg(98, a2.bind(null, b2, c2, d2, e2));
  } finally {
    X = f2, X === 0 && (wj(), ig());
  }
};
Ib = function() {
  (X & 49) === 0 && (Vj(), Oj());
};
Jb = function(a2, b2) {
  var c2 = X;
  X |= 2;
  try {
    return a2(b2);
  } finally {
    X = c2, X === 0 && (wj(), ig());
  }
};
function uk(a2, b2) {
  var c2 = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
  if (!rk(b2))
    throw Error(y$2(200));
  return kk(a2, b2, null, c2);
}
var vk = { Events: [Cb, ue, Db, Eb, Fb, Oj, { current: false }] }, wk = { findFiberByHostInstance: wc, bundleType: 0, version: "17.0.2", rendererPackageName: "react-dom" };
var xk = { bundleType: wk.bundleType, version: wk.version, rendererPackageName: wk.rendererPackageName, rendererConfig: wk.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: ra.ReactCurrentDispatcher, findHostInstanceByFiber: function(a2) {
  a2 = cc$1(a2);
  return a2 === null ? null : a2.stateNode;
}, findFiberByHostInstance: wk.findFiberByHostInstance || pk, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null };
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined") {
  var yk = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!yk.isDisabled && yk.supportsFiber)
    try {
      Lf = yk.inject(xk), Mf = yk;
    } catch (a2) {
    }
}
reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = vk;
reactDom_production_min.createPortal = uk;
reactDom_production_min.findDOMNode = function(a2) {
  if (a2 == null)
    return null;
  if (a2.nodeType === 1)
    return a2;
  var b2 = a2._reactInternals;
  if (b2 === void 0) {
    if (typeof a2.render === "function")
      throw Error(y$2(188));
    throw Error(y$2(268, Object.keys(a2)));
  }
  a2 = cc$1(b2);
  a2 = a2 === null ? null : a2.stateNode;
  return a2;
};
reactDom_production_min.flushSync = function(a2, b2) {
  var c2 = X;
  if ((c2 & 48) !== 0)
    return a2(b2);
  X |= 1;
  try {
    if (a2)
      return gg(99, a2.bind(null, b2));
  } finally {
    X = c2, ig();
  }
};
reactDom_production_min.hydrate = function(a2, b2, c2) {
  if (!rk(b2))
    throw Error(y$2(200));
  return tk(null, a2, b2, true, c2);
};
reactDom_production_min.render = function(a2, b2, c2) {
  if (!rk(b2))
    throw Error(y$2(200));
  return tk(null, a2, b2, false, c2);
};
reactDom_production_min.unmountComponentAtNode = function(a2) {
  if (!rk(a2))
    throw Error(y$2(40));
  return a2._reactRootContainer ? (Xj(function() {
    tk(null, null, a2, false, function() {
      a2._reactRootContainer = null;
      a2[ff] = null;
    });
  }), true) : false;
};
reactDom_production_min.unstable_batchedUpdates = Wj;
reactDom_production_min.unstable_createPortal = function(a2, b2) {
  return uk(a2, b2, 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null);
};
reactDom_production_min.unstable_renderSubtreeIntoContainer = function(a2, b2, c2, d2) {
  if (!rk(c2))
    throw Error(y$2(200));
  if (a2 == null || a2._reactInternals === void 0)
    throw Error(y$2(38));
  return tk(a2, b2, c2, false, d2);
};
reactDom_production_min.version = "17.0.2";
function checkDCE() {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") {
    return;
  }
  try {
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    console.error(err);
  }
}
{
  checkDCE();
  reactDom.exports = reactDom_production_min;
}
var ReactDOM = reactDom.exports;
function sheetForTag(tag) {
  if (tag.sheet) {
    return tag.sheet;
  }
  for (var i = 0; i < document.styleSheets.length; i++) {
    if (document.styleSheets[i].ownerNode === tag) {
      return document.styleSheets[i];
    }
  }
}
function createStyleElement(options) {
  var tag = document.createElement("style");
  tag.setAttribute("data-emotion", options.key);
  if (options.nonce !== void 0) {
    tag.setAttribute("nonce", options.nonce);
  }
  tag.appendChild(document.createTextNode(""));
  tag.setAttribute("data-s", "");
  return tag;
}
var StyleSheet = /* @__PURE__ */ function() {
  function StyleSheet2(options) {
    var _this = this;
    this._insertTag = function(tag) {
      var before;
      if (_this.tags.length === 0) {
        if (_this.insertionPoint) {
          before = _this.insertionPoint.nextSibling;
        } else if (_this.prepend) {
          before = _this.container.firstChild;
        } else {
          before = _this.before;
        }
      } else {
        before = _this.tags[_this.tags.length - 1].nextSibling;
      }
      _this.container.insertBefore(tag, before);
      _this.tags.push(tag);
    };
    this.isSpeedy = options.speedy === void 0 ? true : options.speedy;
    this.tags = [];
    this.ctr = 0;
    this.nonce = options.nonce;
    this.key = options.key;
    this.container = options.container;
    this.prepend = options.prepend;
    this.insertionPoint = options.insertionPoint;
    this.before = null;
  }
  var _proto = StyleSheet2.prototype;
  _proto.hydrate = function hydrate(nodes) {
    nodes.forEach(this._insertTag);
  };
  _proto.insert = function insert(rule) {
    if (this.ctr % (this.isSpeedy ? 65e3 : 1) === 0) {
      this._insertTag(createStyleElement(this));
    }
    var tag = this.tags[this.tags.length - 1];
    if (this.isSpeedy) {
      var sheet = sheetForTag(tag);
      try {
        sheet.insertRule(rule, sheet.cssRules.length);
      } catch (e2) {
      }
    } else {
      tag.appendChild(document.createTextNode(rule));
    }
    this.ctr++;
  };
  _proto.flush = function flush() {
    this.tags.forEach(function(tag) {
      return tag.parentNode && tag.parentNode.removeChild(tag);
    });
    this.tags = [];
    this.ctr = 0;
  };
  return StyleSheet2;
}();
var MS = "-ms-";
var MOZ = "-moz-";
var WEBKIT = "-webkit-";
var COMMENT = "comm";
var RULESET = "rule";
var DECLARATION = "decl";
var IMPORT = "@import";
var KEYFRAMES = "@keyframes";
var abs = Math.abs;
var from = String.fromCharCode;
function hash(value, length2) {
  return (((length2 << 2 ^ charat(value, 0)) << 2 ^ charat(value, 1)) << 2 ^ charat(value, 2)) << 2 ^ charat(value, 3);
}
function trim(value) {
  return value.trim();
}
function match(value, pattern) {
  return (value = pattern.exec(value)) ? value[0] : value;
}
function replace(value, pattern, replacement) {
  return value.replace(pattern, replacement);
}
function indexof(value, search) {
  return value.indexOf(search);
}
function charat(value, index) {
  return value.charCodeAt(index) | 0;
}
function substr(value, begin, end) {
  return value.slice(begin, end);
}
function strlen(value) {
  return value.length;
}
function sizeof(value) {
  return value.length;
}
function append(value, array3) {
  return array3.push(value), value;
}
function combine(array3, callback) {
  return array3.map(callback).join("");
}
var line = 1;
var column = 1;
var length = 0;
var position$1 = 0;
var character = 0;
var characters = "";
function node(value, root2, parent, type, props, children, length2) {
  return { value, root: root2, parent, type, props, children, line, column, length: length2, return: "" };
}
function copy(value, root2, type) {
  return node(value, root2.root, root2.parent, type, root2.props, root2.children, 0);
}
function char() {
  return character;
}
function prev() {
  character = position$1 > 0 ? charat(characters, --position$1) : 0;
  if (column--, character === 10)
    column = 1, line--;
  return character;
}
function next() {
  character = position$1 < length ? charat(characters, position$1++) : 0;
  if (column++, character === 10)
    column = 1, line++;
  return character;
}
function peek() {
  return charat(characters, position$1);
}
function caret() {
  return position$1;
}
function slice(begin, end) {
  return substr(characters, begin, end);
}
function token(type) {
  switch (type) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function alloc(value) {
  return line = column = 1, length = strlen(characters = value), position$1 = 0, [];
}
function dealloc(value) {
  return characters = "", value;
}
function delimit(type) {
  return trim(slice(position$1 - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)));
}
function whitespace(type) {
  while (character = peek())
    if (character < 33)
      next();
    else
      break;
  return token(type) > 2 || token(character) > 3 ? "" : " ";
}
function escaping(index, count) {
  while (--count && next())
    if (character < 48 || character > 102 || character > 57 && character < 65 || character > 70 && character < 97)
      break;
  return slice(index, caret() + (count < 6 && peek() == 32 && next() == 32));
}
function delimiter(type) {
  while (next())
    switch (character) {
      case type:
        return position$1;
      case 34:
      case 39:
        return delimiter(type === 34 || type === 39 ? type : character);
      case 40:
        if (type === 41)
          delimiter(type);
        break;
      case 92:
        next();
        break;
    }
  return position$1;
}
function commenter(type, index) {
  while (next())
    if (type + character === 47 + 10)
      break;
    else if (type + character === 42 + 42 && peek() === 47)
      break;
  return "/*" + slice(index, position$1 - 1) + "*" + from(type === 47 ? type : next());
}
function identifier$1(index) {
  while (!token(peek()))
    next();
  return slice(index, position$1);
}
function compile(value) {
  return dealloc(parse$1("", null, null, null, [""], value = alloc(value), 0, [0], value));
}
function parse$1(value, root2, parent, rule, rules, rulesets, pseudo, points, declarations) {
  var index = 0;
  var offset = 0;
  var length2 = pseudo;
  var atrule = 0;
  var property = 0;
  var previous = 0;
  var variable = 1;
  var scanning = 1;
  var ampersand = 1;
  var character2 = 0;
  var type = "";
  var props = rules;
  var children = rulesets;
  var reference2 = rule;
  var characters2 = type;
  while (scanning)
    switch (previous = character2, character2 = next()) {
      case 34:
      case 39:
      case 91:
      case 40:
        characters2 += delimit(character2);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        characters2 += whitespace(previous);
        break;
      case 92:
        characters2 += escaping(caret() - 1, 7);
        continue;
      case 47:
        switch (peek()) {
          case 42:
          case 47:
            append(comment(commenter(next(), caret()), root2, parent), declarations);
            break;
          default:
            characters2 += "/";
        }
        break;
      case 123 * variable:
        points[index++] = strlen(characters2) * ampersand;
      case 125 * variable:
      case 59:
      case 0:
        switch (character2) {
          case 0:
          case 125:
            scanning = 0;
          case 59 + offset:
            if (property > 0 && strlen(characters2) - length2)
              append(property > 32 ? declaration(characters2 + ";", rule, parent, length2 - 1) : declaration(replace(characters2, " ", "") + ";", rule, parent, length2 - 2), declarations);
            break;
          case 59:
            characters2 += ";";
          default:
            append(reference2 = ruleset(characters2, root2, parent, index, offset, rules, points, type, props = [], children = [], length2), rulesets);
            if (character2 === 123)
              if (offset === 0)
                parse$1(characters2, root2, reference2, reference2, props, rulesets, length2, points, children);
              else
                switch (atrule) {
                  case 100:
                  case 109:
                  case 115:
                    parse$1(value, reference2, reference2, rule && append(ruleset(value, reference2, reference2, 0, 0, rules, points, type, rules, props = [], length2), children), rules, children, length2, points, rule ? props : children);
                    break;
                  default:
                    parse$1(characters2, reference2, reference2, reference2, [""], children, length2, points, children);
                }
        }
        index = offset = property = 0, variable = ampersand = 1, type = characters2 = "", length2 = pseudo;
        break;
      case 58:
        length2 = 1 + strlen(characters2), property = previous;
      default:
        if (variable < 1) {
          if (character2 == 123)
            --variable;
          else if (character2 == 125 && variable++ == 0 && prev() == 125)
            continue;
        }
        switch (characters2 += from(character2), character2 * variable) {
          case 38:
            ampersand = offset > 0 ? 1 : (characters2 += "\f", -1);
            break;
          case 44:
            points[index++] = (strlen(characters2) - 1) * ampersand, ampersand = 1;
            break;
          case 64:
            if (peek() === 45)
              characters2 += delimit(next());
            atrule = peek(), offset = strlen(type = characters2 += identifier$1(caret())), character2++;
            break;
          case 45:
            if (previous === 45 && strlen(characters2) == 2)
              variable = 0;
        }
    }
  return rulesets;
}
function ruleset(value, root2, parent, index, offset, rules, points, type, props, children, length2) {
  var post = offset - 1;
  var rule = offset === 0 ? rules : [""];
  var size2 = sizeof(rule);
  for (var i = 0, j2 = 0, k2 = 0; i < index; ++i)
    for (var x2 = 0, y2 = substr(value, post + 1, post = abs(j2 = points[i])), z2 = value; x2 < size2; ++x2)
      if (z2 = trim(j2 > 0 ? rule[x2] + " " + y2 : replace(y2, /&\f/g, rule[x2])))
        props[k2++] = z2;
  return node(value, root2, parent, offset === 0 ? RULESET : type, props, children, length2);
}
function comment(value, root2, parent) {
  return node(value, root2, parent, COMMENT, from(char()), substr(value, 2, -2), 0);
}
function declaration(value, root2, parent, length2) {
  return node(value, root2, parent, DECLARATION, substr(value, 0, length2), substr(value, length2 + 1, -1), length2);
}
function prefix(value, length2) {
  switch (hash(value, length2)) {
    case 5103:
      return WEBKIT + "print-" + value + value;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return WEBKIT + value + value;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return WEBKIT + value + MOZ + value + MS + value + value;
    case 6828:
    case 4268:
      return WEBKIT + value + MS + value + value;
    case 6165:
      return WEBKIT + value + MS + "flex-" + value + value;
    case 5187:
      return WEBKIT + value + replace(value, /(\w+).+(:[^]+)/, WEBKIT + "box-$1$2" + MS + "flex-$1$2") + value;
    case 5443:
      return WEBKIT + value + MS + "flex-item-" + replace(value, /flex-|-self/, "") + value;
    case 4675:
      return WEBKIT + value + MS + "flex-line-pack" + replace(value, /align-content|flex-|-self/, "") + value;
    case 5548:
      return WEBKIT + value + MS + replace(value, "shrink", "negative") + value;
    case 5292:
      return WEBKIT + value + MS + replace(value, "basis", "preferred-size") + value;
    case 6060:
      return WEBKIT + "box-" + replace(value, "-grow", "") + WEBKIT + value + MS + replace(value, "grow", "positive") + value;
    case 4554:
      return WEBKIT + replace(value, /([^-])(transform)/g, "$1" + WEBKIT + "$2") + value;
    case 6187:
      return replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + "$1"), /(image-set)/, WEBKIT + "$1"), value, "") + value;
    case 5495:
    case 3959:
      return replace(value, /(image-set\([^]*)/, WEBKIT + "$1$`$1");
    case 4968:
      return replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + "box-pack:$3" + MS + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + WEBKIT + value + value;
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return replace(value, /(.+)-inline(.+)/, WEBKIT + "$1$2") + value;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (strlen(value) - 1 - length2 > 6)
        switch (charat(value, length2 + 1)) {
          case 109:
            if (charat(value, length2 + 4) !== 45)
              break;
          case 102:
            return replace(value, /(.+:)(.+)-([^]+)/, "$1" + WEBKIT + "$2-$3$1" + MOZ + (charat(value, length2 + 3) == 108 ? "$3" : "$2-$3")) + value;
          case 115:
            return ~indexof(value, "stretch") ? prefix(replace(value, "stretch", "fill-available"), length2) + value : value;
        }
      break;
    case 4949:
      if (charat(value, length2 + 1) !== 115)
        break;
    case 6444:
      switch (charat(value, strlen(value) - 3 - (~indexof(value, "!important") && 10))) {
        case 107:
          return replace(value, ":", ":" + WEBKIT) + value;
        case 101:
          return replace(value, /(.+:)([^;!]+)(;|!.+)?/, "$1" + WEBKIT + (charat(value, 14) === 45 ? "inline-" : "") + "box$3$1" + WEBKIT + "$2$3$1" + MS + "$2box$3") + value;
      }
      break;
    case 5936:
      switch (charat(value, length2 + 11)) {
        case 114:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "tb") + value;
        case 108:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "tb-rl") + value;
        case 45:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "lr") + value;
      }
      return WEBKIT + value + MS + value + value;
  }
  return value;
}
function serialize(children, callback) {
  var output = "";
  var length2 = sizeof(children);
  for (var i = 0; i < length2; i++)
    output += callback(children[i], i, children, callback) || "";
  return output;
}
function stringify(element, index, children, callback) {
  switch (element.type) {
    case IMPORT:
    case DECLARATION:
      return element.return = element.return || element.value;
    case COMMENT:
      return "";
    case RULESET:
      element.value = element.props.join(",");
  }
  return strlen(children = serialize(element.children, callback)) ? element.return = element.value + "{" + children + "}" : "";
}
function middleware(collection) {
  var length2 = sizeof(collection);
  return function(element, index, children, callback) {
    var output = "";
    for (var i = 0; i < length2; i++)
      output += collection[i](element, index, children, callback) || "";
    return output;
  };
}
function rulesheet(callback) {
  return function(element) {
    if (!element.root) {
      if (element = element.return)
        callback(element);
    }
  };
}
function prefixer(element, index, children, callback) {
  if (!element.return)
    switch (element.type) {
      case DECLARATION:
        element.return = prefix(element.value, element.length);
        break;
      case KEYFRAMES:
        return serialize([copy(replace(element.value, "@", "@" + WEBKIT), element, "")], callback);
      case RULESET:
        if (element.length)
          return combine(element.props, function(value) {
            switch (match(value, /(::plac\w+|:read-\w+)/)) {
              case ":read-only":
              case ":read-write":
                return serialize([copy(replace(value, /:(read-\w+)/, ":" + MOZ + "$1"), element, "")], callback);
              case "::placeholder":
                return serialize([
                  copy(replace(value, /:(plac\w+)/, ":" + WEBKIT + "input-$1"), element, ""),
                  copy(replace(value, /:(plac\w+)/, ":" + MOZ + "$1"), element, ""),
                  copy(replace(value, /:(plac\w+)/, MS + "input-$1"), element, "")
                ], callback);
            }
            return "";
          });
    }
}
var weakMemoize = function weakMemoize2(func) {
  var cache = new WeakMap();
  return function(arg) {
    if (cache.has(arg)) {
      return cache.get(arg);
    }
    var ret = func(arg);
    cache.set(arg, ret);
    return ret;
  };
};
function memoize$1(fn) {
  var cache = Object.create(null);
  return function(arg) {
    if (cache[arg] === void 0)
      cache[arg] = fn(arg);
    return cache[arg];
  };
}
var identifierWithPointTracking = function identifierWithPointTracking2(begin, points, index) {
  var previous = 0;
  var character2 = 0;
  while (true) {
    previous = character2;
    character2 = peek();
    if (previous === 38 && character2 === 12) {
      points[index] = 1;
    }
    if (token(character2)) {
      break;
    }
    next();
  }
  return slice(begin, position$1);
};
var toRules = function toRules2(parsed, points) {
  var index = -1;
  var character2 = 44;
  do {
    switch (token(character2)) {
      case 0:
        if (character2 === 38 && peek() === 12) {
          points[index] = 1;
        }
        parsed[index] += identifierWithPointTracking(position$1 - 1, points, index);
        break;
      case 2:
        parsed[index] += delimit(character2);
        break;
      case 4:
        if (character2 === 44) {
          parsed[++index] = peek() === 58 ? "&\f" : "";
          points[index] = parsed[index].length;
          break;
        }
      default:
        parsed[index] += from(character2);
    }
  } while (character2 = next());
  return parsed;
};
var getRules = function getRules2(value, points) {
  return dealloc(toRules(alloc(value), points));
};
var fixedElements = /* @__PURE__ */ new WeakMap();
var compat = function compat2(element) {
  if (element.type !== "rule" || !element.parent || !element.length) {
    return;
  }
  var value = element.value, parent = element.parent;
  var isImplicitRule = element.column === parent.column && element.line === parent.line;
  while (parent.type !== "rule") {
    parent = parent.parent;
    if (!parent)
      return;
  }
  if (element.props.length === 1 && value.charCodeAt(0) !== 58 && !fixedElements.get(parent)) {
    return;
  }
  if (isImplicitRule) {
    return;
  }
  fixedElements.set(element, true);
  var points = [];
  var rules = getRules(value, points);
  var parentRules = parent.props;
  for (var i = 0, k2 = 0; i < rules.length; i++) {
    for (var j2 = 0; j2 < parentRules.length; j2++, k2++) {
      element.props[k2] = points[i] ? rules[i].replace(/&\f/g, parentRules[j2]) : parentRules[j2] + " " + rules[i];
    }
  }
};
var removeLabel = function removeLabel2(element) {
  if (element.type === "decl") {
    var value = element.value;
    if (value.charCodeAt(0) === 108 && value.charCodeAt(2) === 98) {
      element["return"] = "";
      element.value = "";
    }
  }
};
var defaultStylisPlugins = [prefixer];
var createCache = function createCache2(options) {
  var key = options.key;
  if (key === "css") {
    var ssrStyles = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(ssrStyles, function(node2) {
      var dataEmotionAttribute = node2.getAttribute("data-emotion");
      if (dataEmotionAttribute.indexOf(" ") === -1) {
        return;
      }
      document.head.appendChild(node2);
      node2.setAttribute("data-s", "");
    });
  }
  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;
  var inserted = {};
  var container2;
  var nodesToHydrate = [];
  {
    container2 = options.container || document.head;
    Array.prototype.forEach.call(document.querySelectorAll('style[data-emotion^="' + key + ' "]'), function(node2) {
      var attrib = node2.getAttribute("data-emotion").split(" ");
      for (var i = 1; i < attrib.length; i++) {
        inserted[attrib[i]] = true;
      }
      nodesToHydrate.push(node2);
    });
  }
  var _insert;
  var omnipresentPlugins = [compat, removeLabel];
  {
    var currentSheet;
    var finalizingPlugins = [stringify, rulesheet(function(rule) {
      currentSheet.insert(rule);
    })];
    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));
    var stylis = function stylis2(styles2) {
      return serialize(compile(styles2), serializer);
    };
    _insert = function insert(selector2, serialized, sheet, shouldCache) {
      currentSheet = sheet;
      stylis(selector2 ? selector2 + "{" + serialized.styles + "}" : serialized.styles);
      if (shouldCache) {
        cache.inserted[serialized.name] = true;
      }
    };
  }
  var cache = {
    key,
    sheet: new StyleSheet({
      key,
      container: container2,
      nonce: options.nonce,
      speedy: options.speedy,
      prepend: options.prepend,
      insertionPoint: options.insertionPoint
    }),
    nonce: options.nonce,
    inserted,
    registered: {},
    insert: _insert
  };
  cache.sheet.hydrate(nodesToHydrate);
  return cache;
};
function _extends$b() {
  _extends$b = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$b.apply(this, arguments);
}
var reactIs$1 = { exports: {} };
var reactIs_production_min = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b$1 = typeof Symbol === "function" && Symbol.for, c$1 = b$1 ? Symbol.for("react.element") : 60103, d = b$1 ? Symbol.for("react.portal") : 60106, e = b$1 ? Symbol.for("react.fragment") : 60107, f$2 = b$1 ? Symbol.for("react.strict_mode") : 60108, g$2 = b$1 ? Symbol.for("react.profiler") : 60114, h$2 = b$1 ? Symbol.for("react.provider") : 60109, k$1 = b$1 ? Symbol.for("react.context") : 60110, l = b$1 ? Symbol.for("react.async_mode") : 60111, m$2 = b$1 ? Symbol.for("react.concurrent_mode") : 60111, n$1 = b$1 ? Symbol.for("react.forward_ref") : 60112, p$2 = b$1 ? Symbol.for("react.suspense") : 60113, q$2 = b$1 ? Symbol.for("react.suspense_list") : 60120, r = b$1 ? Symbol.for("react.memo") : 60115, t$1 = b$1 ? Symbol.for("react.lazy") : 60116, v$1 = b$1 ? Symbol.for("react.block") : 60121, w$1 = b$1 ? Symbol.for("react.fundamental") : 60117, x$1 = b$1 ? Symbol.for("react.responder") : 60118, y$1 = b$1 ? Symbol.for("react.scope") : 60119;
function z$1(a2) {
  if (typeof a2 === "object" && a2 !== null) {
    var u2 = a2.$$typeof;
    switch (u2) {
      case c$1:
        switch (a2 = a2.type, a2) {
          case l:
          case m$2:
          case e:
          case g$2:
          case f$2:
          case p$2:
            return a2;
          default:
            switch (a2 = a2 && a2.$$typeof, a2) {
              case k$1:
              case n$1:
              case t$1:
              case r:
              case h$2:
                return a2;
              default:
                return u2;
            }
        }
      case d:
        return u2;
    }
  }
}
function A$1(a2) {
  return z$1(a2) === m$2;
}
reactIs_production_min.AsyncMode = l;
reactIs_production_min.ConcurrentMode = m$2;
reactIs_production_min.ContextConsumer = k$1;
reactIs_production_min.ContextProvider = h$2;
reactIs_production_min.Element = c$1;
reactIs_production_min.ForwardRef = n$1;
reactIs_production_min.Fragment = e;
reactIs_production_min.Lazy = t$1;
reactIs_production_min.Memo = r;
reactIs_production_min.Portal = d;
reactIs_production_min.Profiler = g$2;
reactIs_production_min.StrictMode = f$2;
reactIs_production_min.Suspense = p$2;
reactIs_production_min.isAsyncMode = function(a2) {
  return A$1(a2) || z$1(a2) === l;
};
reactIs_production_min.isConcurrentMode = A$1;
reactIs_production_min.isContextConsumer = function(a2) {
  return z$1(a2) === k$1;
};
reactIs_production_min.isContextProvider = function(a2) {
  return z$1(a2) === h$2;
};
reactIs_production_min.isElement = function(a2) {
  return typeof a2 === "object" && a2 !== null && a2.$$typeof === c$1;
};
reactIs_production_min.isForwardRef = function(a2) {
  return z$1(a2) === n$1;
};
reactIs_production_min.isFragment = function(a2) {
  return z$1(a2) === e;
};
reactIs_production_min.isLazy = function(a2) {
  return z$1(a2) === t$1;
};
reactIs_production_min.isMemo = function(a2) {
  return z$1(a2) === r;
};
reactIs_production_min.isPortal = function(a2) {
  return z$1(a2) === d;
};
reactIs_production_min.isProfiler = function(a2) {
  return z$1(a2) === g$2;
};
reactIs_production_min.isStrictMode = function(a2) {
  return z$1(a2) === f$2;
};
reactIs_production_min.isSuspense = function(a2) {
  return z$1(a2) === p$2;
};
reactIs_production_min.isValidElementType = function(a2) {
  return typeof a2 === "string" || typeof a2 === "function" || a2 === e || a2 === m$2 || a2 === g$2 || a2 === f$2 || a2 === p$2 || a2 === q$2 || typeof a2 === "object" && a2 !== null && (a2.$$typeof === t$1 || a2.$$typeof === r || a2.$$typeof === h$2 || a2.$$typeof === k$1 || a2.$$typeof === n$1 || a2.$$typeof === w$1 || a2.$$typeof === x$1 || a2.$$typeof === y$1 || a2.$$typeof === v$1);
};
reactIs_production_min.typeOf = z$1;
{
  reactIs$1.exports = reactIs_production_min;
}
var reactIs = reactIs$1.exports;
var FORWARD_REF_STATICS = {
  "$$typeof": true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  "$$typeof": true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
var isBrowser$2 = true;
function getRegisteredStyles(registered, registeredStyles, classNames2) {
  var rawClassName = "";
  classNames2.split(" ").forEach(function(className) {
    if (registered[className] !== void 0) {
      registeredStyles.push(registered[className] + ";");
    } else {
      rawClassName += className + " ";
    }
  });
  return rawClassName;
}
var insertStyles = function insertStyles2(cache, serialized, isStringTag) {
  var className = cache.key + "-" + serialized.name;
  if ((isStringTag === false || isBrowser$2 === false) && cache.registered[className] === void 0) {
    cache.registered[className] = serialized.styles;
  }
  if (cache.inserted[serialized.name] === void 0) {
    var current = serialized;
    do {
      cache.insert(serialized === current ? "." + className : "", current, cache.sheet, true);
      current = current.next;
    } while (current !== void 0);
  }
};
function murmur2(str) {
  var h2 = 0;
  var k2, i = 0, len = str.length;
  for (; len >= 4; ++i, len -= 4) {
    k2 = str.charCodeAt(i) & 255 | (str.charCodeAt(++i) & 255) << 8 | (str.charCodeAt(++i) & 255) << 16 | (str.charCodeAt(++i) & 255) << 24;
    k2 = (k2 & 65535) * 1540483477 + ((k2 >>> 16) * 59797 << 16);
    k2 ^= k2 >>> 24;
    h2 = (k2 & 65535) * 1540483477 + ((k2 >>> 16) * 59797 << 16) ^ (h2 & 65535) * 1540483477 + ((h2 >>> 16) * 59797 << 16);
  }
  switch (len) {
    case 3:
      h2 ^= (str.charCodeAt(i + 2) & 255) << 16;
    case 2:
      h2 ^= (str.charCodeAt(i + 1) & 255) << 8;
    case 1:
      h2 ^= str.charCodeAt(i) & 255;
      h2 = (h2 & 65535) * 1540483477 + ((h2 >>> 16) * 59797 << 16);
  }
  h2 ^= h2 >>> 13;
  h2 = (h2 & 65535) * 1540483477 + ((h2 >>> 16) * 59797 << 16);
  return ((h2 ^ h2 >>> 15) >>> 0).toString(36);
}
var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};
var hyphenateRegex = /[A-Z]|^ms/g;
var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;
var isCustomProperty = function isCustomProperty2(property) {
  return property.charCodeAt(1) === 45;
};
var isProcessableValue = function isProcessableValue2(value) {
  return value != null && typeof value !== "boolean";
};
var processStyleName = /* @__PURE__ */ memoize$1(function(styleName) {
  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, "-$&").toLowerCase();
});
var processStyleValue = function processStyleValue2(key, value) {
  switch (key) {
    case "animation":
    case "animationName": {
      if (typeof value === "string") {
        return value.replace(animationRegex, function(match2, p1, p2) {
          cursor = {
            name: p1,
            styles: p2,
            next: cursor
          };
          return p1;
        });
      }
    }
  }
  if (unitlessKeys[key] !== 1 && !isCustomProperty(key) && typeof value === "number" && value !== 0) {
    return value + "px";
  }
  return value;
};
function handleInterpolation(mergedProps, registered, interpolation) {
  if (interpolation == null) {
    return "";
  }
  if (interpolation.__emotion_styles !== void 0) {
    return interpolation;
  }
  switch (typeof interpolation) {
    case "boolean": {
      return "";
    }
    case "object": {
      if (interpolation.anim === 1) {
        cursor = {
          name: interpolation.name,
          styles: interpolation.styles,
          next: cursor
        };
        return interpolation.name;
      }
      if (interpolation.styles !== void 0) {
        var next2 = interpolation.next;
        if (next2 !== void 0) {
          while (next2 !== void 0) {
            cursor = {
              name: next2.name,
              styles: next2.styles,
              next: cursor
            };
            next2 = next2.next;
          }
        }
        var styles2 = interpolation.styles + ";";
        return styles2;
      }
      return createStringFromObject(mergedProps, registered, interpolation);
    }
    case "function": {
      if (mergedProps !== void 0) {
        var previousCursor = cursor;
        var result = interpolation(mergedProps);
        cursor = previousCursor;
        return handleInterpolation(mergedProps, registered, result);
      }
      break;
    }
  }
  if (registered == null) {
    return interpolation;
  }
  var cached = registered[interpolation];
  return cached !== void 0 ? cached : interpolation;
}
function createStringFromObject(mergedProps, registered, obj) {
  var string2 = "";
  if (Array.isArray(obj)) {
    for (var i = 0; i < obj.length; i++) {
      string2 += handleInterpolation(mergedProps, registered, obj[i]) + ";";
    }
  } else {
    for (var _key in obj) {
      var value = obj[_key];
      if (typeof value !== "object") {
        if (registered != null && registered[value] !== void 0) {
          string2 += _key + "{" + registered[value] + "}";
        } else if (isProcessableValue(value)) {
          string2 += processStyleName(_key) + ":" + processStyleValue(_key, value) + ";";
        }
      } else {
        if (_key === "NO_COMPONENT_SELECTOR" && false) {
          throw new Error("Component selectors can only be used in conjunction with @emotion/babel-plugin.");
        }
        if (Array.isArray(value) && typeof value[0] === "string" && (registered == null || registered[value[0]] === void 0)) {
          for (var _i = 0; _i < value.length; _i++) {
            if (isProcessableValue(value[_i])) {
              string2 += processStyleName(_key) + ":" + processStyleValue(_key, value[_i]) + ";";
            }
          }
        } else {
          var interpolated = handleInterpolation(mergedProps, registered, value);
          switch (_key) {
            case "animation":
            case "animationName": {
              string2 += processStyleName(_key) + ":" + interpolated + ";";
              break;
            }
            default: {
              string2 += _key + "{" + interpolated + "}";
            }
          }
        }
      }
    }
  }
  return string2;
}
var labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
var cursor;
var serializeStyles = function serializeStyles2(args, registered, mergedProps) {
  if (args.length === 1 && typeof args[0] === "object" && args[0] !== null && args[0].styles !== void 0) {
    return args[0];
  }
  var stringMode = true;
  var styles2 = "";
  cursor = void 0;
  var strings = args[0];
  if (strings == null || strings.raw === void 0) {
    stringMode = false;
    styles2 += handleInterpolation(mergedProps, registered, strings);
  } else {
    styles2 += strings[0];
  }
  for (var i = 1; i < args.length; i++) {
    styles2 += handleInterpolation(mergedProps, registered, args[i]);
    if (stringMode) {
      styles2 += strings[i];
    }
  }
  labelPattern.lastIndex = 0;
  var identifierName = "";
  var match2;
  while ((match2 = labelPattern.exec(styles2)) !== null) {
    identifierName += "-" + match2[1];
  }
  var name = murmur2(styles2) + identifierName;
  return {
    name,
    styles: styles2,
    next: cursor
  };
};
var EmotionCacheContext = /* @__PURE__ */ react.exports.createContext(typeof HTMLElement !== "undefined" ? /* @__PURE__ */ createCache({
  key: "css"
}) : null);
EmotionCacheContext.Provider;
var withEmotionCache = function withEmotionCache2(func) {
  return /* @__PURE__ */ react.exports.forwardRef(function(props, ref) {
    var cache = react.exports.useContext(EmotionCacheContext);
    return func(props, cache, ref);
  });
};
var ThemeContext = /* @__PURE__ */ react.exports.createContext({});
var getTheme = function getTheme2(outerTheme, theme2) {
  if (typeof theme2 === "function") {
    var mergedTheme = theme2(outerTheme);
    return mergedTheme;
  }
  return _extends$b({}, outerTheme, theme2);
};
var createCacheWithTheme = /* @__PURE__ */ weakMemoize(function(outerTheme) {
  return weakMemoize(function(theme2) {
    return getTheme(outerTheme, theme2);
  });
});
var ThemeProvider$1 = function ThemeProvider(props) {
  var theme2 = react.exports.useContext(ThemeContext);
  if (props.theme !== theme2) {
    theme2 = createCacheWithTheme(theme2)(props.theme);
  }
  return /* @__PURE__ */ react.exports.createElement(ThemeContext.Provider, {
    value: theme2
  }, props.children);
};
var Global = /* @__PURE__ */ withEmotionCache(function(props, cache) {
  var styles2 = props.styles;
  var serialized = serializeStyles([styles2], void 0, react.exports.useContext(ThemeContext));
  var sheetRef = react.exports.useRef();
  react.exports.useLayoutEffect(function() {
    var key = cache.key + "-global";
    var sheet = new StyleSheet({
      key,
      nonce: cache.sheet.nonce,
      container: cache.sheet.container,
      speedy: cache.sheet.isSpeedy
    });
    var rehydrating = false;
    var node2 = document.querySelector('style[data-emotion="' + key + " " + serialized.name + '"]');
    if (cache.sheet.tags.length) {
      sheet.before = cache.sheet.tags[0];
    }
    if (node2 !== null) {
      rehydrating = true;
      node2.setAttribute("data-emotion", key);
      sheet.hydrate([node2]);
    }
    sheetRef.current = [sheet, rehydrating];
    return function() {
      sheet.flush();
    };
  }, [cache]);
  react.exports.useLayoutEffect(function() {
    var sheetRefCurrent = sheetRef.current;
    var sheet = sheetRefCurrent[0], rehydrating = sheetRefCurrent[1];
    if (rehydrating) {
      sheetRefCurrent[1] = false;
      return;
    }
    if (serialized.next !== void 0) {
      insertStyles(cache, serialized.next, true);
    }
    if (sheet.tags.length) {
      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;
      sheet.before = element;
      sheet.flush();
    }
    cache.insert("", serialized, sheet, false);
  }, [cache, serialized.name]);
  return null;
});
function css$1() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return serializeStyles(args);
}
var keyframes$2 = function keyframes() {
  var insertable = css$1.apply(void 0, arguments);
  var name = "animation-" + insertable.name;
  return {
    name,
    styles: "@keyframes " + name + "{" + insertable.styles + "}",
    anim: 1,
    toString: function toString2() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
};
var CSSReset = function CSSReset2() {
  return /* @__PURE__ */ react.exports.createElement(Global, {
    styles: `
      html {
        line-height: 1.5;
        -webkit-text-size-adjust: 100%;
        font-family: system-ui, sans-serif;
        -webkit-font-smoothing: antialiased;
        text-rendering: optimizeLegibility;
        -moz-osx-font-smoothing: grayscale;
        touch-action: manipulation;
      }

      body {
        position: relative;
        min-height: 100%;
        font-feature-settings: 'kern';
      }

      *,
      *::before,
      *::after {
        border-width: 0;
        border-style: solid;
        box-sizing: border-box;
      }

      main {
        display: block;
      }

      hr {
        border-top-width: 1px;
        box-sizing: content-box;
        height: 0;
        overflow: visible;
      }

      pre,
      code,
      kbd,
      samp {
        font-family: SFMono-Regular,  Menlo, Monaco, Consolas, monospace;
        font-size: 1em;
      }

      a {
        background-color: transparent;
        color: inherit;
        text-decoration: inherit;
      }

      abbr[title] {
        border-bottom: none;
        text-decoration: underline;
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
      }

      b,
      strong {
        font-weight: bold;
      }

      small {
        font-size: 80%;
      }

      sub,
      sup {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
      }

      sub {
        bottom: -0.25em;
      }

      sup {
        top: -0.5em;
      }

      img {
        border-style: none;
      }

      button,
      input,
      optgroup,
      select,
      textarea {
        font-family: inherit;
        font-size: 100%;
        line-height: 1.15;
        margin: 0;
      }

      button,
      input {
        overflow: visible;
      }

      button,
      select {
        text-transform: none;
      }

      button::-moz-focus-inner,
      [type="button"]::-moz-focus-inner,
      [type="reset"]::-moz-focus-inner,
      [type="submit"]::-moz-focus-inner {
        border-style: none;
        padding: 0;
      }

      fieldset {
        padding: 0.35em 0.75em 0.625em;
      }

      legend {
        box-sizing: border-box;
        color: inherit;
        display: table;
        max-width: 100%;
        padding: 0;
        white-space: normal;
      }

      progress {
        vertical-align: baseline;
      }

      textarea {
        overflow: auto;
      }

      [type="checkbox"],
      [type="radio"] {
        box-sizing: border-box;
        padding: 0;
      }

      [type="number"]::-webkit-inner-spin-button,
      [type="number"]::-webkit-outer-spin-button {
        -webkit-appearance: none !important;
      }

      input[type="number"] {
        -moz-appearance: textfield;
      }

      [type="search"] {
        -webkit-appearance: textfield;
        outline-offset: -2px;
      }

      [type="search"]::-webkit-search-decoration {
        -webkit-appearance: none !important;
      }

      ::-webkit-file-upload-button {
        -webkit-appearance: button;
        font: inherit;
      }

      details {
        display: block;
      }

      summary {
        display: list-item;
      }

      template {
        display: none;
      }

      [hidden] {
        display: none !important;
      }

      body,
      blockquote,
      dl,
      dd,
      h1,
      h2,
      h3,
      h4,
      h5,
      h6,
      hr,
      figure,
      p,
      pre {
        margin: 0;
      }

      button {
        background: transparent;
        padding: 0;
      }

      fieldset {
        margin: 0;
        padding: 0;
      }

      ol,
      ul {
        margin: 0;
        padding: 0;
      }

      textarea {
        resize: vertical;
      }

      button,
      [role="button"] {
        cursor: pointer;
      }

      button::-moz-focus-inner {
        border: 0 !important;
      }

      table {
        border-collapse: collapse;
      }

      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        font-size: inherit;
        font-weight: inherit;
      }

      button,
      input,
      optgroup,
      select,
      textarea {
        padding: 0;
        line-height: inherit;
        color: inherit;
      }

      img,
      svg,
      video,
      canvas,
      audio,
      iframe,
      embed,
      object {
        display: block;
      }

      img,
      video {
        max-width: 100%;
        height: auto;
      }

      [data-js-focus-visible] :focus:not([data-focus-visible-added]) {
        outline: none;
        box-shadow: none;
      }

      select::-ms-expand {
        display: none;
      }
    `
  });
};
var CSSReset$1 = CSSReset;
var lodash_mergewith = { exports: {} };
(function(module, exports) {
  var LARGE_ARRAY_SIZE = 200;
  var HASH_UNDEFINED = "__lodash_hash_undefined__";
  var HOT_COUNT = 800, HOT_SPAN = 16;
  var MAX_SAFE_INTEGER = 9007199254740991;
  var argsTag = "[object Arguments]", arrayTag = "[object Array]", asyncTag = "[object AsyncFunction]", boolTag = "[object Boolean]", dateTag = "[object Date]", errorTag = "[object Error]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", mapTag = "[object Map]", numberTag = "[object Number]", nullTag = "[object Null]", objectTag = "[object Object]", proxyTag = "[object Proxy]", regexpTag = "[object RegExp]", setTag = "[object Set]", stringTag = "[object String]", undefinedTag = "[object Undefined]", weakMapTag = "[object WeakMap]";
  var arrayBufferTag = "[object ArrayBuffer]", dataViewTag = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
  var reIsHostCtor = /^\[object .+?Constructor\]$/;
  var reIsUint = /^(?:0|[1-9]\d*)$/;
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
  var freeGlobal = typeof commonjsGlobal == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
  var freeSelf = typeof self == "object" && self && self.Object === Object && self;
  var root2 = freeGlobal || freeSelf || Function("return this")();
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var freeProcess = moduleExports && freeGlobal.process;
  var nodeUtil = function() {
    try {
      var types2 = freeModule && freeModule.require && freeModule.require("util").types;
      if (types2) {
        return types2;
      }
      return freeProcess && freeProcess.binding && freeProcess.binding("util");
    } catch (e2) {
    }
  }();
  var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0:
        return func.call(thisArg);
      case 1:
        return func.call(thisArg, args[0]);
      case 2:
        return func.call(thisArg, args[0], args[1]);
      case 3:
        return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }
  function baseTimes(n2, iteratee) {
    var index = -1, result = Array(n2);
    while (++index < n2) {
      result[index] = iteratee(index);
    }
    return result;
  }
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }
  function getValue(object2, key) {
    return object2 == null ? void 0 : object2[key];
  }
  function overArg(func, transform10) {
    return function(arg) {
      return func(transform10(arg));
    };
  }
  var arrayProto = Array.prototype, funcProto = Function.prototype, objectProto = Object.prototype;
  var coreJsData = root2["__core-js_shared__"];
  var funcToString = funcProto.toString;
  var hasOwnProperty2 = objectProto.hasOwnProperty;
  var maskSrcKey = function() {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
    return uid ? "Symbol(src)_1." + uid : "";
  }();
  var nativeObjectToString = objectProto.toString;
  var objectCtorString = funcToString.call(Object);
  var reIsNative = RegExp("^" + funcToString.call(hasOwnProperty2).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
  var Buffer2 = moduleExports ? root2.Buffer : void 0, Symbol2 = root2.Symbol, Uint8Array2 = root2.Uint8Array, allocUnsafe = Buffer2 ? Buffer2.allocUnsafe : void 0, getPrototype = overArg(Object.getPrototypeOf, Object), objectCreate = Object.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice2 = arrayProto.splice, symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
  var defineProperty3 = function() {
    try {
      var func = getNative(Object, "defineProperty");
      func({}, "", {});
      return func;
    } catch (e2) {
    }
  }();
  var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0, nativeMax = Math.max, nativeNow = Date.now;
  var Map2 = getNative(root2, "Map"), nativeCreate = getNative(Object, "create");
  var baseCreate = function() {
    function object2() {
    }
    return function(proto) {
      if (!isObject2(proto)) {
        return {};
      }
      if (objectCreate) {
        return objectCreate(proto);
      }
      object2.prototype = proto;
      var result = new object2();
      object2.prototype = void 0;
      return result;
    };
  }();
  function Hash(entries2) {
    var index = -1, length2 = entries2 == null ? 0 : entries2.length;
    this.clear();
    while (++index < length2) {
      var entry = entries2[index];
      this.set(entry[0], entry[1]);
    }
  }
  function hashClear() {
    this.__data__ = nativeCreate ? nativeCreate(null) : {};
    this.size = 0;
  }
  function hashDelete(key) {
    var result = this.has(key) && delete this.__data__[key];
    this.size -= result ? 1 : 0;
    return result;
  }
  function hashGet(key) {
    var data = this.__data__;
    if (nativeCreate) {
      var result = data[key];
      return result === HASH_UNDEFINED ? void 0 : result;
    }
    return hasOwnProperty2.call(data, key) ? data[key] : void 0;
  }
  function hashHas(key) {
    var data = this.__data__;
    return nativeCreate ? data[key] !== void 0 : hasOwnProperty2.call(data, key);
  }
  function hashSet(key, value) {
    var data = this.__data__;
    this.size += this.has(key) ? 0 : 1;
    data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
    return this;
  }
  Hash.prototype.clear = hashClear;
  Hash.prototype["delete"] = hashDelete;
  Hash.prototype.get = hashGet;
  Hash.prototype.has = hashHas;
  Hash.prototype.set = hashSet;
  function ListCache(entries2) {
    var index = -1, length2 = entries2 == null ? 0 : entries2.length;
    this.clear();
    while (++index < length2) {
      var entry = entries2[index];
      this.set(entry[0], entry[1]);
    }
  }
  function listCacheClear() {
    this.__data__ = [];
    this.size = 0;
  }
  function listCacheDelete(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
      return false;
    }
    var lastIndex = data.length - 1;
    if (index == lastIndex) {
      data.pop();
    } else {
      splice2.call(data, index, 1);
    }
    --this.size;
    return true;
  }
  function listCacheGet(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    return index < 0 ? void 0 : data[index][1];
  }
  function listCacheHas(key) {
    return assocIndexOf(this.__data__, key) > -1;
  }
  function listCacheSet(key, value) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
      ++this.size;
      data.push([key, value]);
    } else {
      data[index][1] = value;
    }
    return this;
  }
  ListCache.prototype.clear = listCacheClear;
  ListCache.prototype["delete"] = listCacheDelete;
  ListCache.prototype.get = listCacheGet;
  ListCache.prototype.has = listCacheHas;
  ListCache.prototype.set = listCacheSet;
  function MapCache(entries2) {
    var index = -1, length2 = entries2 == null ? 0 : entries2.length;
    this.clear();
    while (++index < length2) {
      var entry = entries2[index];
      this.set(entry[0], entry[1]);
    }
  }
  function mapCacheClear() {
    this.size = 0;
    this.__data__ = {
      "hash": new Hash(),
      "map": new (Map2 || ListCache)(),
      "string": new Hash()
    };
  }
  function mapCacheDelete(key) {
    var result = getMapData(this, key)["delete"](key);
    this.size -= result ? 1 : 0;
    return result;
  }
  function mapCacheGet(key) {
    return getMapData(this, key).get(key);
  }
  function mapCacheHas(key) {
    return getMapData(this, key).has(key);
  }
  function mapCacheSet(key, value) {
    var data = getMapData(this, key), size2 = data.size;
    data.set(key, value);
    this.size += data.size == size2 ? 0 : 1;
    return this;
  }
  MapCache.prototype.clear = mapCacheClear;
  MapCache.prototype["delete"] = mapCacheDelete;
  MapCache.prototype.get = mapCacheGet;
  MapCache.prototype.has = mapCacheHas;
  MapCache.prototype.set = mapCacheSet;
  function Stack2(entries2) {
    var data = this.__data__ = new ListCache(entries2);
    this.size = data.size;
  }
  function stackClear() {
    this.__data__ = new ListCache();
    this.size = 0;
  }
  function stackDelete(key) {
    var data = this.__data__, result = data["delete"](key);
    this.size = data.size;
    return result;
  }
  function stackGet(key) {
    return this.__data__.get(key);
  }
  function stackHas(key) {
    return this.__data__.has(key);
  }
  function stackSet(key, value) {
    var data = this.__data__;
    if (data instanceof ListCache) {
      var pairs = data.__data__;
      if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
        pairs.push([key, value]);
        this.size = ++data.size;
        return this;
      }
      data = this.__data__ = new MapCache(pairs);
    }
    data.set(key, value);
    this.size = data.size;
    return this;
  }
  Stack2.prototype.clear = stackClear;
  Stack2.prototype["delete"] = stackDelete;
  Stack2.prototype.get = stackGet;
  Stack2.prototype.has = stackHas;
  Stack2.prototype.set = stackSet;
  function arrayLikeKeys(value, inherited) {
    var isArr = isArray2(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType2 = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType2, result = skipIndexes ? baseTimes(value.length, String) : [], length2 = result.length;
    for (var key in value) {
      if ((inherited || hasOwnProperty2.call(value, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType2 && (key == "buffer" || key == "byteLength" || key == "byteOffset") || isIndex(key, length2)))) {
        result.push(key);
      }
    }
    return result;
  }
  function assignMergeValue(object2, key, value) {
    if (value !== void 0 && !eq2(object2[key], value) || value === void 0 && !(key in object2)) {
      baseAssignValue(object2, key, value);
    }
  }
  function assignValue(object2, key, value) {
    var objValue = object2[key];
    if (!(hasOwnProperty2.call(object2, key) && eq2(objValue, value)) || value === void 0 && !(key in object2)) {
      baseAssignValue(object2, key, value);
    }
  }
  function assocIndexOf(array3, key) {
    var length2 = array3.length;
    while (length2--) {
      if (eq2(array3[length2][0], key)) {
        return length2;
      }
    }
    return -1;
  }
  function baseAssignValue(object2, key, value) {
    if (key == "__proto__" && defineProperty3) {
      defineProperty3(object2, key, {
        "configurable": true,
        "enumerable": true,
        "value": value,
        "writable": true
      });
    } else {
      object2[key] = value;
    }
  }
  var baseFor = createBaseFor();
  function baseGetTag(value) {
    if (value == null) {
      return value === void 0 ? undefinedTag : nullTag;
    }
    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
  }
  function baseIsArguments(value) {
    return isObjectLike(value) && baseGetTag(value) == argsTag;
  }
  function baseIsNative(value) {
    if (!isObject2(value) || isMasked(value)) {
      return false;
    }
    var pattern = isFunction2(value) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value));
  }
  function baseIsTypedArray(value) {
    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
  }
  function baseKeysIn(object2) {
    if (!isObject2(object2)) {
      return nativeKeysIn(object2);
    }
    var isProto = isPrototype(object2), result = [];
    for (var key in object2) {
      if (!(key == "constructor" && (isProto || !hasOwnProperty2.call(object2, key)))) {
        result.push(key);
      }
    }
    return result;
  }
  function baseMerge(object2, source, srcIndex, customizer, stack) {
    if (object2 === source) {
      return;
    }
    baseFor(source, function(srcValue, key) {
      stack || (stack = new Stack2());
      if (isObject2(srcValue)) {
        baseMergeDeep(object2, source, key, srcIndex, baseMerge, customizer, stack);
      } else {
        var newValue = customizer ? customizer(safeGet(object2, key), srcValue, key + "", object2, source, stack) : void 0;
        if (newValue === void 0) {
          newValue = srcValue;
        }
        assignMergeValue(object2, key, newValue);
      }
    }, keysIn);
  }
  function baseMergeDeep(object2, source, key, srcIndex, mergeFunc, customizer, stack) {
    var objValue = safeGet(object2, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
    if (stacked) {
      assignMergeValue(object2, key, stacked);
      return;
    }
    var newValue = customizer ? customizer(objValue, srcValue, key + "", object2, source, stack) : void 0;
    var isCommon = newValue === void 0;
    if (isCommon) {
      var isArr = isArray2(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
      newValue = srcValue;
      if (isArr || isBuff || isTyped) {
        if (isArray2(objValue)) {
          newValue = objValue;
        } else if (isArrayLikeObject(objValue)) {
          newValue = copyArray(objValue);
        } else if (isBuff) {
          isCommon = false;
          newValue = cloneBuffer(srcValue, true);
        } else if (isTyped) {
          isCommon = false;
          newValue = cloneTypedArray(srcValue, true);
        } else {
          newValue = [];
        }
      } else if (isPlainObject2(srcValue) || isArguments(srcValue)) {
        newValue = objValue;
        if (isArguments(objValue)) {
          newValue = toPlainObject(objValue);
        } else if (!isObject2(objValue) || isFunction2(objValue)) {
          newValue = initCloneObject(srcValue);
        }
      } else {
        isCommon = false;
      }
    }
    if (isCommon) {
      stack.set(srcValue, newValue);
      mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
      stack["delete"](srcValue);
    }
    assignMergeValue(object2, key, newValue);
  }
  function baseRest(func, start) {
    return setToString(overRest(func, start, identity2), func + "");
  }
  var baseSetToString = !defineProperty3 ? identity2 : function(func, string2) {
    return defineProperty3(func, "toString", {
      "configurable": true,
      "enumerable": false,
      "value": constant(string2),
      "writable": true
    });
  };
  function cloneBuffer(buffer, isDeep) {
    if (isDeep) {
      return buffer.slice();
    }
    var length2 = buffer.length, result = allocUnsafe ? allocUnsafe(length2) : new buffer.constructor(length2);
    buffer.copy(result);
    return result;
  }
  function cloneArrayBuffer(arrayBuffer) {
    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
    new Uint8Array2(result).set(new Uint8Array2(arrayBuffer));
    return result;
  }
  function cloneTypedArray(typedArray, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
  }
  function copyArray(source, array3) {
    var index = -1, length2 = source.length;
    array3 || (array3 = Array(length2));
    while (++index < length2) {
      array3[index] = source[index];
    }
    return array3;
  }
  function copyObject(source, props, object2, customizer) {
    var isNew = !object2;
    object2 || (object2 = {});
    var index = -1, length2 = props.length;
    while (++index < length2) {
      var key = props[index];
      var newValue = customizer ? customizer(object2[key], source[key], key, object2, source) : void 0;
      if (newValue === void 0) {
        newValue = source[key];
      }
      if (isNew) {
        baseAssignValue(object2, key, newValue);
      } else {
        assignValue(object2, key, newValue);
      }
    }
    return object2;
  }
  function createAssigner(assigner) {
    return baseRest(function(object2, sources) {
      var index = -1, length2 = sources.length, customizer = length2 > 1 ? sources[length2 - 1] : void 0, guard = length2 > 2 ? sources[2] : void 0;
      customizer = assigner.length > 3 && typeof customizer == "function" ? (length2--, customizer) : void 0;
      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        customizer = length2 < 3 ? void 0 : customizer;
        length2 = 1;
      }
      object2 = Object(object2);
      while (++index < length2) {
        var source = sources[index];
        if (source) {
          assigner(object2, source, index, customizer);
        }
      }
      return object2;
    });
  }
  function createBaseFor(fromRight) {
    return function(object2, iteratee, keysFunc) {
      var index = -1, iterable = Object(object2), props = keysFunc(object2), length2 = props.length;
      while (length2--) {
        var key = props[fromRight ? length2 : ++index];
        if (iteratee(iterable[key], key, iterable) === false) {
          break;
        }
      }
      return object2;
    };
  }
  function getMapData(map3, key) {
    var data = map3.__data__;
    return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
  }
  function getNative(object2, key) {
    var value = getValue(object2, key);
    return baseIsNative(value) ? value : void 0;
  }
  function getRawTag(value) {
    var isOwn = hasOwnProperty2.call(value, symToStringTag), tag = value[symToStringTag];
    try {
      value[symToStringTag] = void 0;
      var unmasked = true;
    } catch (e2) {
    }
    var result = nativeObjectToString.call(value);
    if (unmasked) {
      if (isOwn) {
        value[symToStringTag] = tag;
      } else {
        delete value[symToStringTag];
      }
    }
    return result;
  }
  function initCloneObject(object2) {
    return typeof object2.constructor == "function" && !isPrototype(object2) ? baseCreate(getPrototype(object2)) : {};
  }
  function isIndex(value, length2) {
    var type = typeof value;
    length2 = length2 == null ? MAX_SAFE_INTEGER : length2;
    return !!length2 && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length2);
  }
  function isIterateeCall(value, index, object2) {
    if (!isObject2(object2)) {
      return false;
    }
    var type = typeof index;
    if (type == "number" ? isArrayLike(object2) && isIndex(index, object2.length) : type == "string" && index in object2) {
      return eq2(object2[index], value);
    }
    return false;
  }
  function isKeyable(value) {
    var type = typeof value;
    return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
  }
  function isMasked(func) {
    return !!maskSrcKey && maskSrcKey in func;
  }
  function isPrototype(value) {
    var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
    return value === proto;
  }
  function nativeKeysIn(object2) {
    var result = [];
    if (object2 != null) {
      for (var key in Object(object2)) {
        result.push(key);
      }
    }
    return result;
  }
  function objectToString(value) {
    return nativeObjectToString.call(value);
  }
  function overRest(func, start, transform10) {
    start = nativeMax(start === void 0 ? func.length - 1 : start, 0);
    return function() {
      var args = arguments, index = -1, length2 = nativeMax(args.length - start, 0), array3 = Array(length2);
      while (++index < length2) {
        array3[index] = args[start + index];
      }
      index = -1;
      var otherArgs = Array(start + 1);
      while (++index < start) {
        otherArgs[index] = args[index];
      }
      otherArgs[start] = transform10(array3);
      return apply(func, this, otherArgs);
    };
  }
  function safeGet(object2, key) {
    if (key === "constructor" && typeof object2[key] === "function") {
      return;
    }
    if (key == "__proto__") {
      return;
    }
    return object2[key];
  }
  var setToString = shortOut(baseSetToString);
  function shortOut(func) {
    var count = 0, lastCalled = 0;
    return function() {
      var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
      lastCalled = stamp;
      if (remaining > 0) {
        if (++count >= HOT_COUNT) {
          return arguments[0];
        }
      } else {
        count = 0;
      }
      return func.apply(void 0, arguments);
    };
  }
  function toSource(func) {
    if (func != null) {
      try {
        return funcToString.call(func);
      } catch (e2) {
      }
      try {
        return func + "";
      } catch (e2) {
      }
    }
    return "";
  }
  function eq2(value, other) {
    return value === other || value !== value && other !== other;
  }
  var isArguments = baseIsArguments(function() {
    return arguments;
  }()) ? baseIsArguments : function(value) {
    return isObjectLike(value) && hasOwnProperty2.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
  };
  var isArray2 = Array.isArray;
  function isArrayLike(value) {
    return value != null && isLength(value.length) && !isFunction2(value);
  }
  function isArrayLikeObject(value) {
    return isObjectLike(value) && isArrayLike(value);
  }
  var isBuffer = nativeIsBuffer || stubFalse;
  function isFunction2(value) {
    if (!isObject2(value)) {
      return false;
    }
    var tag = baseGetTag(value);
    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
  }
  function isLength(value) {
    return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
  }
  function isObject2(value) {
    var type = typeof value;
    return value != null && (type == "object" || type == "function");
  }
  function isObjectLike(value) {
    return value != null && typeof value == "object";
  }
  function isPlainObject2(value) {
    if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
      return false;
    }
    var proto = getPrototype(value);
    if (proto === null) {
      return true;
    }
    var Ctor = hasOwnProperty2.call(proto, "constructor") && proto.constructor;
    return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
  }
  var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
  function toPlainObject(value) {
    return copyObject(value, keysIn(value));
  }
  function keysIn(object2) {
    return isArrayLike(object2) ? arrayLikeKeys(object2, true) : baseKeysIn(object2);
  }
  var mergeWith2 = createAssigner(function(object2, source, srcIndex, customizer) {
    baseMerge(object2, source, srcIndex, customizer);
  });
  function constant(value) {
    return function() {
      return value;
    };
  }
  function identity2(value) {
    return value;
  }
  function stubFalse() {
    return false;
  }
  module.exports = mergeWith2;
})(lodash_mergewith, lodash_mergewith.exports);
var mergeWith = lodash_mergewith.exports;
var defaultTimestep = 1 / 60 * 1e3;
var getCurrentTime = typeof performance !== "undefined" ? function() {
  return performance.now();
} : function() {
  return Date.now();
};
var onNextFrame = typeof window !== "undefined" ? function(callback) {
  return window.requestAnimationFrame(callback);
} : function(callback) {
  return setTimeout(function() {
    return callback(getCurrentTime());
  }, defaultTimestep);
};
function createRenderStep(runNextFrame2) {
  var toRun = [];
  var toRunNextFrame = [];
  var numToRun = 0;
  var isProcessing2 = false;
  var toKeepAlive = new WeakSet();
  var step = {
    schedule: function(callback, keepAlive, immediate) {
      if (keepAlive === void 0) {
        keepAlive = false;
      }
      if (immediate === void 0) {
        immediate = false;
      }
      var addToCurrentFrame = immediate && isProcessing2;
      var buffer = addToCurrentFrame ? toRun : toRunNextFrame;
      if (keepAlive)
        toKeepAlive.add(callback);
      if (buffer.indexOf(callback) === -1) {
        buffer.push(callback);
        if (addToCurrentFrame && isProcessing2)
          numToRun = toRun.length;
      }
      return callback;
    },
    cancel: function(callback) {
      var index = toRunNextFrame.indexOf(callback);
      if (index !== -1)
        toRunNextFrame.splice(index, 1);
      toKeepAlive.delete(callback);
    },
    process: function(frameData) {
      var _a2;
      isProcessing2 = true;
      _a2 = [toRunNextFrame, toRun], toRun = _a2[0], toRunNextFrame = _a2[1];
      toRunNextFrame.length = 0;
      numToRun = toRun.length;
      if (numToRun) {
        for (var i = 0; i < numToRun; i++) {
          var callback = toRun[i];
          callback(frameData);
          if (toKeepAlive.has(callback)) {
            step.schedule(callback);
            runNextFrame2();
          }
        }
      }
      isProcessing2 = false;
    }
  };
  return step;
}
var maxElapsed = 40;
var useDefaultElapsed = true;
var runNextFrame = false;
var isProcessing = false;
var frame = {
  delta: 0,
  timestamp: 0
};
var stepsOrder = ["read", "update", "preRender", "render", "postRender"];
var steps = /* @__PURE__ */ stepsOrder.reduce(function(acc, key) {
  acc[key] = createRenderStep(function() {
    return runNextFrame = true;
  });
  return acc;
}, {});
var sync = /* @__PURE__ */ stepsOrder.reduce(function(acc, key) {
  var step = steps[key];
  acc[key] = function(process2, keepAlive, immediate) {
    if (keepAlive === void 0) {
      keepAlive = false;
    }
    if (immediate === void 0) {
      immediate = false;
    }
    if (!runNextFrame)
      startLoop();
    return step.schedule(process2, keepAlive, immediate);
  };
  return acc;
}, {});
var cancelSync = /* @__PURE__ */ stepsOrder.reduce(function(acc, key) {
  acc[key] = steps[key].cancel;
  return acc;
}, {});
var flushSync = /* @__PURE__ */ stepsOrder.reduce(function(acc, key) {
  acc[key] = function() {
    return steps[key].process(frame);
  };
  return acc;
}, {});
var processStep = function(stepId) {
  return steps[stepId].process(frame);
};
var processFrame = function(timestamp) {
  runNextFrame = false;
  frame.delta = useDefaultElapsed ? defaultTimestep : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);
  frame.timestamp = timestamp;
  isProcessing = true;
  stepsOrder.forEach(processStep);
  isProcessing = false;
  if (runNextFrame) {
    useDefaultElapsed = false;
    onNextFrame(processFrame);
  }
};
var startLoop = function() {
  runNextFrame = true;
  useDefaultElapsed = true;
  if (!isProcessing)
    onNextFrame(processFrame);
};
var getFrameData = function() {
  return frame;
};
function getLastItem(array3) {
  var length2 = array3 == null ? 0 : array3.length;
  return length2 ? array3[length2 - 1] : void 0;
}
function addItem(array3, item) {
  return [].concat(array3, [item]);
}
function removeItem$1(array3, item) {
  return array3.filter(function(eachItem) {
    return eachItem !== item;
  });
}
function isNumber$1(value) {
  return typeof value === "number";
}
function isArray$1(value) {
  return Array.isArray(value);
}
function isFunction$1(value) {
  return typeof value === "function";
}
function isObject$1(value) {
  var type = typeof value;
  return value != null && (type === "object" || type === "function") && !isArray$1(value);
}
function isEmptyObject(value) {
  return isObject$1(value) && Object.keys(value).length === 0;
}
function isNull(value) {
  return value == null;
}
function isString$1(value) {
  return Object.prototype.toString.call(value) === "[object String]";
}
function isCssVar(value) {
  return /^var\(--.+\)$/.test(value);
}
var __DEV__ = false;
function isInputEvent(value) {
  return value && isObject$1(value) && isObject$1(value.target);
}
function omit(object2, keys2) {
  var result = {};
  Object.keys(object2).forEach(function(key) {
    if (keys2.includes(key))
      return;
    result[key] = object2[key];
  });
  return result;
}
function pick(object2, keys2) {
  var result = {};
  keys2.forEach(function(key) {
    if (key in object2) {
      result[key] = object2[key];
    }
  });
  return result;
}
function split(object2, keys2) {
  var picked = {};
  var omitted = {};
  Object.keys(object2).forEach(function(key) {
    if (keys2.includes(key)) {
      picked[key] = object2[key];
    } else {
      omitted[key] = object2[key];
    }
  });
  return [picked, omitted];
}
function get(obj, path, fallback, index) {
  var key = typeof path === "string" ? path.split(".") : [path];
  for (index = 0; index < key.length; index += 1) {
    if (!obj)
      break;
    obj = obj[key[index]];
  }
  return obj === void 0 ? fallback : obj;
}
var memoize = function memoize2(fn) {
  var cache = new WeakMap();
  var memoizedFn = function memoizedFn2(obj, path, fallback, index) {
    if (typeof obj === "undefined") {
      return fn(obj, path, fallback);
    }
    if (!cache.has(obj)) {
      cache.set(obj, new Map());
    }
    var map3 = cache.get(obj);
    if (map3.has(path)) {
      return map3.get(path);
    }
    var value = fn(obj, path, fallback, index);
    map3.set(path, value);
    return value;
  };
  return memoizedFn;
};
var memoizedGet = memoize(get);
function objectFilter(object2, fn) {
  var result = {};
  Object.keys(object2).forEach(function(key) {
    var value = object2[key];
    var shouldPass = fn(value, key, object2);
    if (shouldPass) {
      result[key] = value;
    }
  });
  return result;
}
var filterUndefined = function filterUndefined2(object2) {
  return objectFilter(object2, function(val) {
    return val !== null && val !== void 0;
  });
};
var objectKeys = function objectKeys2(obj) {
  return Object.keys(obj);
};
var fromEntries = function fromEntries2(entries2) {
  return entries2.reduce(function(carry, _ref) {
    var key = _ref[0], value = _ref[1];
    carry[key] = value;
    return carry;
  }, {});
};
function analyzeCSSValue$1(value) {
  var num = parseFloat(value.toString());
  var unit = value.toString().replace(String(num), "");
  return {
    unitless: !unit,
    value: num,
    unit
  };
}
function px$1(value) {
  if (value == null)
    return value;
  var _analyzeCSSValue = analyzeCSSValue$1(value), unitless = _analyzeCSSValue.unitless;
  return unitless || isNumber$1(value) ? value + "px" : value;
}
var sortByBreakpointValue = function sortByBreakpointValue2(a2, b2) {
  return parseInt(a2[1], 10) > parseInt(b2[1], 10) ? 1 : -1;
};
var sortBps = function sortBps2(breakpoints2) {
  return fromEntries(Object.entries(breakpoints2).sort(sortByBreakpointValue));
};
function normalize(breakpoints2) {
  var sorted = sortBps(breakpoints2);
  return Object.assign(Object.values(sorted), sorted);
}
function keys$1(breakpoints2) {
  var value = Object.keys(sortBps(breakpoints2));
  return new Set(value);
}
function subtract(value) {
  var _px;
  if (!value)
    return value;
  value = (_px = px$1(value)) != null ? _px : value;
  var factor = value.endsWith("px") ? -1 : -0.0635;
  return isNumber$1(value) ? "" + (value + factor) : value.replace(/([0-9]+\.?[0-9]*)/, function(m2) {
    return "" + (parseFloat(m2) + factor);
  });
}
function queryString(min, max) {
  var query = [];
  if (min)
    query.push("@media screen and (min-width: " + px$1(min) + ")");
  if (query.length > 0 && max)
    query.push("and");
  if (max)
    query.push("@media screen and (max-width: " + px$1(max) + ")");
  return query.join(" ");
}
function analyzeBreakpoints(breakpoints2) {
  var _breakpoints$base;
  if (!breakpoints2)
    return null;
  breakpoints2.base = (_breakpoints$base = breakpoints2.base) != null ? _breakpoints$base : "0px";
  var normalized = normalize(breakpoints2);
  var queries2 = Object.entries(breakpoints2).sort(sortByBreakpointValue).map(function(_ref, index, entry) {
    var _entry;
    var breakpoint = _ref[0], minW = _ref[1];
    var _ref2 = (_entry = entry[index + 1]) != null ? _entry : [], maxW = _ref2[1];
    maxW = parseFloat(maxW) > 0 ? subtract(maxW) : void 0;
    return {
      breakpoint,
      minW,
      maxW,
      maxWQuery: queryString(null, maxW),
      minWQuery: queryString(minW),
      minMaxQuery: queryString(minW, maxW)
    };
  });
  var _keys = keys$1(breakpoints2);
  var _keysArr = Array.from(_keys.values());
  return {
    keys: _keys,
    normalized,
    isResponsive: function isResponsive(test2) {
      var keys2 = Object.keys(test2);
      return keys2.length > 0 && keys2.every(function(key) {
        return _keys.has(key);
      });
    },
    asObject: sortBps(breakpoints2),
    asArray: normalize(breakpoints2),
    details: queries2,
    media: [null].concat(normalized.map(function(minW) {
      return queryString(minW);
    }).slice(1)),
    toArrayValue: function toArrayValue(test2) {
      if (!isObject$1(test2)) {
        throw new Error("toArrayValue: value must be an object");
      }
      var result = _keysArr.map(function(bp) {
        var _test$bp;
        return (_test$bp = test2[bp]) != null ? _test$bp : null;
      });
      while (getLastItem(result) === null) {
        result.pop();
      }
      return result;
    },
    toObjectValue: function toObjectValue(test2) {
      if (!Array.isArray(test2)) {
        throw new Error("toObjectValue: value must be an array");
      }
      return test2.reduce(function(acc, value, index) {
        var key = _keysArr[index];
        if (key != null && value != null)
          acc[key] = value;
        return acc;
      }, {});
    }
  };
}
function isElement(el) {
  return el != null && typeof el == "object" && "nodeType" in el && el.nodeType === Node.ELEMENT_NODE;
}
function isHTMLElement(el) {
  var _el$ownerDocument$def;
  if (!isElement(el)) {
    return false;
  }
  var win2 = (_el$ownerDocument$def = el.ownerDocument.defaultView) != null ? _el$ownerDocument$def : window;
  return el instanceof win2.HTMLElement;
}
function getOwnerDocument(node2) {
  var _node$ownerDocument;
  return isElement(node2) ? (_node$ownerDocument = node2.ownerDocument) != null ? _node$ownerDocument : document : document;
}
function canUseDOM() {
  return !!(typeof window !== "undefined" && window.document && window.document.createElement);
}
var isBrowser$1 = canUseDOM();
var dataAttr = function dataAttr2(condition) {
  return condition ? "" : void 0;
};
var ariaAttr = function ariaAttr2(condition) {
  return condition ? true : void 0;
};
var cx = function cx2() {
  for (var _len = arguments.length, classNames2 = new Array(_len), _key = 0; _key < _len; _key++) {
    classNames2[_key] = arguments[_key];
  }
  return classNames2.filter(Boolean).join(" ");
};
function isInputElement(element) {
  return isHTMLElement(element) && element.tagName.toLowerCase() === "input" && "select" in element;
}
function isActiveElement(element) {
  var doc2 = isHTMLElement(element) ? getOwnerDocument(element) : document;
  return doc2.activeElement === element;
}
function _arrayLikeToArray$2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _unsupportedIterableToArray$2(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$2(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$2(o2, minLen);
}
function _createForOfIteratorHelperLoose$2(o2, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o2[Symbol.iterator] || o2["@@iterator"];
  if (it)
    return (it = it.call(o2)).next.bind(it);
  if (Array.isArray(o2) || (it = _unsupportedIterableToArray$2(o2)) || allowArrayLike && o2 && typeof o2.length === "number") {
    if (it)
      o2 = it;
    var i = 0;
    return function() {
      if (i >= o2.length)
        return {
          done: true
        };
      return {
        done: false,
        value: o2[i++]
      };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function runIfFn(valueOrFn) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }
  return isFunction$1(valueOrFn) ? valueOrFn.apply(void 0, args) : valueOrFn;
}
function callAllHandlers() {
  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    fns[_key2] = arguments[_key2];
  }
  return function func(event) {
    fns.some(function(fn) {
      fn == null ? void 0 : fn(event);
      return event == null ? void 0 : event.defaultPrevented;
    });
  };
}
function callAll() {
  for (var _len3 = arguments.length, fns = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    fns[_key3] = arguments[_key3];
  }
  return function mergedFn(arg) {
    fns.forEach(function(fn) {
      fn == null ? void 0 : fn(arg);
    });
  };
}
function once$1(fn) {
  var result;
  return function func() {
    if (fn) {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }
      result = fn.apply(this, args);
      fn = null;
    }
    return result;
  };
}
var noop$3 = function noop() {
};
var warn = once$1(function(options) {
  return function() {
    var condition = options.condition, message = options.message;
    if (condition && __DEV__) {
      console.warn(message);
    }
  };
});
function focus(element, options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options, _options$isActive = _options.isActive, isActive = _options$isActive === void 0 ? isActiveElement : _options$isActive, nextTick = _options.nextTick, _options$preventScrol = _options.preventScroll, preventScroll = _options$preventScrol === void 0 ? true : _options$preventScrol, _options$selectTextIf = _options.selectTextIfInput, selectTextIfInput = _options$selectTextIf === void 0 ? true : _options$selectTextIf;
  if (!element || isActive(element))
    return -1;
  function triggerFocus() {
    if (!element) {
      warn({
        condition: true,
        message: "[chakra-ui]: can't call focus() on `null` or `undefined` element"
      });
      return;
    }
    if (supportsPreventScroll()) {
      element.focus({
        preventScroll
      });
    } else {
      element.focus();
      if (preventScroll) {
        var scrollableElements = getScrollableElements(element);
        restoreScrollPosition(scrollableElements);
      }
    }
    if (isInputElement(element) && selectTextIfInput) {
      element.select();
    }
  }
  if (nextTick) {
    return requestAnimationFrame(triggerFocus);
  }
  triggerFocus();
  return -1;
}
var supportsPreventScrollCached = null;
function supportsPreventScroll() {
  if (supportsPreventScrollCached == null) {
    supportsPreventScrollCached = false;
    try {
      var div = document.createElement("div");
      div.focus({
        get preventScroll() {
          supportsPreventScrollCached = true;
          return true;
        }
      });
    } catch (e2) {
    }
  }
  return supportsPreventScrollCached;
}
function getScrollableElements(element) {
  var _doc$defaultView;
  var doc2 = getOwnerDocument(element);
  var win2 = (_doc$defaultView = doc2.defaultView) != null ? _doc$defaultView : window;
  var parent = element.parentNode;
  var scrollableElements = [];
  var rootScrollingElement = doc2.scrollingElement || doc2.documentElement;
  while (parent instanceof win2.HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth) {
      scrollableElements.push({
        element: parent,
        scrollTop: parent.scrollTop,
        scrollLeft: parent.scrollLeft
      });
    }
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof win2.HTMLElement) {
    scrollableElements.push({
      element: rootScrollingElement,
      scrollTop: rootScrollingElement.scrollTop,
      scrollLeft: rootScrollingElement.scrollLeft
    });
  }
  return scrollableElements;
}
function restoreScrollPosition(scrollableElements) {
  for (var _iterator = _createForOfIteratorHelperLoose$2(scrollableElements), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, element = _step$value.element, scrollTop = _step$value.scrollTop, scrollLeft = _step$value.scrollLeft;
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
Object.freeze(["base", "sm", "md", "lg", "xl", "2xl"]);
function mapResponsive(prop2, mapper) {
  if (isArray$1(prop2)) {
    return prop2.map(function(item) {
      if (item === null) {
        return null;
      }
      return mapper(item);
    });
  }
  if (isObject$1(prop2)) {
    return objectKeys(prop2).reduce(function(result, key) {
      result[key] = mapper(prop2[key]);
      return result;
    }, {});
  }
  if (prop2 != null) {
    return mapper(prop2);
  }
  return null;
}
function walkObject(target, predicate) {
  function inner(value, path) {
    if (path === void 0) {
      path = [];
    }
    if (isArray$1(value)) {
      return value.map(function(item, index) {
        return inner(item, [].concat(path, [String(index)]));
      });
    }
    if (isObject$1(value)) {
      return fromEntries(Object.entries(value).map(function(_ref) {
        var key = _ref[0], child = _ref[1];
        return [key, inner(child, [].concat(path, [key]))];
      }));
    }
    return predicate(value, path);
  }
  return inner(target);
}
function assignRef$1(ref, value) {
  if (ref == null)
    return;
  if (isFunction$1(ref)) {
    ref(value);
    return;
  }
  try {
    ref.current = value;
  } catch (error) {
    throw new Error("Cannot assign value '" + value + "' to ref '" + ref + "'");
  }
}
function mergeRefs() {
  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {
    refs[_key] = arguments[_key];
  }
  return function(node2) {
    refs.forEach(function(ref) {
      return assignRef$1(ref, node2);
    });
  };
}
function createContext(options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options, _options$strict = _options.strict, strict = _options$strict === void 0 ? true : _options$strict, _options$errorMessage = _options.errorMessage, errorMessage = _options$errorMessage === void 0 ? "useContext: `context` is undefined. Seems you forgot to wrap component within the Provider" : _options$errorMessage, name = _options.name;
  var Context = /* @__PURE__ */ react.exports.createContext(void 0);
  Context.displayName = name;
  function useContext() {
    var context = react.exports.useContext(Context);
    if (!context && strict) {
      var error = new Error(errorMessage);
      error.name = "ContextError";
      Error.captureStackTrace == null ? void 0 : Error.captureStackTrace(error, useContext);
      throw error;
    }
    return context;
  }
  return [Context.Provider, useContext, Context];
}
function getValidChildren(children) {
  return react.exports.Children.toArray(children).filter(function(child) {
    return /* @__PURE__ */ react.exports.isValidElement(child);
  });
}
function useBoolean(initialState) {
  if (initialState === void 0) {
    initialState = false;
  }
  var _useState = react.exports.useState(initialState), value = _useState[0], setValue = _useState[1];
  var on = react.exports.useCallback(function() {
    setValue(true);
  }, []);
  var off = react.exports.useCallback(function() {
    setValue(false);
  }, []);
  var toggle = react.exports.useCallback(function() {
    setValue(function(prev2) {
      return !prev2;
    });
  }, []);
  return [value, {
    on,
    off,
    toggle
  }];
}
var useSafeLayoutEffect = isBrowser$1 ? react.exports.useLayoutEffect : react.exports.useEffect;
function useCallbackRef(fn, deps) {
  if (deps === void 0) {
    deps = [];
  }
  var ref = react.exports.useRef(fn);
  useSafeLayoutEffect(function() {
    ref.current = fn;
  });
  return react.exports.useCallback(function() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return ref.current == null ? void 0 : ref.current.apply(ref, args);
  }, deps);
}
function useControllableProp(prop2, state) {
  var isControlled = prop2 !== void 0;
  var value = isControlled && typeof prop2 !== "undefined" ? prop2 : state;
  return [isControlled, value];
}
function useControllableState(props) {
  var valueProp = props.value, defaultValue = props.defaultValue, onChange = props.onChange, _props$shouldUpdate = props.shouldUpdate, shouldUpdate = _props$shouldUpdate === void 0 ? function(prev2, next2) {
    return prev2 !== next2;
  } : _props$shouldUpdate;
  var onChangeProp = useCallbackRef(onChange);
  var shouldUpdateProp = useCallbackRef(shouldUpdate);
  var _React$useState = react.exports.useState(defaultValue), valueState = _React$useState[0], setValue = _React$useState[1];
  var isControlled = valueProp !== void 0;
  var value = isControlled ? valueProp : valueState;
  var updateValue = react.exports.useCallback(function(next2) {
    var nextValue = runIfFn(next2, value);
    if (!shouldUpdateProp(value, nextValue)) {
      return;
    }
    if (!isControlled) {
      setValue(nextValue);
    }
    onChangeProp(nextValue);
  }, [isControlled, onChangeProp, value, shouldUpdateProp]);
  return [value, updateValue];
}
var defaultIdContext = {
  prefix: Math.round(Math.random() * 1e10),
  current: 0
};
var IdContext = /* @__PURE__ */ react.exports.createContext(defaultIdContext);
var IdProvider = /* @__PURE__ */ react.exports.memo(function(_ref) {
  var children = _ref.children;
  var currentContext = react.exports.useContext(IdContext);
  var isRoot = currentContext === defaultIdContext;
  var context = react.exports.useMemo(function() {
    return {
      prefix: isRoot ? 0 : ++currentContext.prefix,
      current: 0
    };
  }, [isRoot, currentContext]);
  return /* @__PURE__ */ react.exports.createElement(IdContext.Provider, {
    value: context
  }, children);
});
function useId(idProp, prefix2) {
  var context = react.exports.useContext(IdContext);
  return react.exports.useMemo(function() {
    return idProp || [prefix2, context.prefix, ++context.current].filter(Boolean).join("-");
  }, [idProp, prefix2]);
}
function assignRef(ref, value) {
  if (ref == null)
    return;
  if (typeof ref === "function") {
    ref(value);
    return;
  }
  try {
    ref.current = value;
  } catch (error) {
    throw new Error("Cannot assign value '" + value + "' to ref '" + ref + "'");
  }
}
function useMergeRefs() {
  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {
    refs[_key] = arguments[_key];
  }
  return react.exports.useMemo(function() {
    if (refs.every(function(ref) {
      return ref == null;
    })) {
      return null;
    }
    return function(node2) {
      refs.forEach(function(ref) {
        if (ref)
          assignRef(ref, node2);
      });
    };
  }, refs);
}
var _createContext$1$1 = createContext({
  strict: false,
  name: "PortalManagerContext"
}), PortalManagerContextProvider = _createContext$1$1[0];
function PortalManager(props) {
  var children = props.children, zIndex = props.zIndex;
  return /* @__PURE__ */ react.exports.createElement(PortalManagerContextProvider, {
    value: {
      zIndex
    }
  }, children);
}
if (__DEV__) {
  PortalManager.displayName = "PortalManager";
}
createContext({
  strict: false,
  name: "PortalContext"
});
var jsxRuntime = { exports: {} };
var reactJsxRuntime_production_min = {};
/** @license React v17.0.2
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var f$1 = react.exports, g$1 = 60103;
reactJsxRuntime_production_min.Fragment = 60107;
if (typeof Symbol === "function" && Symbol.for) {
  var h$1 = Symbol.for;
  g$1 = h$1("react.element");
  reactJsxRuntime_production_min.Fragment = h$1("react.fragment");
}
var m$1 = f$1.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, n = Object.prototype.hasOwnProperty, p$1 = { key: true, ref: true, __self: true, __source: true };
function q$1(c2, a2, k2) {
  var b2, d2 = {}, e2 = null, l2 = null;
  k2 !== void 0 && (e2 = "" + k2);
  a2.key !== void 0 && (e2 = "" + a2.key);
  a2.ref !== void 0 && (l2 = a2.ref);
  for (b2 in a2)
    n.call(a2, b2) && !p$1.hasOwnProperty(b2) && (d2[b2] = a2[b2]);
  if (c2 && c2.defaultProps)
    for (b2 in a2 = c2.defaultProps, a2)
      d2[b2] === void 0 && (d2[b2] = a2[b2]);
  return { $$typeof: g$1, type: c2, key: e2, ref: l2, props: d2, _owner: m$1.current };
}
reactJsxRuntime_production_min.jsx = q$1;
reactJsxRuntime_production_min.jsxs = q$1;
{
  jsxRuntime.exports = reactJsxRuntime_production_min;
}
const jsx = jsxRuntime.exports.jsx;
const jsxs = jsxRuntime.exports.jsxs;
var doc = {
  body: {
    classList: {
      add: function add() {
      },
      remove: function remove() {
      }
    }
  },
  addEventListener: function addEventListener() {
  },
  removeEventListener: function removeEventListener() {
  },
  activeElement: {
    blur: function blur() {
    },
    nodeName: ""
  },
  querySelector: function querySelector() {
    return null;
  },
  querySelectorAll: function querySelectorAll() {
    return [];
  },
  getElementById: function getElementById() {
    return null;
  },
  createEvent: function createEvent() {
    return {
      initEvent: function initEvent() {
      }
    };
  },
  createElement: function createElement() {
    return {
      children: [],
      childNodes: [],
      style: {},
      setAttribute: function setAttribute() {
      },
      getElementsByTagName: function getElementsByTagName() {
        return [];
      }
    };
  }
};
var ssrDocument = doc;
var noop$2 = function noop2() {
};
var win = {
  document: ssrDocument,
  navigator: {
    userAgent: ""
  },
  CustomEvent: function CustomEvent() {
    return this;
  },
  addEventListener: noop$2,
  removeEventListener: noop$2,
  getComputedStyle: function getComputedStyle2() {
    return {
      getPropertyValue: function getPropertyValue() {
        return "";
      }
    };
  },
  matchMedia: function matchMedia() {
    return {
      matches: false,
      addListener: noop$2,
      removeListener: noop$2
    };
  },
  requestAnimationFrame: function requestAnimationFrame2(callback) {
    if (typeof setTimeout === "undefined") {
      callback();
      return null;
    }
    return setTimeout(callback, 0);
  },
  cancelAnimationFrame: function cancelAnimationFrame(id2) {
    if (typeof setTimeout === "undefined")
      return;
    clearTimeout(id2);
  },
  setTimeout: function setTimeout2() {
    return 0;
  },
  clearTimeout: noop$2,
  setInterval: function setInterval() {
    return 0;
  },
  clearInterval: noop$2
};
var ssrWindow = win;
var mockEnv = {
  window: ssrWindow,
  document: ssrDocument
};
var defaultEnv = isBrowser$1 ? {
  window,
  document
} : mockEnv;
var EnvironmentContext = /* @__PURE__ */ react.exports.createContext(defaultEnv);
function useEnvironment() {
  return react.exports.useContext(EnvironmentContext);
}
function EnvironmentProvider(props) {
  var children = props.children, environmentProp = props.environment;
  var _useState = react.exports.useState(null), node2 = _useState[0], setNode = _useState[1];
  var context = react.exports.useMemo(function() {
    var _ref;
    var doc2 = node2 == null ? void 0 : node2.ownerDocument;
    var win2 = node2 == null ? void 0 : node2.ownerDocument.defaultView;
    var nodeEnv = doc2 ? {
      document: doc2,
      window: win2
    } : void 0;
    var env = (_ref = environmentProp != null ? environmentProp : nodeEnv) != null ? _ref : defaultEnv;
    return env;
  }, [node2, environmentProp]);
  var showEnvGetter = !node2 && !environmentProp;
  return /* @__PURE__ */ jsxs(EnvironmentContext.Provider, {
    value: context,
    children: [children, showEnvGetter && /* @__PURE__ */ jsx("span", {
      ref: function ref(el) {
        if (el)
          setNode(el);
      }
    })]
  });
}
var classNames = {
  light: "chakra-ui-light",
  dark: "chakra-ui-dark"
};
var mockBody = {
  classList: {
    add: noop$3,
    remove: noop$3
  }
};
var getBody = function getBody2(document2) {
  return isBrowser$1 ? document2.body : mockBody;
};
function syncBodyClassName(isDark3, document2) {
  var body = getBody(document2);
  body.classList.add(isDark3 ? classNames.dark : classNames.light);
  body.classList.remove(isDark3 ? classNames.light : classNames.dark);
}
function getMediaQuery(query) {
  var mediaQueryList = window.matchMedia == null ? void 0 : window.matchMedia(query);
  if (!mediaQueryList) {
    return void 0;
  }
  return !!mediaQueryList.media === mediaQueryList.matches;
}
var queries = {
  light: "(prefers-color-scheme: light)",
  dark: "(prefers-color-scheme: dark)"
};
function getColorScheme(fallback) {
  var _getMediaQuery;
  var isDark3 = (_getMediaQuery = getMediaQuery(queries.dark)) != null ? _getMediaQuery : fallback === "dark";
  return isDark3 ? "dark" : "light";
}
function addListener(fn) {
  if (!("matchMedia" in window)) {
    return noop$3;
  }
  var mediaQueryList = window.matchMedia(queries.dark);
  var listener = function listener2() {
    fn(mediaQueryList.matches ? "dark" : "light", true);
  };
  mediaQueryList.addEventListener("change", listener);
  return function() {
    mediaQueryList.removeEventListener("change", listener);
  };
}
var root = {
  get: function get2() {
    return document.documentElement.style.getPropertyValue("--chakra-ui-color-mode");
  },
  set: function set(mode2) {
    if (isBrowser$1) {
      document.documentElement.style.setProperty("--chakra-ui-color-mode", mode2);
    }
  }
};
var hasSupport = function hasSupport2() {
  return typeof Storage !== "undefined";
};
var storageKey = "chakra-ui-color-mode";
var localStorageManager = {
  get: function get3(init) {
    if (!hasSupport())
      return init;
    try {
      var _value = localStorage.getItem(storageKey);
      return _value != null ? _value : init;
    } catch (error) {
      return init;
    }
  },
  set: function set2(value) {
    if (!hasSupport())
      return;
    try {
      localStorage.setItem(storageKey, value);
    } catch (error) {
    }
  },
  type: "localStorage"
};
var ColorModeContext = /* @__PURE__ */ react.exports.createContext({});
if (__DEV__) {
  ColorModeContext.displayName = "ColorModeContext";
}
var useColorMode = function useColorMode2() {
  var context = react.exports.useContext(ColorModeContext);
  if (context === void 0) {
    throw new Error("useColorMode must be used within a ColorModeProvider");
  }
  return context;
};
function ColorModeProvider(props) {
  var value = props.value, children = props.children, _props$options = props.options, useSystemColorMode = _props$options.useSystemColorMode, initialColorMode = _props$options.initialColorMode, _props$colorModeManag = props.colorModeManager, colorModeManager = _props$colorModeManag === void 0 ? localStorageManager : _props$colorModeManag;
  var defaultColorMode = initialColorMode === "dark" ? "dark" : "light";
  var _React$useState = react.exports.useState(colorModeManager.type === "cookie" ? colorModeManager.get(defaultColorMode) : defaultColorMode), colorMode = _React$useState[0], rawSetColorMode = _React$useState[1];
  var _useEnvironment = useEnvironment(), document2 = _useEnvironment.document;
  react.exports.useEffect(function() {
    if (isBrowser$1 && colorModeManager.type === "localStorage") {
      var systemColorWithFallback = getColorScheme(defaultColorMode);
      if (useSystemColorMode) {
        return rawSetColorMode(systemColorWithFallback);
      }
      var rootGet = root.get();
      var colorManagerGet = colorModeManager.get();
      if (rootGet) {
        return rawSetColorMode(rootGet);
      }
      if (colorManagerGet) {
        return rawSetColorMode(colorManagerGet);
      }
      if (initialColorMode === "system") {
        return rawSetColorMode(systemColorWithFallback);
      }
      return rawSetColorMode(defaultColorMode);
    }
  }, [colorModeManager, useSystemColorMode, defaultColorMode, initialColorMode]);
  react.exports.useEffect(function() {
    var isDark3 = colorMode === "dark";
    syncBodyClassName(isDark3, document2);
    root.set(isDark3 ? "dark" : "light");
  }, [colorMode, document2]);
  var setColorMode = react.exports.useCallback(function(value2, isListenerEvent) {
    if (isListenerEvent === void 0) {
      isListenerEvent = false;
    }
    if (!isListenerEvent) {
      colorModeManager.set(value2);
    } else if (colorModeManager.get() && !useSystemColorMode)
      return;
    rawSetColorMode(value2);
  }, [colorModeManager, useSystemColorMode]);
  var toggleColorMode = react.exports.useCallback(function() {
    setColorMode(colorMode === "light" ? "dark" : "light");
  }, [colorMode, setColorMode]);
  react.exports.useEffect(function() {
    var shouldUseSystemListener = useSystemColorMode || initialColorMode === "system";
    var removeListener;
    if (shouldUseSystemListener) {
      removeListener = addListener(setColorMode);
    }
    return function() {
      if (removeListener && shouldUseSystemListener) {
        removeListener();
      }
    };
  }, [setColorMode, useSystemColorMode, initialColorMode]);
  var context = react.exports.useMemo(function() {
    return {
      colorMode: value != null ? value : colorMode,
      toggleColorMode: value ? noop$3 : toggleColorMode,
      setColorMode: value ? noop$3 : setColorMode
    };
  }, [colorMode, setColorMode, toggleColorMode, value]);
  return /* @__PURE__ */ react.exports.createElement(ColorModeContext.Provider, {
    value: context
  }, children);
}
if (__DEV__) {
  ColorModeProvider.displayName = "ColorModeProvider";
}
function _extends$a() {
  _extends$a = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$a.apply(this, arguments);
}
var tokenToCSSVar = function tokenToCSSVar2(scale2, value) {
  return function(theme2) {
    var valueStr = String(value);
    var key = scale2 ? scale2 + "." + valueStr : valueStr;
    return isObject$1(theme2.__cssMap) && key in theme2.__cssMap ? theme2.__cssMap[key].varRef : value;
  };
};
function createTransform(options) {
  var scale2 = options.scale, transform10 = options.transform, compose2 = options.compose;
  var fn = function fn2(value, theme2) {
    var _transform;
    var _value = tokenToCSSVar(scale2, value)(theme2);
    var result = (_transform = transform10 == null ? void 0 : transform10(_value, theme2)) != null ? _transform : _value;
    if (compose2) {
      result = compose2(result, theme2);
    }
    return result;
  };
  return fn;
}
function toConfig(scale2, transform10) {
  return function(property) {
    var result = {
      property,
      scale: scale2
    };
    result.transform = createTransform({
      scale: scale2,
      transform: transform10
    });
    return result;
  };
}
var getRtl = function getRtl2(_ref) {
  var rtl = _ref.rtl, ltr = _ref.ltr;
  return function(theme2) {
    return theme2.direction === "rtl" ? rtl : ltr;
  };
};
function logical(options) {
  var property = options.property, scale2 = options.scale, transform10 = options.transform;
  return {
    scale: scale2,
    property: getRtl(property),
    transform: scale2 ? createTransform({
      scale: scale2,
      compose: transform10
    }) : transform10
  };
}
var _spaceXTemplate, _spaceYTemplate;
var transformTemplate = ["rotate(var(--chakra-rotate, 0))", "scaleX(var(--chakra-scale-x, 1))", "scaleY(var(--chakra-scale-y, 1))", "skewX(var(--chakra-skew-x, 0))", "skewY(var(--chakra-skew-y, 0))"];
function getTransformTemplate() {
  return ["translateX(var(--chakra-translate-x, 0))", "translateY(var(--chakra-translate-y, 0))"].concat(transformTemplate).join(" ");
}
function getTransformGpuTemplate() {
  return ["translate3d(var(--chakra-translate-x, 0), var(--chakra-translate-y, 0), 0)"].concat(transformTemplate).join(" ");
}
var filterTemplate = {
  "--chakra-blur": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-brightness": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-contrast": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-grayscale": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-hue-rotate": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-invert": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-saturate": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-sepia": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-drop-shadow": "var(--chakra-empty,/*!*/ /*!*/)",
  filter: ["var(--chakra-blur)", "var(--chakra-brightness)", "var(--chakra-contrast)", "var(--chakra-grayscale)", "var(--chakra-hue-rotate)", "var(--chakra-invert)", "var(--chakra-saturate)", "var(--chakra-sepia)", "var(--chakra-drop-shadow)"].join(" ")
};
var backdropFilterTemplate = {
  backdropFilter: ["var(--chakra-backdrop-blur)", "var(--chakra-backdrop-brightness)", "var(--chakra-backdrop-contrast)", "var(--chakra-backdrop-grayscale)", "var(--chakra-backdrop-hue-rotate)", "var(--chakra-backdrop-invert)", "var(--chakra-backdrop-opacity)", "var(--chakra-backdrop-saturate)", "var(--chakra-backdrop-sepia)"].join(" "),
  "--chakra-backdrop-blur": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-brightness": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-contrast": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-grayscale": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-hue-rotate": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-invert": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-opacity": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-saturate": "var(--chakra-empty,/*!*/ /*!*/)",
  "--chakra-backdrop-sepia": "var(--chakra-empty,/*!*/ /*!*/)"
};
function getRingTemplate(value) {
  return {
    "--chakra-ring-offset-shadow": "var(--chakra-ring-inset) 0 0 0 var(--chakra-ring-offset-width) var(--chakra-ring-offset-color)",
    "--chakra-ring-shadow": "var(--chakra-ring-inset) 0 0 0 calc(var(--chakra-ring-width) + var(--chakra-ring-offset-width)) var(--chakra-ring-color)",
    "--chakra-ring-width": value,
    boxShadow: ["var(--chakra-ring-offset-shadow)", "var(--chakra-ring-shadow)", "var(--chakra-shadow, 0 0 #0000)"].join(", ")
  };
}
var flexDirectionTemplate = {
  "row-reverse": {
    space: "--chakra-space-x-reverse",
    divide: "--chakra-divide-x-reverse"
  },
  "column-reverse": {
    space: "--chakra-space-y-reverse",
    divide: "--chakra-divide-y-reverse"
  }
};
var owlSelector = "& > :not(style) ~ :not(style)";
var spaceXTemplate = (_spaceXTemplate = {}, _spaceXTemplate[owlSelector] = {
  marginInlineStart: "calc(var(--chakra-space-x) * calc(1 - var(--chakra-space-x-reverse)))",
  marginInlineEnd: "calc(var(--chakra-space-x) * var(--chakra-space-x-reverse))"
}, _spaceXTemplate);
var spaceYTemplate = (_spaceYTemplate = {}, _spaceYTemplate[owlSelector] = {
  marginTop: "calc(var(--chakra-space-y) * calc(1 - var(--chakra-space-y-reverse)))",
  marginBottom: "calc(var(--chakra-space-y) * var(--chakra-space-y-reverse))"
}, _spaceYTemplate);
function _setPrototypeOf(o2, p2) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o3, p3) {
    o3.__proto__ = p3;
    return o3;
  };
  return _setPrototypeOf(o2, p2);
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf(subClass, superClass);
}
function _wrapRegExp() {
  _wrapRegExp = function(re2, groups) {
    return new BabelRegExp(re2, void 0, groups);
  };
  var _super = RegExp.prototype;
  var _groups = new WeakMap();
  function BabelRegExp(re2, flags, groups) {
    var _this = new RegExp(re2, flags);
    _groups.set(_this, groups || _groups.get(re2));
    return _setPrototypeOf(_this, BabelRegExp.prototype);
  }
  _inherits(BabelRegExp, RegExp);
  BabelRegExp.prototype.exec = function(str) {
    var result = _super.exec.call(this, str);
    if (result)
      result.groups = buildGroups(result, this);
    return result;
  };
  BabelRegExp.prototype[Symbol.replace] = function(str, substitution) {
    if (typeof substitution === "string") {
      var groups = _groups.get(this);
      return _super[Symbol.replace].call(this, str, substitution.replace(/\$<([^>]+)>/g, function(_2, name) {
        return "$" + groups[name];
      }));
    } else if (typeof substitution === "function") {
      var _this = this;
      return _super[Symbol.replace].call(this, str, function() {
        var args = arguments;
        if (typeof args[args.length - 1] !== "object") {
          args = [].slice.call(args);
          args.push(buildGroups(args, _this));
        }
        return substitution.apply(this, args);
      });
    } else {
      return _super[Symbol.replace].call(this, str, substitution);
    }
  };
  function buildGroups(result, re2) {
    var g2 = _groups.get(re2);
    return Object.keys(g2).reduce(function(groups, name) {
      groups[name] = result[g2[name]];
      return groups;
    }, Object.create(null));
  }
  return _wrapRegExp.apply(this, arguments);
}
var directionMap = {
  "to-t": "to top",
  "to-tr": "to top right",
  "to-r": "to right",
  "to-br": "to bottom right",
  "to-b": "to bottom",
  "to-bl": "to bottom left",
  "to-l": "to left",
  "to-tl": "to top left"
};
var valueSet = new Set(Object.values(directionMap));
var globalSet = new Set(["none", "-moz-initial", "inherit", "initial", "revert", "unset"]);
var trimSpace = function trimSpace2(str) {
  return str.trim();
};
function parseGradient(value, theme2) {
  var _regex$exec$groups, _regex$exec;
  if (value == null || globalSet.has(value))
    return value;
  var regex = /* @__PURE__ */ _wrapRegExp(/(^[\x2DA-Za-z]+)\(((.*))\)/g, {
    type: 1,
    values: 2
  });
  var _ref = (_regex$exec$groups = (_regex$exec = regex.exec(value)) == null ? void 0 : _regex$exec.groups) != null ? _regex$exec$groups : {}, type = _ref.type, values2 = _ref.values;
  if (!type || !values2)
    return value;
  var _type = type.includes("-gradient") ? type : type + "-gradient";
  var _values$split$map$fil = values2.split(",").map(trimSpace).filter(Boolean), maybeDirection = _values$split$map$fil[0], stops = _values$split$map$fil.slice(1);
  if ((stops == null ? void 0 : stops.length) === 0)
    return value;
  var direction2 = maybeDirection in directionMap ? directionMap[maybeDirection] : maybeDirection;
  stops.unshift(direction2);
  var _values = stops.map(function(stop2) {
    if (valueSet.has(stop2))
      return stop2;
    var firstStop = stop2.indexOf(" ");
    var _ref2 = firstStop !== -1 ? [stop2.substr(0, firstStop), stop2.substr(firstStop + 1)] : [stop2], _color = _ref2[0], _stop = _ref2[1];
    var _stopOrFunc = isCSSFunction(_stop) ? _stop : _stop && _stop.split(" ");
    var key = "colors." + _color;
    var color2 = key in theme2.__cssMap ? theme2.__cssMap[key].varRef : _color;
    return _stopOrFunc ? [color2, _stopOrFunc].join(" ") : color2;
  });
  return _type + "(" + _values.join(", ") + ")";
}
var isCSSFunction = function isCSSFunction2(value) {
  return isString$1(value) && value.includes("(") && value.includes(")");
};
var gradientTransform = function gradientTransform2(value, theme2) {
  return parseGradient(value, theme2 != null ? theme2 : {});
};
var analyzeCSSValue = function analyzeCSSValue2(value) {
  var num = parseFloat(value.toString());
  var unit = value.toString().replace(String(num), "");
  return {
    unitless: !unit,
    value: num,
    unit
  };
};
var wrap = function wrap2(str) {
  return function(value) {
    return str + "(" + value + ")";
  };
};
var transformFunctions = {
  filter: function filter(value) {
    return value !== "auto" ? value : filterTemplate;
  },
  backdropFilter: function backdropFilter(value) {
    return value !== "auto" ? value : backdropFilterTemplate;
  },
  ring: function ring(value) {
    return getRingTemplate(transformFunctions.px(value));
  },
  bgClip: function bgClip(value) {
    return value === "text" ? {
      color: "transparent",
      backgroundClip: "text"
    } : {
      backgroundClip: value
    };
  },
  transform: function transform(value) {
    if (value === "auto")
      return getTransformTemplate();
    if (value === "auto-gpu")
      return getTransformGpuTemplate();
    return value;
  },
  px: function px(value) {
    if (value == null)
      return value;
    var _analyzeCSSValue = analyzeCSSValue(value), unitless = _analyzeCSSValue.unitless;
    return unitless || isNumber$1(value) ? value + "px" : value;
  },
  fraction: function fraction(value) {
    return !isNumber$1(value) || value > 1 ? value : value * 100 + "%";
  },
  "float": function float(value, theme2) {
    var map3 = {
      left: "right",
      right: "left"
    };
    return theme2.direction === "rtl" ? map3[value] : value;
  },
  degree: function degree(value) {
    if (isCssVar(value) || value == null)
      return value;
    var unitless = isString$1(value) && !value.endsWith("deg");
    return isNumber$1(value) || unitless ? value + "deg" : value;
  },
  gradient: gradientTransform,
  blur: wrap("blur"),
  opacity: wrap("opacity"),
  brightness: wrap("brightness"),
  contrast: wrap("contrast"),
  dropShadow: wrap("drop-shadow"),
  grayscale: wrap("grayscale"),
  hueRotate: wrap("hue-rotate"),
  invert: wrap("invert"),
  saturate: wrap("saturate"),
  sepia: wrap("sepia"),
  bgImage: function bgImage(value) {
    if (value == null)
      return value;
    var prevent = isCSSFunction(value) || globalSet.has(value);
    return !prevent ? "url(" + value + ")" : value;
  },
  outline: function outline(value) {
    var isNoneOrZero = String(value) === "0" || String(value) === "none";
    return value !== null && isNoneOrZero ? {
      outline: "2px solid transparent",
      outlineOffset: "2px"
    } : {
      outline: value
    };
  },
  flexDirection: function flexDirection(value) {
    var _flexDirectionTemplat;
    var _ref = (_flexDirectionTemplat = flexDirectionTemplate[value]) != null ? _flexDirectionTemplat : {}, space3 = _ref.space, divide3 = _ref.divide;
    var result = {
      flexDirection: value
    };
    if (space3)
      result[space3] = 1;
    if (divide3)
      result[divide3] = 1;
    return result;
  }
};
var t = {
  borderWidths: toConfig("borderWidths"),
  borderStyles: toConfig("borderStyles"),
  colors: toConfig("colors"),
  borders: toConfig("borders"),
  radii: toConfig("radii", transformFunctions.px),
  space: toConfig("space", transformFunctions.px),
  spaceT: toConfig("space", transformFunctions.px),
  degreeT: function degreeT(property) {
    return {
      property,
      transform: transformFunctions.degree
    };
  },
  prop: function prop(property, scale2, transform10) {
    return _extends$a({
      property,
      scale: scale2
    }, scale2 && {
      transform: createTransform({
        scale: scale2,
        transform: transform10
      })
    });
  },
  propT: function propT(property, transform10) {
    return {
      property,
      transform: transform10
    };
  },
  sizes: toConfig("sizes", transformFunctions.px),
  sizesT: toConfig("sizes", transformFunctions.fraction),
  shadows: toConfig("shadows"),
  logical,
  blur: toConfig("blur", transformFunctions.blur)
};
var background = {
  background: t.colors("background"),
  backgroundColor: t.colors("backgroundColor"),
  backgroundImage: t.propT("backgroundImage", transformFunctions.bgImage),
  backgroundSize: true,
  backgroundPosition: true,
  backgroundRepeat: true,
  backgroundAttachment: true,
  backgroundClip: {
    transform: transformFunctions.bgClip
  },
  bgSize: t.prop("backgroundSize"),
  bgPosition: t.prop("backgroundPosition"),
  bg: t.colors("background"),
  bgColor: t.colors("backgroundColor"),
  bgPos: t.prop("backgroundPosition"),
  bgRepeat: t.prop("backgroundRepeat"),
  bgAttachment: t.prop("backgroundAttachment"),
  bgGradient: t.propT("backgroundImage", transformFunctions.gradient),
  bgClip: {
    transform: transformFunctions.bgClip
  }
};
Object.assign(background, {
  bgImage: background.backgroundImage,
  bgImg: background.backgroundImage
});
var border = {
  border: t.borders("border"),
  borderWidth: t.borderWidths("borderWidth"),
  borderStyle: t.borderStyles("borderStyle"),
  borderColor: t.colors("borderColor"),
  borderRadius: t.radii("borderRadius"),
  borderTop: t.borders("borderTop"),
  borderBlockStart: t.borders("borderBlockStart"),
  borderTopLeftRadius: t.radii("borderTopLeftRadius"),
  borderStartStartRadius: t.logical({
    scale: "radii",
    property: {
      ltr: "borderTopLeftRadius",
      rtl: "borderTopRightRadius"
    }
  }),
  borderEndStartRadius: t.logical({
    scale: "radii",
    property: {
      ltr: "borderBottomLeftRadius",
      rtl: "borderBottomRightRadius"
    }
  }),
  borderTopRightRadius: t.radii("borderTopRightRadius"),
  borderStartEndRadius: t.logical({
    scale: "radii",
    property: {
      ltr: "borderTopRightRadius",
      rtl: "borderTopLeftRadius"
    }
  }),
  borderEndEndRadius: t.logical({
    scale: "radii",
    property: {
      ltr: "borderBottomRightRadius",
      rtl: "borderBottomLeftRadius"
    }
  }),
  borderRight: t.borders("borderRight"),
  borderInlineEnd: t.borders("borderInlineEnd"),
  borderBottom: t.borders("borderBottom"),
  borderBlockEnd: t.borders("borderBlockEnd"),
  borderBottomLeftRadius: t.radii("borderBottomLeftRadius"),
  borderBottomRightRadius: t.radii("borderBottomRightRadius"),
  borderLeft: t.borders("borderLeft"),
  borderInlineStart: {
    property: "borderInlineStart",
    scale: "borders"
  },
  borderInlineStartRadius: t.logical({
    scale: "radii",
    property: {
      ltr: ["borderTopLeftRadius", "borderBottomLeftRadius"],
      rtl: ["borderTopRightRadius", "borderBottomRightRadius"]
    }
  }),
  borderInlineEndRadius: t.logical({
    scale: "radii",
    property: {
      ltr: ["borderTopRightRadius", "borderBottomRightRadius"],
      rtl: ["borderTopLeftRadius", "borderBottomLeftRadius"]
    }
  }),
  borderX: t.borders(["borderLeft", "borderRight"]),
  borderInline: t.borders("borderInline"),
  borderY: t.borders(["borderTop", "borderBottom"]),
  borderBlock: t.borders("borderBlock"),
  borderTopWidth: t.borderWidths("borderTopWidth"),
  borderBlockStartWidth: t.borderWidths("borderBlockStartWidth"),
  borderTopColor: t.colors("borderTopColor"),
  borderBlockStartColor: t.colors("borderBlockStartColor"),
  borderTopStyle: t.borderStyles("borderTopStyle"),
  borderBlockStartStyle: t.borderStyles("borderBlockStartStyle"),
  borderBottomWidth: t.borderWidths("borderBottomWidth"),
  borderBlockEndWidth: t.borderWidths("borderBlockEndWidth"),
  borderBottomColor: t.colors("borderBottomColor"),
  borderBlockEndColor: t.colors("borderBlockEndColor"),
  borderBottomStyle: t.borderStyles("borderBottomStyle"),
  borderBlockEndStyle: t.borderStyles("borderBlockEndStyle"),
  borderLeftWidth: t.borderWidths("borderLeftWidth"),
  borderInlineStartWidth: t.borderWidths("borderInlineStartWidth"),
  borderLeftColor: t.colors("borderLeftColor"),
  borderInlineStartColor: t.colors("borderInlineStartColor"),
  borderLeftStyle: t.borderStyles("borderLeftStyle"),
  borderInlineStartStyle: t.borderStyles("borderInlineStartStyle"),
  borderRightWidth: t.borderWidths("borderRightWidth"),
  borderInlineEndWidth: t.borderWidths("borderInlineEndWidth"),
  borderRightColor: t.colors("borderRightColor"),
  borderInlineEndColor: t.colors("borderInlineEndColor"),
  borderRightStyle: t.borderStyles("borderRightStyle"),
  borderInlineEndStyle: t.borderStyles("borderInlineEndStyle"),
  borderTopRadius: t.radii(["borderTopLeftRadius", "borderTopRightRadius"]),
  borderBottomRadius: t.radii(["borderBottomLeftRadius", "borderBottomRightRadius"]),
  borderLeftRadius: t.radii(["borderTopLeftRadius", "borderBottomLeftRadius"]),
  borderRightRadius: t.radii(["borderTopRightRadius", "borderBottomRightRadius"])
};
Object.assign(border, {
  rounded: border.borderRadius,
  roundedTop: border.borderTopRadius,
  roundedTopLeft: border.borderTopLeftRadius,
  roundedTopRight: border.borderTopRightRadius,
  roundedTopStart: border.borderStartStartRadius,
  roundedTopEnd: border.borderStartEndRadius,
  roundedBottom: border.borderBottomRadius,
  roundedBottomLeft: border.borderBottomLeftRadius,
  roundedBottomRight: border.borderBottomRightRadius,
  roundedBottomStart: border.borderEndStartRadius,
  roundedBottomEnd: border.borderEndEndRadius,
  roundedLeft: border.borderLeftRadius,
  roundedRight: border.borderRightRadius,
  roundedStart: border.borderInlineStartRadius,
  roundedEnd: border.borderInlineEndRadius,
  borderStart: border.borderInlineStart,
  borderEnd: border.borderInlineEnd,
  borderTopStartRadius: border.borderStartStartRadius,
  borderTopEndRadius: border.borderStartEndRadius,
  borderBottomStartRadius: border.borderEndStartRadius,
  borderBottomEndRadius: border.borderEndEndRadius,
  borderStartRadius: border.borderInlineStartRadius,
  borderEndRadius: border.borderInlineEndRadius,
  borderStartWidth: border.borderInlineStartWidth,
  borderEndWidth: border.borderInlineEndWidth,
  borderStartColor: border.borderInlineStartColor,
  borderEndColor: border.borderInlineEndColor,
  borderStartStyle: border.borderInlineStartStyle,
  borderEndStyle: border.borderInlineEndStyle
});
var color$1 = {
  color: t.colors("color"),
  textColor: t.colors("color"),
  fill: t.colors("fill"),
  stroke: t.colors("stroke")
};
var effect = {
  boxShadow: t.shadows("boxShadow"),
  mixBlendMode: true,
  blendMode: t.prop("mixBlendMode"),
  backgroundBlendMode: true,
  bgBlendMode: t.prop("backgroundBlendMode"),
  opacity: true
};
Object.assign(effect, {
  shadow: effect.boxShadow
});
var filter$1 = {
  filter: {
    transform: transformFunctions.filter
  },
  blur: t.blur("--chakra-blur"),
  brightness: t.propT("--chakra-brightness", transformFunctions.brightness),
  contrast: t.propT("--chakra-contrast", transformFunctions.contrast),
  hueRotate: t.degreeT("--chakra-hue-rotate"),
  invert: t.propT("--chakra-invert", transformFunctions.invert),
  saturate: t.propT("--chakra-saturate", transformFunctions.saturate),
  dropShadow: t.propT("--chakra-drop-shadow", transformFunctions.dropShadow),
  backdropFilter: {
    transform: transformFunctions.backdropFilter
  },
  backdropBlur: t.blur("--chakra-backdrop-blur"),
  backdropBrightness: t.propT("--chakra-backdrop-brightness", transformFunctions.brightness),
  backdropContrast: t.propT("--chakra-backdrop-contrast", transformFunctions.contrast),
  backdropHueRotate: t.degreeT("--chakra-backdrop-hue-rotate"),
  backdropInvert: t.propT("--chakra-backdrop-invert", transformFunctions.invert),
  backdropSaturate: t.propT("--chakra-backdrop-saturate", transformFunctions.saturate)
};
var flexbox = {
  alignItems: true,
  alignContent: true,
  justifyItems: true,
  justifyContent: true,
  flexWrap: true,
  flexDirection: {
    transform: transformFunctions.flexDirection
  },
  experimental_spaceX: {
    "static": spaceXTemplate,
    transform: createTransform({
      scale: "space",
      transform: function transform2(value) {
        return value !== null ? {
          "--chakra-space-x": value
        } : null;
      }
    })
  },
  experimental_spaceY: {
    "static": spaceYTemplate,
    transform: createTransform({
      scale: "space",
      transform: function transform3(value) {
        return value != null ? {
          "--chakra-space-y": value
        } : null;
      }
    })
  },
  flex: true,
  flexFlow: true,
  flexGrow: true,
  flexShrink: true,
  flexBasis: t.sizes("flexBasis"),
  justifySelf: true,
  alignSelf: true,
  order: true,
  placeItems: true,
  placeContent: true,
  placeSelf: true
};
Object.assign(flexbox, {
  flexDir: flexbox.flexDirection
});
var grid = {
  gridGap: t.space("gridGap"),
  gridColumnGap: t.space("gridColumnGap"),
  gridRowGap: t.space("gridRowGap"),
  gridColumn: true,
  gridRow: true,
  gridAutoFlow: true,
  gridAutoColumns: true,
  gridColumnStart: true,
  gridColumnEnd: true,
  gridRowStart: true,
  gridRowEnd: true,
  gridAutoRows: true,
  gridTemplate: true,
  gridTemplateColumns: true,
  gridTemplateRows: true,
  gridTemplateAreas: true,
  gridArea: true
};
var interactivity = {
  appearance: true,
  cursor: true,
  resize: true,
  userSelect: true,
  pointerEvents: true,
  outline: {
    transform: transformFunctions.outline
  },
  outlineOffset: true,
  outlineColor: t.colors("outlineColor")
};
var layout = {
  width: t.sizesT("width"),
  inlineSize: t.sizesT("inlineSize"),
  height: t.sizes("height"),
  blockSize: t.sizes("blockSize"),
  boxSize: t.sizes(["width", "height"]),
  minWidth: t.sizes("minWidth"),
  minInlineSize: t.sizes("minInlineSize"),
  minHeight: t.sizes("minHeight"),
  minBlockSize: t.sizes("minBlockSize"),
  maxWidth: t.sizes("maxWidth"),
  maxInlineSize: t.sizes("maxInlineSize"),
  maxHeight: t.sizes("maxHeight"),
  maxBlockSize: t.sizes("maxBlockSize"),
  d: t.prop("display"),
  overflow: true,
  overflowX: true,
  overflowY: true,
  overscrollBehavior: true,
  overscrollBehaviorX: true,
  overscrollBehaviorY: true,
  display: true,
  verticalAlign: true,
  boxSizing: true,
  boxDecorationBreak: true,
  "float": t.propT("float", transformFunctions["float"]),
  objectFit: true,
  objectPosition: true,
  visibility: true,
  isolation: true
};
Object.assign(layout, {
  w: layout.width,
  h: layout.height,
  minW: layout.minWidth,
  maxW: layout.maxWidth,
  minH: layout.minHeight,
  maxH: layout.maxHeight,
  overscroll: layout.overscrollBehavior,
  overscrollX: layout.overscrollBehaviorX,
  overscrollY: layout.overscrollBehaviorY
});
var list = {
  listStyleType: true,
  listStylePosition: true,
  listStylePos: t.prop("listStylePosition"),
  listStyleImage: true,
  listStyleImg: t.prop("listStyleImage")
};
var srOnly = {
  border: "0px",
  clip: "rect(0, 0, 0, 0)",
  width: "1px",
  height: "1px",
  margin: "-1px",
  padding: "0px",
  overflow: "hidden",
  whiteSpace: "nowrap",
  position: "absolute"
};
var srFocusable = {
  position: "static",
  width: "auto",
  height: "auto",
  clip: "auto",
  padding: "0",
  margin: "0",
  overflow: "visible",
  whiteSpace: "normal"
};
var getWithPriority = function getWithPriority2(theme2, key, styles2) {
  var result = {};
  var obj = memoizedGet(theme2, key, {});
  for (var prop2 in obj) {
    var isInStyles = prop2 in styles2 && styles2[prop2] != null;
    if (!isInStyles)
      result[prop2] = obj[prop2];
  }
  return result;
};
var others = {
  srOnly: {
    transform: function transform4(value) {
      if (value === true)
        return srOnly;
      if (value === "focusable")
        return srFocusable;
      return {};
    }
  },
  layerStyle: {
    processResult: true,
    transform: function transform5(value, theme2, styles2) {
      return getWithPriority(theme2, "layerStyles." + value, styles2);
    }
  },
  textStyle: {
    processResult: true,
    transform: function transform6(value, theme2, styles2) {
      return getWithPriority(theme2, "textStyles." + value, styles2);
    }
  },
  apply: {
    processResult: true,
    transform: function transform7(value, theme2, styles2) {
      return getWithPriority(theme2, value, styles2);
    }
  }
};
var position = {
  position: true,
  pos: t.prop("position"),
  zIndex: t.prop("zIndex", "zIndices"),
  inset: t.spaceT(["top", "right", "bottom", "left"]),
  insetX: t.spaceT(["left", "right"]),
  insetInline: t.spaceT("insetInline"),
  insetY: t.spaceT(["top", "bottom"]),
  insetBlock: t.spaceT("insetBlock"),
  top: t.spaceT("top"),
  insetBlockStart: t.spaceT("insetBlockStart"),
  bottom: t.spaceT("bottom"),
  insetBlockEnd: t.spaceT("insetBlockEnd"),
  left: t.spaceT("left"),
  insetInlineStart: t.logical({
    scale: "space",
    property: {
      ltr: "left",
      rtl: "right"
    }
  }),
  right: t.spaceT("right"),
  insetInlineEnd: t.logical({
    scale: "space",
    property: {
      ltr: "right",
      rtl: "left"
    }
  })
};
Object.assign(position, {
  insetStart: position.insetInlineStart,
  insetEnd: position.insetInlineEnd
});
var ring2 = {
  ring: {
    transform: transformFunctions.ring
  },
  ringColor: t.colors("--chakra-ring-color"),
  ringOffset: t.prop("--chakra-ring-offset-width"),
  ringOffsetColor: t.colors("--chakra-ring-offset-color"),
  ringInset: t.prop("--chakra-ring-inset")
};
var space = {
  margin: t.spaceT("margin"),
  marginTop: t.spaceT("marginTop"),
  marginBlockStart: t.spaceT("marginBlockStart"),
  marginRight: t.spaceT("marginRight"),
  marginInlineEnd: t.spaceT("marginInlineEnd"),
  marginBottom: t.spaceT("marginBottom"),
  marginBlockEnd: t.spaceT("marginBlockEnd"),
  marginLeft: t.spaceT("marginLeft"),
  marginInlineStart: t.spaceT("marginInlineStart"),
  marginX: t.spaceT(["marginInlineStart", "marginInlineEnd"]),
  marginInline: t.spaceT("marginInline"),
  marginY: t.spaceT(["marginTop", "marginBottom"]),
  marginBlock: t.spaceT("marginBlock"),
  padding: t.space("padding"),
  paddingTop: t.space("paddingTop"),
  paddingBlockStart: t.space("paddingBlockStart"),
  paddingRight: t.space("paddingRight"),
  paddingBottom: t.space("paddingBottom"),
  paddingBlockEnd: t.space("paddingBlockEnd"),
  paddingLeft: t.space("paddingLeft"),
  paddingInlineStart: t.space("paddingInlineStart"),
  paddingInlineEnd: t.space("paddingInlineEnd"),
  paddingX: t.space(["paddingInlineStart", "paddingInlineEnd"]),
  paddingInline: t.space("paddingInline"),
  paddingY: t.space(["paddingTop", "paddingBottom"]),
  paddingBlock: t.space("paddingBlock")
};
Object.assign(space, {
  m: space.margin,
  mt: space.marginTop,
  mr: space.marginRight,
  me: space.marginInlineEnd,
  marginEnd: space.marginInlineEnd,
  mb: space.marginBottom,
  ml: space.marginLeft,
  ms: space.marginInlineStart,
  marginStart: space.marginInlineStart,
  mx: space.marginX,
  my: space.marginY,
  p: space.padding,
  pt: space.paddingTop,
  py: space.paddingY,
  px: space.paddingX,
  pb: space.paddingBottom,
  pl: space.paddingLeft,
  ps: space.paddingInlineStart,
  paddingStart: space.paddingInlineStart,
  pr: space.paddingRight,
  pe: space.paddingInlineEnd,
  paddingEnd: space.paddingInlineEnd
});
var textDecoration = {
  textDecorationColor: t.colors("textDecorationColor"),
  textDecoration: true,
  textDecor: {
    property: "textDecoration"
  },
  textDecorationLine: true,
  textDecorationStyle: true,
  textDecorationThickness: true,
  textUnderlineOffset: true,
  textShadow: t.shadows("textShadow")
};
var transform8 = {
  clipPath: true,
  transform: t.propT("transform", transformFunctions.transform),
  transformOrigin: true,
  translateX: t.spaceT("--chakra-translate-x"),
  translateY: t.spaceT("--chakra-translate-y"),
  skewX: t.degreeT("--chakra-skew-x"),
  skewY: t.degreeT("--chakra-skew-y"),
  scaleX: t.prop("--chakra-scale-x"),
  scaleY: t.prop("--chakra-scale-y"),
  scale: t.prop(["--chakra-scale-x", "--chakra-scale-y"]),
  rotate: t.degreeT("--chakra-rotate")
};
var transition$2 = {
  transition: true,
  transitionDelay: true,
  animation: true,
  willChange: true,
  transitionDuration: t.prop("transitionDuration", "transition.duration"),
  transitionProperty: t.prop("transitionProperty", "transition.property"),
  transitionTimingFunction: t.prop("transitionTimingFunction", "transition.easing")
};
var typography$2 = {
  fontFamily: t.prop("fontFamily", "fonts"),
  fontSize: t.prop("fontSize", "fontSizes", transformFunctions.px),
  fontWeight: t.prop("fontWeight", "fontWeights"),
  lineHeight: t.prop("lineHeight", "lineHeights"),
  letterSpacing: t.prop("letterSpacing", "letterSpacings"),
  textAlign: true,
  fontStyle: true,
  wordBreak: true,
  overflowWrap: true,
  textOverflow: true,
  textTransform: true,
  whiteSpace: true,
  noOfLines: {
    "static": {
      overflow: "hidden",
      textOverflow: "ellipsis",
      display: "-webkit-box",
      WebkitBoxOrient: "vertical",
      WebkitLineClamp: "var(--chakra-line-clamp)"
    },
    property: "--chakra-line-clamp"
  },
  isTruncated: {
    transform: function transform9(value) {
      if (value === true) {
        return {
          overflow: "hidden",
          textOverflow: "ellipsis",
          whiteSpace: "nowrap"
        };
      }
    }
  }
};
function _arrayLikeToArray$1(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _unsupportedIterableToArray$1(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$1(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$1(o2, minLen);
}
function _createForOfIteratorHelperLoose$1(o2, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o2[Symbol.iterator] || o2["@@iterator"];
  if (it)
    return (it = it.call(o2)).next.bind(it);
  if (Array.isArray(o2) || (it = _unsupportedIterableToArray$1(o2)) || allowArrayLike && o2 && typeof o2.length === "number") {
    if (it)
      o2 = it;
    var i = 0;
    return function() {
      if (i >= o2.length)
        return {
          done: true
        };
      return {
        done: false,
        value: o2[i++]
      };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
var group = {
  hover: function hover(selector2) {
    return selector2 + ":hover &, " + selector2 + "[data-hover] &";
  },
  focus: function focus2(selector2) {
    return selector2 + ":focus &, " + selector2 + "[data-focus] &";
  },
  focusVisible: function focusVisible(selector2) {
    return selector2 + ":focus-visible &";
  },
  active: function active(selector2) {
    return selector2 + ":active &, " + selector2 + "[data-active] &";
  },
  disabled: function disabled(selector2) {
    return selector2 + ":disabled &, " + selector2 + "[data-disabled] &";
  },
  invalid: function invalid(selector2) {
    return selector2 + ":invalid &, " + selector2 + "[data-invalid] &";
  },
  checked: function checked(selector2) {
    return selector2 + ":checked &, " + selector2 + "[data-checked] &";
  },
  indeterminate: function indeterminate(selector2) {
    return selector2 + ":indeterminate &, " + selector2 + "[aria-checked=mixed] &, " + selector2 + "[data-indeterminate] &";
  },
  readOnly: function readOnly(selector2) {
    return selector2 + ":read-only &, " + selector2 + "[readonly] &, " + selector2 + "[data-read-only] &";
  },
  expanded: function expanded(selector2) {
    return selector2 + ":read-only &, " + selector2 + "[aria-expanded=true] &, " + selector2 + "[data-expanded] &";
  }
};
var toGroup = function toGroup2(fn) {
  return merge(fn, "[role=group]", "[data-group]", ".group");
};
var merge = function merge2(fn) {
  for (var _len = arguments.length, selectors = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    selectors[_key - 1] = arguments[_key];
  }
  return selectors.map(fn).join(", ");
};
var pseudoSelectors = {
  _hover: "&:hover, &[data-hover]",
  _active: "&:active, &[data-active]",
  _focus: "&:focus, &[data-focus]",
  _highlighted: "&[data-highlighted]",
  _focusWithin: "&:focus-within",
  _focusVisible: "&:focus-visible",
  _disabled: "&[disabled], &[aria-disabled=true], &[data-disabled]",
  _readOnly: "&[aria-readonly=true], &[readonly], &[data-readonly]",
  _before: "&::before",
  _after: "&::after",
  _empty: "&:empty",
  _expanded: "&[aria-expanded=true], &[data-expanded]",
  _checked: "&[aria-checked=true], &[data-checked]",
  _grabbed: "&[aria-grabbed=true], &[data-grabbed]",
  _pressed: "&[aria-pressed=true], &[data-pressed]",
  _invalid: "&[aria-invalid=true], &[data-invalid]",
  _valid: "&[data-valid], &[data-state=valid]",
  _loading: "&[data-loading], &[aria-busy=true]",
  _selected: "&[aria-selected=true], &[data-selected]",
  _hidden: "&[hidden], &[data-hidden]",
  _autofill: "&:-webkit-autofill",
  _even: "&:nth-of-type(even)",
  _odd: "&:nth-of-type(odd)",
  _first: "&:first-of-type",
  _last: "&:last-of-type",
  _notFirst: "&:not(:first-of-type)",
  _notLast: "&:not(:last-of-type)",
  _visited: "&:visited",
  _activeLink: "&[aria-current=page]",
  _activeStep: "&[aria-current=step]",
  _indeterminate: "&:indeterminate, &[aria-checked=mixed], &[data-indeterminate]",
  _groupHover: toGroup(group.hover),
  _groupFocus: toGroup(group.focus),
  _groupFocusVisible: toGroup(group.focusVisible),
  _groupActive: toGroup(group.active),
  _groupDisabled: toGroup(group.disabled),
  _groupInvalid: toGroup(group.invalid),
  _groupChecked: toGroup(group.checked),
  _placeholder: "&::placeholder",
  _fullScreen: "&:fullscreen",
  _selection: "&::selection",
  _rtl: "[dir=rtl] &",
  _mediaDark: "@media (prefers-color-scheme: dark)",
  _dark: ".chakra-ui-dark &, [data-theme=dark] &, &[data-theme=dark]",
  _light: ".chakra-ui-light &, [data-theme=light] &, &[data-theme=light]"
};
var pseudoPropNames = objectKeys(pseudoSelectors);
var systemProps = mergeWith({}, background, border, color$1, flexbox, layout, filter$1, ring2, interactivity, grid, others, position, effect, space, typography$2, textDecoration, transform8, list, transition$2);
var layoutSystem = Object.assign({}, space, layout, flexbox, grid, position);
var layoutPropNames = objectKeys(layoutSystem);
var propNames = [].concat(objectKeys(systemProps), pseudoPropNames);
var styleProps = _extends$a({}, systemProps, pseudoSelectors);
var isStyleProp = function isStyleProp2(prop2) {
  return prop2 in styleProps;
};
var expandResponsive = function expandResponsive2(styles2) {
  return function(theme2) {
    if (!theme2.__breakpoints)
      return styles2;
    var _theme$__breakpoints = theme2.__breakpoints, isResponsive = _theme$__breakpoints.isResponsive, toArrayValue = _theme$__breakpoints.toArrayValue, medias = _theme$__breakpoints.media;
    var computedStyles = {};
    for (var key in styles2) {
      var value = runIfFn(styles2[key], theme2);
      if (value == null)
        continue;
      value = isObject$1(value) && isResponsive(value) ? toArrayValue(value) : value;
      if (!Array.isArray(value)) {
        computedStyles[key] = value;
        continue;
      }
      var queries2 = value.slice(0, medias.length).length;
      for (var index = 0; index < queries2; index += 1) {
        var media = medias == null ? void 0 : medias[index];
        if (!media) {
          computedStyles[key] = value[index];
          continue;
        }
        computedStyles[media] = computedStyles[media] || {};
        if (value[index] == null) {
          continue;
        }
        computedStyles[media][key] = value[index];
      }
    }
    return computedStyles;
  };
};
var isCSSVariableTokenValue = function isCSSVariableTokenValue2(key, value) {
  return key.startsWith("--") && isString$1(value) && !isCssVar(value);
};
var resolveTokenValue = function resolveTokenValue2(theme2, value) {
  var _ref, _getVar2;
  if (value == null)
    return value;
  var getVar = function getVar2(val) {
    var _theme$__cssMap, _theme$__cssMap$val;
    return (_theme$__cssMap = theme2.__cssMap) == null ? void 0 : (_theme$__cssMap$val = _theme$__cssMap[val]) == null ? void 0 : _theme$__cssMap$val.varRef;
  };
  var getValue = function getValue2(val) {
    var _getVar;
    return (_getVar = getVar(val)) != null ? _getVar : val;
  };
  var valueSplit = value.split(",").map(function(v2) {
    return v2.trim();
  });
  var tokenValue = valueSplit[0], fallbackValue = valueSplit[1];
  value = (_ref = (_getVar2 = getVar(tokenValue)) != null ? _getVar2 : getValue(fallbackValue)) != null ? _ref : getValue(value);
  return value;
};
function getCss(options) {
  var _options$configs = options.configs, configs = _options$configs === void 0 ? {} : _options$configs, _options$pseudos = options.pseudos, pseudos = _options$pseudos === void 0 ? {} : _options$pseudos, theme2 = options.theme;
  var css3 = function css4(stylesOrFn, nested) {
    if (nested === void 0) {
      nested = false;
    }
    var _styles = runIfFn(stylesOrFn, theme2);
    var styles2 = expandResponsive(_styles)(theme2);
    var computedStyles = {};
    for (var key in styles2) {
      var _config$transform, _config, _config2, _config3, _config4;
      var valueOrFn = styles2[key];
      var value = runIfFn(valueOrFn, theme2);
      if (key in pseudos) {
        key = pseudos[key];
      }
      if (isCSSVariableTokenValue(key, value)) {
        value = resolveTokenValue(theme2, value);
      }
      var config2 = configs[key];
      if (config2 === true) {
        config2 = {
          property: key
        };
      }
      if (isObject$1(value)) {
        var _computedStyles$key;
        computedStyles[key] = (_computedStyles$key = computedStyles[key]) != null ? _computedStyles$key : {};
        computedStyles[key] = mergeWith({}, computedStyles[key], css4(value, true));
        continue;
      }
      var rawValue = (_config$transform = (_config = config2) == null ? void 0 : _config.transform == null ? void 0 : _config.transform(value, theme2, _styles)) != null ? _config$transform : value;
      rawValue = (_config2 = config2) != null && _config2.processResult ? css4(rawValue, true) : rawValue;
      var configProperty = runIfFn((_config3 = config2) == null ? void 0 : _config3.property, theme2);
      if (!nested && (_config4 = config2) != null && _config4["static"]) {
        var staticStyles = runIfFn(config2["static"], theme2);
        computedStyles = mergeWith({}, computedStyles, staticStyles);
      }
      if (configProperty && Array.isArray(configProperty)) {
        for (var _iterator = _createForOfIteratorHelperLoose$1(configProperty), _step; !(_step = _iterator()).done; ) {
          var property = _step.value;
          computedStyles[property] = rawValue;
        }
        continue;
      }
      if (configProperty) {
        if (configProperty === "&" && isObject$1(rawValue)) {
          computedStyles = mergeWith({}, computedStyles, rawValue);
        } else {
          computedStyles[configProperty] = rawValue;
        }
        continue;
      }
      if (isObject$1(rawValue)) {
        computedStyles = mergeWith({}, computedStyles, rawValue);
        continue;
      }
      computedStyles[key] = rawValue;
    }
    return computedStyles;
  };
  return css3;
}
var css = function css2(styles2) {
  return function(theme2) {
    var cssFn = getCss({
      theme: theme2,
      pseudos: pseudoSelectors,
      configs: systemProps
    });
    return cssFn(styles2);
  };
};
function resolveReference(operand) {
  if (isObject$1(operand) && operand.reference) {
    return operand.reference;
  }
  return String(operand);
}
var toExpression = function toExpression2(operator) {
  for (var _len = arguments.length, operands = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    operands[_key - 1] = arguments[_key];
  }
  return operands.map(resolveReference).join(" " + operator + " ").replace(/calc/g, "");
};
var _add$1 = function add2() {
  for (var _len2 = arguments.length, operands = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    operands[_key2] = arguments[_key2];
  }
  return "calc(" + toExpression.apply(void 0, ["+"].concat(operands)) + ")";
};
var _subtract$1 = function subtract2() {
  for (var _len3 = arguments.length, operands = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    operands[_key3] = arguments[_key3];
  }
  return "calc(" + toExpression.apply(void 0, ["-"].concat(operands)) + ")";
};
var _multiply$1 = function multiply() {
  for (var _len4 = arguments.length, operands = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
    operands[_key4] = arguments[_key4];
  }
  return "calc(" + toExpression.apply(void 0, ["*"].concat(operands)) + ")";
};
var _divide$1 = function divide() {
  for (var _len5 = arguments.length, operands = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
    operands[_key5] = arguments[_key5];
  }
  return "calc(" + toExpression.apply(void 0, ["/"].concat(operands)) + ")";
};
var _negate$1 = function negate(x2) {
  var value = resolveReference(x2);
  if (value != null && !Number.isNaN(parseFloat(value))) {
    return String(value).startsWith("-") ? String(value).slice(1) : "-" + value;
  }
  return _multiply$1(value, -1);
};
var calc$1 = Object.assign(function(x2) {
  return {
    add: function add4() {
      for (var _len6 = arguments.length, operands = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        operands[_key6] = arguments[_key6];
      }
      return calc$1(_add$1.apply(void 0, [x2].concat(operands)));
    },
    subtract: function subtract4() {
      for (var _len7 = arguments.length, operands = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        operands[_key7] = arguments[_key7];
      }
      return calc$1(_subtract$1.apply(void 0, [x2].concat(operands)));
    },
    multiply: function multiply3() {
      for (var _len8 = arguments.length, operands = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
        operands[_key8] = arguments[_key8];
      }
      return calc$1(_multiply$1.apply(void 0, [x2].concat(operands)));
    },
    divide: function divide3() {
      for (var _len9 = arguments.length, operands = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
        operands[_key9] = arguments[_key9];
      }
      return calc$1(_divide$1.apply(void 0, [x2].concat(operands)));
    },
    negate: function negate3() {
      return calc$1(_negate$1(x2));
    },
    toString: function toString2() {
      return x2.toString();
    }
  };
}, {
  add: _add$1,
  subtract: _subtract$1,
  multiply: _multiply$1,
  divide: _divide$1,
  negate: _negate$1
});
function replaceWhiteSpace$1(value, replaceValue) {
  if (replaceValue === void 0) {
    replaceValue = "-";
  }
  return value.replace(/\s+/g, replaceValue);
}
function escape$1(value) {
  var valueStr = replaceWhiteSpace$1(value.toString());
  if (valueStr.includes("\\."))
    return value;
  var isDecimal2 = !Number.isInteger(parseFloat(value.toString()));
  return isDecimal2 ? valueStr.replace(".", "\\.") : value;
}
function addPrefix$1(value, prefix2) {
  if (prefix2 === void 0) {
    prefix2 = "";
  }
  return [prefix2, escape$1(value)].filter(Boolean).join("-");
}
function toVarReference(name, fallback) {
  return "var(" + escape$1(name) + (fallback ? ", " + fallback : "") + ")";
}
function toVarDefinition(value, prefix2) {
  if (prefix2 === void 0) {
    prefix2 = "";
  }
  return "--" + addPrefix$1(value, prefix2);
}
function cssVar$1(name, fallback, cssVarPrefix) {
  var cssVariable = toVarDefinition(name, cssVarPrefix);
  return {
    variable: cssVariable,
    reference: toVarReference(cssVariable, fallback)
  };
}
function createThemeVars(target, options) {
  var context = {
    cssMap: {},
    cssVars: {}
  };
  walkObject(target, function(value, path) {
    var _tokenHandlerMap$firs;
    var firstKey = path[0];
    var handler = (_tokenHandlerMap$firs = tokenHandlerMap[firstKey]) != null ? _tokenHandlerMap$firs : tokenHandlerMap.defaultHandler;
    var _handler = handler(path, value, options), cssVars = _handler.cssVars, cssMap = _handler.cssMap;
    Object.assign(context.cssVars, cssVars);
    Object.assign(context.cssMap, cssMap);
  });
  return context;
}
var tokenHandlerMap = {
  space: function space2(keys2, value, options) {
    var _extends2;
    var properties = tokenHandlerMap.defaultHandler(keys2, value, options);
    var firstKey = keys2[0], referenceKeys = keys2.slice(1);
    var negativeLookupKey = firstKey + ".-" + referenceKeys.join(".");
    var negativeVarKey = keys2.join("-");
    var _cssVar = cssVar$1(negativeVarKey, void 0, options.cssVarPrefix), variable = _cssVar.variable, reference2 = _cssVar.reference;
    var negativeValue = calc$1.negate(value);
    var varRef = calc$1.negate(reference2);
    return {
      cssVars: properties.cssVars,
      cssMap: _extends$a({}, properties.cssMap, (_extends2 = {}, _extends2[negativeLookupKey] = {
        value: "" + negativeValue,
        "var": "" + variable,
        varRef
      }, _extends2))
    };
  },
  defaultHandler: function defaultHandler(keys2, value, options) {
    var _cssVars, _cssMap;
    var lookupKey = keys2.join(".");
    var varKey = keys2.join("-");
    var _cssVar2 = cssVar$1(varKey, void 0, options.cssVarPrefix), variable = _cssVar2.variable, reference2 = _cssVar2.reference;
    return {
      cssVars: (_cssVars = {}, _cssVars[variable] = value, _cssVars),
      cssMap: (_cssMap = {}, _cssMap[lookupKey] = {
        value,
        "var": variable,
        varRef: reference2
      }, _cssMap)
    };
  }
};
function _objectWithoutPropertiesLoose$7(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded$m = ["__cssMap", "__cssVars", "__breakpoints"];
var tokens = ["colors", "borders", "borderWidths", "borderStyles", "fonts", "fontSizes", "fontWeights", "letterSpacings", "lineHeights", "radii", "space", "shadows", "sizes", "zIndices", "transition", "blur"];
function extractTokens(theme2) {
  var _tokens = tokens;
  return pick(theme2, _tokens);
}
function omitVars(rawTheme) {
  rawTheme.__cssMap;
  rawTheme.__cssVars;
  rawTheme.__breakpoints;
  var cleanTheme = _objectWithoutPropertiesLoose$7(rawTheme, _excluded$m);
  return cleanTheme;
}
function toCSSVar(rawTheme) {
  var _theme$config;
  var theme2 = omitVars(rawTheme);
  var tokens2 = extractTokens(theme2);
  var cssVarPrefix = (_theme$config = theme2.config) == null ? void 0 : _theme$config.cssVarPrefix;
  var _createThemeVars = createThemeVars(tokens2, {
    cssVarPrefix
  }), cssMap = _createThemeVars.cssMap, cssVars = _createThemeVars.cssVars;
  var defaultCssVars = {
    "--chakra-ring-inset": "var(--chakra-empty,/*!*/ /*!*/)",
    "--chakra-ring-offset-width": "0px",
    "--chakra-ring-offset-color": "#fff",
    "--chakra-ring-color": "rgba(66, 153, 225, 0.6)",
    "--chakra-ring-offset-shadow": "0 0 #0000",
    "--chakra-ring-shadow": "0 0 #0000",
    "--chakra-space-x-reverse": "0",
    "--chakra-space-y-reverse": "0"
  };
  Object.assign(theme2, {
    __cssVars: _extends$a({}, defaultCssVars, cssVars),
    __cssMap: cssMap,
    __breakpoints: analyzeBreakpoints(theme2.breakpoints)
  });
  return theme2;
}
var hasElementType = typeof Element !== "undefined";
var hasMap = typeof Map === "function";
var hasSet = typeof Set === "function";
var hasArrayBuffer = typeof ArrayBuffer === "function" && !!ArrayBuffer.isView;
function equal(a2, b2) {
  if (a2 === b2)
    return true;
  if (a2 && b2 && typeof a2 == "object" && typeof b2 == "object") {
    if (a2.constructor !== b2.constructor)
      return false;
    var length2, i, keys2;
    if (Array.isArray(a2)) {
      length2 = a2.length;
      if (length2 != b2.length)
        return false;
      for (i = length2; i-- !== 0; )
        if (!equal(a2[i], b2[i]))
          return false;
      return true;
    }
    var it;
    if (hasMap && a2 instanceof Map && b2 instanceof Map) {
      if (a2.size !== b2.size)
        return false;
      it = a2.entries();
      while (!(i = it.next()).done)
        if (!b2.has(i.value[0]))
          return false;
      it = a2.entries();
      while (!(i = it.next()).done)
        if (!equal(i.value[1], b2.get(i.value[0])))
          return false;
      return true;
    }
    if (hasSet && a2 instanceof Set && b2 instanceof Set) {
      if (a2.size !== b2.size)
        return false;
      it = a2.entries();
      while (!(i = it.next()).done)
        if (!b2.has(i.value[0]))
          return false;
      return true;
    }
    if (hasArrayBuffer && ArrayBuffer.isView(a2) && ArrayBuffer.isView(b2)) {
      length2 = a2.length;
      if (length2 != b2.length)
        return false;
      for (i = length2; i-- !== 0; )
        if (a2[i] !== b2[i])
          return false;
      return true;
    }
    if (a2.constructor === RegExp)
      return a2.source === b2.source && a2.flags === b2.flags;
    if (a2.valueOf !== Object.prototype.valueOf)
      return a2.valueOf() === b2.valueOf();
    if (a2.toString !== Object.prototype.toString)
      return a2.toString() === b2.toString();
    keys2 = Object.keys(a2);
    length2 = keys2.length;
    if (length2 !== Object.keys(b2).length)
      return false;
    for (i = length2; i-- !== 0; )
      if (!Object.prototype.hasOwnProperty.call(b2, keys2[i]))
        return false;
    if (hasElementType && a2 instanceof Element)
      return false;
    for (i = length2; i-- !== 0; ) {
      if ((keys2[i] === "_owner" || keys2[i] === "__v" || keys2[i] === "__o") && a2.$$typeof) {
        continue;
      }
      if (!equal(a2[keys2[i]], b2[keys2[i]]))
        return false;
    }
    return true;
  }
  return a2 !== a2 && b2 !== b2;
}
var reactFastCompare = function isEqual(a2, b2) {
  try {
    return equal(a2, b2);
  } catch (error) {
    if ((error.message || "").match(/stack|recursion/i)) {
      console.warn("react-fast-compare cannot handle circular refs");
      return false;
    }
    throw error;
  }
};
var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
var isPropValid = /* @__PURE__ */ memoize$1(function(prop2) {
  return reactPropsRegex.test(prop2) || prop2.charCodeAt(0) === 111 && prop2.charCodeAt(1) === 110 && prop2.charCodeAt(2) < 91;
});
var testOmitPropsOnStringTag = isPropValid;
var testOmitPropsOnComponent = function testOmitPropsOnComponent2(key) {
  return key !== "theme";
};
var getDefaultShouldForwardProp = function getDefaultShouldForwardProp2(tag) {
  return typeof tag === "string" && tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;
};
var composeShouldForwardProps = function composeShouldForwardProps2(tag, options, isReal) {
  var shouldForwardProp3;
  if (options) {
    var optionsShouldForwardProp = options.shouldForwardProp;
    shouldForwardProp3 = tag.__emotion_forwardProp && optionsShouldForwardProp ? function(propName) {
      return tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);
    } : optionsShouldForwardProp;
  }
  if (typeof shouldForwardProp3 !== "function" && isReal) {
    shouldForwardProp3 = tag.__emotion_forwardProp;
  }
  return shouldForwardProp3;
};
var Noop = function Noop2() {
  return null;
};
var createStyled = function createStyled2(tag, options) {
  var isReal = tag.__emotion_real === tag;
  var baseTag = isReal && tag.__emotion_base || tag;
  var identifierName;
  var targetClassName;
  if (options !== void 0) {
    identifierName = options.label;
    targetClassName = options.target;
  }
  var shouldForwardProp3 = composeShouldForwardProps(tag, options, isReal);
  var defaultShouldForwardProp = shouldForwardProp3 || getDefaultShouldForwardProp(baseTag);
  var shouldUseAs = !defaultShouldForwardProp("as");
  return function() {
    var args = arguments;
    var styles2 = isReal && tag.__emotion_styles !== void 0 ? tag.__emotion_styles.slice(0) : [];
    if (identifierName !== void 0) {
      styles2.push("label:" + identifierName + ";");
    }
    if (args[0] == null || args[0].raw === void 0) {
      styles2.push.apply(styles2, args);
    } else {
      styles2.push(args[0][0]);
      var len = args.length;
      var i = 1;
      for (; i < len; i++) {
        styles2.push(args[i], args[0][i]);
      }
    }
    var Styled = withEmotionCache(function(props, cache, ref) {
      var finalTag = shouldUseAs && props.as || baseTag;
      var className = "";
      var classInterpolations = [];
      var mergedProps = props;
      if (props.theme == null) {
        mergedProps = {};
        for (var key in props) {
          mergedProps[key] = props[key];
        }
        mergedProps.theme = react.exports.useContext(ThemeContext);
      }
      if (typeof props.className === "string") {
        className = getRegisteredStyles(cache.registered, classInterpolations, props.className);
      } else if (props.className != null) {
        className = props.className + " ";
      }
      var serialized = serializeStyles(styles2.concat(classInterpolations), cache.registered, mergedProps);
      insertStyles(cache, serialized, typeof finalTag === "string");
      className += cache.key + "-" + serialized.name;
      if (targetClassName !== void 0) {
        className += " " + targetClassName;
      }
      var finalShouldForwardProp = shouldUseAs && shouldForwardProp3 === void 0 ? getDefaultShouldForwardProp(finalTag) : defaultShouldForwardProp;
      var newProps = {};
      for (var _key in props) {
        if (shouldUseAs && _key === "as")
          continue;
        if (finalShouldForwardProp(_key)) {
          newProps[_key] = props[_key];
        }
      }
      newProps.className = className;
      newProps.ref = ref;
      var ele = /* @__PURE__ */ react.exports.createElement(finalTag, newProps);
      var possiblyStyleElement = /* @__PURE__ */ react.exports.createElement(Noop, null);
      return /* @__PURE__ */ react.exports.createElement(react.exports.Fragment, null, possiblyStyleElement, ele);
    });
    Styled.displayName = identifierName !== void 0 ? identifierName : "Styled(" + (typeof baseTag === "string" ? baseTag : baseTag.displayName || baseTag.name || "Component") + ")";
    Styled.defaultProps = tag.defaultProps;
    Styled.__emotion_real = Styled;
    Styled.__emotion_base = baseTag;
    Styled.__emotion_styles = styles2;
    Styled.__emotion_forwardProp = shouldForwardProp3;
    Object.defineProperty(Styled, "toString", {
      value: function value() {
        if (targetClassName === void 0 && false) {
          return "NO_COMPONENT_SELECTOR";
        }
        return "." + targetClassName;
      }
    });
    Styled.withComponent = function(nextTag, nextOptions) {
      return createStyled2(nextTag, _extends$b({}, options, nextOptions, {
        shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)
      })).apply(void 0, styles2);
    };
    return Styled;
  };
};
var tags = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
];
var newStyled = createStyled.bind();
tags.forEach(function(tagName) {
  newStyled[tagName] = newStyled(tagName);
});
function _extends$9() {
  _extends$9 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$9.apply(this, arguments);
}
var ThemeProvider2 = function ThemeProvider3(props) {
  var _props$cssVarsRoot = props.cssVarsRoot, cssVarsRoot = _props$cssVarsRoot === void 0 ? ":host, :root" : _props$cssVarsRoot, theme2 = props.theme, children = props.children;
  var computedTheme = react.exports.useMemo(function() {
    return toCSSVar(theme2);
  }, [theme2]);
  return /* @__PURE__ */ react.exports.createElement(ThemeProvider$1, {
    theme: computedTheme
  }, /* @__PURE__ */ react.exports.createElement(Global, {
    styles: function styles2(theme3) {
      var _ref;
      return _ref = {}, _ref[cssVarsRoot] = theme3.__cssVars, _ref;
    }
  }), children);
};
function useTheme() {
  var theme2 = react.exports.useContext(ThemeContext);
  if (!theme2) {
    throw Error("useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<ChakraProvider />` or `<ThemeProvider />`");
  }
  return theme2;
}
var _createContext$4 = createContext({
  name: "StylesContext",
  errorMessage: "useStyles: `styles` is undefined. Seems you forgot to wrap the components in `<StylesProvider />` "
}), StylesProvider = _createContext$4[0], useStyles = _createContext$4[1];
var GlobalStyle = function GlobalStyle2() {
  var _useColorMode = useColorMode(), colorMode = _useColorMode.colorMode;
  return /* @__PURE__ */ react.exports.createElement(Global, {
    styles: function styles2(theme2) {
      var styleObjectOrFn = memoizedGet(theme2, "styles.global");
      var globalStyles = runIfFn(styleObjectOrFn, {
        theme: theme2,
        colorMode
      });
      if (!globalStyles)
        return void 0;
      var styles3 = css(globalStyles)(theme2);
      return styles3;
    }
  });
};
var domElements = ["a", "b", "article", "aside", "blockquote", "button", "caption", "cite", "circle", "code", "dd", "div", "dl", "dt", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "header", "hr", "img", "input", "kbd", "label", "li", "main", "mark", "nav", "ol", "p", "path", "pre", "q", "rect", "s", "svg", "section", "select", "strong", "small", "span", "sub", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "tr", "ul"];
function omitThemingProps(props) {
  return omit(props, ["styleConfig", "size", "variant", "colorScheme"]);
}
function useChakra() {
  var colorModeResult = useColorMode();
  var theme2 = useTheme();
  return _extends$9({}, colorModeResult, {
    theme: theme2
  });
}
function _objectWithoutPropertiesLoose$6(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var allPropNames = new Set([].concat(propNames, ["textStyle", "layerStyle", "apply", "isTruncated", "noOfLines", "focusBorderColor", "errorBorderColor", "as", "__css", "css", "sx"]));
var validHTMLProps = new Set(["htmlWidth", "htmlHeight", "htmlSize"]);
var shouldForwardProp = function shouldForwardProp2(prop2) {
  return validHTMLProps.has(prop2) || !allPropNames.has(prop2);
};
var _excluded$1$4 = ["theme", "css", "__css", "sx"], _excluded2 = ["baseStyle"];
var toCSSObject = function toCSSObject2(_ref) {
  var baseStyle22 = _ref.baseStyle;
  return function(props) {
    props.theme;
    var cssProp = props.css, __css = props.__css, sx = props.sx, rest = _objectWithoutPropertiesLoose$6(props, _excluded$1$4);
    var styleProps2 = objectFilter(rest, function(_2, prop2) {
      return isStyleProp(prop2);
    });
    var finalBaseStyle = runIfFn(baseStyle22, props);
    var finalStyles = Object.assign({}, __css, finalBaseStyle, filterUndefined(styleProps2), sx);
    var computedCSS = css(finalStyles)(props.theme);
    return cssProp ? [computedCSS, cssProp] : computedCSS;
  };
};
function styled(component, options) {
  var _ref2 = options != null ? options : {}, baseStyle22 = _ref2.baseStyle, styledOptions = _objectWithoutPropertiesLoose$6(_ref2, _excluded2);
  if (!styledOptions.shouldForwardProp) {
    styledOptions.shouldForwardProp = shouldForwardProp;
  }
  var styleObject = toCSSObject({
    baseStyle: baseStyle22
  });
  return newStyled(component, styledOptions)(styleObject);
}
var chakra = styled;
domElements.forEach(function(tag) {
  chakra[tag] = chakra(tag);
});
function forwardRef(component) {
  return /* @__PURE__ */ react.exports.forwardRef(component);
}
var _excluded$l = ["styleConfig"];
function useStyleConfig(themeKey, props, opts) {
  var _styleConfig$defaultP;
  if (props === void 0) {
    props = {};
  }
  if (opts === void 0) {
    opts = {};
  }
  var _props = props, styleConfigProp = _props.styleConfig, rest = _objectWithoutPropertiesLoose$6(_props, _excluded$l);
  var _useChakra = useChakra(), theme2 = _useChakra.theme, colorMode = _useChakra.colorMode;
  var themeStyleConfig = memoizedGet(theme2, "components." + themeKey);
  var styleConfig = styleConfigProp || themeStyleConfig;
  var mergedProps = mergeWith({
    theme: theme2,
    colorMode
  }, (_styleConfig$defaultP = styleConfig == null ? void 0 : styleConfig.defaultProps) != null ? _styleConfig$defaultP : {}, filterUndefined(omit(rest, ["children"])));
  var stylesRef = react.exports.useRef({});
  if (styleConfig) {
    var _styleConfig$baseStyl, _styleConfig$variants, _styleConfig$variants2, _styleConfig$sizes$me, _styleConfig$sizes, _opts;
    var baseStyles = runIfFn((_styleConfig$baseStyl = styleConfig.baseStyle) != null ? _styleConfig$baseStyl : {}, mergedProps);
    var variants2 = runIfFn((_styleConfig$variants = (_styleConfig$variants2 = styleConfig.variants) == null ? void 0 : _styleConfig$variants2[mergedProps.variant]) != null ? _styleConfig$variants : {}, mergedProps);
    var sizes2 = runIfFn((_styleConfig$sizes$me = (_styleConfig$sizes = styleConfig.sizes) == null ? void 0 : _styleConfig$sizes[mergedProps.size]) != null ? _styleConfig$sizes$me : {}, mergedProps);
    var styles2 = mergeWith({}, baseStyles, sizes2, variants2);
    if ((_opts = opts) != null && _opts.isMultiPart && styleConfig.parts) {
      styleConfig.parts.forEach(function(part) {
        var _styles$part;
        styles2[part] = (_styles$part = styles2[part]) != null ? _styles$part : {};
      });
    }
    var isStyleEqual = reactFastCompare(stylesRef.current, styles2);
    if (!isStyleEqual) {
      stylesRef.current = styles2;
    }
  }
  return stylesRef.current;
}
function useMultiStyleConfig(themeKey, props) {
  return useStyleConfig(themeKey, props, {
    isMultiPart: true
  });
}
var ChakraProvider$1 = function ChakraProvider(props) {
  var children = props.children, colorModeManager = props.colorModeManager, portalZIndex = props.portalZIndex, _props$resetCSS = props.resetCSS, resetCSS = _props$resetCSS === void 0 ? true : _props$resetCSS, _props$theme = props.theme, theme2 = _props$theme === void 0 ? {} : _props$theme, environment = props.environment, cssVarsRoot = props.cssVarsRoot;
  var _children = /* @__PURE__ */ react.exports.createElement(EnvironmentProvider, {
    environment
  }, children);
  return /* @__PURE__ */ react.exports.createElement(IdProvider, null, /* @__PURE__ */ react.exports.createElement(ThemeProvider2, {
    theme: theme2,
    cssVarsRoot
  }, /* @__PURE__ */ react.exports.createElement(ColorModeProvider, {
    colorModeManager,
    options: theme2.config
  }, resetCSS && /* @__PURE__ */ react.exports.createElement(CSSReset$1, null), /* @__PURE__ */ react.exports.createElement(GlobalStyle, null), portalZIndex ? /* @__PURE__ */ react.exports.createElement(PortalManager, {
    zIndex: portalZIndex
  }, _children) : _children)));
};
function bound01(n2, max) {
  if (isOnePointZero(n2)) {
    n2 = "100%";
  }
  var isPercent = isPercentage(n2);
  n2 = max === 360 ? n2 : Math.min(max, Math.max(0, parseFloat(n2)));
  if (isPercent) {
    n2 = parseInt(String(n2 * max), 10) / 100;
  }
  if (Math.abs(n2 - max) < 1e-6) {
    return 1;
  }
  if (max === 360) {
    n2 = (n2 < 0 ? n2 % max + max : n2 % max) / parseFloat(String(max));
  } else {
    n2 = n2 % max / parseFloat(String(max));
  }
  return n2;
}
function clamp01(val) {
  return Math.min(1, Math.max(0, val));
}
function isOnePointZero(n2) {
  return typeof n2 === "string" && n2.indexOf(".") !== -1 && parseFloat(n2) === 1;
}
function isPercentage(n2) {
  return typeof n2 === "string" && n2.indexOf("%") !== -1;
}
function boundAlpha(a2) {
  a2 = parseFloat(a2);
  if (isNaN(a2) || a2 < 0 || a2 > 1) {
    a2 = 1;
  }
  return a2;
}
function convertToPercentage(n2) {
  if (n2 <= 1) {
    return Number(n2) * 100 + "%";
  }
  return n2;
}
function pad2(c2) {
  return c2.length === 1 ? "0" + c2 : String(c2);
}
function rgbToRgb(r2, g2, b2) {
  return {
    r: bound01(r2, 255) * 255,
    g: bound01(g2, 255) * 255,
    b: bound01(b2, 255) * 255
  };
}
function rgbToHsl(r2, g2, b2) {
  r2 = bound01(r2, 255);
  g2 = bound01(g2, 255);
  b2 = bound01(b2, 255);
  var max = Math.max(r2, g2, b2);
  var min = Math.min(r2, g2, b2);
  var h2 = 0;
  var s = 0;
  var l2 = (max + min) / 2;
  if (max === min) {
    s = 0;
    h2 = 0;
  } else {
    var d2 = max - min;
    s = l2 > 0.5 ? d2 / (2 - max - min) : d2 / (max + min);
    switch (max) {
      case r2:
        h2 = (g2 - b2) / d2 + (g2 < b2 ? 6 : 0);
        break;
      case g2:
        h2 = (b2 - r2) / d2 + 2;
        break;
      case b2:
        h2 = (r2 - g2) / d2 + 4;
        break;
    }
    h2 /= 6;
  }
  return { h: h2, s, l: l2 };
}
function hue2rgb(p2, q2, t2) {
  if (t2 < 0) {
    t2 += 1;
  }
  if (t2 > 1) {
    t2 -= 1;
  }
  if (t2 < 1 / 6) {
    return p2 + (q2 - p2) * (6 * t2);
  }
  if (t2 < 1 / 2) {
    return q2;
  }
  if (t2 < 2 / 3) {
    return p2 + (q2 - p2) * (2 / 3 - t2) * 6;
  }
  return p2;
}
function hslToRgb(h2, s, l2) {
  var r2;
  var g2;
  var b2;
  h2 = bound01(h2, 360);
  s = bound01(s, 100);
  l2 = bound01(l2, 100);
  if (s === 0) {
    g2 = l2;
    b2 = l2;
    r2 = l2;
  } else {
    var q2 = l2 < 0.5 ? l2 * (1 + s) : l2 + s - l2 * s;
    var p2 = 2 * l2 - q2;
    r2 = hue2rgb(p2, q2, h2 + 1 / 3);
    g2 = hue2rgb(p2, q2, h2);
    b2 = hue2rgb(p2, q2, h2 - 1 / 3);
  }
  return { r: r2 * 255, g: g2 * 255, b: b2 * 255 };
}
function rgbToHsv(r2, g2, b2) {
  r2 = bound01(r2, 255);
  g2 = bound01(g2, 255);
  b2 = bound01(b2, 255);
  var max = Math.max(r2, g2, b2);
  var min = Math.min(r2, g2, b2);
  var h2 = 0;
  var v2 = max;
  var d2 = max - min;
  var s = max === 0 ? 0 : d2 / max;
  if (max === min) {
    h2 = 0;
  } else {
    switch (max) {
      case r2:
        h2 = (g2 - b2) / d2 + (g2 < b2 ? 6 : 0);
        break;
      case g2:
        h2 = (b2 - r2) / d2 + 2;
        break;
      case b2:
        h2 = (r2 - g2) / d2 + 4;
        break;
    }
    h2 /= 6;
  }
  return { h: h2, s, v: v2 };
}
function hsvToRgb(h2, s, v2) {
  h2 = bound01(h2, 360) * 6;
  s = bound01(s, 100);
  v2 = bound01(v2, 100);
  var i = Math.floor(h2);
  var f2 = h2 - i;
  var p2 = v2 * (1 - s);
  var q2 = v2 * (1 - f2 * s);
  var t2 = v2 * (1 - (1 - f2) * s);
  var mod = i % 6;
  var r2 = [v2, q2, p2, p2, t2, v2][mod];
  var g2 = [t2, v2, v2, q2, p2, p2][mod];
  var b2 = [p2, p2, t2, v2, v2, q2][mod];
  return { r: r2 * 255, g: g2 * 255, b: b2 * 255 };
}
function rgbToHex(r2, g2, b2, allow3Char) {
  var hex2 = [
    pad2(Math.round(r2).toString(16)),
    pad2(Math.round(g2).toString(16)),
    pad2(Math.round(b2).toString(16))
  ];
  if (allow3Char && hex2[0].startsWith(hex2[0].charAt(1)) && hex2[1].startsWith(hex2[1].charAt(1)) && hex2[2].startsWith(hex2[2].charAt(1))) {
    return hex2[0].charAt(0) + hex2[1].charAt(0) + hex2[2].charAt(0);
  }
  return hex2.join("");
}
function rgbaToHex(r2, g2, b2, a2, allow4Char) {
  var hex2 = [
    pad2(Math.round(r2).toString(16)),
    pad2(Math.round(g2).toString(16)),
    pad2(Math.round(b2).toString(16)),
    pad2(convertDecimalToHex(a2))
  ];
  if (allow4Char && hex2[0].startsWith(hex2[0].charAt(1)) && hex2[1].startsWith(hex2[1].charAt(1)) && hex2[2].startsWith(hex2[2].charAt(1)) && hex2[3].startsWith(hex2[3].charAt(1))) {
    return hex2[0].charAt(0) + hex2[1].charAt(0) + hex2[2].charAt(0) + hex2[3].charAt(0);
  }
  return hex2.join("");
}
function convertDecimalToHex(d2) {
  return Math.round(parseFloat(d2) * 255).toString(16);
}
function convertHexToDecimal(h2) {
  return parseIntFromHex(h2) / 255;
}
function parseIntFromHex(val) {
  return parseInt(val, 16);
}
function numberInputToObject(color2) {
  return {
    r: color2 >> 16,
    g: (color2 & 65280) >> 8,
    b: color2 & 255
  };
}
var names$1 = {
  aliceblue: "#f0f8ff",
  antiquewhite: "#faebd7",
  aqua: "#00ffff",
  aquamarine: "#7fffd4",
  azure: "#f0ffff",
  beige: "#f5f5dc",
  bisque: "#ffe4c4",
  black: "#000000",
  blanchedalmond: "#ffebcd",
  blue: "#0000ff",
  blueviolet: "#8a2be2",
  brown: "#a52a2a",
  burlywood: "#deb887",
  cadetblue: "#5f9ea0",
  chartreuse: "#7fff00",
  chocolate: "#d2691e",
  coral: "#ff7f50",
  cornflowerblue: "#6495ed",
  cornsilk: "#fff8dc",
  crimson: "#dc143c",
  cyan: "#00ffff",
  darkblue: "#00008b",
  darkcyan: "#008b8b",
  darkgoldenrod: "#b8860b",
  darkgray: "#a9a9a9",
  darkgreen: "#006400",
  darkgrey: "#a9a9a9",
  darkkhaki: "#bdb76b",
  darkmagenta: "#8b008b",
  darkolivegreen: "#556b2f",
  darkorange: "#ff8c00",
  darkorchid: "#9932cc",
  darkred: "#8b0000",
  darksalmon: "#e9967a",
  darkseagreen: "#8fbc8f",
  darkslateblue: "#483d8b",
  darkslategray: "#2f4f4f",
  darkslategrey: "#2f4f4f",
  darkturquoise: "#00ced1",
  darkviolet: "#9400d3",
  deeppink: "#ff1493",
  deepskyblue: "#00bfff",
  dimgray: "#696969",
  dimgrey: "#696969",
  dodgerblue: "#1e90ff",
  firebrick: "#b22222",
  floralwhite: "#fffaf0",
  forestgreen: "#228b22",
  fuchsia: "#ff00ff",
  gainsboro: "#dcdcdc",
  ghostwhite: "#f8f8ff",
  goldenrod: "#daa520",
  gold: "#ffd700",
  gray: "#808080",
  green: "#008000",
  greenyellow: "#adff2f",
  grey: "#808080",
  honeydew: "#f0fff0",
  hotpink: "#ff69b4",
  indianred: "#cd5c5c",
  indigo: "#4b0082",
  ivory: "#fffff0",
  khaki: "#f0e68c",
  lavenderblush: "#fff0f5",
  lavender: "#e6e6fa",
  lawngreen: "#7cfc00",
  lemonchiffon: "#fffacd",
  lightblue: "#add8e6",
  lightcoral: "#f08080",
  lightcyan: "#e0ffff",
  lightgoldenrodyellow: "#fafad2",
  lightgray: "#d3d3d3",
  lightgreen: "#90ee90",
  lightgrey: "#d3d3d3",
  lightpink: "#ffb6c1",
  lightsalmon: "#ffa07a",
  lightseagreen: "#20b2aa",
  lightskyblue: "#87cefa",
  lightslategray: "#778899",
  lightslategrey: "#778899",
  lightsteelblue: "#b0c4de",
  lightyellow: "#ffffe0",
  lime: "#00ff00",
  limegreen: "#32cd32",
  linen: "#faf0e6",
  magenta: "#ff00ff",
  maroon: "#800000",
  mediumaquamarine: "#66cdaa",
  mediumblue: "#0000cd",
  mediumorchid: "#ba55d3",
  mediumpurple: "#9370db",
  mediumseagreen: "#3cb371",
  mediumslateblue: "#7b68ee",
  mediumspringgreen: "#00fa9a",
  mediumturquoise: "#48d1cc",
  mediumvioletred: "#c71585",
  midnightblue: "#191970",
  mintcream: "#f5fffa",
  mistyrose: "#ffe4e1",
  moccasin: "#ffe4b5",
  navajowhite: "#ffdead",
  navy: "#000080",
  oldlace: "#fdf5e6",
  olive: "#808000",
  olivedrab: "#6b8e23",
  orange: "#ffa500",
  orangered: "#ff4500",
  orchid: "#da70d6",
  palegoldenrod: "#eee8aa",
  palegreen: "#98fb98",
  paleturquoise: "#afeeee",
  palevioletred: "#db7093",
  papayawhip: "#ffefd5",
  peachpuff: "#ffdab9",
  peru: "#cd853f",
  pink: "#ffc0cb",
  plum: "#dda0dd",
  powderblue: "#b0e0e6",
  purple: "#800080",
  rebeccapurple: "#663399",
  red: "#ff0000",
  rosybrown: "#bc8f8f",
  royalblue: "#4169e1",
  saddlebrown: "#8b4513",
  salmon: "#fa8072",
  sandybrown: "#f4a460",
  seagreen: "#2e8b57",
  seashell: "#fff5ee",
  sienna: "#a0522d",
  silver: "#c0c0c0",
  skyblue: "#87ceeb",
  slateblue: "#6a5acd",
  slategray: "#708090",
  slategrey: "#708090",
  snow: "#fffafa",
  springgreen: "#00ff7f",
  steelblue: "#4682b4",
  tan: "#d2b48c",
  teal: "#008080",
  thistle: "#d8bfd8",
  tomato: "#ff6347",
  turquoise: "#40e0d0",
  violet: "#ee82ee",
  wheat: "#f5deb3",
  white: "#ffffff",
  whitesmoke: "#f5f5f5",
  yellow: "#ffff00",
  yellowgreen: "#9acd32"
};
function inputToRGB(color2) {
  var rgb = { r: 0, g: 0, b: 0 };
  var a2 = 1;
  var s = null;
  var v2 = null;
  var l2 = null;
  var ok2 = false;
  var format2 = false;
  if (typeof color2 === "string") {
    color2 = stringInputToObject(color2);
  }
  if (typeof color2 === "object") {
    if (isValidCSSUnit(color2.r) && isValidCSSUnit(color2.g) && isValidCSSUnit(color2.b)) {
      rgb = rgbToRgb(color2.r, color2.g, color2.b);
      ok2 = true;
      format2 = String(color2.r).substr(-1) === "%" ? "prgb" : "rgb";
    } else if (isValidCSSUnit(color2.h) && isValidCSSUnit(color2.s) && isValidCSSUnit(color2.v)) {
      s = convertToPercentage(color2.s);
      v2 = convertToPercentage(color2.v);
      rgb = hsvToRgb(color2.h, s, v2);
      ok2 = true;
      format2 = "hsv";
    } else if (isValidCSSUnit(color2.h) && isValidCSSUnit(color2.s) && isValidCSSUnit(color2.l)) {
      s = convertToPercentage(color2.s);
      l2 = convertToPercentage(color2.l);
      rgb = hslToRgb(color2.h, s, l2);
      ok2 = true;
      format2 = "hsl";
    }
    if (Object.prototype.hasOwnProperty.call(color2, "a")) {
      a2 = color2.a;
    }
  }
  a2 = boundAlpha(a2);
  return {
    ok: ok2,
    format: color2.format || format2,
    r: Math.min(255, Math.max(rgb.r, 0)),
    g: Math.min(255, Math.max(rgb.g, 0)),
    b: Math.min(255, Math.max(rgb.b, 0)),
    a: a2
  };
}
var CSS_INTEGER = "[-\\+]?\\d+%?";
var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?";
var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";
var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
var matchers = {
  CSS_UNIT: new RegExp(CSS_UNIT),
  rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
  rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
  hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
  hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
  hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
  hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
  hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
  hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
};
function stringInputToObject(color2) {
  color2 = color2.trim().toLowerCase();
  if (color2.length === 0) {
    return false;
  }
  var named = false;
  if (names$1[color2]) {
    color2 = names$1[color2];
    named = true;
  } else if (color2 === "transparent") {
    return { r: 0, g: 0, b: 0, a: 0, format: "name" };
  }
  var match2 = matchers.rgb.exec(color2);
  if (match2) {
    return { r: match2[1], g: match2[2], b: match2[3] };
  }
  match2 = matchers.rgba.exec(color2);
  if (match2) {
    return { r: match2[1], g: match2[2], b: match2[3], a: match2[4] };
  }
  match2 = matchers.hsl.exec(color2);
  if (match2) {
    return { h: match2[1], s: match2[2], l: match2[3] };
  }
  match2 = matchers.hsla.exec(color2);
  if (match2) {
    return { h: match2[1], s: match2[2], l: match2[3], a: match2[4] };
  }
  match2 = matchers.hsv.exec(color2);
  if (match2) {
    return { h: match2[1], s: match2[2], v: match2[3] };
  }
  match2 = matchers.hsva.exec(color2);
  if (match2) {
    return { h: match2[1], s: match2[2], v: match2[3], a: match2[4] };
  }
  match2 = matchers.hex8.exec(color2);
  if (match2) {
    return {
      r: parseIntFromHex(match2[1]),
      g: parseIntFromHex(match2[2]),
      b: parseIntFromHex(match2[3]),
      a: convertHexToDecimal(match2[4]),
      format: named ? "name" : "hex8"
    };
  }
  match2 = matchers.hex6.exec(color2);
  if (match2) {
    return {
      r: parseIntFromHex(match2[1]),
      g: parseIntFromHex(match2[2]),
      b: parseIntFromHex(match2[3]),
      format: named ? "name" : "hex"
    };
  }
  match2 = matchers.hex4.exec(color2);
  if (match2) {
    return {
      r: parseIntFromHex(match2[1] + match2[1]),
      g: parseIntFromHex(match2[2] + match2[2]),
      b: parseIntFromHex(match2[3] + match2[3]),
      a: convertHexToDecimal(match2[4] + match2[4]),
      format: named ? "name" : "hex8"
    };
  }
  match2 = matchers.hex3.exec(color2);
  if (match2) {
    return {
      r: parseIntFromHex(match2[1] + match2[1]),
      g: parseIntFromHex(match2[2] + match2[2]),
      b: parseIntFromHex(match2[3] + match2[3]),
      format: named ? "name" : "hex"
    };
  }
  return false;
}
function isValidCSSUnit(color2) {
  return Boolean(matchers.CSS_UNIT.exec(String(color2)));
}
var TinyColor = function() {
  function TinyColor2(color2, opts) {
    if (color2 === void 0) {
      color2 = "";
    }
    if (opts === void 0) {
      opts = {};
    }
    var _a2;
    if (color2 instanceof TinyColor2) {
      return color2;
    }
    if (typeof color2 === "number") {
      color2 = numberInputToObject(color2);
    }
    this.originalInput = color2;
    var rgb = inputToRGB(color2);
    this.originalInput = color2;
    this.r = rgb.r;
    this.g = rgb.g;
    this.b = rgb.b;
    this.a = rgb.a;
    this.roundA = Math.round(100 * this.a) / 100;
    this.format = (_a2 = opts.format) !== null && _a2 !== void 0 ? _a2 : rgb.format;
    this.gradientType = opts.gradientType;
    if (this.r < 1) {
      this.r = Math.round(this.r);
    }
    if (this.g < 1) {
      this.g = Math.round(this.g);
    }
    if (this.b < 1) {
      this.b = Math.round(this.b);
    }
    this.isValid = rgb.ok;
  }
  TinyColor2.prototype.isDark = function() {
    return this.getBrightness() < 128;
  };
  TinyColor2.prototype.isLight = function() {
    return !this.isDark();
  };
  TinyColor2.prototype.getBrightness = function() {
    var rgb = this.toRgb();
    return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1e3;
  };
  TinyColor2.prototype.getLuminance = function() {
    var rgb = this.toRgb();
    var R2;
    var G2;
    var B2;
    var RsRGB = rgb.r / 255;
    var GsRGB = rgb.g / 255;
    var BsRGB = rgb.b / 255;
    if (RsRGB <= 0.03928) {
      R2 = RsRGB / 12.92;
    } else {
      R2 = Math.pow((RsRGB + 0.055) / 1.055, 2.4);
    }
    if (GsRGB <= 0.03928) {
      G2 = GsRGB / 12.92;
    } else {
      G2 = Math.pow((GsRGB + 0.055) / 1.055, 2.4);
    }
    if (BsRGB <= 0.03928) {
      B2 = BsRGB / 12.92;
    } else {
      B2 = Math.pow((BsRGB + 0.055) / 1.055, 2.4);
    }
    return 0.2126 * R2 + 0.7152 * G2 + 0.0722 * B2;
  };
  TinyColor2.prototype.getAlpha = function() {
    return this.a;
  };
  TinyColor2.prototype.setAlpha = function(alpha2) {
    this.a = boundAlpha(alpha2);
    this.roundA = Math.round(100 * this.a) / 100;
    return this;
  };
  TinyColor2.prototype.toHsv = function() {
    var hsv = rgbToHsv(this.r, this.g, this.b);
    return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this.a };
  };
  TinyColor2.prototype.toHsvString = function() {
    var hsv = rgbToHsv(this.r, this.g, this.b);
    var h2 = Math.round(hsv.h * 360);
    var s = Math.round(hsv.s * 100);
    var v2 = Math.round(hsv.v * 100);
    return this.a === 1 ? "hsv(" + h2 + ", " + s + "%, " + v2 + "%)" : "hsva(" + h2 + ", " + s + "%, " + v2 + "%, " + this.roundA + ")";
  };
  TinyColor2.prototype.toHsl = function() {
    var hsl = rgbToHsl(this.r, this.g, this.b);
    return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this.a };
  };
  TinyColor2.prototype.toHslString = function() {
    var hsl = rgbToHsl(this.r, this.g, this.b);
    var h2 = Math.round(hsl.h * 360);
    var s = Math.round(hsl.s * 100);
    var l2 = Math.round(hsl.l * 100);
    return this.a === 1 ? "hsl(" + h2 + ", " + s + "%, " + l2 + "%)" : "hsla(" + h2 + ", " + s + "%, " + l2 + "%, " + this.roundA + ")";
  };
  TinyColor2.prototype.toHex = function(allow3Char) {
    if (allow3Char === void 0) {
      allow3Char = false;
    }
    return rgbToHex(this.r, this.g, this.b, allow3Char);
  };
  TinyColor2.prototype.toHexString = function(allow3Char) {
    if (allow3Char === void 0) {
      allow3Char = false;
    }
    return "#" + this.toHex(allow3Char);
  };
  TinyColor2.prototype.toHex8 = function(allow4Char) {
    if (allow4Char === void 0) {
      allow4Char = false;
    }
    return rgbaToHex(this.r, this.g, this.b, this.a, allow4Char);
  };
  TinyColor2.prototype.toHex8String = function(allow4Char) {
    if (allow4Char === void 0) {
      allow4Char = false;
    }
    return "#" + this.toHex8(allow4Char);
  };
  TinyColor2.prototype.toRgb = function() {
    return {
      r: Math.round(this.r),
      g: Math.round(this.g),
      b: Math.round(this.b),
      a: this.a
    };
  };
  TinyColor2.prototype.toRgbString = function() {
    var r2 = Math.round(this.r);
    var g2 = Math.round(this.g);
    var b2 = Math.round(this.b);
    return this.a === 1 ? "rgb(" + r2 + ", " + g2 + ", " + b2 + ")" : "rgba(" + r2 + ", " + g2 + ", " + b2 + ", " + this.roundA + ")";
  };
  TinyColor2.prototype.toPercentageRgb = function() {
    var fmt = function(x2) {
      return Math.round(bound01(x2, 255) * 100) + "%";
    };
    return {
      r: fmt(this.r),
      g: fmt(this.g),
      b: fmt(this.b),
      a: this.a
    };
  };
  TinyColor2.prototype.toPercentageRgbString = function() {
    var rnd = function(x2) {
      return Math.round(bound01(x2, 255) * 100);
    };
    return this.a === 1 ? "rgb(" + rnd(this.r) + "%, " + rnd(this.g) + "%, " + rnd(this.b) + "%)" : "rgba(" + rnd(this.r) + "%, " + rnd(this.g) + "%, " + rnd(this.b) + "%, " + this.roundA + ")";
  };
  TinyColor2.prototype.toName = function() {
    if (this.a === 0) {
      return "transparent";
    }
    if (this.a < 1) {
      return false;
    }
    var hex2 = "#" + rgbToHex(this.r, this.g, this.b, false);
    for (var _i = 0, _a2 = Object.entries(names$1); _i < _a2.length; _i++) {
      var _b = _a2[_i], key = _b[0], value = _b[1];
      if (hex2 === value) {
        return key;
      }
    }
    return false;
  };
  TinyColor2.prototype.toString = function(format2) {
    var formatSet = Boolean(format2);
    format2 = format2 !== null && format2 !== void 0 ? format2 : this.format;
    var formattedString = false;
    var hasAlpha = this.a < 1 && this.a >= 0;
    var needsAlphaFormat = !formatSet && hasAlpha && (format2.startsWith("hex") || format2 === "name");
    if (needsAlphaFormat) {
      if (format2 === "name" && this.a === 0) {
        return this.toName();
      }
      return this.toRgbString();
    }
    if (format2 === "rgb") {
      formattedString = this.toRgbString();
    }
    if (format2 === "prgb") {
      formattedString = this.toPercentageRgbString();
    }
    if (format2 === "hex" || format2 === "hex6") {
      formattedString = this.toHexString();
    }
    if (format2 === "hex3") {
      formattedString = this.toHexString(true);
    }
    if (format2 === "hex4") {
      formattedString = this.toHex8String(true);
    }
    if (format2 === "hex8") {
      formattedString = this.toHex8String();
    }
    if (format2 === "name") {
      formattedString = this.toName();
    }
    if (format2 === "hsl") {
      formattedString = this.toHslString();
    }
    if (format2 === "hsv") {
      formattedString = this.toHsvString();
    }
    return formattedString || this.toHexString();
  };
  TinyColor2.prototype.toNumber = function() {
    return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);
  };
  TinyColor2.prototype.clone = function() {
    return new TinyColor2(this.toString());
  };
  TinyColor2.prototype.lighten = function(amount) {
    if (amount === void 0) {
      amount = 10;
    }
    var hsl = this.toHsl();
    hsl.l += amount / 100;
    hsl.l = clamp01(hsl.l);
    return new TinyColor2(hsl);
  };
  TinyColor2.prototype.brighten = function(amount) {
    if (amount === void 0) {
      amount = 10;
    }
    var rgb = this.toRgb();
    rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));
    rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));
    rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));
    return new TinyColor2(rgb);
  };
  TinyColor2.prototype.darken = function(amount) {
    if (amount === void 0) {
      amount = 10;
    }
    var hsl = this.toHsl();
    hsl.l -= amount / 100;
    hsl.l = clamp01(hsl.l);
    return new TinyColor2(hsl);
  };
  TinyColor2.prototype.tint = function(amount) {
    if (amount === void 0) {
      amount = 10;
    }
    return this.mix("white", amount);
  };
  TinyColor2.prototype.shade = function(amount) {
    if (amount === void 0) {
      amount = 10;
    }
    return this.mix("black", amount);
  };
  TinyColor2.prototype.desaturate = function(amount) {
    if (amount === void 0) {
      amount = 10;
    }
    var hsl = this.toHsl();
    hsl.s -= amount / 100;
    hsl.s = clamp01(hsl.s);
    return new TinyColor2(hsl);
  };
  TinyColor2.prototype.saturate = function(amount) {
    if (amount === void 0) {
      amount = 10;
    }
    var hsl = this.toHsl();
    hsl.s += amount / 100;
    hsl.s = clamp01(hsl.s);
    return new TinyColor2(hsl);
  };
  TinyColor2.prototype.greyscale = function() {
    return this.desaturate(100);
  };
  TinyColor2.prototype.spin = function(amount) {
    var hsl = this.toHsl();
    var hue = (hsl.h + amount) % 360;
    hsl.h = hue < 0 ? 360 + hue : hue;
    return new TinyColor2(hsl);
  };
  TinyColor2.prototype.mix = function(color2, amount) {
    if (amount === void 0) {
      amount = 50;
    }
    var rgb1 = this.toRgb();
    var rgb2 = new TinyColor2(color2).toRgb();
    var p2 = amount / 100;
    var rgba2 = {
      r: (rgb2.r - rgb1.r) * p2 + rgb1.r,
      g: (rgb2.g - rgb1.g) * p2 + rgb1.g,
      b: (rgb2.b - rgb1.b) * p2 + rgb1.b,
      a: (rgb2.a - rgb1.a) * p2 + rgb1.a
    };
    return new TinyColor2(rgba2);
  };
  TinyColor2.prototype.analogous = function(results, slices) {
    if (results === void 0) {
      results = 6;
    }
    if (slices === void 0) {
      slices = 30;
    }
    var hsl = this.toHsl();
    var part = 360 / slices;
    var ret = [this];
    for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results; ) {
      hsl.h = (hsl.h + part) % 360;
      ret.push(new TinyColor2(hsl));
    }
    return ret;
  };
  TinyColor2.prototype.complement = function() {
    var hsl = this.toHsl();
    hsl.h = (hsl.h + 180) % 360;
    return new TinyColor2(hsl);
  };
  TinyColor2.prototype.monochromatic = function(results) {
    if (results === void 0) {
      results = 6;
    }
    var hsv = this.toHsv();
    var h2 = hsv.h;
    var s = hsv.s;
    var v2 = hsv.v;
    var res = [];
    var modification = 1 / results;
    while (results--) {
      res.push(new TinyColor2({ h: h2, s, v: v2 }));
      v2 = (v2 + modification) % 1;
    }
    return res;
  };
  TinyColor2.prototype.splitcomplement = function() {
    var hsl = this.toHsl();
    var h2 = hsl.h;
    return [
      this,
      new TinyColor2({ h: (h2 + 72) % 360, s: hsl.s, l: hsl.l }),
      new TinyColor2({ h: (h2 + 216) % 360, s: hsl.s, l: hsl.l })
    ];
  };
  TinyColor2.prototype.onBackground = function(background2) {
    var fg2 = this.toRgb();
    var bg2 = new TinyColor2(background2).toRgb();
    return new TinyColor2({
      r: bg2.r + (fg2.r - bg2.r) * fg2.a,
      g: bg2.g + (fg2.g - bg2.g) * fg2.a,
      b: bg2.b + (fg2.b - bg2.b) * fg2.a
    });
  };
  TinyColor2.prototype.triad = function() {
    return this.polyad(3);
  };
  TinyColor2.prototype.tetrad = function() {
    return this.polyad(4);
  };
  TinyColor2.prototype.polyad = function(n2) {
    var hsl = this.toHsl();
    var h2 = hsl.h;
    var result = [this];
    var increment = 360 / n2;
    for (var i = 1; i < n2; i++) {
      result.push(new TinyColor2({ h: (h2 + i * increment) % 360, s: hsl.s, l: hsl.l }));
    }
    return result;
  };
  TinyColor2.prototype.equals = function(color2) {
    return this.toRgbString() === new TinyColor2(color2).toRgbString();
  };
  return TinyColor2;
}();
function random(options) {
  if (options === void 0) {
    options = {};
  }
  if (options.count !== void 0 && options.count !== null) {
    var totalColors = options.count;
    var colors2 = [];
    options.count = void 0;
    while (totalColors > colors2.length) {
      options.count = null;
      if (options.seed) {
        options.seed += 1;
      }
      colors2.push(random(options));
    }
    options.count = totalColors;
    return colors2;
  }
  var h2 = pickHue(options.hue, options.seed);
  var s = pickSaturation(h2, options);
  var v2 = pickBrightness(h2, s, options);
  var res = { h: h2, s, v: v2 };
  if (options.alpha !== void 0) {
    res.a = options.alpha;
  }
  return new TinyColor(res);
}
function pickHue(hue, seed) {
  var hueRange = getHueRange(hue);
  var res = randomWithin(hueRange, seed);
  if (res < 0) {
    res = 360 + res;
  }
  return res;
}
function pickSaturation(hue, options) {
  if (options.hue === "monochrome") {
    return 0;
  }
  if (options.luminosity === "random") {
    return randomWithin([0, 100], options.seed);
  }
  var saturationRange = getColorInfo(hue).saturationRange;
  var sMin = saturationRange[0];
  var sMax = saturationRange[1];
  switch (options.luminosity) {
    case "bright":
      sMin = 55;
      break;
    case "dark":
      sMin = sMax - 10;
      break;
    case "light":
      sMax = 55;
      break;
  }
  return randomWithin([sMin, sMax], options.seed);
}
function pickBrightness(H2, S2, options) {
  var bMin = getMinimumBrightness(H2, S2);
  var bMax = 100;
  switch (options.luminosity) {
    case "dark":
      bMax = bMin + 20;
      break;
    case "light":
      bMin = (bMax + bMin) / 2;
      break;
    case "random":
      bMin = 0;
      bMax = 100;
      break;
  }
  return randomWithin([bMin, bMax], options.seed);
}
function getMinimumBrightness(H2, S2) {
  var lowerBounds = getColorInfo(H2).lowerBounds;
  for (var i = 0; i < lowerBounds.length - 1; i++) {
    var s1 = lowerBounds[i][0];
    var v1 = lowerBounds[i][1];
    var s2 = lowerBounds[i + 1][0];
    var v2 = lowerBounds[i + 1][1];
    if (S2 >= s1 && S2 <= s2) {
      var m2 = (v2 - v1) / (s2 - s1);
      var b2 = v1 - m2 * s1;
      return m2 * S2 + b2;
    }
  }
  return 0;
}
function getHueRange(colorInput) {
  var num = parseInt(colorInput, 10);
  if (!Number.isNaN(num) && num < 360 && num > 0) {
    return [num, num];
  }
  if (typeof colorInput === "string") {
    var namedColor = bounds.find(function(n2) {
      return n2.name === colorInput;
    });
    if (namedColor) {
      var color2 = defineColor(namedColor);
      if (color2.hueRange) {
        return color2.hueRange;
      }
    }
    var parsed = new TinyColor(colorInput);
    if (parsed.isValid) {
      var hue = parsed.toHsv().h;
      return [hue, hue];
    }
  }
  return [0, 360];
}
function getColorInfo(hue) {
  if (hue >= 334 && hue <= 360) {
    hue -= 360;
  }
  for (var _i = 0, bounds_1 = bounds; _i < bounds_1.length; _i++) {
    var bound = bounds_1[_i];
    var color2 = defineColor(bound);
    if (color2.hueRange && hue >= color2.hueRange[0] && hue <= color2.hueRange[1]) {
      return color2;
    }
  }
  throw Error("Color not found");
}
function randomWithin(range, seed) {
  if (seed === void 0) {
    return Math.floor(range[0] + Math.random() * (range[1] + 1 - range[0]));
  }
  var max = range[1] || 1;
  var min = range[0] || 0;
  seed = (seed * 9301 + 49297) % 233280;
  var rnd = seed / 233280;
  return Math.floor(min + rnd * (max - min));
}
function defineColor(bound) {
  var sMin = bound.lowerBounds[0][0];
  var sMax = bound.lowerBounds[bound.lowerBounds.length - 1][0];
  var bMin = bound.lowerBounds[bound.lowerBounds.length - 1][1];
  var bMax = bound.lowerBounds[0][1];
  return {
    name: bound.name,
    hueRange: bound.hueRange,
    lowerBounds: bound.lowerBounds,
    saturationRange: [sMin, sMax],
    brightnessRange: [bMin, bMax]
  };
}
var bounds = [
  {
    name: "monochrome",
    hueRange: null,
    lowerBounds: [
      [0, 0],
      [100, 0]
    ]
  },
  {
    name: "red",
    hueRange: [-26, 18],
    lowerBounds: [
      [20, 100],
      [30, 92],
      [40, 89],
      [50, 85],
      [60, 78],
      [70, 70],
      [80, 60],
      [90, 55],
      [100, 50]
    ]
  },
  {
    name: "orange",
    hueRange: [19, 46],
    lowerBounds: [
      [20, 100],
      [30, 93],
      [40, 88],
      [50, 86],
      [60, 85],
      [70, 70],
      [100, 70]
    ]
  },
  {
    name: "yellow",
    hueRange: [47, 62],
    lowerBounds: [
      [25, 100],
      [40, 94],
      [50, 89],
      [60, 86],
      [70, 84],
      [80, 82],
      [90, 80],
      [100, 75]
    ]
  },
  {
    name: "green",
    hueRange: [63, 178],
    lowerBounds: [
      [30, 100],
      [40, 90],
      [50, 85],
      [60, 81],
      [70, 74],
      [80, 64],
      [90, 50],
      [100, 40]
    ]
  },
  {
    name: "blue",
    hueRange: [179, 257],
    lowerBounds: [
      [20, 100],
      [30, 86],
      [40, 80],
      [50, 74],
      [60, 60],
      [70, 52],
      [80, 44],
      [90, 39],
      [100, 35]
    ]
  },
  {
    name: "purple",
    hueRange: [258, 282],
    lowerBounds: [
      [20, 100],
      [30, 87],
      [40, 79],
      [50, 70],
      [60, 65],
      [70, 59],
      [80, 52],
      [90, 45],
      [100, 42]
    ]
  },
  {
    name: "pink",
    hueRange: [283, 334],
    lowerBounds: [
      [20, 100],
      [30, 90],
      [40, 86],
      [60, 84],
      [80, 80],
      [90, 75],
      [100, 73]
    ]
  }
];
var getColor = function getColor2(theme2, color2, fallback) {
  var hex2 = memoizedGet(theme2, "colors." + color2, color2);
  var _TinyColor = new TinyColor(hex2), isValid = _TinyColor.isValid;
  return isValid ? hex2 : fallback;
};
var tone = function tone2(color2) {
  return function(theme2) {
    var hex2 = getColor(theme2, color2);
    var isDark3 = new TinyColor(hex2).isDark();
    return isDark3 ? "dark" : "light";
  };
};
var isDark = function isDark2(color2) {
  return function(theme2) {
    return tone(color2)(theme2) === "dark";
  };
};
var transparentize = function transparentize2(color2, opacity) {
  return function(theme2) {
    var raw = getColor(theme2, color2);
    return new TinyColor(raw).setAlpha(opacity).toRgbString();
  };
};
function generateStripe(size2, color2) {
  if (size2 === void 0) {
    size2 = "1rem";
  }
  if (color2 === void 0) {
    color2 = "rgba(255, 255, 255, 0.15)";
  }
  return {
    backgroundImage: "linear-gradient(\n    45deg,\n    " + color2 + " 25%,\n    transparent 25%,\n    transparent 50%,\n    " + color2 + " 50%,\n    " + color2 + " 75%,\n    transparent 75%,\n    transparent\n  )",
    backgroundSize: size2 + " " + size2
  };
}
function randomColor(opts) {
  var fallback = random().toHexString();
  if (!opts || isEmptyObject(opts)) {
    return fallback;
  }
  if (opts.string && opts.colors) {
    return randomColorFromList(opts.string, opts.colors);
  }
  if (opts.string && !opts.colors) {
    return randomColorFromString(opts.string);
  }
  if (opts.colors && !opts.string) {
    return randomFromList(opts.colors);
  }
  return fallback;
}
function randomColorFromString(str) {
  var hash2 = 0;
  if (str.length === 0)
    return hash2.toString();
  for (var i = 0; i < str.length; i += 1) {
    hash2 = str.charCodeAt(i) + ((hash2 << 5) - hash2);
    hash2 = hash2 & hash2;
  }
  var color2 = "#";
  for (var j2 = 0; j2 < 3; j2 += 1) {
    var value = hash2 >> j2 * 8 & 255;
    color2 += ("00" + value.toString(16)).substr(-2);
  }
  return color2;
}
function randomColorFromList(str, list2) {
  var index = 0;
  if (str.length === 0)
    return list2[0];
  for (var i = 0; i < str.length; i += 1) {
    index = str.charCodeAt(i) + ((index << 5) - index);
    index = index & index;
  }
  index = (index % list2.length + list2.length) % list2.length;
  return list2[index];
}
function randomFromList(list2) {
  return list2[Math.floor(Math.random() * list2.length)];
}
function mode(light, dark) {
  return function(props) {
    return props.colorMode === "dark" ? dark : light;
  };
}
function orient(options) {
  var orientation = options.orientation, vertical = options.vertical, horizontal = options.horizontal;
  if (!orientation)
    return {};
  return orientation === "vertical" ? vertical : horizontal;
}
function _extends$8() {
  _extends$8 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$8.apply(this, arguments);
}
var createBreakpoints = function createBreakpoints2(config2) {
  warn({
    condition: true,
    message: ["[chakra-ui]: createBreakpoints(...) will be deprecated pretty soon", "simply pass the breakpoints as an object. Remove the createBreakpoint(..) call"].join("")
  });
  return _extends$8({
    base: "0em"
  }, config2);
};
function _defineProperties$1(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$1(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$1(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$1(Constructor, staticProps);
  return Constructor;
}
var Anatomy = /* @__PURE__ */ function() {
  function Anatomy2(name) {
    var _this = this;
    this.map = {};
    this.called = false;
    this.assert = function() {
      if (!_this.called) {
        _this.called = true;
        return;
      }
      throw new Error("[anatomy] .part(...) should only be called once. Did you mean to use .extend(...) ?");
    };
    this.parts = function() {
      _this.assert();
      for (var _len = arguments.length, values2 = new Array(_len), _key = 0; _key < _len; _key++) {
        values2[_key] = arguments[_key];
      }
      for (var _i = 0, _values = values2; _i < _values.length; _i++) {
        var part = _values[_i];
        _this.map[part] = _this.toPart(part);
      }
      return _this;
    };
    this.extend = function() {
      for (var _len2 = arguments.length, parts = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        parts[_key2] = arguments[_key2];
      }
      for (var _i2 = 0, _parts = parts; _i2 < _parts.length; _i2++) {
        var part = _parts[_i2];
        if (part in _this.map)
          continue;
        _this.map[part] = _this.toPart(part);
      }
      return _this;
    };
    this.toPart = function(part) {
      var el = ["container", "root"].includes(part != null ? part : "") ? [_this.name] : [_this.name, part];
      var attr = el.filter(Boolean).join("__");
      var className = "chakra-" + attr;
      var partObj = {
        className,
        selector: "." + className,
        toString: function toString2() {
          return part;
        }
      };
      return partObj;
    };
    this.__type = {};
  }
  _createClass$1(Anatomy2, [{
    key: "selectors",
    get: function get6() {
      var value = fromEntries(Object.entries(this.map).map(function(_ref) {
        var key = _ref[0], part = _ref[1];
        return [key, part.selector];
      }));
      return value;
    }
  }, {
    key: "classNames",
    get: function get6() {
      var value = fromEntries(Object.entries(this.map).map(function(_ref2) {
        var key = _ref2[0], part = _ref2[1];
        return [key, part.className];
      }));
      return value;
    }
  }, {
    key: "keys",
    get: function get6() {
      return Object.keys(this.map);
    }
  }]);
  return Anatomy2;
}();
function anatomy(name) {
  return new Anatomy(name);
}
function toRef(operand) {
  if (isObject$1(operand) && operand.reference) {
    return operand.reference;
  }
  return String(operand);
}
var toExpr = function toExpr2(operator) {
  for (var _len = arguments.length, operands = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    operands[_key - 1] = arguments[_key];
  }
  return operands.map(toRef).join(" " + operator + " ").replace(/calc/g, "");
};
var _add = function add3() {
  for (var _len2 = arguments.length, operands = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    operands[_key2] = arguments[_key2];
  }
  return "calc(" + toExpr.apply(void 0, ["+"].concat(operands)) + ")";
};
var _subtract = function subtract3() {
  for (var _len3 = arguments.length, operands = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    operands[_key3] = arguments[_key3];
  }
  return "calc(" + toExpr.apply(void 0, ["-"].concat(operands)) + ")";
};
var _multiply = function multiply2() {
  for (var _len4 = arguments.length, operands = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
    operands[_key4] = arguments[_key4];
  }
  return "calc(" + toExpr.apply(void 0, ["*"].concat(operands)) + ")";
};
var _divide = function divide2() {
  for (var _len5 = arguments.length, operands = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
    operands[_key5] = arguments[_key5];
  }
  return "calc(" + toExpr.apply(void 0, ["/"].concat(operands)) + ")";
};
var _negate = function negate2(x2) {
  var value = toRef(x2);
  if (value != null && !Number.isNaN(parseFloat(value))) {
    return String(value).startsWith("-") ? String(value).slice(1) : "-" + value;
  }
  return _multiply(value, -1);
};
var calc = Object.assign(function(x2) {
  return {
    add: function add4() {
      for (var _len6 = arguments.length, operands = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        operands[_key6] = arguments[_key6];
      }
      return calc(_add.apply(void 0, [x2].concat(operands)));
    },
    subtract: function subtract4() {
      for (var _len7 = arguments.length, operands = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        operands[_key7] = arguments[_key7];
      }
      return calc(_subtract.apply(void 0, [x2].concat(operands)));
    },
    multiply: function multiply3() {
      for (var _len8 = arguments.length, operands = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
        operands[_key8] = arguments[_key8];
      }
      return calc(_multiply.apply(void 0, [x2].concat(operands)));
    },
    divide: function divide3() {
      for (var _len9 = arguments.length, operands = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
        operands[_key9] = arguments[_key9];
      }
      return calc(_divide.apply(void 0, [x2].concat(operands)));
    },
    negate: function negate3() {
      return calc(_negate(x2));
    },
    toString: function toString2() {
      return x2.toString();
    }
  };
}, {
  add: _add,
  subtract: _subtract,
  multiply: _multiply,
  divide: _divide,
  negate: _negate
});
function isDecimal(value) {
  return !Number.isInteger(parseFloat(value.toString()));
}
function replaceWhiteSpace(value, replaceValue) {
  if (replaceValue === void 0) {
    replaceValue = "-";
  }
  return value.replace(/\s+/g, replaceValue);
}
function escape(value) {
  var valueStr = replaceWhiteSpace(value.toString());
  if (valueStr.includes("\\."))
    return value;
  return isDecimal(value) ? valueStr.replace(".", "\\.") : value;
}
function addPrefix(value, prefix2) {
  if (prefix2 === void 0) {
    prefix2 = "";
  }
  return [prefix2, escape(value)].filter(Boolean).join("-");
}
function toVarRef(name, fallback) {
  return "var(" + escape(name) + (fallback ? ", " + fallback : "") + ")";
}
function toVar(value, prefix2) {
  if (prefix2 === void 0) {
    prefix2 = "";
  }
  return "--" + addPrefix(value, prefix2);
}
function cssVar(name, options) {
  var cssVariable = toVar(name, options == null ? void 0 : options.prefix);
  return {
    variable: cssVariable,
    reference: toVarRef(cssVariable, getFallback(options == null ? void 0 : options.fallback))
  };
}
function getFallback(fallback) {
  if (typeof fallback === "string")
    return fallback;
  return fallback == null ? void 0 : fallback.reference;
}
var accordionAnatomy = anatomy("accordion").parts("container", "item", "button", "panel").extend("icon");
var alertAnatomy = anatomy("alert").parts("title", "description", "container").extend("icon");
var avatarAnatomy = anatomy("avatar").parts("label", "badge", "container").extend("excessLabel", "group");
var breadcrumbAnatomy = anatomy("breadcrumb").parts("link", "item", "container").extend("separator");
anatomy("button").parts();
var checkboxAnatomy = anatomy("checkbox").parts("control", "icon", "container").extend("label");
anatomy("progress").parts("track", "filledTrack").extend("label");
var drawerAnatomy = anatomy("drawer").parts("overlay", "dialogContainer", "dialog").extend("header", "closeButton", "body", "footer");
var editableAnatomy = anatomy("editable").parts("preview", "input");
var formAnatomy = anatomy("form").parts("container", "requiredIndicator", "helperText");
var formErrorAnatomy = anatomy("formError").parts("text", "icon");
var inputAnatomy = anatomy("input").parts("addon", "field", "element");
var listAnatomy = anatomy("list").parts("container", "item", "icon");
var menuAnatomy = anatomy("menu").parts("button", "list", "item").extend("groupTitle", "command", "divider");
var modalAnatomy = anatomy("modal").parts("overlay", "dialogContainer", "dialog").extend("header", "closeButton", "body", "footer");
var numberInputAnatomy = anatomy("numberinput").parts("root", "field", "stepperGroup", "stepper");
anatomy("pininput").parts("field");
var popoverAnatomy = anatomy("popover").parts("content", "header", "body", "footer").extend("popper", "arrow", "closeButton");
var progressAnatomy = anatomy("progress").parts("label", "filledTrack", "track");
var radioAnatomy = anatomy("radio").parts("container", "control", "label");
var selectAnatomy = anatomy("select").parts("field", "icon");
var sliderAnatomy = anatomy("slider").parts("container", "track", "thumb", "filledTrack");
var statAnatomy = anatomy("stat").parts("container", "label", "helpText", "number", "icon");
var switchAnatomy = anatomy("switch").parts("container", "track", "thumb");
var tableAnatomy = anatomy("table").parts("table", "thead", "tbody", "tr", "th", "td", "tfoot", "caption");
var tabsAnatomy = anatomy("tabs").parts("root", "tab", "tablist", "tabpanel", "tabpanels", "indicator");
var tagAnatomy = anatomy("tag").parts("container", "label", "closeButton");
function _extends$7() {
  _extends$7 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$7.apply(this, arguments);
}
var baseStyleContainer$3 = {
  borderTopWidth: "1px",
  borderColor: "inherit",
  _last: {
    borderBottomWidth: "1px"
  }
};
var baseStyleButton$1 = {
  transitionProperty: "common",
  transitionDuration: "normal",
  fontSize: "1rem",
  _focus: {
    boxShadow: "outline"
  },
  _hover: {
    bg: "blackAlpha.50"
  },
  _disabled: {
    opacity: 0.4,
    cursor: "not-allowed"
  },
  px: 4,
  py: 2
};
var baseStylePanel = {
  pt: 2,
  px: 4,
  pb: 5
};
var baseStyleIcon$5 = {
  fontSize: "1.25em"
};
var baseStyle$D = {
  container: baseStyleContainer$3,
  button: baseStyleButton$1,
  panel: baseStylePanel,
  icon: baseStyleIcon$5
};
var Accordion = {
  parts: accordionAnatomy.keys,
  baseStyle: baseStyle$D
};
var baseStyle$C = {
  container: {
    px: 4,
    py: 3
  },
  title: {
    fontWeight: "bold",
    lineHeight: 6,
    marginEnd: 2
  },
  description: {
    lineHeight: 6
  },
  icon: {
    flexShrink: 0,
    marginEnd: 3,
    w: 5,
    h: 6
  }
};
function getBg(props) {
  var theme2 = props.theme, c2 = props.colorScheme;
  var lightBg = getColor(theme2, c2 + ".100", c2);
  var darkBg = transparentize(c2 + ".200", 0.16)(theme2);
  return mode(lightBg, darkBg)(props);
}
var variantSubtle$1 = function variantSubtle(props) {
  var c2 = props.colorScheme;
  return {
    container: {
      bg: getBg(props)
    },
    icon: {
      color: mode(c2 + ".500", c2 + ".200")(props)
    }
  };
};
var variantLeftAccent = function variantLeftAccent2(props) {
  var c2 = props.colorScheme;
  return {
    container: {
      paddingStart: 3,
      borderStartWidth: "4px",
      borderStartColor: mode(c2 + ".500", c2 + ".200")(props),
      bg: getBg(props)
    },
    icon: {
      color: mode(c2 + ".500", c2 + ".200")(props)
    }
  };
};
var variantTopAccent = function variantTopAccent2(props) {
  var c2 = props.colorScheme;
  return {
    container: {
      pt: 2,
      borderTopWidth: "4px",
      borderTopColor: mode(c2 + ".500", c2 + ".200")(props),
      bg: getBg(props)
    },
    icon: {
      color: mode(c2 + ".500", c2 + ".200")(props)
    }
  };
};
var variantSolid$3 = function variantSolid(props) {
  var c2 = props.colorScheme;
  return {
    container: {
      bg: mode(c2 + ".500", c2 + ".200")(props),
      color: mode("white", "gray.900")(props)
    }
  };
};
var variants$b = {
  subtle: variantSubtle$1,
  "left-accent": variantLeftAccent,
  "top-accent": variantTopAccent,
  solid: variantSolid$3
};
var defaultProps$n = {
  variant: "subtle",
  colorScheme: "blue"
};
var Alert = {
  parts: alertAnatomy.keys,
  baseStyle: baseStyle$C,
  variants: variants$b,
  defaultProps: defaultProps$n
};
var spacing = {
  px: "1px",
  0.5: "0.125rem",
  1: "0.25rem",
  1.5: "0.375rem",
  2: "0.5rem",
  2.5: "0.625rem",
  3: "0.75rem",
  3.5: "0.875rem",
  4: "1rem",
  5: "1.25rem",
  6: "1.5rem",
  7: "1.75rem",
  8: "2rem",
  9: "2.25rem",
  10: "2.5rem",
  12: "3rem",
  14: "3.5rem",
  16: "4rem",
  20: "5rem",
  24: "6rem",
  28: "7rem",
  32: "8rem",
  36: "9rem",
  40: "10rem",
  44: "11rem",
  48: "12rem",
  52: "13rem",
  56: "14rem",
  60: "15rem",
  64: "16rem",
  72: "18rem",
  80: "20rem",
  96: "24rem"
};
var largeSizes = {
  max: "max-content",
  min: "min-content",
  full: "100%",
  "3xs": "14rem",
  "2xs": "16rem",
  xs: "20rem",
  sm: "24rem",
  md: "28rem",
  lg: "32rem",
  xl: "36rem",
  "2xl": "42rem",
  "3xl": "48rem",
  "4xl": "56rem",
  "5xl": "64rem",
  "6xl": "72rem",
  "7xl": "80rem",
  "8xl": "90rem"
};
var container = {
  sm: "640px",
  md: "768px",
  lg: "1024px",
  xl: "1280px"
};
var sizes$l = _extends$7({}, spacing, largeSizes, {
  container
});
var sizes$m = sizes$l;
var baseStyleBadge = function baseStyleBadge2(props) {
  return {
    transform: "translate(25%, 25%)",
    borderRadius: "full",
    border: "0.2em solid",
    borderColor: mode("white", "gray.800")(props)
  };
};
var baseStyleExcessLabel = function baseStyleExcessLabel2(props) {
  return {
    bg: mode("gray.200", "whiteAlpha.400")(props)
  };
};
var baseStyleContainer$2 = function baseStyleContainer(props) {
  var name = props.name, theme2 = props.theme;
  var bg2 = name ? randomColor({
    string: name
  }) : "gray.400";
  var isBgDark = isDark(bg2)(theme2);
  var color2 = "white";
  if (!isBgDark)
    color2 = "gray.800";
  var borderColor = mode("white", "gray.800")(props);
  return {
    bg: bg2,
    color: color2,
    borderColor,
    verticalAlign: "top"
  };
};
var baseStyle$B = function baseStyle(props) {
  return {
    badge: baseStyleBadge(props),
    excessLabel: baseStyleExcessLabel(props),
    container: baseStyleContainer$2(props)
  };
};
function getSize$3(size2) {
  var themeSize = sizes$m[size2];
  return {
    container: {
      width: size2,
      height: size2,
      fontSize: "calc(" + (themeSize != null ? themeSize : size2) + " / 2.5)"
    },
    excessLabel: {
      width: size2,
      height: size2
    },
    label: {
      fontSize: "calc(" + (themeSize != null ? themeSize : size2) + " / 2.5)",
      lineHeight: size2 !== "100%" ? themeSize != null ? themeSize : size2 : void 0
    }
  };
}
var sizes$k = {
  "2xs": getSize$3("4"),
  xs: getSize$3("6"),
  sm: getSize$3("8"),
  md: getSize$3("12"),
  lg: getSize$3("16"),
  xl: getSize$3("24"),
  "2xl": getSize$3("32"),
  full: getSize$3("100%")
};
var defaultProps$m = {
  size: "md"
};
var Avatar = {
  parts: avatarAnatomy.keys,
  baseStyle: baseStyle$B,
  sizes: sizes$k,
  defaultProps: defaultProps$m
};
var baseStyle$A = {
  px: 1,
  textTransform: "uppercase",
  fontSize: "xs",
  borderRadius: "sm",
  fontWeight: "bold"
};
var variantSolid$2 = function variantSolid2(props) {
  var c2 = props.colorScheme, theme2 = props.theme;
  var dark = transparentize(c2 + ".500", 0.6)(theme2);
  return {
    bg: mode(c2 + ".500", dark)(props),
    color: mode("white", "whiteAlpha.800")(props)
  };
};
var variantSubtle2 = function variantSubtle3(props) {
  var c2 = props.colorScheme, theme2 = props.theme;
  var darkBg = transparentize(c2 + ".200", 0.16)(theme2);
  return {
    bg: mode(c2 + ".100", darkBg)(props),
    color: mode(c2 + ".800", c2 + ".200")(props)
  };
};
var variantOutline$2 = function variantOutline(props) {
  var c2 = props.colorScheme, theme2 = props.theme;
  var darkColor = transparentize(c2 + ".200", 0.8)(theme2);
  var lightColor = getColor(theme2, c2 + ".500");
  var color2 = mode(lightColor, darkColor)(props);
  return {
    color: color2,
    boxShadow: "inset 0 0 0px 1px " + color2
  };
};
var variants$a = {
  solid: variantSolid$2,
  subtle: variantSubtle2,
  outline: variantOutline$2
};
var defaultProps$l = {
  variant: "subtle",
  colorScheme: "gray"
};
var Badge$1 = {
  baseStyle: baseStyle$A,
  variants: variants$a,
  defaultProps: defaultProps$l
};
var baseStyleLink = {
  transitionProperty: "common",
  transitionDuration: "fast",
  transitionTimingFunction: "ease-out",
  cursor: "pointer",
  textDecoration: "none",
  outline: "none",
  color: "inherit",
  _hover: {
    textDecoration: "underline"
  },
  _focus: {
    boxShadow: "outline"
  }
};
var baseStyle$z = {
  link: baseStyleLink
};
var Breadcrumb = {
  parts: breadcrumbAnatomy.keys,
  baseStyle: baseStyle$z
};
var baseStyle$y = {
  lineHeight: "1.2",
  borderRadius: "md",
  fontWeight: "semibold",
  transitionProperty: "common",
  transitionDuration: "normal",
  _focus: {
    boxShadow: "outline"
  },
  _disabled: {
    opacity: 0.4,
    cursor: "not-allowed",
    boxShadow: "none"
  },
  _hover: {
    _disabled: {
      bg: "initial"
    }
  }
};
var variantGhost = function variantGhost2(props) {
  var c2 = props.colorScheme, theme2 = props.theme;
  if (c2 === "gray") {
    return {
      color: mode("inherit", "whiteAlpha.900")(props),
      _hover: {
        bg: mode("gray.100", "whiteAlpha.200")(props)
      },
      _active: {
        bg: mode("gray.200", "whiteAlpha.300")(props)
      }
    };
  }
  var darkHoverBg = transparentize(c2 + ".200", 0.12)(theme2);
  var darkActiveBg = transparentize(c2 + ".200", 0.24)(theme2);
  return {
    color: mode(c2 + ".600", c2 + ".200")(props),
    bg: "transparent",
    _hover: {
      bg: mode(c2 + ".50", darkHoverBg)(props)
    },
    _active: {
      bg: mode(c2 + ".100", darkActiveBg)(props)
    }
  };
};
var variantOutline$1 = function variantOutline2(props) {
  var c2 = props.colorScheme;
  var borderColor = mode("gray.200", "whiteAlpha.300")(props);
  return _extends$7({
    border: "1px solid",
    borderColor: c2 === "gray" ? borderColor : "currentColor"
  }, variantGhost(props));
};
var accessibleColorMap = {
  yellow: {
    bg: "yellow.400",
    color: "black",
    hoverBg: "yellow.500",
    activeBg: "yellow.600"
  },
  cyan: {
    bg: "cyan.400",
    color: "black",
    hoverBg: "cyan.500",
    activeBg: "cyan.600"
  }
};
var variantSolid$1 = function variantSolid3(props) {
  var _accessibleColorMap$c;
  var c2 = props.colorScheme;
  if (c2 === "gray") {
    var _bg = mode("gray.100", "whiteAlpha.200")(props);
    return {
      bg: _bg,
      _hover: {
        bg: mode("gray.200", "whiteAlpha.300")(props),
        _disabled: {
          bg: _bg
        }
      },
      _active: {
        bg: mode("gray.300", "whiteAlpha.400")(props)
      }
    };
  }
  var _ref = (_accessibleColorMap$c = accessibleColorMap[c2]) != null ? _accessibleColorMap$c : {}, _ref$bg = _ref.bg, bg2 = _ref$bg === void 0 ? c2 + ".500" : _ref$bg, _ref$color = _ref.color, color2 = _ref$color === void 0 ? "white" : _ref$color, _ref$hoverBg = _ref.hoverBg, hoverBg = _ref$hoverBg === void 0 ? c2 + ".600" : _ref$hoverBg, _ref$activeBg = _ref.activeBg, activeBg = _ref$activeBg === void 0 ? c2 + ".700" : _ref$activeBg;
  var background2 = mode(bg2, c2 + ".200")(props);
  return {
    bg: background2,
    color: mode(color2, "gray.800")(props),
    _hover: {
      bg: mode(hoverBg, c2 + ".300")(props),
      _disabled: {
        bg: background2
      }
    },
    _active: {
      bg: mode(activeBg, c2 + ".400")(props)
    }
  };
};
var variantLink = function variantLink2(props) {
  var c2 = props.colorScheme;
  return {
    padding: 0,
    height: "auto",
    lineHeight: "normal",
    verticalAlign: "baseline",
    color: mode(c2 + ".500", c2 + ".200")(props),
    _hover: {
      textDecoration: "underline",
      _disabled: {
        textDecoration: "none"
      }
    },
    _active: {
      color: mode(c2 + ".700", c2 + ".500")(props)
    }
  };
};
var variantUnstyled$2 = {
  bg: "none",
  color: "inherit",
  display: "inline",
  lineHeight: "inherit",
  m: 0,
  p: 0
};
var variants$9 = {
  ghost: variantGhost,
  outline: variantOutline$1,
  solid: variantSolid$1,
  link: variantLink,
  unstyled: variantUnstyled$2
};
var sizes$j = {
  lg: {
    h: 12,
    minW: 12,
    fontSize: "lg",
    px: 6
  },
  md: {
    h: 10,
    minW: 10,
    fontSize: "md",
    px: 4
  },
  sm: {
    h: 8,
    minW: 8,
    fontSize: "sm",
    px: 3
  },
  xs: {
    h: 6,
    minW: 6,
    fontSize: "xs",
    px: 2
  }
};
var defaultProps$k = {
  variant: "solid",
  size: "md",
  colorScheme: "gray"
};
var Button$1 = {
  baseStyle: baseStyle$y,
  variants: variants$9,
  sizes: sizes$j,
  defaultProps: defaultProps$k
};
var baseStyleControl$1 = function baseStyleControl(props) {
  var c2 = props.colorScheme;
  return {
    w: "100%",
    transitionProperty: "box-shadow",
    transitionDuration: "normal",
    border: "2px solid",
    borderRadius: "sm",
    borderColor: "inherit",
    color: "white",
    _checked: {
      bg: mode(c2 + ".500", c2 + ".200")(props),
      borderColor: mode(c2 + ".500", c2 + ".200")(props),
      color: mode("white", "gray.900")(props),
      _hover: {
        bg: mode(c2 + ".600", c2 + ".300")(props),
        borderColor: mode(c2 + ".600", c2 + ".300")(props)
      },
      _disabled: {
        borderColor: mode("gray.200", "transparent")(props),
        bg: mode("gray.200", "whiteAlpha.300")(props),
        color: mode("gray.500", "whiteAlpha.500")(props)
      }
    },
    _indeterminate: {
      bg: mode(c2 + ".500", c2 + ".200")(props),
      borderColor: mode(c2 + ".500", c2 + ".200")(props),
      color: mode("white", "gray.900")(props)
    },
    _disabled: {
      bg: mode("gray.100", "whiteAlpha.100")(props),
      borderColor: mode("gray.100", "transparent")(props)
    },
    _focus: {
      boxShadow: "outline"
    },
    _invalid: {
      borderColor: mode("red.500", "red.300")(props)
    }
  };
};
var baseStyleLabel$3 = {
  userSelect: "none",
  _disabled: {
    opacity: 0.4
  }
};
var baseStyleIcon$4 = {
  transitionProperty: "transform",
  transitionDuration: "normal"
};
var baseStyle$x = function baseStyle2(props) {
  return {
    icon: baseStyleIcon$4,
    control: baseStyleControl$1(props),
    label: baseStyleLabel$3
  };
};
var sizes$i = {
  sm: {
    control: {
      h: 3,
      w: 3
    },
    label: {
      fontSize: "sm"
    },
    icon: {
      fontSize: "0.45rem"
    }
  },
  md: {
    control: {
      w: 4,
      h: 4
    },
    label: {
      fontSize: "md"
    },
    icon: {
      fontSize: "0.625rem"
    }
  },
  lg: {
    control: {
      w: 5,
      h: 5
    },
    label: {
      fontSize: "lg"
    },
    icon: {
      fontSize: "0.625rem"
    }
  }
};
var defaultProps$j = {
  size: "md",
  colorScheme: "blue"
};
var Checkbox$1 = {
  parts: checkboxAnatomy.keys,
  baseStyle: baseStyle$x,
  sizes: sizes$i,
  defaultProps: defaultProps$j
};
var _lg$1, _md$1, _sm$1;
var $size$1 = cssVar("close-button-size");
var baseStyle$w = function baseStyle3(props) {
  var hoverBg = mode("blackAlpha.100", "whiteAlpha.100")(props);
  var activeBg = mode("blackAlpha.200", "whiteAlpha.200")(props);
  return {
    w: [$size$1.reference],
    h: [$size$1.reference],
    borderRadius: "md",
    transitionProperty: "common",
    transitionDuration: "normal",
    _disabled: {
      opacity: 0.4,
      cursor: "not-allowed",
      boxShadow: "none"
    },
    _hover: {
      bg: hoverBg
    },
    _active: {
      bg: activeBg
    },
    _focus: {
      boxShadow: "outline"
    }
  };
};
var sizes$h = {
  lg: (_lg$1 = {}, _lg$1[$size$1.variable] = "40px", _lg$1.fontSize = "16px", _lg$1),
  md: (_md$1 = {}, _md$1[$size$1.variable] = "32px", _md$1.fontSize = "12px", _md$1),
  sm: (_sm$1 = {}, _sm$1[$size$1.variable] = "24px", _sm$1.fontSize = "10px", _sm$1)
};
var defaultProps$i = {
  size: "md"
};
var CloseButton = {
  baseStyle: baseStyle$w,
  sizes: sizes$h,
  defaultProps: defaultProps$i
};
var variants$8 = Badge$1.variants, defaultProps$h = Badge$1.defaultProps;
var baseStyle$v = {
  fontFamily: "mono",
  fontSize: "sm",
  px: "0.2em",
  borderRadius: "sm"
};
var Code$1 = {
  baseStyle: baseStyle$v,
  variants: variants$8,
  defaultProps: defaultProps$h
};
var baseStyle$u = {
  w: "100%",
  mx: "auto",
  maxW: "60ch",
  px: "1rem"
};
var Container$1 = {
  baseStyle: baseStyle$u
};
var baseStyle$t = {
  opacity: 0.6,
  borderColor: "inherit"
};
var variantSolid4 = {
  borderStyle: "solid"
};
var variantDashed = {
  borderStyle: "dashed"
};
var variants$7 = {
  solid: variantSolid4,
  dashed: variantDashed
};
var defaultProps$g = {
  variant: "solid"
};
var Divider$1 = {
  baseStyle: baseStyle$t,
  variants: variants$7,
  defaultProps: defaultProps$g
};
function getSize$2(value) {
  if (value === "full") {
    return {
      dialog: {
        maxW: "100vw",
        h: "100vh"
      }
    };
  }
  return {
    dialog: {
      maxW: value
    }
  };
}
var baseStyleOverlay$1 = {
  bg: "blackAlpha.600",
  zIndex: "overlay"
};
var baseStyleDialogContainer$1 = {
  display: "flex",
  zIndex: "modal",
  justifyContent: "center"
};
var baseStyleDialog$1 = function baseStyleDialog(props) {
  var isFullHeight = props.isFullHeight;
  return _extends$7({}, isFullHeight && {
    height: "100vh"
  }, {
    zIndex: "modal",
    maxH: "100vh",
    bg: mode("white", "gray.700")(props),
    color: "inherit",
    boxShadow: mode("lg", "dark-lg")(props)
  });
};
var baseStyleHeader$2 = {
  px: 6,
  py: 4,
  fontSize: "xl",
  fontWeight: "semibold"
};
var baseStyleCloseButton$3 = {
  position: "absolute",
  top: 2,
  insetEnd: 3
};
var baseStyleBody$2 = {
  px: 6,
  py: 2,
  flex: 1,
  overflow: "auto"
};
var baseStyleFooter$2 = {
  px: 6,
  py: 4
};
var baseStyle$s = function baseStyle4(props) {
  return {
    overlay: baseStyleOverlay$1,
    dialogContainer: baseStyleDialogContainer$1,
    dialog: baseStyleDialog$1(props),
    header: baseStyleHeader$2,
    closeButton: baseStyleCloseButton$3,
    body: baseStyleBody$2,
    footer: baseStyleFooter$2
  };
};
var sizes$g = {
  xs: getSize$2("xs"),
  sm: getSize$2("md"),
  md: getSize$2("lg"),
  lg: getSize$2("2xl"),
  xl: getSize$2("4xl"),
  full: getSize$2("full")
};
var defaultProps$f = {
  size: "xs"
};
var Drawer = {
  parts: drawerAnatomy.keys,
  baseStyle: baseStyle$s,
  sizes: sizes$g,
  defaultProps: defaultProps$f
};
var baseStylePreview = {
  borderRadius: "md",
  py: "3px",
  transitionProperty: "common",
  transitionDuration: "normal"
};
var baseStyleInput = {
  borderRadius: "md",
  py: "3px",
  transitionProperty: "common",
  transitionDuration: "normal",
  width: "full",
  _focus: {
    boxShadow: "outline"
  },
  _placeholder: {
    opacity: 0.6
  }
};
var baseStyle$r = {
  preview: baseStylePreview,
  input: baseStyleInput
};
var Editable = {
  parts: editableAnatomy.keys,
  baseStyle: baseStyle$r
};
var baseStyleRequiredIndicator = function baseStyleRequiredIndicator2(props) {
  return {
    marginStart: 1,
    color: mode("red.500", "red.300")(props)
  };
};
var baseStyleHelperText = function baseStyleHelperText2(props) {
  return {
    mt: 2,
    color: mode("gray.500", "whiteAlpha.600")(props),
    lineHeight: "normal",
    fontSize: "sm"
  };
};
var baseStyle$q = function baseStyle5(props) {
  return {
    container: {
      width: "100%",
      position: "relative"
    },
    requiredIndicator: baseStyleRequiredIndicator(props),
    helperText: baseStyleHelperText(props)
  };
};
var Form = {
  parts: formAnatomy.keys,
  baseStyle: baseStyle$q
};
var baseStyle$p = {
  fontSize: "md",
  marginEnd: 3,
  mb: 2,
  fontWeight: "medium",
  transitionProperty: "common",
  transitionDuration: "normal",
  opacity: 1,
  _disabled: {
    opacity: 0.4
  }
};
var FormLabel = {
  baseStyle: baseStyle$p
};
var baseStyle$o = {
  fontFamily: "heading",
  fontWeight: "bold"
};
var sizes$f = {
  "4xl": {
    fontSize: ["6xl", null, "7xl"],
    lineHeight: 1
  },
  "3xl": {
    fontSize: ["5xl", null, "6xl"],
    lineHeight: 1
  },
  "2xl": {
    fontSize: ["4xl", null, "5xl"],
    lineHeight: [1.2, null, 1]
  },
  xl: {
    fontSize: ["3xl", null, "4xl"],
    lineHeight: [1.33, null, 1.2]
  },
  lg: {
    fontSize: ["2xl", null, "3xl"],
    lineHeight: [1.33, null, 1.2]
  },
  md: {
    fontSize: "xl",
    lineHeight: 1.2
  },
  sm: {
    fontSize: "md",
    lineHeight: 1.2
  },
  xs: {
    fontSize: "sm",
    lineHeight: 1.2
  }
};
var defaultProps$e = {
  size: "xl"
};
var Heading$1 = {
  baseStyle: baseStyle$o,
  sizes: sizes$f,
  defaultProps: defaultProps$e
};
var baseStyle$n = {
  field: {
    width: "100%",
    minWidth: 0,
    outline: 0,
    position: "relative",
    appearance: "none",
    transitionProperty: "common",
    transitionDuration: "normal"
  }
};
var size = {
  lg: {
    fontSize: "lg",
    px: 4,
    h: 12,
    borderRadius: "md"
  },
  md: {
    fontSize: "md",
    px: 4,
    h: 10,
    borderRadius: "md"
  },
  sm: {
    fontSize: "sm",
    px: 3,
    h: 8,
    borderRadius: "sm"
  },
  xs: {
    fontSize: "xs",
    px: 2,
    h: 6,
    borderRadius: "sm"
  }
};
var sizes$e = {
  lg: {
    field: size.lg,
    addon: size.lg
  },
  md: {
    field: size.md,
    addon: size.md
  },
  sm: {
    field: size.sm,
    addon: size.sm
  },
  xs: {
    field: size.xs,
    addon: size.xs
  }
};
function getDefaults(props) {
  var fc2 = props.focusBorderColor, ec2 = props.errorBorderColor;
  return {
    focusBorderColor: fc2 || mode("blue.500", "blue.300")(props),
    errorBorderColor: ec2 || mode("red.500", "red.300")(props)
  };
}
var variantOutline3 = function variantOutline4(props) {
  var theme2 = props.theme;
  var _getDefaults = getDefaults(props), fc2 = _getDefaults.focusBorderColor, ec2 = _getDefaults.errorBorderColor;
  return {
    field: {
      border: "1px solid",
      borderColor: "inherit",
      bg: "inherit",
      _hover: {
        borderColor: mode("gray.300", "whiteAlpha.400")(props)
      },
      _readOnly: {
        boxShadow: "none !important",
        userSelect: "all"
      },
      _disabled: {
        opacity: 0.4,
        cursor: "not-allowed"
      },
      _invalid: {
        borderColor: getColor(theme2, ec2),
        boxShadow: "0 0 0 1px " + getColor(theme2, ec2)
      },
      _focus: {
        zIndex: 1,
        borderColor: getColor(theme2, fc2),
        boxShadow: "0 0 0 1px " + getColor(theme2, fc2)
      }
    },
    addon: {
      border: "1px solid",
      borderColor: mode("inherit", "whiteAlpha.50")(props),
      bg: mode("gray.100", "whiteAlpha.300")(props)
    }
  };
};
var variantFilled = function variantFilled2(props) {
  var theme2 = props.theme;
  var _getDefaults2 = getDefaults(props), fc2 = _getDefaults2.focusBorderColor, ec2 = _getDefaults2.errorBorderColor;
  return {
    field: {
      border: "2px solid",
      borderColor: "transparent",
      bg: mode("gray.100", "whiteAlpha.50")(props),
      _hover: {
        bg: mode("gray.200", "whiteAlpha.100")(props)
      },
      _readOnly: {
        boxShadow: "none !important",
        userSelect: "all"
      },
      _disabled: {
        opacity: 0.4,
        cursor: "not-allowed"
      },
      _invalid: {
        borderColor: getColor(theme2, ec2)
      },
      _focus: {
        bg: "transparent",
        borderColor: getColor(theme2, fc2)
      }
    },
    addon: {
      border: "2px solid",
      borderColor: "transparent",
      bg: mode("gray.100", "whiteAlpha.50")(props)
    }
  };
};
var variantFlushed = function variantFlushed2(props) {
  var theme2 = props.theme;
  var _getDefaults3 = getDefaults(props), fc2 = _getDefaults3.focusBorderColor, ec2 = _getDefaults3.errorBorderColor;
  return {
    field: {
      borderBottom: "1px solid",
      borderColor: "inherit",
      borderRadius: 0,
      px: 0,
      bg: "transparent",
      _readOnly: {
        boxShadow: "none !important",
        userSelect: "all"
      },
      _invalid: {
        borderColor: getColor(theme2, ec2),
        boxShadow: "0px 1px 0px 0px " + getColor(theme2, ec2)
      },
      _focus: {
        borderColor: getColor(theme2, fc2),
        boxShadow: "0px 1px 0px 0px " + getColor(theme2, fc2)
      }
    },
    addon: {
      borderBottom: "2px solid",
      borderColor: "inherit",
      borderRadius: 0,
      px: 0,
      bg: "transparent"
    }
  };
};
var variantUnstyled$1 = {
  field: {
    bg: "transparent",
    px: 0,
    height: "auto"
  },
  addon: {
    bg: "transparent",
    px: 0,
    height: "auto"
  }
};
var variants$6 = {
  outline: variantOutline3,
  filled: variantFilled,
  flushed: variantFlushed,
  unstyled: variantUnstyled$1
};
var defaultProps$d = {
  size: "md",
  variant: "outline"
};
var Input = {
  parts: inputAnatomy.keys,
  baseStyle: baseStyle$n,
  sizes: sizes$e,
  variants: variants$6,
  defaultProps: defaultProps$d
};
var baseStyle$m = function baseStyle6(props) {
  return {
    bg: mode("gray.100", "whiteAlpha")(props),
    borderRadius: "md",
    borderWidth: "1px",
    borderBottomWidth: "3px",
    fontSize: "0.8em",
    fontWeight: "bold",
    lineHeight: "normal",
    px: "0.4em",
    whiteSpace: "nowrap"
  };
};
var Kbd$1 = {
  baseStyle: baseStyle$m
};
var baseStyle$l = {
  transitionProperty: "common",
  transitionDuration: "fast",
  transitionTimingFunction: "ease-out",
  cursor: "pointer",
  textDecoration: "none",
  outline: "none",
  color: "inherit",
  _hover: {
    textDecoration: "underline"
  },
  _focus: {
    boxShadow: "outline"
  }
};
var Link$1 = {
  baseStyle: baseStyle$l
};
var baseStyleIcon$3 = {
  marginEnd: "0.5rem",
  display: "inline",
  verticalAlign: "text-bottom"
};
var baseStyle$k = {
  container: {},
  item: {},
  icon: baseStyleIcon$3
};
var List$1 = {
  parts: listAnatomy.keys,
  baseStyle: baseStyle$k
};
var baseStyleList = function baseStyleList2(props) {
  return {
    bg: mode("#fff", "gray.700")(props),
    boxShadow: mode("sm", "dark-lg")(props),
    color: "inherit",
    minW: "3xs",
    py: "2",
    zIndex: 1,
    borderRadius: "md",
    borderWidth: "1px"
  };
};
var baseStyleItem = function baseStyleItem2(props) {
  return {
    py: "0.4rem",
    px: "0.8rem",
    transitionProperty: "background",
    transitionDuration: "ultra-fast",
    transitionTimingFunction: "ease-in",
    _focus: {
      bg: mode("gray.100", "whiteAlpha.100")(props)
    },
    _active: {
      bg: mode("gray.200", "whiteAlpha.200")(props)
    },
    _expanded: {
      bg: mode("gray.100", "whiteAlpha.100")(props)
    },
    _disabled: {
      opacity: 0.4,
      cursor: "not-allowed"
    }
  };
};
var baseStyleGroupTitle = {
  mx: 4,
  my: 2,
  fontWeight: "semibold",
  fontSize: "sm"
};
var baseStyleCommand = {
  opacity: 0.6
};
var baseStyleDivider = {
  border: 0,
  borderBottom: "1px solid",
  borderColor: "inherit",
  my: "0.5rem",
  opacity: 0.6
};
var baseStyleButton = {
  transitionProperty: "common",
  transitionDuration: "normal"
};
var baseStyle$j = function baseStyle7(props) {
  return {
    button: baseStyleButton,
    list: baseStyleList(props),
    item: baseStyleItem(props),
    groupTitle: baseStyleGroupTitle,
    command: baseStyleCommand,
    divider: baseStyleDivider
  };
};
var Menu = {
  parts: menuAnatomy.keys,
  baseStyle: baseStyle$j
};
var baseStyleOverlay = {
  bg: "blackAlpha.600",
  zIndex: "modal"
};
var baseStyleDialogContainer = function baseStyleDialogContainer2(props) {
  var isCentered = props.isCentered, scrollBehavior = props.scrollBehavior;
  return {
    display: "flex",
    zIndex: "modal",
    justifyContent: "center",
    alignItems: isCentered ? "center" : "flex-start",
    overflow: scrollBehavior === "inside" ? "hidden" : "auto"
  };
};
var baseStyleDialog2 = function baseStyleDialog3(props) {
  var scrollBehavior = props.scrollBehavior;
  return {
    borderRadius: "md",
    bg: mode("white", "gray.700")(props),
    color: "inherit",
    my: "3.75rem",
    zIndex: "modal",
    maxH: scrollBehavior === "inside" ? "calc(100% - 7.5rem)" : void 0,
    boxShadow: mode("lg", "dark-lg")(props)
  };
};
var baseStyleHeader$1 = {
  px: 6,
  py: 4,
  fontSize: "xl",
  fontWeight: "semibold"
};
var baseStyleCloseButton$2 = {
  position: "absolute",
  top: 2,
  insetEnd: 3
};
var baseStyleBody$1 = function baseStyleBody(props) {
  var scrollBehavior = props.scrollBehavior;
  return {
    px: 6,
    py: 2,
    flex: 1,
    overflow: scrollBehavior === "inside" ? "auto" : void 0
  };
};
var baseStyleFooter$1 = {
  px: 6,
  py: 4
};
var baseStyle$i = function baseStyle8(props) {
  return {
    overlay: baseStyleOverlay,
    dialogContainer: baseStyleDialogContainer(props),
    dialog: baseStyleDialog2(props),
    header: baseStyleHeader$1,
    closeButton: baseStyleCloseButton$2,
    body: baseStyleBody$1(props),
    footer: baseStyleFooter$1
  };
};
function getSize$1(value) {
  if (value === "full") {
    return {
      dialog: {
        maxW: "100vw",
        minH: "100vh",
        my: 0
      }
    };
  }
  return {
    dialog: {
      maxW: value
    }
  };
}
var sizes$d = {
  xs: getSize$1("xs"),
  sm: getSize$1("sm"),
  md: getSize$1("md"),
  lg: getSize$1("lg"),
  xl: getSize$1("xl"),
  "2xl": getSize$1("2xl"),
  "3xl": getSize$1("3xl"),
  "4xl": getSize$1("4xl"),
  "5xl": getSize$1("5xl"),
  "6xl": getSize$1("6xl"),
  full: getSize$1("full")
};
var defaultProps$c = {
  size: "md"
};
var Modal = {
  parts: modalAnatomy.keys,
  baseStyle: baseStyle$i,
  sizes: sizes$d,
  defaultProps: defaultProps$c
};
var typography = {
  letterSpacings: {
    tighter: "-0.05em",
    tight: "-0.025em",
    normal: "0",
    wide: "0.025em",
    wider: "0.05em",
    widest: "0.1em"
  },
  lineHeights: {
    normal: "normal",
    none: 1,
    shorter: 1.25,
    "short": 1.375,
    base: 1.5,
    tall: 1.625,
    taller: "2",
    "3": ".75rem",
    "4": "1rem",
    "5": "1.25rem",
    "6": "1.5rem",
    "7": "1.75rem",
    "8": "2rem",
    "9": "2.25rem",
    "10": "2.5rem"
  },
  fontWeights: {
    hairline: 100,
    thin: 200,
    light: 300,
    normal: 400,
    medium: 500,
    semibold: 600,
    bold: 700,
    extrabold: 800,
    black: 900
  },
  fonts: {
    heading: '-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
    body: '-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
    mono: 'SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace'
  },
  fontSizes: {
    xs: "0.75rem",
    sm: "0.875rem",
    md: "1rem",
    lg: "1.125rem",
    xl: "1.25rem",
    "2xl": "1.5rem",
    "3xl": "1.875rem",
    "4xl": "2.25rem",
    "5xl": "3rem",
    "6xl": "3.75rem",
    "7xl": "4.5rem",
    "8xl": "6rem",
    "9xl": "8rem"
  }
};
var typography$1 = typography;
var _baseStyleRoot, _Input$baseStyle$fiel, _Input$baseStyle;
var variants$5 = Input.variants, defaultProps$b = Input.defaultProps;
var $stepperWidth = cssVar("number-input-stepper-width");
var $inputPadding = cssVar("number-input-input-padding");
var inputPaddingValue = calc($stepperWidth).add("0.5rem").toString();
var baseStyleRoot$1 = (_baseStyleRoot = {}, _baseStyleRoot[$stepperWidth.variable] = "24px", _baseStyleRoot[$inputPadding.variable] = inputPaddingValue, _baseStyleRoot);
var baseStyleField$1 = (_Input$baseStyle$fiel = (_Input$baseStyle = Input.baseStyle) == null ? void 0 : _Input$baseStyle.field) != null ? _Input$baseStyle$fiel : {};
var baseStyleStepperGroup = {
  width: [$stepperWidth.reference]
};
var baseStyleStepper = function baseStyleStepper2(props) {
  return {
    borderStart: "1px solid",
    borderStartColor: mode("inherit", "whiteAlpha.300")(props),
    color: mode("inherit", "whiteAlpha.800")(props),
    _active: {
      bg: mode("gray.200", "whiteAlpha.300")(props)
    },
    _disabled: {
      opacity: 0.4,
      cursor: "not-allowed"
    }
  };
};
var baseStyle$h = function baseStyle9(props) {
  return {
    root: baseStyleRoot$1,
    field: baseStyleField$1,
    stepperGroup: baseStyleStepperGroup,
    stepper: baseStyleStepper(props)
  };
};
function getSize(size2) {
  var _sizeStyle$field$font, _sizeStyle$field;
  var sizeStyle = Input.sizes[size2];
  var radius = {
    lg: "md",
    md: "md",
    sm: "sm",
    xs: "sm"
  };
  var _fontSize = (_sizeStyle$field$font = (_sizeStyle$field = sizeStyle.field) == null ? void 0 : _sizeStyle$field.fontSize) != null ? _sizeStyle$field$font : "md";
  var fontSize = typography$1.fontSizes[_fontSize.toString()];
  return {
    field: _extends$7({}, sizeStyle.field, {
      paddingInlineEnd: $inputPadding.reference,
      verticalAlign: "top"
    }),
    stepper: {
      fontSize: calc(fontSize).multiply(0.75).toString(),
      _first: {
        borderTopEndRadius: radius[size2]
      },
      _last: {
        borderBottomEndRadius: radius[size2],
        mt: "-1px",
        borderTopWidth: 1
      }
    }
  };
}
var sizes$c = {
  xs: getSize("xs"),
  sm: getSize("sm"),
  md: getSize("md"),
  lg: getSize("lg")
};
var NumberInput = {
  parts: numberInputAnatomy.keys,
  baseStyle: baseStyle$h,
  sizes: sizes$c,
  variants: variants$5,
  defaultProps: defaultProps$b
};
var _Input$variants$unsty$1;
var baseStyle$g = _extends$7({}, Input.baseStyle.field, {
  textAlign: "center"
});
var sizes$b = {
  lg: {
    fontSize: "lg",
    w: 12,
    h: 12,
    borderRadius: "md"
  },
  md: {
    fontSize: "md",
    w: 10,
    h: 10,
    borderRadius: "md"
  },
  sm: {
    fontSize: "sm",
    w: 8,
    h: 8,
    borderRadius: "sm"
  },
  xs: {
    fontSize: "xs",
    w: 6,
    h: 6,
    borderRadius: "sm"
  }
};
var variants$4 = {
  outline: function outline2(props) {
    var _Input$variants$outli;
    return (_Input$variants$outli = Input.variants.outline(props).field) != null ? _Input$variants$outli : {};
  },
  flushed: function flushed(props) {
    var _Input$variants$flush;
    return (_Input$variants$flush = Input.variants.flushed(props).field) != null ? _Input$variants$flush : {};
  },
  filled: function filled(props) {
    var _Input$variants$fille;
    return (_Input$variants$fille = Input.variants.filled(props).field) != null ? _Input$variants$fille : {};
  },
  unstyled: (_Input$variants$unsty$1 = Input.variants.unstyled.field) != null ? _Input$variants$unsty$1 : {}
};
var defaultProps$a = Input.defaultProps;
var PinInput = {
  baseStyle: baseStyle$g,
  sizes: sizes$b,
  variants: variants$4,
  defaultProps: defaultProps$a
};
var $popperBg = cssVar("popper-bg");
var $arrowBg$1 = cssVar("popper-arrow-bg");
var $arrowShadowColor = cssVar("popper-arrow-shadow-color");
var baseStylePopper = {
  zIndex: 10
};
var baseStyleContent = function baseStyleContent2(props) {
  var _ref;
  var bg2 = mode("white", "gray.700")(props);
  var shadowColor = mode("gray.200", "whiteAlpha.300")(props);
  return _ref = {}, _ref[$popperBg.variable] = "colors." + bg2, _ref.bg = $popperBg.reference, _ref[$arrowBg$1.variable] = $popperBg.reference, _ref[$arrowShadowColor.variable] = "colors." + shadowColor, _ref.width = "xs", _ref.border = "1px solid", _ref.borderColor = "inherit", _ref.borderRadius = "md", _ref.boxShadow = "sm", _ref.zIndex = "inherit", _ref._focus = {
    outline: 0,
    boxShadow: "outline"
  }, _ref;
};
var baseStyleHeader = {
  px: 3,
  py: 2,
  borderBottomWidth: "1px"
};
var baseStyleBody2 = {
  px: 3,
  py: 2
};
var baseStyleFooter = {
  px: 3,
  py: 2,
  borderTopWidth: "1px"
};
var baseStyleCloseButton$1 = {
  position: "absolute",
  borderRadius: "md",
  top: 1,
  insetEnd: 2,
  padding: 2
};
var baseStyle$f = function baseStyle10(props) {
  return {
    popper: baseStylePopper,
    content: baseStyleContent(props),
    header: baseStyleHeader,
    body: baseStyleBody2,
    footer: baseStyleFooter,
    arrow: {},
    closeButton: baseStyleCloseButton$1
  };
};
var Popover = {
  parts: popoverAnatomy.keys,
  baseStyle: baseStyle$f
};
function filledStyle(props) {
  var c2 = props.colorScheme, t2 = props.theme, isIndeterminate = props.isIndeterminate, hasStripe = props.hasStripe;
  var stripeStyle = mode(generateStripe(), generateStripe("1rem", "rgba(0,0,0,0.1)"))(props);
  var bgColor = mode(c2 + ".500", c2 + ".200")(props);
  var gradient = "linear-gradient(\n    to right,\n    transparent 0%,\n    " + getColor(t2, bgColor) + " 50%,\n    transparent 100%\n  )";
  var addStripe = !isIndeterminate && hasStripe;
  return _extends$7({}, addStripe && stripeStyle, isIndeterminate ? {
    bgImage: gradient
  } : {
    bgColor
  });
}
var baseStyleLabel$2 = {
  lineHeight: "1",
  fontSize: "0.25em",
  fontWeight: "bold",
  color: "white"
};
var baseStyleTrack$2 = function baseStyleTrack(props) {
  return {
    bg: mode("gray.100", "whiteAlpha.300")(props)
  };
};
var baseStyleFilledTrack$1 = function baseStyleFilledTrack(props) {
  return _extends$7({
    transitionProperty: "common",
    transitionDuration: "slow"
  }, filledStyle(props));
};
var baseStyle$e = function baseStyle11(props) {
  return {
    label: baseStyleLabel$2,
    filledTrack: baseStyleFilledTrack$1(props),
    track: baseStyleTrack$2(props)
  };
};
var sizes$a = {
  xs: {
    track: {
      h: "0.25rem"
    }
  },
  sm: {
    track: {
      h: "0.5rem"
    }
  },
  md: {
    track: {
      h: "0.75rem"
    }
  },
  lg: {
    track: {
      h: "1rem"
    }
  }
};
var defaultProps$9 = {
  size: "md",
  colorScheme: "blue"
};
var Progress = {
  parts: progressAnatomy.keys,
  sizes: sizes$a,
  baseStyle: baseStyle$e,
  defaultProps: defaultProps$9
};
var baseStyleControl2 = function baseStyleControl3(props) {
  var _Checkbox$baseStyle = Checkbox$1.baseStyle(props), _Checkbox$baseStyle$c = _Checkbox$baseStyle.control, control = _Checkbox$baseStyle$c === void 0 ? {} : _Checkbox$baseStyle$c;
  return _extends$7({}, control, {
    borderRadius: "full",
    _checked: _extends$7({}, control["_checked"], {
      _before: {
        content: '""',
        display: "inline-block",
        pos: "relative",
        w: "50%",
        h: "50%",
        borderRadius: "50%",
        bg: "currentColor"
      }
    })
  });
};
var baseStyle$d = function baseStyle12(props) {
  return {
    label: Checkbox$1.baseStyle(props).label,
    control: baseStyleControl2(props)
  };
};
var sizes$9 = {
  md: {
    control: {
      w: 4,
      h: 4
    },
    label: {
      fontSize: "md"
    }
  },
  lg: {
    control: {
      w: 5,
      h: 5
    },
    label: {
      fontSize: "lg"
    }
  },
  sm: {
    control: {
      width: 3,
      height: 3
    },
    label: {
      fontSize: "sm"
    }
  }
};
var defaultProps$8 = {
  size: "md",
  colorScheme: "blue"
};
var Radio$1 = {
  parts: radioAnatomy.keys,
  baseStyle: baseStyle$d,
  sizes: sizes$9,
  defaultProps: defaultProps$8
};
var baseStyleField = function baseStyleField2(props) {
  return _extends$7({}, Input.baseStyle.field, {
    bg: mode("white", "gray.700")(props),
    appearance: "none",
    paddingBottom: "1px",
    lineHeight: "normal",
    "> option, > optgroup": {
      bg: mode("white", "gray.700")(props)
    }
  });
};
var baseStyleIcon$2 = {
  width: "1.5rem",
  height: "100%",
  insetEnd: "0.5rem",
  position: "relative",
  color: "currentColor",
  fontSize: "1.25rem",
  _disabled: {
    opacity: 0.5
  }
};
var baseStyle$c = function baseStyle13(props) {
  return {
    field: baseStyleField(props),
    icon: baseStyleIcon$2
  };
};
var iconSpacing = {
  paddingInlineEnd: "2rem"
};
var sizes$8 = mergeWith({}, Input.sizes, {
  lg: {
    field: iconSpacing
  },
  md: {
    field: iconSpacing
  },
  sm: {
    field: iconSpacing
  },
  xs: {
    field: iconSpacing,
    icon: {
      insetEnd: "0.25rem"
    }
  }
});
var Select = {
  parts: selectAnatomy.keys,
  baseStyle: baseStyle$c,
  sizes: sizes$8,
  variants: Input.variants,
  defaultProps: Input.defaultProps
};
var fade = function fade2(startColor, endColor) {
  return keyframes$2({
    from: {
      borderColor: startColor,
      background: startColor
    },
    to: {
      borderColor: endColor,
      background: endColor
    }
  });
};
var baseStyle$b = function baseStyle14(props) {
  var defaultStartColor = mode("gray.100", "gray.800")(props);
  var defaultEndColor = mode("gray.400", "gray.600")(props);
  var _props$startColor = props.startColor, startColor = _props$startColor === void 0 ? defaultStartColor : _props$startColor, _props$endColor = props.endColor, endColor = _props$endColor === void 0 ? defaultEndColor : _props$endColor, speed = props.speed, theme2 = props.theme;
  var start = getColor(theme2, startColor);
  var end = getColor(theme2, endColor);
  return {
    opacity: 0.7,
    borderRadius: "2px",
    borderColor: start,
    background: end,
    animation: speed + "s linear infinite alternate " + fade(start, end)
  };
};
var Skeleton = {
  baseStyle: baseStyle$b
};
var baseStyle$a = function baseStyle15(props) {
  return {
    borderRadius: "md",
    fontWeight: "semibold",
    _focus: {
      boxShadow: "outline",
      padding: "1rem",
      position: "fixed",
      top: "1.5rem",
      insetStart: "1.5rem",
      bg: mode("white", "gray.700")(props)
    }
  };
};
var SkipLink = {
  baseStyle: baseStyle$a
};
function thumbOrientation(props) {
  return orient({
    orientation: props.orientation,
    vertical: {
      left: "50%",
      transform: "translateX(-50%)",
      _active: {
        transform: "translateX(-50%) scale(1.15)"
      }
    },
    horizontal: {
      top: "50%",
      transform: "translateY(-50%)",
      _active: {
        transform: "translateY(-50%) scale(1.15)"
      }
    }
  });
}
var baseStyleContainer$1 = function baseStyleContainer2(props) {
  var orientation = props.orientation;
  return _extends$7({
    display: "inline-block",
    position: "relative",
    cursor: "pointer",
    _disabled: {
      opacity: 0.6,
      cursor: "default",
      pointerEvents: "none"
    }
  }, orient({
    orientation,
    vertical: {
      h: "100%"
    },
    horizontal: {
      w: "100%"
    }
  }));
};
var baseStyleTrack$1 = function baseStyleTrack2(props) {
  return {
    overflow: "hidden",
    borderRadius: "sm",
    bg: mode("gray.200", "whiteAlpha.200")(props),
    _disabled: {
      bg: mode("gray.300", "whiteAlpha.300")(props)
    }
  };
};
var baseStyleThumb$1 = function baseStyleThumb(props) {
  return _extends$7({
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    position: "absolute",
    outline: 0,
    zIndex: 1,
    borderRadius: "full",
    bg: "white",
    boxShadow: "base",
    border: "1px solid",
    borderColor: "transparent",
    transitionProperty: "transform",
    transitionDuration: "normal",
    _focus: {
      boxShadow: "outline"
    },
    _disabled: {
      bg: "gray.300"
    }
  }, thumbOrientation(props));
};
var baseStyleFilledTrack2 = function baseStyleFilledTrack3(props) {
  var c2 = props.colorScheme;
  return {
    width: "inherit",
    height: "inherit",
    bg: mode(c2 + ".500", c2 + ".200")(props)
  };
};
var baseStyle$9 = function baseStyle16(props) {
  return {
    container: baseStyleContainer$1(props),
    track: baseStyleTrack$1(props),
    thumb: baseStyleThumb$1(props),
    filledTrack: baseStyleFilledTrack2(props)
  };
};
var sizeLg = function sizeLg2(props) {
  return {
    thumb: {
      w: "16px",
      h: "16px"
    },
    track: orient({
      orientation: props.orientation,
      horizontal: {
        h: "4px"
      },
      vertical: {
        w: "4px"
      }
    })
  };
};
var sizeMd = function sizeMd2(props) {
  return {
    thumb: {
      w: "14px",
      h: "14px"
    },
    track: orient({
      orientation: props.orientation,
      horizontal: {
        h: "4px"
      },
      vertical: {
        w: "4px"
      }
    })
  };
};
var sizeSm = function sizeSm2(props) {
  return {
    thumb: {
      w: "10px",
      h: "10px"
    },
    track: orient({
      orientation: props.orientation,
      horizontal: {
        h: "2px"
      },
      vertical: {
        w: "2px"
      }
    })
  };
};
var sizes$7 = {
  lg: sizeLg,
  md: sizeMd,
  sm: sizeSm
};
var defaultProps$7 = {
  size: "md",
  colorScheme: "blue"
};
var Slider = {
  parts: sliderAnatomy.keys,
  sizes: sizes$7,
  baseStyle: baseStyle$9,
  defaultProps: defaultProps$7
};
var _xs, _sm, _md, _lg, _xl;
var $size = cssVar("spinner-size");
var baseStyle$8 = {
  width: [$size.reference],
  height: [$size.reference]
};
var sizes$6 = {
  xs: (_xs = {}, _xs[$size.variable] = "0.75rem", _xs),
  sm: (_sm = {}, _sm[$size.variable] = "1rem", _sm),
  md: (_md = {}, _md[$size.variable] = "1.5rem", _md),
  lg: (_lg = {}, _lg[$size.variable] = "2rem", _lg),
  xl: (_xl = {}, _xl[$size.variable] = "3rem", _xl)
};
var defaultProps$6 = {
  size: "md"
};
var Spinner$1 = {
  baseStyle: baseStyle$8,
  sizes: sizes$6,
  defaultProps: defaultProps$6
};
var baseStyleLabel$1 = {
  fontWeight: "medium"
};
var baseStyleHelpText = {
  opacity: 0.8,
  marginBottom: 2
};
var baseStyleNumber = {
  verticalAlign: "baseline",
  fontWeight: "semibold"
};
var baseStyleIcon$1 = {
  marginEnd: 1,
  w: "14px",
  h: "14px",
  verticalAlign: "middle"
};
var baseStyle$7 = {
  container: {},
  label: baseStyleLabel$1,
  helpText: baseStyleHelpText,
  number: baseStyleNumber,
  icon: baseStyleIcon$1
};
var sizes$5 = {
  md: {
    label: {
      fontSize: "sm"
    },
    helpText: {
      fontSize: "sm"
    },
    number: {
      fontSize: "2xl"
    }
  }
};
var defaultProps$5 = {
  size: "md"
};
var Stat = {
  parts: statAnatomy.keys,
  baseStyle: baseStyle$7,
  sizes: sizes$5,
  defaultProps: defaultProps$5
};
var _container2, _container3, _container4;
var $width = cssVar("switch-track-width");
var $height = cssVar("switch-track-height");
var $diff = cssVar("switch-track-diff");
var diffValue = calc.subtract($width, $height);
var $translateX = cssVar("switch-thumb-x");
var baseStyleTrack3 = function baseStyleTrack4(props) {
  var c2 = props.colorScheme;
  return {
    borderRadius: "full",
    p: "2px",
    width: [$width.reference],
    height: [$height.reference],
    transitionProperty: "common",
    transitionDuration: "fast",
    bg: mode("gray.300", "whiteAlpha.400")(props),
    _focus: {
      boxShadow: "outline"
    },
    _disabled: {
      opacity: 0.4,
      cursor: "not-allowed"
    },
    _checked: {
      bg: mode(c2 + ".500", c2 + ".200")(props)
    }
  };
};
var baseStyleThumb2 = {
  bg: "white",
  transitionProperty: "transform",
  transitionDuration: "normal",
  borderRadius: "inherit",
  width: [$height.reference],
  height: [$height.reference],
  _checked: {
    transform: "translateX(" + $translateX.reference + ")"
  }
};
var baseStyle$6 = function baseStyle17(props) {
  var _rtl, _container;
  return {
    container: (_container = {}, _container[$diff.variable] = diffValue, _container[$translateX.variable] = $diff.reference, _container._rtl = (_rtl = {}, _rtl[$translateX.variable] = calc($diff).negate().toString(), _rtl), _container),
    track: baseStyleTrack3(props),
    thumb: baseStyleThumb2
  };
};
var sizes$4 = {
  sm: {
    container: (_container2 = {}, _container2[$width.variable] = "1.375rem", _container2[$height.variable] = "0.75rem", _container2)
  },
  md: {
    container: (_container3 = {}, _container3[$width.variable] = "1.875rem", _container3[$height.variable] = "1rem", _container3)
  },
  lg: {
    container: (_container4 = {}, _container4[$width.variable] = "2.875rem", _container4[$height.variable] = "1.5rem", _container4)
  }
};
var defaultProps$4 = {
  size: "md",
  colorScheme: "blue"
};
var Switch = {
  parts: switchAnatomy.keys,
  baseStyle: baseStyle$6,
  sizes: sizes$4,
  defaultProps: defaultProps$4
};
var baseStyle$5 = {
  table: {
    fontVariantNumeric: "lining-nums tabular-nums",
    borderCollapse: "collapse",
    width: "full"
  },
  th: {
    fontFamily: "heading",
    fontWeight: "bold",
    textTransform: "uppercase",
    letterSpacing: "wider",
    textAlign: "start"
  },
  td: {
    textAlign: "start"
  },
  caption: {
    mt: 4,
    fontFamily: "heading",
    textAlign: "center",
    fontWeight: "medium"
  }
};
var numericStyles = {
  "&[data-is-numeric=true]": {
    textAlign: "end"
  }
};
var variantSimple = function variantSimple2(props) {
  var c2 = props.colorScheme;
  return {
    th: _extends$7({
      color: mode("gray.600", "gray.400")(props),
      borderBottom: "1px",
      borderColor: mode(c2 + ".100", c2 + ".700")(props)
    }, numericStyles),
    td: _extends$7({
      borderBottom: "1px",
      borderColor: mode(c2 + ".100", c2 + ".700")(props)
    }, numericStyles),
    caption: {
      color: mode("gray.600", "gray.100")(props)
    },
    tfoot: {
      tr: {
        "&:last-of-type": {
          th: {
            borderBottomWidth: 0
          }
        }
      }
    }
  };
};
var variantStripe = function variantStripe2(props) {
  var c2 = props.colorScheme;
  return {
    th: _extends$7({
      color: mode("gray.600", "gray.400")(props),
      borderBottom: "1px",
      borderColor: mode(c2 + ".100", c2 + ".700")(props)
    }, numericStyles),
    td: _extends$7({
      borderBottom: "1px",
      borderColor: mode(c2 + ".100", c2 + ".700")(props)
    }, numericStyles),
    caption: {
      color: mode("gray.600", "gray.100")(props)
    },
    tbody: {
      tr: {
        "&:nth-of-type(odd)": {
          "th, td": {
            borderBottomWidth: "1px",
            borderColor: mode(c2 + ".100", c2 + ".700")(props)
          },
          td: {
            background: mode(c2 + ".100", c2 + ".700")(props)
          }
        }
      }
    },
    tfoot: {
      tr: {
        "&:last-of-type": {
          th: {
            borderBottomWidth: 0
          }
        }
      }
    }
  };
};
var variants$3 = {
  simple: variantSimple,
  striped: variantStripe,
  unstyled: {}
};
var sizes$3 = {
  sm: {
    th: {
      px: "4",
      py: "1",
      lineHeight: "4",
      fontSize: "xs"
    },
    td: {
      px: "4",
      py: "2",
      fontSize: "sm",
      lineHeight: "4"
    },
    caption: {
      px: "4",
      py: "2",
      fontSize: "xs"
    }
  },
  md: {
    th: {
      px: "6",
      py: "3",
      lineHeight: "4",
      fontSize: "xs"
    },
    td: {
      px: "6",
      py: "4",
      lineHeight: "5"
    },
    caption: {
      px: "6",
      py: "2",
      fontSize: "sm"
    }
  },
  lg: {
    th: {
      px: "8",
      py: "4",
      lineHeight: "5",
      fontSize: "sm"
    },
    td: {
      px: "8",
      py: "5",
      lineHeight: "6"
    },
    caption: {
      px: "6",
      py: "2",
      fontSize: "md"
    }
  }
};
var defaultProps$3 = {
  variant: "simple",
  size: "md",
  colorScheme: "gray"
};
var Table = {
  parts: tableAnatomy.keys,
  baseStyle: baseStyle$5,
  variants: variants$3,
  sizes: sizes$3,
  defaultProps: defaultProps$3
};
var baseStyleRoot = function baseStyleRoot2(props) {
  var orientation = props.orientation;
  return {
    display: orientation === "vertical" ? "flex" : "block"
  };
};
var baseStyleTab = function baseStyleTab2(props) {
  var isFitted = props.isFitted;
  return {
    flex: isFitted ? 1 : void 0,
    transitionProperty: "common",
    transitionDuration: "normal",
    _focus: {
      zIndex: 1,
      boxShadow: "outline"
    }
  };
};
var baseStyleTablist = function baseStyleTablist2(props) {
  var _props$align = props.align, align = _props$align === void 0 ? "start" : _props$align, orientation = props.orientation;
  var alignments = {
    end: "flex-end",
    center: "center",
    start: "flex-start"
  };
  return {
    justifyContent: alignments[align],
    flexDirection: orientation === "vertical" ? "column" : "row"
  };
};
var baseStyleTabpanel = {
  p: 4
};
var baseStyle$4 = function baseStyle18(props) {
  return {
    root: baseStyleRoot(props),
    tab: baseStyleTab(props),
    tablist: baseStyleTablist(props),
    tabpanel: baseStyleTabpanel
  };
};
var sizes$2 = {
  sm: {
    tab: {
      py: 1,
      px: 4,
      fontSize: "sm"
    }
  },
  md: {
    tab: {
      fontSize: "md",
      py: 2,
      px: 4
    }
  },
  lg: {
    tab: {
      fontSize: "lg",
      py: 3,
      px: 4
    }
  }
};
var variantLine = function variantLine2(props) {
  var _tablist, _tab;
  var c2 = props.colorScheme, orientation = props.orientation;
  var isVertical = orientation === "vertical";
  var borderProp = orientation === "vertical" ? "borderStart" : "borderBottom";
  var marginProp = isVertical ? "marginStart" : "marginBottom";
  return {
    tablist: (_tablist = {}, _tablist[borderProp] = "2px solid", _tablist.borderColor = "inherit", _tablist),
    tab: (_tab = {}, _tab[borderProp] = "2px solid", _tab.borderColor = "transparent", _tab[marginProp] = "-2px", _tab._selected = {
      color: mode(c2 + ".600", c2 + ".300")(props),
      borderColor: "currentColor"
    }, _tab._active = {
      bg: mode("gray.200", "whiteAlpha.300")(props)
    }, _tab._disabled = {
      opacity: 0.4,
      cursor: "not-allowed"
    }, _tab)
  };
};
var variantEnclosed = function variantEnclosed2(props) {
  var c2 = props.colorScheme;
  return {
    tab: {
      borderTopRadius: "md",
      border: "1px solid",
      borderColor: "transparent",
      mb: "-1px",
      _selected: {
        color: mode(c2 + ".600", c2 + ".300")(props),
        borderColor: "inherit",
        borderBottomColor: mode("white", "gray.800")(props)
      }
    },
    tablist: {
      mb: "-1px",
      borderBottom: "1px solid",
      borderColor: "inherit"
    }
  };
};
var variantEnclosedColored = function variantEnclosedColored2(props) {
  var c2 = props.colorScheme;
  return {
    tab: {
      border: "1px solid",
      borderColor: "inherit",
      bg: mode("gray.50", "whiteAlpha.50")(props),
      mb: "-1px",
      _notLast: {
        marginEnd: "-1px"
      },
      _selected: {
        bg: mode("#fff", "gray.800")(props),
        color: mode(c2 + ".600", c2 + ".300")(props),
        borderColor: "inherit",
        borderTopColor: "currentColor",
        borderBottomColor: "transparent"
      }
    },
    tablist: {
      mb: "-1px",
      borderBottom: "1px solid",
      borderColor: "inherit"
    }
  };
};
var variantSoftRounded = function variantSoftRounded2(props) {
  var c2 = props.colorScheme, theme2 = props.theme;
  return {
    tab: {
      borderRadius: "full",
      fontWeight: "semibold",
      color: "gray.600",
      _selected: {
        color: getColor(theme2, c2 + ".700"),
        bg: getColor(theme2, c2 + ".100")
      }
    }
  };
};
var variantSolidRounded = function variantSolidRounded2(props) {
  var c2 = props.colorScheme;
  return {
    tab: {
      borderRadius: "full",
      fontWeight: "semibold",
      color: mode("gray.600", "inherit")(props),
      _selected: {
        color: mode("#fff", "gray.800")(props),
        bg: mode(c2 + ".600", c2 + ".300")(props)
      }
    }
  };
};
var variantUnstyled = {};
var variants$2 = {
  line: variantLine,
  enclosed: variantEnclosed,
  "enclosed-colored": variantEnclosedColored,
  "soft-rounded": variantSoftRounded,
  "solid-rounded": variantSolidRounded,
  unstyled: variantUnstyled
};
var defaultProps$2 = {
  size: "md",
  variant: "line",
  colorScheme: "blue"
};
var Tabs = {
  parts: tabsAnatomy.keys,
  baseStyle: baseStyle$4,
  sizes: sizes$2,
  variants: variants$2,
  defaultProps: defaultProps$2
};
var baseStyleContainer3 = {
  fontWeight: "medium",
  lineHeight: 1.2,
  outline: 0,
  _focus: {
    boxShadow: "outline"
  }
};
var baseStyleLabel = {
  lineHeight: 1.2,
  overflow: "visible"
};
var baseStyleCloseButton = {
  fontSize: "18px",
  w: "1.25rem",
  h: "1.25rem",
  transitionProperty: "common",
  transitionDuration: "normal",
  borderRadius: "full",
  marginStart: "0.375rem",
  marginEnd: "-1",
  opacity: 0.5,
  _disabled: {
    opacity: 0.4
  },
  _focus: {
    boxShadow: "outline",
    bg: "rgba(0, 0, 0, 0.14)"
  },
  _hover: {
    opacity: 0.8
  },
  _active: {
    opacity: 1
  }
};
var baseStyle$3 = {
  container: baseStyleContainer3,
  label: baseStyleLabel,
  closeButton: baseStyleCloseButton
};
var sizes$1 = {
  sm: {
    container: {
      minH: "1.25rem",
      minW: "1.25rem",
      fontSize: "xs",
      px: 2,
      borderRadius: "md"
    },
    closeButton: {
      marginEnd: "-2px",
      marginStart: "0.35rem"
    }
  },
  md: {
    container: {
      minH: "1.5rem",
      minW: "1.5rem",
      fontSize: "sm",
      borderRadius: "md",
      px: 2
    }
  },
  lg: {
    container: {
      minH: 8,
      minW: 8,
      fontSize: "md",
      borderRadius: "md",
      px: 3
    }
  }
};
var variants$1 = {
  subtle: function subtle(props) {
    return {
      container: Badge$1.variants.subtle(props)
    };
  },
  solid: function solid(props) {
    return {
      container: Badge$1.variants.solid(props)
    };
  },
  outline: function outline3(props) {
    return {
      container: Badge$1.variants.outline(props)
    };
  }
};
var defaultProps$1 = {
  size: "md",
  variant: "subtle",
  colorScheme: "gray"
};
var Tag = {
  parts: tagAnatomy.keys,
  variants: variants$1,
  baseStyle: baseStyle$3,
  sizes: sizes$1,
  defaultProps: defaultProps$1
};
var _Input$variants$unsty, _Input$sizes$xs$field, _Input$sizes$sm$field, _Input$sizes$md$field, _Input$sizes$lg$field;
var baseStyle$2 = _extends$7({}, Input.baseStyle.field, {
  paddingY: "8px",
  minHeight: "80px",
  lineHeight: "short",
  verticalAlign: "top"
});
var variants = {
  outline: function outline4(props) {
    var _Input$variants$outli;
    return (_Input$variants$outli = Input.variants.outline(props).field) != null ? _Input$variants$outli : {};
  },
  flushed: function flushed2(props) {
    var _Input$variants$flush;
    return (_Input$variants$flush = Input.variants.flushed(props).field) != null ? _Input$variants$flush : {};
  },
  filled: function filled2(props) {
    var _Input$variants$fille;
    return (_Input$variants$fille = Input.variants.filled(props).field) != null ? _Input$variants$fille : {};
  },
  unstyled: (_Input$variants$unsty = Input.variants.unstyled.field) != null ? _Input$variants$unsty : {}
};
var sizes = {
  xs: (_Input$sizes$xs$field = Input.sizes.xs.field) != null ? _Input$sizes$xs$field : {},
  sm: (_Input$sizes$sm$field = Input.sizes.sm.field) != null ? _Input$sizes$sm$field : {},
  md: (_Input$sizes$md$field = Input.sizes.md.field) != null ? _Input$sizes$md$field : {},
  lg: (_Input$sizes$lg$field = Input.sizes.lg.field) != null ? _Input$sizes$lg$field : {}
};
var defaultProps = {
  size: "md",
  variant: "outline"
};
var Textarea = {
  baseStyle: baseStyle$2,
  sizes,
  variants,
  defaultProps
};
var $bg = cssVar("tooltip-bg");
var $arrowBg = cssVar("popper-arrow-bg");
var baseStyle$1 = function baseStyle19(props) {
  var _ref;
  var bg2 = mode("gray.700", "gray.300")(props);
  return _ref = {}, _ref[$bg.variable] = "colors." + bg2, _ref.px = "8px", _ref.py = "2px", _ref.bg = [$bg.reference], _ref[$arrowBg.variable] = [$bg.reference], _ref.color = mode("whiteAlpha.900", "gray.900")(props), _ref.borderRadius = "sm", _ref.fontWeight = "medium", _ref.fontSize = "sm", _ref.boxShadow = "md", _ref.maxW = "320px", _ref.zIndex = "tooltip", _ref;
};
var Tooltip = {
  baseStyle: baseStyle$1
};
var baseStyleText = function baseStyleText2(props) {
  return {
    color: mode("red.500", "red.300")(props),
    mt: 2,
    fontSize: "sm"
  };
};
var baseStyleIcon = function baseStyleIcon2(props) {
  return {
    marginEnd: "0.5em",
    color: mode("red.500", "red.300")(props)
  };
};
var baseStyle20 = function baseStyle21(props) {
  return {
    text: baseStyleText(props),
    icon: baseStyleIcon(props)
  };
};
var FormError = {
  parts: formErrorAnatomy.keys,
  baseStyle: baseStyle20
};
var components = {
  Accordion,
  Alert,
  Avatar,
  Badge: Badge$1,
  Breadcrumb,
  Button: Button$1,
  Checkbox: Checkbox$1,
  CloseButton,
  Code: Code$1,
  Container: Container$1,
  Divider: Divider$1,
  Drawer,
  Editable,
  Form,
  FormLabel,
  Heading: Heading$1,
  Input,
  Kbd: Kbd$1,
  Link: Link$1,
  List: List$1,
  Menu,
  Modal,
  NumberInput,
  PinInput,
  Popover,
  Progress,
  Radio: Radio$1,
  Select,
  Skeleton,
  SkipLink,
  Slider,
  Spinner: Spinner$1,
  Stat,
  Switch,
  Table,
  Tabs,
  Tag,
  Textarea,
  Tooltip,
  FormError
};
var borders = {
  none: 0,
  "1px": "1px solid",
  "2px": "2px solid",
  "4px": "4px solid",
  "8px": "8px solid"
};
var borders$1 = borders;
var breakpoints = createBreakpoints({
  sm: "30em",
  md: "48em",
  lg: "62em",
  xl: "80em",
  "2xl": "96em"
});
var breakpoints$1 = breakpoints;
var colors = {
  transparent: "transparent",
  current: "currentColor",
  black: "#000000",
  white: "#FFFFFF",
  whiteAlpha: {
    50: "rgba(255, 255, 255, 0.04)",
    100: "rgba(255, 255, 255, 0.06)",
    200: "rgba(255, 255, 255, 0.08)",
    300: "rgba(255, 255, 255, 0.16)",
    400: "rgba(255, 255, 255, 0.24)",
    500: "rgba(255, 255, 255, 0.36)",
    600: "rgba(255, 255, 255, 0.48)",
    700: "rgba(255, 255, 255, 0.64)",
    800: "rgba(255, 255, 255, 0.80)",
    900: "rgba(255, 255, 255, 0.92)"
  },
  blackAlpha: {
    50: "rgba(0, 0, 0, 0.04)",
    100: "rgba(0, 0, 0, 0.06)",
    200: "rgba(0, 0, 0, 0.08)",
    300: "rgba(0, 0, 0, 0.16)",
    400: "rgba(0, 0, 0, 0.24)",
    500: "rgba(0, 0, 0, 0.36)",
    600: "rgba(0, 0, 0, 0.48)",
    700: "rgba(0, 0, 0, 0.64)",
    800: "rgba(0, 0, 0, 0.80)",
    900: "rgba(0, 0, 0, 0.92)"
  },
  gray: {
    50: "#F7FAFC",
    100: "#EDF2F7",
    200: "#E2E8F0",
    300: "#CBD5E0",
    400: "#A0AEC0",
    500: "#718096",
    600: "#4A5568",
    700: "#2D3748",
    800: "#1A202C",
    900: "#171923"
  },
  red: {
    50: "#FFF5F5",
    100: "#FED7D7",
    200: "#FEB2B2",
    300: "#FC8181",
    400: "#F56565",
    500: "#E53E3E",
    600: "#C53030",
    700: "#9B2C2C",
    800: "#822727",
    900: "#63171B"
  },
  orange: {
    50: "#FFFAF0",
    100: "#FEEBC8",
    200: "#FBD38D",
    300: "#F6AD55",
    400: "#ED8936",
    500: "#DD6B20",
    600: "#C05621",
    700: "#9C4221",
    800: "#7B341E",
    900: "#652B19"
  },
  yellow: {
    50: "#FFFFF0",
    100: "#FEFCBF",
    200: "#FAF089",
    300: "#F6E05E",
    400: "#ECC94B",
    500: "#D69E2E",
    600: "#B7791F",
    700: "#975A16",
    800: "#744210",
    900: "#5F370E"
  },
  green: {
    50: "#F0FFF4",
    100: "#C6F6D5",
    200: "#9AE6B4",
    300: "#68D391",
    400: "#48BB78",
    500: "#38A169",
    600: "#2F855A",
    700: "#276749",
    800: "#22543D",
    900: "#1C4532"
  },
  teal: {
    50: "#E6FFFA",
    100: "#B2F5EA",
    200: "#81E6D9",
    300: "#4FD1C5",
    400: "#38B2AC",
    500: "#319795",
    600: "#2C7A7B",
    700: "#285E61",
    800: "#234E52",
    900: "#1D4044"
  },
  blue: {
    50: "#ebf8ff",
    100: "#bee3f8",
    200: "#90cdf4",
    300: "#63b3ed",
    400: "#4299e1",
    500: "#3182ce",
    600: "#2b6cb0",
    700: "#2c5282",
    800: "#2a4365",
    900: "#1A365D"
  },
  cyan: {
    50: "#EDFDFD",
    100: "#C4F1F9",
    200: "#9DECF9",
    300: "#76E4F7",
    400: "#0BC5EA",
    500: "#00B5D8",
    600: "#00A3C4",
    700: "#0987A0",
    800: "#086F83",
    900: "#065666"
  },
  purple: {
    50: "#FAF5FF",
    100: "#E9D8FD",
    200: "#D6BCFA",
    300: "#B794F4",
    400: "#9F7AEA",
    500: "#805AD5",
    600: "#6B46C1",
    700: "#553C9A",
    800: "#44337A",
    900: "#322659"
  },
  pink: {
    50: "#FFF5F7",
    100: "#FED7E2",
    200: "#FBB6CE",
    300: "#F687B3",
    400: "#ED64A6",
    500: "#D53F8C",
    600: "#B83280",
    700: "#97266D",
    800: "#702459",
    900: "#521B41"
  },
  linkedin: {
    50: "#E8F4F9",
    100: "#CFEDFB",
    200: "#9BDAF3",
    300: "#68C7EC",
    400: "#34B3E4",
    500: "#00A0DC",
    600: "#008CC9",
    700: "#0077B5",
    800: "#005E93",
    900: "#004471"
  },
  facebook: {
    50: "#E8F4F9",
    100: "#D9DEE9",
    200: "#B7C2DA",
    300: "#6482C0",
    400: "#4267B2",
    500: "#385898",
    600: "#314E89",
    700: "#29487D",
    800: "#223B67",
    900: "#1E355B"
  },
  messenger: {
    50: "#D0E6FF",
    100: "#B9DAFF",
    200: "#A2CDFF",
    300: "#7AB8FF",
    400: "#2E90FF",
    500: "#0078FF",
    600: "#0063D1",
    700: "#0052AC",
    800: "#003C7E",
    900: "#002C5C"
  },
  whatsapp: {
    50: "#dffeec",
    100: "#b9f5d0",
    200: "#90edb3",
    300: "#65e495",
    400: "#3cdd78",
    500: "#22c35e",
    600: "#179848",
    700: "#0c6c33",
    800: "#01421c",
    900: "#001803"
  },
  twitter: {
    50: "#E5F4FD",
    100: "#C8E9FB",
    200: "#A8DCFA",
    300: "#83CDF7",
    400: "#57BBF5",
    500: "#1DA1F2",
    600: "#1A94DA",
    700: "#1681BF",
    800: "#136B9E",
    900: "#0D4D71"
  },
  telegram: {
    50: "#E3F2F9",
    100: "#C5E4F3",
    200: "#A2D4EC",
    300: "#7AC1E4",
    400: "#47A9DA",
    500: "#0088CC",
    600: "#007AB8",
    700: "#006BA1",
    800: "#005885",
    900: "#003F5E"
  }
};
var colors$1 = colors;
var radii = {
  none: "0",
  sm: "0.125rem",
  base: "0.25rem",
  md: "0.375rem",
  lg: "0.5rem",
  xl: "0.75rem",
  "2xl": "1rem",
  "3xl": "1.5rem",
  full: "9999px"
};
var radii$1 = radii;
var shadows = {
  xs: "0 0 0 1px rgba(0, 0, 0, 0.05)",
  sm: "0 1px 2px 0 rgba(0, 0, 0, 0.05)",
  base: "0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)",
  md: "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)",
  lg: "0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)",
  xl: "0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)",
  "2xl": "0 25px 50px -12px rgba(0, 0, 0, 0.25)",
  outline: "0 0 0 3px rgba(66, 153, 225, 0.6)",
  inner: "inset 0 2px 4px 0 rgba(0,0,0,0.06)",
  none: "none",
  "dark-lg": "rgba(0, 0, 0, 0.1) 0px 0px 0px 1px, rgba(0, 0, 0, 0.2) 0px 5px 10px, rgba(0, 0, 0, 0.4) 0px 15px 40px"
};
var shadows$1 = shadows;
var transitionProperty = {
  common: "background-color, border-color, color, fill, stroke, opacity, box-shadow, transform",
  colors: "background-color, border-color, color, fill, stroke",
  dimensions: "width, height",
  position: "left, right, top, bottom",
  background: "background-color, background-image, background-position"
};
var transitionTimingFunction = {
  "ease-in": "cubic-bezier(0.4, 0, 1, 1)",
  "ease-out": "cubic-bezier(0, 0, 0.2, 1)",
  "ease-in-out": "cubic-bezier(0.4, 0, 0.2, 1)"
};
var transitionDuration = {
  "ultra-fast": "50ms",
  faster: "100ms",
  fast: "150ms",
  normal: "200ms",
  slow: "300ms",
  slower: "400ms",
  "ultra-slow": "500ms"
};
var transition = {
  property: transitionProperty,
  easing: transitionTimingFunction,
  duration: transitionDuration
};
var transition$1 = transition;
var zIndices = {
  hide: -1,
  auto: "auto",
  base: 0,
  docked: 10,
  dropdown: 1e3,
  sticky: 1100,
  banner: 1200,
  overlay: 1300,
  modal: 1400,
  popover: 1500,
  skipLink: 1600,
  toast: 1700,
  tooltip: 1800
};
var zIndices$1 = zIndices;
var blur2 = {
  none: 0,
  sm: "4px",
  base: "8px",
  md: "12px",
  lg: "16px",
  xl: "24px",
  "2xl": "40px",
  "3xl": "64px"
};
var blur$1 = blur2;
var foundations = _extends$7({
  breakpoints: breakpoints$1,
  zIndices: zIndices$1,
  radii: radii$1,
  blur: blur$1,
  colors: colors$1
}, typography$1, {
  sizes: sizes$m,
  shadows: shadows$1,
  space: spacing,
  borders: borders$1,
  transition: transition$1
});
var foundations$1 = foundations;
var styles = {
  global: function global2(props) {
    return {
      body: {
        fontFamily: "body",
        color: mode("gray.800", "whiteAlpha.900")(props),
        bg: mode("white", "gray.800")(props),
        transitionProperty: "background-color",
        transitionDuration: "normal",
        lineHeight: "base"
      },
      "*::placeholder": {
        color: mode("gray.400", "whiteAlpha.400")(props)
      },
      "*, *::before, &::after": {
        borderColor: mode("gray.200", "whiteAlpha.300")(props),
        wordWrap: "break-word"
      }
    };
  }
};
var styles$1 = styles;
var direction = "ltr";
var config = {
  useSystemColorMode: false,
  initialColorMode: "light",
  cssVarPrefix: "chakra"
};
var theme = _extends$7({
  direction
}, foundations$1, {
  components,
  styles: styles$1,
  config
});
function _extends$6() {
  _extends$6 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$6.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$5(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded$k = ["as", "viewBox", "color", "focusable", "children", "className", "__css"];
var fallbackIcon = {
  path: /* @__PURE__ */ react.exports.createElement("g", {
    stroke: "currentColor",
    strokeWidth: "1.5"
  }, /* @__PURE__ */ react.exports.createElement("path", {
    strokeLinecap: "round",
    fill: "none",
    d: "M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
  }), /* @__PURE__ */ react.exports.createElement("path", {
    fill: "currentColor",
    strokeLinecap: "round",
    d: "M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
  }), /* @__PURE__ */ react.exports.createElement("circle", {
    fill: "none",
    strokeMiterlimit: "10",
    cx: "12",
    cy: "12",
    r: "11.25"
  })),
  viewBox: "0 0 24 24"
};
var Icon = /* @__PURE__ */ forwardRef(function(props, ref) {
  var element = props.as, viewBox = props.viewBox, _props$color = props.color, color2 = _props$color === void 0 ? "currentColor" : _props$color, _props$focusable = props.focusable, focusable = _props$focusable === void 0 ? false : _props$focusable, children = props.children, className = props.className, __css = props.__css, rest = _objectWithoutPropertiesLoose$5(props, _excluded$k);
  var _className = cx("chakra-icon", className);
  var styles2 = _extends$6({
    w: "1em",
    h: "1em",
    display: "inline-block",
    lineHeight: "1em",
    flexShrink: 0,
    color: color2
  }, __css);
  var shared = {
    ref,
    focusable,
    className: _className,
    __css: styles2
  };
  var _viewBox = viewBox != null ? viewBox : fallbackIcon.viewBox;
  if (element && typeof element !== "string") {
    return /* @__PURE__ */ react.exports.createElement(chakra.svg, _extends$6({
      as: element
    }, shared, rest));
  }
  var _path = children != null ? children : fallbackIcon.path;
  return /* @__PURE__ */ react.exports.createElement(chakra.svg, _extends$6({
    verticalAlign: "middle",
    viewBox: _viewBox
  }, shared, rest), _path);
});
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
var extendStatics$1 = function(d2, b2) {
  extendStatics$1 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d3, b3) {
    d3.__proto__ = b3;
  } || function(d3, b3) {
    for (var p2 in b3)
      if (Object.prototype.hasOwnProperty.call(b3, p2))
        d3[p2] = b3[p2];
  };
  return extendStatics$1(d2, b2);
};
function __extends$1(d2, b2) {
  if (typeof b2 !== "function" && b2 !== null)
    throw new TypeError("Class extends value " + String(b2) + " is not a constructor or null");
  extendStatics$1(d2, b2);
  function __() {
    this.constructor = d2;
  }
  d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
}
var __assign$2 = function() {
  __assign$2 = Object.assign || function __assign2(t2) {
    for (var s, i = 1, n2 = arguments.length; i < n2; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t2[p2] = s[p2];
    }
    return t2;
  };
  return __assign$2.apply(this, arguments);
};
function __rest$1(s, e2) {
  var t2 = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)
      t2[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t2[p2[i]] = s[p2[i]];
    }
  return t2;
}
function __read$2(o2, n2) {
  var m2 = typeof Symbol === "function" && o2[Symbol.iterator];
  if (!m2)
    return o2;
  var i = m2.call(o2), r2, ar = [], e2;
  try {
    while ((n2 === void 0 || n2-- > 0) && !(r2 = i.next()).done)
      ar.push(r2.value);
  } catch (error) {
    e2 = { error };
  } finally {
    try {
      if (r2 && !r2.done && (m2 = i["return"]))
        m2.call(i);
    } finally {
      if (e2)
        throw e2.error;
    }
  }
  return ar;
}
function __spreadArray(to, from2, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l2 = from2.length, ar; i < l2; i++) {
      if (ar || !(i in from2)) {
        if (!ar)
          ar = Array.prototype.slice.call(from2, 0, i);
        ar[i] = from2[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from2));
}
var createDefinition = function(propNames2) {
  return {
    isEnabled: function(props) {
      return propNames2.some(function(name) {
        return !!props[name];
      });
    }
  };
};
var featureDefinitions = {
  measureLayout: createDefinition([
    "layout",
    "layoutId",
    "drag",
    "_layoutResetTransform"
  ]),
  animation: createDefinition([
    "animate",
    "exit",
    "variants",
    "whileHover",
    "whileTap",
    "whileFocus",
    "whileDrag"
  ]),
  exit: createDefinition(["exit"]),
  drag: createDefinition(["drag", "dragControls"]),
  focus: createDefinition(["whileFocus"]),
  hover: createDefinition(["whileHover", "onHoverStart", "onHoverEnd"]),
  tap: createDefinition(["whileTap", "onTap", "onTapStart", "onTapCancel"]),
  pan: createDefinition([
    "onPan",
    "onPanStart",
    "onPanSessionStart",
    "onPanEnd"
  ]),
  layoutAnimation: createDefinition(["layout", "layoutId"])
};
function loadFeatures(features) {
  for (var key in features) {
    var Component = features[key];
    if (Component !== null)
      featureDefinitions[key].Component = Component;
  }
}
var invariant = function() {
};
var LazyContext = react.exports.createContext({ strict: false });
var featureNames = Object.keys(featureDefinitions);
var numFeatures = featureNames.length;
function useFeatures(props, visualElement2, preloadedFeatures) {
  var features = [];
  react.exports.useContext(LazyContext);
  if (!visualElement2)
    return null;
  for (var i = 0; i < numFeatures; i++) {
    var name_1 = featureNames[i];
    var _a2 = featureDefinitions[name_1], isEnabled = _a2.isEnabled, Component = _a2.Component;
    if (isEnabled(props) && Component) {
      features.push(react.exports.createElement(Component, __assign$2({ key: name_1 }, props, { visualElement: visualElement2 })));
    }
  }
  return features;
}
var MotionConfigContext = react.exports.createContext({
  transformPagePoint: function(p2) {
    return p2;
  },
  isStatic: false
});
var MotionContext = react.exports.createContext({});
function useVisualElementContext() {
  return react.exports.useContext(MotionContext).visualElement;
}
var PresenceContext = react.exports.createContext(null);
function useConstant(init) {
  var ref = react.exports.useRef(null);
  if (ref.current === null) {
    ref.current = init();
  }
  return ref.current;
}
function usePresence() {
  var context = react.exports.useContext(PresenceContext);
  if (context === null)
    return [true, null];
  var isPresent2 = context.isPresent, onExitComplete = context.onExitComplete, register = context.register;
  var id2 = useUniqueId();
  react.exports.useEffect(function() {
    return register(id2);
  }, []);
  var safeToRemove = function() {
    return onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id2);
  };
  return !isPresent2 && onExitComplete ? [false, safeToRemove] : [true];
}
function isPresent(context) {
  return context === null ? true : context.isPresent;
}
var counter = 0;
var incrementId = function() {
  return counter++;
};
var useUniqueId = function() {
  return useConstant(incrementId);
};
var LayoutGroupContext = react.exports.createContext(null);
var isBrowser = typeof window !== "undefined";
var useIsomorphicLayoutEffect = isBrowser ? react.exports.useLayoutEffect : react.exports.useEffect;
function useLayoutId(_a2) {
  var layoutId = _a2.layoutId;
  var layoutGroupId = react.exports.useContext(LayoutGroupContext);
  return layoutGroupId && layoutId !== void 0 ? layoutGroupId + "-" + layoutId : layoutId;
}
function useVisualElement(Component, visualState, props, createVisualElement) {
  var config2 = react.exports.useContext(MotionConfigContext);
  var lazyContext = react.exports.useContext(LazyContext);
  var parent = useVisualElementContext();
  var presenceContext = react.exports.useContext(PresenceContext);
  var layoutId = useLayoutId(props);
  var visualElementRef = react.exports.useRef(void 0);
  if (!createVisualElement)
    createVisualElement = lazyContext.renderer;
  if (!visualElementRef.current && createVisualElement) {
    visualElementRef.current = createVisualElement(Component, {
      visualState,
      parent,
      props: __assign$2(__assign$2({}, props), { layoutId }),
      presenceId: presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id,
      blockInitialAnimation: (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false
    });
  }
  var visualElement2 = visualElementRef.current;
  useIsomorphicLayoutEffect(function() {
    if (!visualElement2)
      return;
    visualElement2.setProps(__assign$2(__assign$2(__assign$2({}, config2), props), { layoutId }));
    visualElement2.isPresent = isPresent(presenceContext);
    visualElement2.isPresenceRoot = !parent || parent.presenceId !== (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id);
    visualElement2.syncRender();
  });
  react.exports.useEffect(function() {
    var _a2;
    if (!visualElement2)
      return;
    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.animateChanges();
  });
  useIsomorphicLayoutEffect(function() {
    return function() {
      return visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.notifyUnmount();
    };
  }, []);
  return visualElement2;
}
function isRefObject(ref) {
  return typeof ref === "object" && Object.prototype.hasOwnProperty.call(ref, "current");
}
function useMotionRef(visualState, visualElement2, externalRef) {
  return react.exports.useCallback(function(instance) {
    var _a2;
    instance && ((_a2 = visualState.mount) === null || _a2 === void 0 ? void 0 : _a2.call(visualState, instance));
    if (visualElement2) {
      instance ? visualElement2.mount(instance) : visualElement2.unmount();
    }
    if (externalRef) {
      if (typeof externalRef === "function") {
        externalRef(instance);
      } else if (isRefObject(externalRef)) {
        externalRef.current = instance;
      }
    }
  }, [visualElement2]);
}
function isVariantLabels(v2) {
  return Array.isArray(v2);
}
function isVariantLabel(v2) {
  return typeof v2 === "string" || isVariantLabels(v2);
}
function getCurrent(visualElement2) {
  var current = {};
  visualElement2.forEachValue(function(value, key) {
    return current[key] = value.get();
  });
  return current;
}
function getVelocity$1(visualElement2) {
  var velocity = {};
  visualElement2.forEachValue(function(value, key) {
    return velocity[key] = value.getVelocity();
  });
  return velocity;
}
function resolveVariantFromProps(props, definition, custom2, currentValues, currentVelocity) {
  var _a2;
  if (currentValues === void 0) {
    currentValues = {};
  }
  if (currentVelocity === void 0) {
    currentVelocity = {};
  }
  if (typeof definition === "string") {
    definition = (_a2 = props.variants) === null || _a2 === void 0 ? void 0 : _a2[definition];
  }
  return typeof definition === "function" ? definition(custom2 !== null && custom2 !== void 0 ? custom2 : props.custom, currentValues, currentVelocity) : definition;
}
function resolveVariant(visualElement2, definition, custom2) {
  var props = visualElement2.getProps();
  return resolveVariantFromProps(props, definition, custom2 !== null && custom2 !== void 0 ? custom2 : props.custom, getCurrent(visualElement2), getVelocity$1(visualElement2));
}
function checkIfControllingVariants(props) {
  var _a2;
  return typeof ((_a2 = props.animate) === null || _a2 === void 0 ? void 0 : _a2.start) === "function" || isVariantLabel(props.initial) || isVariantLabel(props.animate) || isVariantLabel(props.whileHover) || isVariantLabel(props.whileDrag) || isVariantLabel(props.whileTap) || isVariantLabel(props.whileFocus) || isVariantLabel(props.exit);
}
function checkIfVariantNode(props) {
  return Boolean(checkIfControllingVariants(props) || props.variants);
}
function getCurrentTreeVariants(props, context) {
  if (checkIfControllingVariants(props)) {
    var initial = props.initial, animate2 = props.animate;
    return {
      initial: initial === false || isVariantLabel(initial) ? initial : void 0,
      animate: isVariantLabel(animate2) ? animate2 : void 0
    };
  }
  return props.inherit !== false ? context : {};
}
function useCreateMotionContext(props, isStatic) {
  var _a2 = getCurrentTreeVariants(props, react.exports.useContext(MotionContext)), initial = _a2.initial, animate2 = _a2.animate;
  return react.exports.useMemo(function() {
    return { initial, animate: animate2 };
  }, isStatic ? [
    variantLabelsAsDependency(initial),
    variantLabelsAsDependency(animate2)
  ] : []);
}
function variantLabelsAsDependency(prop2) {
  return Array.isArray(prop2) ? prop2.join(" ") : prop2;
}
function createMotionComponent(_a2) {
  var preloadedFeatures = _a2.preloadedFeatures, createVisualElement = _a2.createVisualElement, useRender = _a2.useRender, useVisualState = _a2.useVisualState, Component = _a2.Component;
  preloadedFeatures && loadFeatures(preloadedFeatures);
  function MotionComponent(props, externalRef) {
    var isStatic = react.exports.useContext(MotionConfigContext).isStatic;
    var features = null;
    var context = useCreateMotionContext(props, isStatic);
    var visualState = useVisualState(props, isStatic);
    if (!isStatic && isBrowser) {
      context.visualElement = useVisualElement(Component, visualState, props, createVisualElement);
      features = useFeatures(props, context.visualElement);
    }
    return react.exports.createElement(react.exports.Fragment, null, react.exports.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic)), features);
  }
  return react.exports.forwardRef(MotionComponent);
}
function createMotionProxy(createConfig) {
  function custom2(Component, customMotionComponentConfig) {
    if (customMotionComponentConfig === void 0) {
      customMotionComponentConfig = {};
    }
    return createMotionComponent(createConfig(Component, customMotionComponentConfig));
  }
  var componentCache = new Map();
  return new Proxy(custom2, {
    get: function(_target, key) {
      if (!componentCache.has(key)) {
        componentCache.set(key, custom2(key));
      }
      return componentCache.get(key);
    }
  });
}
var lowercaseSVGElements = [
  "animate",
  "circle",
  "defs",
  "desc",
  "ellipse",
  "g",
  "image",
  "line",
  "filter",
  "marker",
  "mask",
  "metadata",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "rect",
  "stop",
  "svg",
  "switch",
  "symbol",
  "text",
  "tspan",
  "use",
  "view"
];
function isSVGComponent(Component) {
  if (typeof Component !== "string" || Component.includes("-")) {
    return false;
  } else if (lowercaseSVGElements.indexOf(Component) > -1 || /[A-Z]/.test(Component)) {
    return true;
  }
  return false;
}
var valueScaleCorrection = {};
function addScaleCorrection(correctors) {
  for (var key in correctors) {
    valueScaleCorrection[key] = correctors[key];
  }
}
var transformAxes = ["", "X", "Y", "Z"];
var order = ["translate", "scale", "rotate", "skew"];
var transformProps = ["transformPerspective", "x", "y", "z"];
order.forEach(function(operationKey) {
  return transformAxes.forEach(function(axesKey) {
    return transformProps.push(operationKey + axesKey);
  });
});
function sortTransformProps(a2, b2) {
  return transformProps.indexOf(a2) - transformProps.indexOf(b2);
}
var transformPropSet = new Set(transformProps);
function isTransformProp(key) {
  return transformPropSet.has(key);
}
var transformOriginProps = new Set(["originX", "originY", "originZ"]);
function isTransformOriginProp(key) {
  return transformOriginProps.has(key);
}
function isForcedMotionValue(key, _a2) {
  var layout2 = _a2.layout, layoutId = _a2.layoutId;
  return isTransformProp(key) || isTransformOriginProp(key) || (layout2 || layoutId !== void 0) && (!!valueScaleCorrection[key] || key === "opacity");
}
var isMotionValue = function(value) {
  return value !== null && typeof value === "object" && value.getVelocity;
};
var translateAlias = {
  x: "translateX",
  y: "translateY",
  z: "translateZ",
  transformPerspective: "perspective"
};
function buildTransform(_a2, _b, transformIsDefault, transformTemplate2) {
  var transform10 = _a2.transform, transformKeys2 = _a2.transformKeys;
  var _c = _b.enableHardwareAcceleration, enableHardwareAcceleration = _c === void 0 ? true : _c, _d = _b.allowTransformNone, allowTransformNone = _d === void 0 ? true : _d;
  var transformString = "";
  transformKeys2.sort(sortTransformProps);
  var transformHasZ = false;
  var numTransformKeys = transformKeys2.length;
  for (var i = 0; i < numTransformKeys; i++) {
    var key = transformKeys2[i];
    transformString += (translateAlias[key] || key) + "(" + transform10[key] + ") ";
    if (key === "z")
      transformHasZ = true;
  }
  if (!transformHasZ && enableHardwareAcceleration) {
    transformString += "translateZ(0)";
  } else {
    transformString = transformString.trim();
  }
  if (transformTemplate2) {
    transformString = transformTemplate2(transform10, transformIsDefault ? "" : transformString);
  } else if (allowTransformNone && transformIsDefault) {
    transformString = "none";
  }
  return transformString;
}
function buildTransformOrigin(_a2) {
  var _b = _a2.originX, originX = _b === void 0 ? "50%" : _b, _c = _a2.originY, originY = _c === void 0 ? "50%" : _c, _d = _a2.originZ, originZ = _d === void 0 ? 0 : _d;
  return originX + " " + originY + " " + originZ;
}
function isCSSVariable$1(key) {
  return key.startsWith("--");
}
var getValueAsType = function(value, type) {
  return type && typeof value === "number" ? type.transform(value) : value;
};
var clamp$1 = function(min, max) {
  return function(v2) {
    return Math.max(Math.min(v2, max), min);
  };
};
var sanitize = function(v2) {
  return v2 % 1 ? Number(v2.toFixed(5)) : v2;
};
var floatRegex = /(-)?([\d]*\.?[\d])+/g;
var colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))/gi;
var singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))$/i;
function isString(v2) {
  return typeof v2 === "string";
}
var number$1 = {
  test: function(v2) {
    return typeof v2 === "number";
  },
  parse: parseFloat,
  transform: function(v2) {
    return v2;
  }
};
var alpha = __assign$2(__assign$2({}, number$1), { transform: clamp$1(0, 1) });
var scale = __assign$2(__assign$2({}, number$1), { default: 1 });
var createUnitType = function(unit) {
  return {
    test: function(v2) {
      return isString(v2) && v2.endsWith(unit) && v2.split(" ").length === 1;
    },
    parse: parseFloat,
    transform: function(v2) {
      return "" + v2 + unit;
    }
  };
};
var degrees = createUnitType("deg");
var percent = createUnitType("%");
var px2 = createUnitType("px");
var vh = createUnitType("vh");
var vw = createUnitType("vw");
var progressPercentage = __assign$2(__assign$2({}, percent), { parse: function(v2) {
  return percent.parse(v2) / 100;
}, transform: function(v2) {
  return percent.transform(v2 * 100);
} });
var isColorString = function(type, testProp) {
  return function(v2) {
    return Boolean(isString(v2) && singleColorRegex.test(v2) && v2.startsWith(type) || testProp && Object.prototype.hasOwnProperty.call(v2, testProp));
  };
};
var splitColor = function(aName, bName, cName) {
  return function(v2) {
    var _a2;
    if (!isString(v2))
      return v2;
    var _b = v2.match(floatRegex), a2 = _b[0], b2 = _b[1], c2 = _b[2], alpha2 = _b[3];
    return _a2 = {}, _a2[aName] = parseFloat(a2), _a2[bName] = parseFloat(b2), _a2[cName] = parseFloat(c2), _a2.alpha = alpha2 !== void 0 ? parseFloat(alpha2) : 1, _a2;
  };
};
var hsla = {
  test: isColorString("hsl", "hue"),
  parse: splitColor("hue", "saturation", "lightness"),
  transform: function(_a2) {
    var hue = _a2.hue, saturation = _a2.saturation, lightness = _a2.lightness, _b = _a2.alpha, alpha$1 = _b === void 0 ? 1 : _b;
    return "hsla(" + Math.round(hue) + ", " + percent.transform(sanitize(saturation)) + ", " + percent.transform(sanitize(lightness)) + ", " + sanitize(alpha.transform(alpha$1)) + ")";
  }
};
var clampRgbUnit = clamp$1(0, 255);
var rgbUnit = __assign$2(__assign$2({}, number$1), { transform: function(v2) {
  return Math.round(clampRgbUnit(v2));
} });
var rgba = {
  test: isColorString("rgb", "red"),
  parse: splitColor("red", "green", "blue"),
  transform: function(_a2) {
    var red = _a2.red, green = _a2.green, blue = _a2.blue, _b = _a2.alpha, alpha$1 = _b === void 0 ? 1 : _b;
    return "rgba(" + rgbUnit.transform(red) + ", " + rgbUnit.transform(green) + ", " + rgbUnit.transform(blue) + ", " + sanitize(alpha.transform(alpha$1)) + ")";
  }
};
function parseHex(v2) {
  var r2 = "";
  var g2 = "";
  var b2 = "";
  var a2 = "";
  if (v2.length > 5) {
    r2 = v2.substr(1, 2);
    g2 = v2.substr(3, 2);
    b2 = v2.substr(5, 2);
    a2 = v2.substr(7, 2);
  } else {
    r2 = v2.substr(1, 1);
    g2 = v2.substr(2, 1);
    b2 = v2.substr(3, 1);
    a2 = v2.substr(4, 1);
    r2 += r2;
    g2 += g2;
    b2 += b2;
    a2 += a2;
  }
  return {
    red: parseInt(r2, 16),
    green: parseInt(g2, 16),
    blue: parseInt(b2, 16),
    alpha: a2 ? parseInt(a2, 16) / 255 : 1
  };
}
var hex = {
  test: isColorString("#"),
  parse: parseHex,
  transform: rgba.transform
};
var color = {
  test: function(v2) {
    return rgba.test(v2) || hex.test(v2) || hsla.test(v2);
  },
  parse: function(v2) {
    if (rgba.test(v2)) {
      return rgba.parse(v2);
    } else if (hsla.test(v2)) {
      return hsla.parse(v2);
    } else {
      return hex.parse(v2);
    }
  },
  transform: function(v2) {
    return isString(v2) ? v2 : v2.hasOwnProperty("red") ? rgba.transform(v2) : hsla.transform(v2);
  }
};
var colorToken = "${c}";
var numberToken = "${n}";
function test(v2) {
  var _a2, _b, _c, _d;
  return isNaN(v2) && isString(v2) && ((_b = (_a2 = v2.match(floatRegex)) === null || _a2 === void 0 ? void 0 : _a2.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v2.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0;
}
function analyse$1(v2) {
  var values2 = [];
  var numColors = 0;
  var colors2 = v2.match(colorRegex);
  if (colors2) {
    numColors = colors2.length;
    v2 = v2.replace(colorRegex, colorToken);
    values2.push.apply(values2, colors2.map(color.parse));
  }
  var numbers = v2.match(floatRegex);
  if (numbers) {
    v2 = v2.replace(floatRegex, numberToken);
    values2.push.apply(values2, numbers.map(number$1.parse));
  }
  return { values: values2, numColors, tokenised: v2 };
}
function parse(v2) {
  return analyse$1(v2).values;
}
function createTransformer(v2) {
  var _a2 = analyse$1(v2), values2 = _a2.values, numColors = _a2.numColors, tokenised = _a2.tokenised;
  var numValues = values2.length;
  return function(v3) {
    var output = tokenised;
    for (var i = 0; i < numValues; i++) {
      output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v3[i]) : sanitize(v3[i]));
    }
    return output;
  };
}
var convertNumbersToZero = function(v2) {
  return typeof v2 === "number" ? 0 : v2;
};
function getAnimatableNone$1(v2) {
  var parsed = parse(v2);
  var transformer = createTransformer(v2);
  return transformer(parsed.map(convertNumbersToZero));
}
var complex = { test, parse, createTransformer, getAnimatableNone: getAnimatableNone$1 };
var maxDefaults = new Set(["brightness", "contrast", "saturate", "opacity"]);
function applyDefaultFilter(v2) {
  var _a2 = v2.slice(0, -1).split("("), name = _a2[0], value = _a2[1];
  if (name === "drop-shadow")
    return v2;
  var number2 = (value.match(floatRegex) || [])[0];
  if (!number2)
    return v2;
  var unit = value.replace(number2, "");
  var defaultValue = maxDefaults.has(name) ? 1 : 0;
  if (number2 !== value)
    defaultValue *= 100;
  return name + "(" + defaultValue + unit + ")";
}
var functionRegex = /([a-z-]*)\(.*?\)/g;
var filter2 = __assign$2(__assign$2({}, complex), { getAnimatableNone: function(v2) {
  var functions = v2.match(functionRegex);
  return functions ? functions.map(applyDefaultFilter).join(" ") : v2;
} });
var int = __assign$2(__assign$2({}, number$1), { transform: Math.round });
var numberValueTypes = {
  borderWidth: px2,
  borderTopWidth: px2,
  borderRightWidth: px2,
  borderBottomWidth: px2,
  borderLeftWidth: px2,
  borderRadius: px2,
  radius: px2,
  borderTopLeftRadius: px2,
  borderTopRightRadius: px2,
  borderBottomRightRadius: px2,
  borderBottomLeftRadius: px2,
  width: px2,
  maxWidth: px2,
  height: px2,
  maxHeight: px2,
  size: px2,
  top: px2,
  right: px2,
  bottom: px2,
  left: px2,
  padding: px2,
  paddingTop: px2,
  paddingRight: px2,
  paddingBottom: px2,
  paddingLeft: px2,
  margin: px2,
  marginTop: px2,
  marginRight: px2,
  marginBottom: px2,
  marginLeft: px2,
  rotate: degrees,
  rotateX: degrees,
  rotateY: degrees,
  rotateZ: degrees,
  scale,
  scaleX: scale,
  scaleY: scale,
  scaleZ: scale,
  skew: degrees,
  skewX: degrees,
  skewY: degrees,
  distance: px2,
  translateX: px2,
  translateY: px2,
  translateZ: px2,
  x: px2,
  y: px2,
  z: px2,
  perspective: px2,
  transformPerspective: px2,
  opacity: alpha,
  originX: progressPercentage,
  originY: progressPercentage,
  originZ: px2,
  zIndex: int,
  fillOpacity: alpha,
  strokeOpacity: alpha,
  numOctaves: int
};
function buildHTMLStyles(state, latestValues, projection, layoutState, options, transformTemplate2, buildProjectionTransform, buildProjectionTransformOrigin) {
  var _a2;
  var style = state.style, vars = state.vars, transform10 = state.transform, transformKeys2 = state.transformKeys, transformOrigin = state.transformOrigin;
  transformKeys2.length = 0;
  var hasTransform = false;
  var hasTransformOrigin = false;
  var transformIsNone = true;
  for (var key in latestValues) {
    var value = latestValues[key];
    if (isCSSVariable$1(key)) {
      vars[key] = value;
      continue;
    }
    var valueType = numberValueTypes[key];
    var valueAsType = getValueAsType(value, valueType);
    if (isTransformProp(key)) {
      hasTransform = true;
      transform10[key] = valueAsType;
      transformKeys2.push(key);
      if (!transformIsNone)
        continue;
      if (value !== ((_a2 = valueType.default) !== null && _a2 !== void 0 ? _a2 : 0))
        transformIsNone = false;
    } else if (isTransformOriginProp(key)) {
      transformOrigin[key] = valueAsType;
      hasTransformOrigin = true;
    } else {
      if ((projection === null || projection === void 0 ? void 0 : projection.isHydrated) && (layoutState === null || layoutState === void 0 ? void 0 : layoutState.isHydrated) && valueScaleCorrection[key]) {
        var correctedValue = valueScaleCorrection[key].process(value, layoutState, projection);
        var applyTo = valueScaleCorrection[key].applyTo;
        if (applyTo) {
          var num = applyTo.length;
          for (var i = 0; i < num; i++) {
            style[applyTo[i]] = correctedValue;
          }
        } else {
          style[key] = correctedValue;
        }
      } else {
        style[key] = valueAsType;
      }
    }
  }
  if (layoutState && projection && buildProjectionTransform && buildProjectionTransformOrigin) {
    style.transform = buildProjectionTransform(layoutState.deltaFinal, layoutState.treeScale, hasTransform ? transform10 : void 0);
    if (transformTemplate2) {
      style.transform = transformTemplate2(transform10, style.transform);
    }
    style.transformOrigin = buildProjectionTransformOrigin(layoutState);
  } else {
    if (hasTransform) {
      style.transform = buildTransform(state, options, transformIsNone, transformTemplate2);
    }
    if (hasTransformOrigin) {
      style.transformOrigin = buildTransformOrigin(transformOrigin);
    }
  }
}
var createHtmlRenderState = function() {
  return {
    style: {},
    transform: {},
    transformKeys: [],
    transformOrigin: {},
    vars: {}
  };
};
function copyRawValuesOnly(target, source, props) {
  for (var key in source) {
    if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {
      target[key] = source[key];
    }
  }
}
function useInitialMotionValues(_a2, visualState, isStatic) {
  var transformTemplate2 = _a2.transformTemplate;
  return react.exports.useMemo(function() {
    var state = createHtmlRenderState();
    buildHTMLStyles(state, visualState, void 0, void 0, { enableHardwareAcceleration: !isStatic }, transformTemplate2);
    var vars = state.vars, style = state.style;
    return __assign$2(__assign$2({}, vars), style);
  }, [visualState]);
}
function useStyle(props, visualState, isStatic) {
  var styleProp = props.style || {};
  var style = {};
  copyRawValuesOnly(style, styleProp, props);
  Object.assign(style, useInitialMotionValues(props, visualState, isStatic));
  if (props.transformValues) {
    style = props.transformValues(style);
  }
  return style;
}
function useHTMLProps(props, visualState, isStatic) {
  var htmlProps = {};
  var style = useStyle(props, visualState, isStatic);
  if (Boolean(props.drag)) {
    htmlProps.draggable = false;
    style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout = "none";
    style.touchAction = props.drag === true ? "none" : "pan-" + (props.drag === "x" ? "y" : "x");
  }
  htmlProps.style = style;
  return htmlProps;
}
var validMotionProps = new Set([
  "initial",
  "animate",
  "exit",
  "style",
  "variants",
  "transition",
  "transformTemplate",
  "transformValues",
  "custom",
  "inherit",
  "layout",
  "layoutId",
  "_layoutResetTransform",
  "onLayoutAnimationComplete",
  "onViewportBoxUpdate",
  "onLayoutMeasure",
  "onBeforeLayoutMeasure",
  "onAnimationStart",
  "onAnimationComplete",
  "onUpdate",
  "onDragStart",
  "onDrag",
  "onDragEnd",
  "onMeasureDragConstraints",
  "onDirectionLock",
  "onDragTransitionEnd",
  "drag",
  "dragControls",
  "dragListener",
  "dragConstraints",
  "dragDirectionLock",
  "_dragX",
  "_dragY",
  "dragElastic",
  "dragMomentum",
  "dragPropagation",
  "dragTransition",
  "whileDrag",
  "onPan",
  "onPanStart",
  "onPanEnd",
  "onPanSessionStart",
  "onTap",
  "onTapStart",
  "onTapCancel",
  "onHoverStart",
  "onHoverEnd",
  "whileFocus",
  "whileTap",
  "whileHover"
]);
function isValidMotionProp(key) {
  return validMotionProps.has(key);
}
var shouldForward = function(key) {
  return !isValidMotionProp(key);
};
try {
  var emotionIsPropValid_1 = require("@emotion/is-prop-valid").default;
  shouldForward = function(key) {
    if (key.startsWith("on")) {
      return !isValidMotionProp(key);
    } else {
      return emotionIsPropValid_1(key);
    }
  };
} catch (_a2) {
}
function filterProps(props, isDom, forwardMotionProps) {
  var filteredProps = {};
  for (var key in props) {
    if (shouldForward(key) || forwardMotionProps === true && isValidMotionProp(key) || !isDom && !isValidMotionProp(key)) {
      filteredProps[key] = props[key];
    }
  }
  return filteredProps;
}
function calcOrigin$1(origin, offset, size2) {
  return typeof origin === "string" ? origin : px2.transform(offset + size2 * origin);
}
function calcSVGTransformOrigin(dimensions, originX, originY) {
  var pxOriginX = calcOrigin$1(originX, dimensions.x, dimensions.width);
  var pxOriginY = calcOrigin$1(originY, dimensions.y, dimensions.height);
  return pxOriginX + " " + pxOriginY;
}
var progressToPixels = function(progress2, length2) {
  return px2.transform(progress2 * length2);
};
var dashKeys = {
  offset: "stroke-dashoffset",
  array: "stroke-dasharray"
};
var camelKeys = {
  offset: "strokeDashoffset",
  array: "strokeDasharray"
};
function buildSVGPath(attrs, totalLength, length2, spacing2, offset, useDashCase) {
  if (spacing2 === void 0) {
    spacing2 = 1;
  }
  if (offset === void 0) {
    offset = 0;
  }
  if (useDashCase === void 0) {
    useDashCase = true;
  }
  var keys2 = useDashCase ? dashKeys : camelKeys;
  attrs[keys2.offset] = progressToPixels(-offset, totalLength);
  var pathLength = progressToPixels(length2, totalLength);
  var pathSpacing = progressToPixels(spacing2, totalLength);
  attrs[keys2.array] = pathLength + " " + pathSpacing;
}
function buildSVGAttrs(state, _a2, projection, layoutState, options, transformTemplate2, buildProjectionTransform, buildProjectionTransformOrigin) {
  var attrX = _a2.attrX, attrY = _a2.attrY, originX = _a2.originX, originY = _a2.originY, pathLength = _a2.pathLength, _b = _a2.pathSpacing, pathSpacing = _b === void 0 ? 1 : _b, _c = _a2.pathOffset, pathOffset = _c === void 0 ? 0 : _c, latest = __rest$1(_a2, ["attrX", "attrY", "originX", "originY", "pathLength", "pathSpacing", "pathOffset"]);
  buildHTMLStyles(state, latest, projection, layoutState, options, transformTemplate2, buildProjectionTransform, buildProjectionTransformOrigin);
  state.attrs = state.style;
  state.style = {};
  var attrs = state.attrs, style = state.style, dimensions = state.dimensions, totalPathLength = state.totalPathLength;
  if (attrs.transform) {
    if (dimensions)
      style.transform = attrs.transform;
    delete attrs.transform;
  }
  if (dimensions && (originX !== void 0 || originY !== void 0 || style.transform)) {
    style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== void 0 ? originX : 0.5, originY !== void 0 ? originY : 0.5);
  }
  if (attrX !== void 0)
    attrs.x = attrX;
  if (attrY !== void 0)
    attrs.y = attrY;
  if (totalPathLength !== void 0 && pathLength !== void 0) {
    buildSVGPath(attrs, totalPathLength, pathLength, pathSpacing, pathOffset, false);
  }
}
var createSvgRenderState = function() {
  return __assign$2(__assign$2({}, createHtmlRenderState()), { attrs: {} });
};
function useSVGProps(props, visualState) {
  var visualProps = react.exports.useMemo(function() {
    var state = createSvgRenderState();
    buildSVGAttrs(state, visualState, void 0, void 0, { enableHardwareAcceleration: false }, props.transformTemplate);
    return __assign$2(__assign$2({}, state.attrs), { style: __assign$2({}, state.style) });
  }, [visualState]);
  if (props.style) {
    var rawStyles = {};
    copyRawValuesOnly(rawStyles, props.style, props);
    visualProps.style = __assign$2(__assign$2({}, rawStyles), visualProps.style);
  }
  return visualProps;
}
function createUseRender(forwardMotionProps) {
  if (forwardMotionProps === void 0) {
    forwardMotionProps = false;
  }
  var useRender = function(Component, props, ref, _a2, isStatic) {
    var latestValues = _a2.latestValues;
    var useVisualProps = isSVGComponent(Component) ? useSVGProps : useHTMLProps;
    var visualProps = useVisualProps(props, latestValues, isStatic);
    var filteredProps = filterProps(props, typeof Component === "string", forwardMotionProps);
    var elementProps = __assign$2(__assign$2(__assign$2({}, filteredProps), visualProps), { ref });
    return react.exports.createElement(Component, elementProps);
  };
  return useRender;
}
var CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;
var REPLACE_TEMPLATE = "$1-$2";
var camelToDash = function(str) {
  return str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();
};
function renderHTML(element, _a2) {
  var style = _a2.style, vars = _a2.vars;
  Object.assign(element.style, style);
  for (var key in vars) {
    element.style.setProperty(key, vars[key]);
  }
}
var camelCaseAttributes = new Set([
  "baseFrequency",
  "diffuseConstant",
  "kernelMatrix",
  "kernelUnitLength",
  "keySplines",
  "keyTimes",
  "limitingConeAngle",
  "markerHeight",
  "markerWidth",
  "numOctaves",
  "targetX",
  "targetY",
  "surfaceScale",
  "specularConstant",
  "specularExponent",
  "stdDeviation",
  "tableValues",
  "viewBox",
  "gradientTransform"
]);
function renderSVG(element, renderState) {
  renderHTML(element, renderState);
  for (var key in renderState.attrs) {
    element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);
  }
}
function scrapeMotionValuesFromProps$1(props) {
  var style = props.style;
  var newValues = {};
  for (var key in style) {
    if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {
      newValues[key] = style[key];
    }
  }
  return newValues;
}
function scrapeMotionValuesFromProps(props) {
  var newValues = scrapeMotionValuesFromProps$1(props);
  for (var key in props) {
    if (isMotionValue(props[key])) {
      var targetKey = key === "x" || key === "y" ? "attr" + key.toUpperCase() : key;
      newValues[targetKey] = props[key];
    }
  }
  return newValues;
}
function isAnimationControls(v2) {
  return typeof v2 === "object" && typeof v2.start === "function";
}
var isKeyframesTarget = function(v2) {
  return Array.isArray(v2);
};
var isCustomValue = function(v2) {
  return Boolean(v2 && typeof v2 === "object" && v2.mix && v2.toValue);
};
var resolveFinalValueInKeyframes = function(v2) {
  return isKeyframesTarget(v2) ? v2[v2.length - 1] || 0 : v2;
};
function resolveMotionValue(value) {
  var unwrappedValue = isMotionValue(value) ? value.get() : value;
  return isCustomValue(unwrappedValue) ? unwrappedValue.toValue() : unwrappedValue;
}
function makeState(_a2, props, context, presenceContext) {
  var scrapeMotionValuesFromProps2 = _a2.scrapeMotionValuesFromProps, createRenderState = _a2.createRenderState, onMount = _a2.onMount;
  var state = {
    latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps2),
    renderState: createRenderState()
  };
  if (onMount) {
    state.mount = function(instance) {
      return onMount(props, instance, state);
    };
  }
  return state;
}
var makeUseVisualState = function(config2) {
  return function(props, isStatic) {
    var context = react.exports.useContext(MotionContext);
    var presenceContext = react.exports.useContext(PresenceContext);
    return isStatic ? makeState(config2, props, context, presenceContext) : useConstant(function() {
      return makeState(config2, props, context, presenceContext);
    });
  };
};
function makeLatestValues(props, context, presenceContext, scrapeMotionValues) {
  var values2 = {};
  var blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;
  var motionValues = scrapeMotionValues(props);
  for (var key in motionValues) {
    values2[key] = resolveMotionValue(motionValues[key]);
  }
  var initial = props.initial, animate2 = props.animate;
  var isControllingVariants = checkIfControllingVariants(props);
  var isVariantNode = checkIfVariantNode(props);
  if (context && isVariantNode && !isControllingVariants && props.inherit !== false) {
    initial !== null && initial !== void 0 ? initial : initial = context.initial;
    animate2 !== null && animate2 !== void 0 ? animate2 : animate2 = context.animate;
  }
  var variantToSet = blockInitialAnimation || initial === false ? animate2 : initial;
  if (variantToSet && typeof variantToSet !== "boolean" && !isAnimationControls(variantToSet)) {
    var list2 = Array.isArray(variantToSet) ? variantToSet : [variantToSet];
    list2.forEach(function(definition) {
      var resolved = resolveVariantFromProps(props, definition);
      if (!resolved)
        return;
      var transitionEnd = resolved.transitionEnd;
      resolved.transition;
      var target = __rest$1(resolved, ["transitionEnd", "transition"]);
      for (var key2 in target)
        values2[key2] = target[key2];
      for (var key2 in transitionEnd)
        values2[key2] = transitionEnd[key2];
    });
  }
  return values2;
}
var svgMotionConfig = {
  useVisualState: makeUseVisualState({
    scrapeMotionValuesFromProps,
    createRenderState: createSvgRenderState,
    onMount: function(props, instance, _a2) {
      var renderState = _a2.renderState, latestValues = _a2.latestValues;
      try {
        renderState.dimensions = typeof instance.getBBox === "function" ? instance.getBBox() : instance.getBoundingClientRect();
      } catch (e2) {
        renderState.dimensions = {
          x: 0,
          y: 0,
          width: 0,
          height: 0
        };
      }
      if (isPath(instance)) {
        renderState.totalPathLength = instance.getTotalLength();
      }
      buildSVGAttrs(renderState, latestValues, void 0, void 0, { enableHardwareAcceleration: false }, props.transformTemplate);
      renderSVG(instance, renderState);
    }
  })
};
function isPath(element) {
  return element.tagName === "path";
}
var htmlMotionConfig = {
  useVisualState: makeUseVisualState({
    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,
    createRenderState: createHtmlRenderState
  })
};
function createDomMotionConfig(Component, _a2, preloadedFeatures, createVisualElement) {
  var _b = _a2.forwardMotionProps, forwardMotionProps = _b === void 0 ? false : _b;
  var baseConfig = isSVGComponent(Component) ? svgMotionConfig : htmlMotionConfig;
  return __assign$2(__assign$2({}, baseConfig), {
    preloadedFeatures,
    useRender: createUseRender(forwardMotionProps),
    createVisualElement,
    Component
  });
}
var AnimationType;
(function(AnimationType2) {
  AnimationType2["Animate"] = "animate";
  AnimationType2["Hover"] = "whileHover";
  AnimationType2["Tap"] = "whileTap";
  AnimationType2["Drag"] = "whileDrag";
  AnimationType2["Focus"] = "whileFocus";
  AnimationType2["Exit"] = "exit";
})(AnimationType || (AnimationType = {}));
function addDomEvent(target, eventName, handler, options) {
  target.addEventListener(eventName, handler, options);
  return function() {
    return target.removeEventListener(eventName, handler, options);
  };
}
function useDomEvent(ref, eventName, handler, options) {
  react.exports.useEffect(function() {
    var element = ref.current;
    if (handler && element) {
      return addDomEvent(element, eventName, handler, options);
    }
  }, [ref, eventName, handler, options]);
}
function useFocusGesture(_a2) {
  var whileFocus = _a2.whileFocus, visualElement2 = _a2.visualElement;
  var onFocus = function() {
    var _a3;
    (_a3 = visualElement2.animationState) === null || _a3 === void 0 ? void 0 : _a3.setActive(AnimationType.Focus, true);
  };
  var onBlur = function() {
    var _a3;
    (_a3 = visualElement2.animationState) === null || _a3 === void 0 ? void 0 : _a3.setActive(AnimationType.Focus, false);
  };
  useDomEvent(visualElement2, "focus", whileFocus ? onFocus : void 0);
  useDomEvent(visualElement2, "blur", whileFocus ? onBlur : void 0);
}
function isMouseEvent(event) {
  if (typeof PointerEvent !== "undefined" && event instanceof PointerEvent) {
    return !!(event.pointerType === "mouse");
  }
  return event instanceof MouseEvent;
}
function isTouchEvent(event) {
  var hasTouches = !!event.touches;
  return hasTouches;
}
function filterPrimaryPointer(eventHandler) {
  return function(event) {
    var isMouseEvent2 = event instanceof MouseEvent;
    var isPrimaryPointer = !isMouseEvent2 || isMouseEvent2 && event.button === 0;
    if (isPrimaryPointer) {
      eventHandler(event);
    }
  };
}
var defaultPagePoint = { pageX: 0, pageY: 0 };
function pointFromTouch(e2, pointType) {
  if (pointType === void 0) {
    pointType = "page";
  }
  var primaryTouch = e2.touches[0] || e2.changedTouches[0];
  var point = primaryTouch || defaultPagePoint;
  return {
    x: point[pointType + "X"],
    y: point[pointType + "Y"]
  };
}
function pointFromMouse(point, pointType) {
  if (pointType === void 0) {
    pointType = "page";
  }
  return {
    x: point[pointType + "X"],
    y: point[pointType + "Y"]
  };
}
function extractEventInfo(event, pointType) {
  if (pointType === void 0) {
    pointType = "page";
  }
  return {
    point: isTouchEvent(event) ? pointFromTouch(event, pointType) : pointFromMouse(event, pointType)
  };
}
function getViewportPointFromEvent(event) {
  return extractEventInfo(event, "client");
}
var wrapHandler = function(handler, shouldFilterPrimaryPointer) {
  if (shouldFilterPrimaryPointer === void 0) {
    shouldFilterPrimaryPointer = false;
  }
  var listener = function(event) {
    return handler(event, extractEventInfo(event));
  };
  return shouldFilterPrimaryPointer ? filterPrimaryPointer(listener) : listener;
};
var supportsPointerEvents = function() {
  return isBrowser && window.onpointerdown === null;
};
var supportsTouchEvents = function() {
  return isBrowser && window.ontouchstart === null;
};
var supportsMouseEvents = function() {
  return isBrowser && window.onmousedown === null;
};
var mouseEventNames = {
  pointerdown: "mousedown",
  pointermove: "mousemove",
  pointerup: "mouseup",
  pointercancel: "mousecancel",
  pointerover: "mouseover",
  pointerout: "mouseout",
  pointerenter: "mouseenter",
  pointerleave: "mouseleave"
};
var touchEventNames = {
  pointerdown: "touchstart",
  pointermove: "touchmove",
  pointerup: "touchend",
  pointercancel: "touchcancel"
};
function getPointerEventName(name) {
  if (supportsPointerEvents()) {
    return name;
  } else if (supportsTouchEvents()) {
    return touchEventNames[name];
  } else if (supportsMouseEvents()) {
    return mouseEventNames[name];
  }
  return name;
}
function addPointerEvent(target, eventName, handler, options) {
  return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === "pointerdown"), options);
}
function usePointerEvent(ref, eventName, handler, options) {
  return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === "pointerdown"), options);
}
function createLock(name) {
  var lock = null;
  return function() {
    var openLock = function() {
      lock = null;
    };
    if (lock === null) {
      lock = name;
      return openLock;
    }
    return false;
  };
}
var globalHorizontalLock = createLock("dragHorizontal");
var globalVerticalLock = createLock("dragVertical");
function getGlobalLock(drag2) {
  var lock = false;
  if (drag2 === "y") {
    lock = globalVerticalLock();
  } else if (drag2 === "x") {
    lock = globalHorizontalLock();
  } else {
    var openHorizontal_1 = globalHorizontalLock();
    var openVertical_1 = globalVerticalLock();
    if (openHorizontal_1 && openVertical_1) {
      lock = function() {
        openHorizontal_1();
        openVertical_1();
      };
    } else {
      if (openHorizontal_1)
        openHorizontal_1();
      if (openVertical_1)
        openVertical_1();
    }
  }
  return lock;
}
function isDragActive() {
  var openGestureLock = getGlobalLock(true);
  if (!openGestureLock)
    return true;
  openGestureLock();
  return false;
}
function createHoverEvent(visualElement2, isActive, callback) {
  return function(event, info) {
    var _a2;
    if (!isMouseEvent(event) || isDragActive())
      return;
    callback === null || callback === void 0 ? void 0 : callback(event, info);
    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Hover, isActive);
  };
}
function useHoverGesture(_a2) {
  var onHoverStart = _a2.onHoverStart, onHoverEnd = _a2.onHoverEnd, whileHover = _a2.whileHover, visualElement2 = _a2.visualElement;
  usePointerEvent(visualElement2, "pointerenter", onHoverStart || whileHover ? createHoverEvent(visualElement2, true, onHoverStart) : void 0);
  usePointerEvent(visualElement2, "pointerleave", onHoverEnd || whileHover ? createHoverEvent(visualElement2, false, onHoverEnd) : void 0);
}
var isNodeOrChild = function(parent, child) {
  if (!child) {
    return false;
  } else if (parent === child) {
    return true;
  } else {
    return isNodeOrChild(parent, child.parentElement);
  }
};
function useUnmountEffect(callback) {
  return react.exports.useEffect(function() {
    return function() {
      return callback();
    };
  }, []);
}
var clamp = function(min, max, v2) {
  return Math.min(Math.max(v2, min), max);
};
var safeMin = 1e-3;
var minDuration = 0.01;
var maxDuration = 10;
var minDamping = 0.05;
var maxDamping = 1;
function findSpring(_a2) {
  var _b = _a2.duration, duration = _b === void 0 ? 800 : _b, _c = _a2.bounce, bounce = _c === void 0 ? 0.25 : _c, _d = _a2.velocity, velocity = _d === void 0 ? 0 : _d, _e = _a2.mass, mass = _e === void 0 ? 1 : _e;
  var envelope;
  var derivative;
  var dampingRatio = 1 - bounce;
  dampingRatio = clamp(minDamping, maxDamping, dampingRatio);
  duration = clamp(minDuration, maxDuration, duration / 1e3);
  if (dampingRatio < 1) {
    envelope = function(undampedFreq2) {
      var exponentialDecay = undampedFreq2 * dampingRatio;
      var delta2 = exponentialDecay * duration;
      var a2 = exponentialDecay - velocity;
      var b2 = calcAngularFreq(undampedFreq2, dampingRatio);
      var c2 = Math.exp(-delta2);
      return safeMin - a2 / b2 * c2;
    };
    derivative = function(undampedFreq2) {
      var exponentialDecay = undampedFreq2 * dampingRatio;
      var delta2 = exponentialDecay * duration;
      var d2 = delta2 * velocity + velocity;
      var e2 = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq2, 2) * duration;
      var f2 = Math.exp(-delta2);
      var g2 = calcAngularFreq(Math.pow(undampedFreq2, 2), dampingRatio);
      var factor = -envelope(undampedFreq2) + safeMin > 0 ? -1 : 1;
      return factor * ((d2 - e2) * f2) / g2;
    };
  } else {
    envelope = function(undampedFreq2) {
      var a2 = Math.exp(-undampedFreq2 * duration);
      var b2 = (undampedFreq2 - velocity) * duration + 1;
      return -safeMin + a2 * b2;
    };
    derivative = function(undampedFreq2) {
      var a2 = Math.exp(-undampedFreq2 * duration);
      var b2 = (velocity - undampedFreq2) * (duration * duration);
      return a2 * b2;
    };
  }
  var initialGuess = 5 / duration;
  var undampedFreq = approximateRoot(envelope, derivative, initialGuess);
  duration = duration * 1e3;
  if (isNaN(undampedFreq)) {
    return {
      stiffness: 100,
      damping: 10,
      duration
    };
  } else {
    var stiffness = Math.pow(undampedFreq, 2) * mass;
    return {
      stiffness,
      damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),
      duration
    };
  }
}
var rootIterations = 12;
function approximateRoot(envelope, derivative, initialGuess) {
  var result = initialGuess;
  for (var i = 1; i < rootIterations; i++) {
    result = result - envelope(result) / derivative(result);
  }
  return result;
}
function calcAngularFreq(undampedFreq, dampingRatio) {
  return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);
}
var durationKeys = ["duration", "bounce"];
var physicsKeys = ["stiffness", "damping", "mass"];
function isSpringType(options, keys2) {
  return keys2.some(function(key) {
    return options[key] !== void 0;
  });
}
function getSpringOptions(options) {
  var springOptions = __assign$2({ velocity: 0, stiffness: 100, damping: 10, mass: 1, isResolvedFromDuration: false }, options);
  if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {
    var derived = findSpring(options);
    springOptions = __assign$2(__assign$2(__assign$2({}, springOptions), derived), { velocity: 0, mass: 1 });
    springOptions.isResolvedFromDuration = true;
  }
  return springOptions;
}
function spring(_a2) {
  var _b = _a2.from, from2 = _b === void 0 ? 0 : _b, _c = _a2.to, to = _c === void 0 ? 1 : _c, _d = _a2.restSpeed, restSpeed = _d === void 0 ? 2 : _d, restDelta = _a2.restDelta, options = __rest$1(_a2, ["from", "to", "restSpeed", "restDelta"]);
  var state = { done: false, value: from2 };
  var _e = getSpringOptions(options), stiffness = _e.stiffness, damping = _e.damping, mass = _e.mass, velocity = _e.velocity, duration = _e.duration, isResolvedFromDuration = _e.isResolvedFromDuration;
  var resolveSpring = zero;
  var resolveVelocity = zero;
  function createSpring() {
    var initialVelocity = velocity ? -(velocity / 1e3) : 0;
    var initialDelta = to - from2;
    var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));
    var undampedAngularFreq = Math.sqrt(stiffness / mass) / 1e3;
    restDelta !== null && restDelta !== void 0 ? restDelta : restDelta = Math.abs(to - from2) <= 1 ? 0.01 : 0.4;
    if (dampingRatio < 1) {
      var angularFreq_1 = calcAngularFreq(undampedAngularFreq, dampingRatio);
      resolveSpring = function(t2) {
        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t2);
        return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 * Math.sin(angularFreq_1 * t2) + initialDelta * Math.cos(angularFreq_1 * t2));
      };
      resolveVelocity = function(t2) {
        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t2);
        return dampingRatio * undampedAngularFreq * envelope * (Math.sin(angularFreq_1 * t2) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 + initialDelta * Math.cos(angularFreq_1 * t2)) - envelope * (Math.cos(angularFreq_1 * t2) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) - angularFreq_1 * initialDelta * Math.sin(angularFreq_1 * t2));
      };
    } else if (dampingRatio === 1) {
      resolveSpring = function(t2) {
        return to - Math.exp(-undampedAngularFreq * t2) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t2);
      };
    } else {
      var dampedAngularFreq_1 = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);
      resolveSpring = function(t2) {
        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t2);
        var freqForT = Math.min(dampedAngularFreq_1 * t2, 300);
        return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq_1 * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq_1;
      };
    }
  }
  createSpring();
  return {
    next: function(t2) {
      var current = resolveSpring(t2);
      if (!isResolvedFromDuration) {
        var currentVelocity = resolveVelocity(t2) * 1e3;
        var isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;
        var isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;
        state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;
      } else {
        state.done = t2 >= duration;
      }
      state.value = state.done ? to : current;
      return state;
    },
    flipTarget: function() {
      var _a3;
      velocity = -velocity;
      _a3 = [to, from2], from2 = _a3[0], to = _a3[1];
      createSpring();
    }
  };
}
spring.needsInterpolation = function(a2, b2) {
  return typeof a2 === "string" || typeof b2 === "string";
};
var zero = function(_t) {
  return 0;
};
var progress = function(from2, to, value) {
  var toFromDifference = to - from2;
  return toFromDifference === 0 ? 1 : (value - from2) / toFromDifference;
};
var mix = function(from2, to, progress2) {
  return -progress2 * from2 + progress2 * to + from2;
};
var mixLinearColor = function(from2, to, v2) {
  var fromExpo = from2 * from2;
  var toExpo = to * to;
  return Math.sqrt(Math.max(0, v2 * (toExpo - fromExpo) + fromExpo));
};
var colorTypes = [hex, rgba, hsla];
var getColorType = function(v2) {
  return colorTypes.find(function(type) {
    return type.test(v2);
  });
};
var mixColor = function(from2, to) {
  var fromColorType = getColorType(from2);
  var toColorType = getColorType(to);
  invariant(fromColorType.transform === toColorType.transform);
  var fromColor = fromColorType.parse(from2);
  var toColor = toColorType.parse(to);
  var blended = __assign$2({}, fromColor);
  var mixFunc = fromColorType === hsla ? mix : mixLinearColor;
  return function(v2) {
    for (var key in blended) {
      if (key !== "alpha") {
        blended[key] = mixFunc(fromColor[key], toColor[key], v2);
      }
    }
    blended.alpha = mix(fromColor.alpha, toColor.alpha, v2);
    return fromColorType.transform(blended);
  };
};
var isNum = function(v2) {
  return typeof v2 === "number";
};
var combineFunctions = function(a2, b2) {
  return function(v2) {
    return b2(a2(v2));
  };
};
var pipe = function() {
  var transformers = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    transformers[_i] = arguments[_i];
  }
  return transformers.reduce(combineFunctions);
};
function getMixer(origin, target) {
  if (isNum(origin)) {
    return function(v2) {
      return mix(origin, target, v2);
    };
  } else if (color.test(origin)) {
    return mixColor(origin, target);
  } else {
    return mixComplex(origin, target);
  }
}
var mixArray = function(from2, to) {
  var output = __spreadArray([], from2);
  var numValues = output.length;
  var blendValue = from2.map(function(fromThis, i) {
    return getMixer(fromThis, to[i]);
  });
  return function(v2) {
    for (var i = 0; i < numValues; i++) {
      output[i] = blendValue[i](v2);
    }
    return output;
  };
};
var mixObject = function(origin, target) {
  var output = __assign$2(__assign$2({}, origin), target);
  var blendValue = {};
  for (var key in output) {
    if (origin[key] !== void 0 && target[key] !== void 0) {
      blendValue[key] = getMixer(origin[key], target[key]);
    }
  }
  return function(v2) {
    for (var key2 in blendValue) {
      output[key2] = blendValue[key2](v2);
    }
    return output;
  };
};
function analyse(value) {
  var parsed = complex.parse(value);
  var numValues = parsed.length;
  var numNumbers = 0;
  var numRGB = 0;
  var numHSL = 0;
  for (var i = 0; i < numValues; i++) {
    if (numNumbers || typeof parsed[i] === "number") {
      numNumbers++;
    } else {
      if (parsed[i].hue !== void 0) {
        numHSL++;
      } else {
        numRGB++;
      }
    }
  }
  return { parsed, numNumbers, numRGB, numHSL };
}
var mixComplex = function(origin, target) {
  var template = complex.createTransformer(target);
  var originStats = analyse(origin);
  var targetStats = analyse(target);
  return pipe(mixArray(originStats.parsed, targetStats.parsed), template);
};
var mixNumber = function(from2, to) {
  return function(p2) {
    return mix(from2, to, p2);
  };
};
function detectMixerFactory(v2) {
  if (typeof v2 === "number") {
    return mixNumber;
  } else if (typeof v2 === "string") {
    if (color.test(v2)) {
      return mixColor;
    } else {
      return mixComplex;
    }
  } else if (Array.isArray(v2)) {
    return mixArray;
  } else if (typeof v2 === "object") {
    return mixObject;
  }
}
function createMixers(output, ease, customMixer) {
  var mixers = [];
  var mixerFactory = customMixer || detectMixerFactory(output[0]);
  var numMixers = output.length - 1;
  for (var i = 0; i < numMixers; i++) {
    var mixer = mixerFactory(output[i], output[i + 1]);
    if (ease) {
      var easingFunction = Array.isArray(ease) ? ease[i] : ease;
      mixer = pipe(easingFunction, mixer);
    }
    mixers.push(mixer);
  }
  return mixers;
}
function fastInterpolate(_a2, _b) {
  var from2 = _a2[0], to = _a2[1];
  var mixer = _b[0];
  return function(v2) {
    return mixer(progress(from2, to, v2));
  };
}
function slowInterpolate(input, mixers) {
  var inputLength = input.length;
  var lastInputIndex = inputLength - 1;
  return function(v2) {
    var mixerIndex = 0;
    var foundMixerIndex = false;
    if (v2 <= input[0]) {
      foundMixerIndex = true;
    } else if (v2 >= input[lastInputIndex]) {
      mixerIndex = lastInputIndex - 1;
      foundMixerIndex = true;
    }
    if (!foundMixerIndex) {
      var i = 1;
      for (; i < inputLength; i++) {
        if (input[i] > v2 || i === lastInputIndex) {
          break;
        }
      }
      mixerIndex = i - 1;
    }
    var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v2);
    return mixers[mixerIndex](progressInRange);
  };
}
function interpolate(input, output, _a2) {
  var _b = _a2 === void 0 ? {} : _a2, _c = _b.clamp, isClamp = _c === void 0 ? true : _c, ease = _b.ease, mixer = _b.mixer;
  var inputLength = input.length;
  invariant(inputLength === output.length);
  invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1);
  if (input[0] > input[inputLength - 1]) {
    input = [].concat(input);
    output = [].concat(output);
    input.reverse();
    output.reverse();
  }
  var mixers = createMixers(output, ease, mixer);
  var interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);
  return isClamp ? function(v2) {
    return interpolator(clamp(input[0], input[inputLength - 1], v2));
  } : interpolator;
}
var reverseEasing = function(easing) {
  return function(p2) {
    return 1 - easing(1 - p2);
  };
};
var mirrorEasing = function(easing) {
  return function(p2) {
    return p2 <= 0.5 ? easing(2 * p2) / 2 : (2 - easing(2 * (1 - p2))) / 2;
  };
};
var createExpoIn = function(power) {
  return function(p2) {
    return Math.pow(p2, power);
  };
};
var createBackIn = function(power) {
  return function(p2) {
    return p2 * p2 * ((power + 1) * p2 - power);
  };
};
var createAnticipate = function(power) {
  var backEasing = createBackIn(power);
  return function(p2) {
    return (p2 *= 2) < 1 ? 0.5 * backEasing(p2) : 0.5 * (2 - Math.pow(2, -10 * (p2 - 1)));
  };
};
var DEFAULT_OVERSHOOT_STRENGTH = 1.525;
var BOUNCE_FIRST_THRESHOLD = 4 / 11;
var BOUNCE_SECOND_THRESHOLD = 8 / 11;
var BOUNCE_THIRD_THRESHOLD = 9 / 10;
var linear = function(p2) {
  return p2;
};
var easeIn = createExpoIn(2);
var easeOut = reverseEasing(easeIn);
var easeInOut = mirrorEasing(easeIn);
var circIn = function(p2) {
  return 1 - Math.sin(Math.acos(p2));
};
var circOut = reverseEasing(circIn);
var circInOut = mirrorEasing(circOut);
var backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);
var backOut = reverseEasing(backIn);
var backInOut = mirrorEasing(backIn);
var anticipate = createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);
var ca = 4356 / 361;
var cb = 35442 / 1805;
var cc = 16061 / 1805;
var bounceOut = function(p2) {
  if (p2 === 1 || p2 === 0)
    return p2;
  var p22 = p2 * p2;
  return p2 < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p22 : p2 < BOUNCE_SECOND_THRESHOLD ? 9.075 * p22 - 9.9 * p2 + 3.4 : p2 < BOUNCE_THIRD_THRESHOLD ? ca * p22 - cb * p2 + cc : 10.8 * p2 * p2 - 20.52 * p2 + 10.72;
};
var bounceIn = reverseEasing(bounceOut);
var bounceInOut = function(p2) {
  return p2 < 0.5 ? 0.5 * (1 - bounceOut(1 - p2 * 2)) : 0.5 * bounceOut(p2 * 2 - 1) + 0.5;
};
function defaultEasing(values2, easing) {
  return values2.map(function() {
    return easing || easeInOut;
  }).splice(0, values2.length - 1);
}
function defaultOffset(values2) {
  var numValues = values2.length;
  return values2.map(function(_value, i) {
    return i !== 0 ? i / (numValues - 1) : 0;
  });
}
function convertOffsetToTimes(offset, duration) {
  return offset.map(function(o2) {
    return o2 * duration;
  });
}
function keyframes$1(_a2) {
  var _b = _a2.from, from2 = _b === void 0 ? 0 : _b, _c = _a2.to, to = _c === void 0 ? 1 : _c, ease = _a2.ease, offset = _a2.offset, _d = _a2.duration, duration = _d === void 0 ? 300 : _d;
  var state = { done: false, value: from2 };
  var values2 = Array.isArray(to) ? to : [from2, to];
  var times = convertOffsetToTimes(offset && offset.length === values2.length ? offset : defaultOffset(values2), duration);
  function createInterpolator() {
    return interpolate(times, values2, {
      ease: Array.isArray(ease) ? ease : defaultEasing(values2, ease)
    });
  }
  var interpolator = createInterpolator();
  return {
    next: function(t2) {
      state.value = interpolator(t2);
      state.done = t2 >= duration;
      return state;
    },
    flipTarget: function() {
      values2.reverse();
      interpolator = createInterpolator();
    }
  };
}
function decay(_a2) {
  var _b = _a2.velocity, velocity = _b === void 0 ? 0 : _b, _c = _a2.from, from2 = _c === void 0 ? 0 : _c, _d = _a2.power, power = _d === void 0 ? 0.8 : _d, _e = _a2.timeConstant, timeConstant = _e === void 0 ? 350 : _e, _f = _a2.restDelta, restDelta = _f === void 0 ? 0.5 : _f, modifyTarget = _a2.modifyTarget;
  var state = { done: false, value: from2 };
  var amplitude = power * velocity;
  var ideal = from2 + amplitude;
  var target = modifyTarget === void 0 ? ideal : modifyTarget(ideal);
  if (target !== ideal)
    amplitude = target - from2;
  return {
    next: function(t2) {
      var delta2 = -amplitude * Math.exp(-t2 / timeConstant);
      state.done = !(delta2 > restDelta || delta2 < -restDelta);
      state.value = state.done ? target : target + delta2;
      return state;
    },
    flipTarget: function() {
    }
  };
}
var types$1 = { keyframes: keyframes$1, spring, decay };
function detectAnimationFromOptions(config2) {
  if (Array.isArray(config2.to)) {
    return keyframes$1;
  } else if (types$1[config2.type]) {
    return types$1[config2.type];
  }
  var keys2 = new Set(Object.keys(config2));
  if (keys2.has("ease") || keys2.has("duration") && !keys2.has("dampingRatio")) {
    return keyframes$1;
  } else if (keys2.has("dampingRatio") || keys2.has("stiffness") || keys2.has("mass") || keys2.has("damping") || keys2.has("restSpeed") || keys2.has("restDelta")) {
    return spring;
  }
  return keyframes$1;
}
function loopElapsed(elapsed, duration, delay) {
  if (delay === void 0) {
    delay = 0;
  }
  return elapsed - duration - delay;
}
function reverseElapsed(elapsed, duration, delay, isForwardPlayback) {
  if (delay === void 0) {
    delay = 0;
  }
  if (isForwardPlayback === void 0) {
    isForwardPlayback = true;
  }
  return isForwardPlayback ? loopElapsed(duration + -elapsed, duration, delay) : duration - (elapsed - duration) + delay;
}
function hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {
  return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;
}
var framesync = function(update) {
  var passTimestamp = function(_a2) {
    var delta2 = _a2.delta;
    return update(delta2);
  };
  return {
    start: function() {
      return sync.update(passTimestamp, true);
    },
    stop: function() {
      return cancelSync.update(passTimestamp);
    }
  };
};
function animate(_a2) {
  var _b, _c;
  var from2 = _a2.from, _d = _a2.autoplay, autoplay = _d === void 0 ? true : _d, _e = _a2.driver, driver = _e === void 0 ? framesync : _e, _f = _a2.elapsed, elapsed = _f === void 0 ? 0 : _f, _g = _a2.repeat, repeatMax = _g === void 0 ? 0 : _g, _h = _a2.repeatType, repeatType = _h === void 0 ? "loop" : _h, _j = _a2.repeatDelay, repeatDelay = _j === void 0 ? 0 : _j, onPlay = _a2.onPlay, onStop = _a2.onStop, onComplete = _a2.onComplete, onRepeat = _a2.onRepeat, onUpdate = _a2.onUpdate, options = __rest$1(_a2, ["from", "autoplay", "driver", "elapsed", "repeat", "repeatType", "repeatDelay", "onPlay", "onStop", "onComplete", "onRepeat", "onUpdate"]);
  var to = options.to;
  var driverControls;
  var repeatCount = 0;
  var computedDuration = options.duration;
  var latest;
  var isComplete = false;
  var isForwardPlayback = true;
  var interpolateFromNumber;
  var animator = detectAnimationFromOptions(options);
  if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from2, to)) {
    interpolateFromNumber = interpolate([0, 100], [from2, to], {
      clamp: false
    });
    from2 = 0;
    to = 100;
  }
  var animation = animator(__assign$2(__assign$2({}, options), { from: from2, to }));
  function repeat() {
    repeatCount++;
    if (repeatType === "reverse") {
      isForwardPlayback = repeatCount % 2 === 0;
      elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);
    } else {
      elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);
      if (repeatType === "mirror")
        animation.flipTarget();
    }
    isComplete = false;
    onRepeat && onRepeat();
  }
  function complete() {
    driverControls.stop();
    onComplete && onComplete();
  }
  function update(delta2) {
    if (!isForwardPlayback)
      delta2 = -delta2;
    elapsed += delta2;
    if (!isComplete) {
      var state = animation.next(Math.max(0, elapsed));
      latest = state.value;
      if (interpolateFromNumber)
        latest = interpolateFromNumber(latest);
      isComplete = isForwardPlayback ? state.done : elapsed <= 0;
    }
    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);
    if (isComplete) {
      if (repeatCount === 0)
        computedDuration !== null && computedDuration !== void 0 ? computedDuration : computedDuration = elapsed;
      if (repeatCount < repeatMax) {
        hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();
      } else {
        complete();
      }
    }
  }
  function play() {
    onPlay === null || onPlay === void 0 ? void 0 : onPlay();
    driverControls = driver(update);
    driverControls.start();
  }
  autoplay && play();
  return {
    stop: function() {
      onStop === null || onStop === void 0 ? void 0 : onStop();
      driverControls.stop();
    }
  };
}
function velocityPerSecond(velocity, frameDuration) {
  return frameDuration ? velocity * (1e3 / frameDuration) : 0;
}
function inertia(_a2) {
  var _b = _a2.from, from2 = _b === void 0 ? 0 : _b, _c = _a2.velocity, velocity = _c === void 0 ? 0 : _c, min = _a2.min, max = _a2.max, _d = _a2.power, power = _d === void 0 ? 0.8 : _d, _e = _a2.timeConstant, timeConstant = _e === void 0 ? 750 : _e, _f = _a2.bounceStiffness, bounceStiffness = _f === void 0 ? 500 : _f, _g = _a2.bounceDamping, bounceDamping = _g === void 0 ? 10 : _g, _h = _a2.restDelta, restDelta = _h === void 0 ? 1 : _h, modifyTarget = _a2.modifyTarget, driver = _a2.driver, onUpdate = _a2.onUpdate, onComplete = _a2.onComplete;
  var currentAnimation;
  function isOutOfBounds(v2) {
    return min !== void 0 && v2 < min || max !== void 0 && v2 > max;
  }
  function boundaryNearest(v2) {
    if (min === void 0)
      return max;
    if (max === void 0)
      return min;
    return Math.abs(min - v2) < Math.abs(max - v2) ? min : max;
  }
  function startAnimation2(options) {
    currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();
    currentAnimation = animate(__assign$2(__assign$2({}, options), { driver, onUpdate: function(v2) {
      var _a3;
      onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v2);
      (_a3 = options.onUpdate) === null || _a3 === void 0 ? void 0 : _a3.call(options, v2);
    }, onComplete }));
  }
  function startSpring(options) {
    startAnimation2(__assign$2({ type: "spring", stiffness: bounceStiffness, damping: bounceDamping, restDelta }, options));
  }
  if (isOutOfBounds(from2)) {
    startSpring({ from: from2, velocity, to: boundaryNearest(from2) });
  } else {
    var target = power * velocity + from2;
    if (typeof modifyTarget !== "undefined")
      target = modifyTarget(target);
    var boundary_1 = boundaryNearest(target);
    var heading_1 = boundary_1 === min ? -1 : 1;
    var prev_1;
    var current_1;
    var checkBoundary = function(v2) {
      prev_1 = current_1;
      current_1 = v2;
      velocity = velocityPerSecond(v2 - prev_1, getFrameData().delta);
      if (heading_1 === 1 && v2 > boundary_1 || heading_1 === -1 && v2 < boundary_1) {
        startSpring({ from: v2, to: boundary_1, velocity });
      }
    };
    startAnimation2({
      type: "decay",
      from: from2,
      velocity,
      timeConstant,
      power,
      restDelta,
      modifyTarget,
      onUpdate: isOutOfBounds(target) ? checkBoundary : void 0
    });
  }
  return {
    stop: function() {
      return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();
    }
  };
}
var isPoint = function(point) {
  return point.hasOwnProperty("x") && point.hasOwnProperty("y");
};
var isPoint3D = function(point) {
  return isPoint(point) && point.hasOwnProperty("z");
};
var distance1D = function(a2, b2) {
  return Math.abs(a2 - b2);
};
function distance(a2, b2) {
  if (isNum(a2) && isNum(b2)) {
    return distance1D(a2, b2);
  } else if (isPoint(a2) && isPoint(b2)) {
    var xDelta = distance1D(a2.x, b2.x);
    var yDelta = distance1D(a2.y, b2.y);
    var zDelta = isPoint3D(a2) && isPoint3D(b2) ? distance1D(a2.z, b2.z) : 0;
    return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));
  }
}
var a = function(a1, a2) {
  return 1 - 3 * a2 + 3 * a1;
};
var b = function(a1, a2) {
  return 3 * a2 - 6 * a1;
};
var c = function(a1) {
  return 3 * a1;
};
var calcBezier = function(t2, a1, a2) {
  return ((a(a1, a2) * t2 + b(a1, a2)) * t2 + c(a1)) * t2;
};
var getSlope = function(t2, a1, a2) {
  return 3 * a(a1, a2) * t2 * t2 + 2 * b(a1, a2) * t2 + c(a1);
};
var subdivisionPrecision = 1e-7;
var subdivisionMaxIterations = 10;
function binarySubdivide(aX, aA, aB, mX1, mX2) {
  var currentX;
  var currentT;
  var i = 0;
  do {
    currentT = aA + (aB - aA) / 2;
    currentX = calcBezier(currentT, mX1, mX2) - aX;
    if (currentX > 0) {
      aB = currentT;
    } else {
      aA = currentT;
    }
  } while (Math.abs(currentX) > subdivisionPrecision && ++i < subdivisionMaxIterations);
  return currentT;
}
var newtonIterations = 8;
var newtonMinSlope = 1e-3;
function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
  for (var i = 0; i < newtonIterations; ++i) {
    var currentSlope = getSlope(aGuessT, mX1, mX2);
    if (currentSlope === 0) {
      return aGuessT;
    }
    var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
    aGuessT -= currentX / currentSlope;
  }
  return aGuessT;
}
var kSplineTableSize = 11;
var kSampleStepSize = 1 / (kSplineTableSize - 1);
function cubicBezier(mX1, mY1, mX2, mY2) {
  if (mX1 === mY1 && mX2 === mY2)
    return linear;
  var sampleValues = new Float32Array(kSplineTableSize);
  for (var i = 0; i < kSplineTableSize; ++i) {
    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
  }
  function getTForX(aX) {
    var intervalStart = 0;
    var currentSample = 1;
    var lastSample = kSplineTableSize - 1;
    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {
      intervalStart += kSampleStepSize;
    }
    --currentSample;
    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);
    var guessForT = intervalStart + dist * kSampleStepSize;
    var initialSlope = getSlope(guessForT, mX1, mX2);
    if (initialSlope >= newtonMinSlope) {
      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
    } else if (initialSlope === 0) {
      return guessForT;
    } else {
      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
    }
  }
  return function(t2) {
    return t2 === 0 || t2 === 1 ? t2 : calcBezier(getTForX(t2), mY1, mY2);
  };
}
function useTapGesture(_a2) {
  var onTap = _a2.onTap, onTapStart = _a2.onTapStart, onTapCancel = _a2.onTapCancel, whileTap = _a2.whileTap, visualElement2 = _a2.visualElement;
  var hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;
  var isPressing = react.exports.useRef(false);
  var cancelPointerEndListeners = react.exports.useRef(null);
  function removePointerEndListener() {
    var _a3;
    (_a3 = cancelPointerEndListeners.current) === null || _a3 === void 0 ? void 0 : _a3.call(cancelPointerEndListeners);
    cancelPointerEndListeners.current = null;
  }
  function checkPointerEnd() {
    var _a3;
    removePointerEndListener();
    isPressing.current = false;
    (_a3 = visualElement2.animationState) === null || _a3 === void 0 ? void 0 : _a3.setActive(AnimationType.Tap, false);
    return !isDragActive();
  }
  function onPointerUp(event, info) {
    if (!checkPointerEnd())
      return;
    !isNodeOrChild(visualElement2.getInstance(), event.target) ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info) : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);
  }
  function onPointerCancel(event, info) {
    if (!checkPointerEnd())
      return;
    onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);
  }
  function onPointerDown(event, info) {
    var _a3;
    removePointerEndListener();
    if (isPressing.current)
      return;
    isPressing.current = true;
    cancelPointerEndListeners.current = pipe(addPointerEvent(window, "pointerup", onPointerUp), addPointerEvent(window, "pointercancel", onPointerCancel));
    onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);
    (_a3 = visualElement2.animationState) === null || _a3 === void 0 ? void 0 : _a3.setActive(AnimationType.Tap, true);
  }
  usePointerEvent(visualElement2, "pointerdown", hasPressListeners ? onPointerDown : void 0);
  useUnmountEffect(removePointerEndListener);
}
var makeRenderlessComponent = function(hook) {
  return function(props) {
    hook(props);
    return null;
  };
};
var gestureAnimations = {
  tap: makeRenderlessComponent(useTapGesture),
  focus: makeRenderlessComponent(useFocusGesture),
  hover: makeRenderlessComponent(useHoverGesture)
};
function shallowCompare(next2, prev2) {
  if (!Array.isArray(prev2))
    return false;
  var prevLength = prev2.length;
  if (prevLength !== next2.length)
    return false;
  for (var i = 0; i < prevLength; i++) {
    if (prev2[i] !== next2[i])
      return false;
  }
  return true;
}
var secondsToMilliseconds = function(seconds) {
  return seconds * 1e3;
};
var easingLookup = {
  linear,
  easeIn,
  easeInOut,
  easeOut,
  circIn,
  circInOut,
  circOut,
  backIn,
  backInOut,
  backOut,
  anticipate,
  bounceIn,
  bounceInOut,
  bounceOut
};
var easingDefinitionToFunction = function(definition) {
  if (Array.isArray(definition)) {
    invariant(definition.length === 4);
    var _a2 = __read$2(definition, 4), x1 = _a2[0], y1 = _a2[1], x2 = _a2[2], y2 = _a2[3];
    return cubicBezier(x1, y1, x2, y2);
  } else if (typeof definition === "string") {
    return easingLookup[definition];
  }
  return definition;
};
var isEasingArray = function(ease) {
  return Array.isArray(ease) && typeof ease[0] !== "number";
};
var isAnimatable = function(key, value) {
  if (key === "zIndex")
    return false;
  if (typeof value === "number" || Array.isArray(value))
    return true;
  if (typeof value === "string" && complex.test(value) && !value.startsWith("url(")) {
    return true;
  }
  return false;
};
var underDampedSpring = function() {
  return {
    type: "spring",
    stiffness: 500,
    damping: 25,
    restDelta: 0.5,
    restSpeed: 10
  };
};
var criticallyDampedSpring = function(to) {
  return {
    type: "spring",
    stiffness: 550,
    damping: to === 0 ? 2 * Math.sqrt(550) : 30,
    restDelta: 0.01,
    restSpeed: 10
  };
};
var linearTween = function() {
  return {
    type: "keyframes",
    ease: "linear",
    duration: 0.3
  };
};
var keyframes2 = function(values2) {
  return {
    type: "keyframes",
    duration: 0.8,
    values: values2
  };
};
var defaultTransitions = {
  x: underDampedSpring,
  y: underDampedSpring,
  z: underDampedSpring,
  rotate: underDampedSpring,
  rotateX: underDampedSpring,
  rotateY: underDampedSpring,
  rotateZ: underDampedSpring,
  scaleX: criticallyDampedSpring,
  scaleY: criticallyDampedSpring,
  scale: criticallyDampedSpring,
  opacity: linearTween,
  backgroundColor: linearTween,
  color: linearTween,
  default: criticallyDampedSpring
};
var getDefaultTransition = function(valueKey, to) {
  var transitionFactory;
  if (isKeyframesTarget(to)) {
    transitionFactory = keyframes2;
  } else {
    transitionFactory = defaultTransitions[valueKey] || defaultTransitions.default;
  }
  return __assign$2({ to }, transitionFactory(to));
};
var defaultValueTypes = __assign$2(__assign$2({}, numberValueTypes), {
  color,
  backgroundColor: color,
  outlineColor: color,
  fill: color,
  stroke: color,
  borderColor: color,
  borderTopColor: color,
  borderRightColor: color,
  borderBottomColor: color,
  borderLeftColor: color,
  filter: filter2,
  WebkitFilter: filter2
});
var getDefaultValueType = function(key) {
  return defaultValueTypes[key];
};
function getAnimatableNone(key, value) {
  var _a2;
  var defaultValueType = getDefaultValueType(key);
  if (defaultValueType !== filter2)
    defaultValueType = complex;
  return (_a2 = defaultValueType.getAnimatableNone) === null || _a2 === void 0 ? void 0 : _a2.call(defaultValueType, value);
}
function isTransitionDefined(_a2) {
  _a2.when;
  _a2.delay;
  _a2.delayChildren;
  _a2.staggerChildren;
  _a2.staggerDirection;
  _a2.repeat;
  _a2.repeatType;
  _a2.repeatDelay;
  _a2.from;
  var transition2 = __rest$1(_a2, ["when", "delay", "delayChildren", "staggerChildren", "staggerDirection", "repeat", "repeatType", "repeatDelay", "from"]);
  return !!Object.keys(transition2).length;
}
function convertTransitionToAnimationOptions(_a2) {
  var ease = _a2.ease, times = _a2.times, yoyo = _a2.yoyo, flip = _a2.flip, loop = _a2.loop, transition2 = __rest$1(_a2, ["ease", "times", "yoyo", "flip", "loop"]);
  var options = __assign$2({}, transition2);
  if (times)
    options["offset"] = times;
  if (transition2.duration)
    options["duration"] = secondsToMilliseconds(transition2.duration);
  if (transition2.repeatDelay)
    options.repeatDelay = secondsToMilliseconds(transition2.repeatDelay);
  if (ease) {
    options["ease"] = isEasingArray(ease) ? ease.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease);
  }
  if (transition2.type === "tween")
    options.type = "keyframes";
  if (yoyo || loop || flip) {
    if (yoyo) {
      options.repeatType = "reverse";
    } else if (loop) {
      options.repeatType = "loop";
    } else if (flip) {
      options.repeatType = "mirror";
    }
    options.repeat = loop || yoyo || flip || transition2.repeat;
  }
  if (transition2.type !== "spring")
    options.type = "keyframes";
  return options;
}
function getDelayFromTransition(transition2, key) {
  var _a2;
  var valueTransition = getValueTransition(transition2, key) || {};
  return (_a2 = valueTransition.delay) !== null && _a2 !== void 0 ? _a2 : 0;
}
function hydrateKeyframes(options) {
  if (Array.isArray(options.to) && options.to[0] === null) {
    options.to = __spreadArray([], __read$2(options.to));
    options.to[0] = options.from;
  }
  return options;
}
function getPopmotionAnimationOptions(transition2, options, key) {
  var _a2;
  if (Array.isArray(options.to)) {
    (_a2 = transition2.duration) !== null && _a2 !== void 0 ? _a2 : transition2.duration = 0.8;
  }
  hydrateKeyframes(options);
  if (!isTransitionDefined(transition2)) {
    transition2 = __assign$2(__assign$2({}, transition2), getDefaultTransition(key, options.to));
  }
  return __assign$2(__assign$2({}, options), convertTransitionToAnimationOptions(transition2));
}
function getAnimation(key, value, target, transition2, onComplete) {
  var _a2;
  var valueTransition = getValueTransition(transition2, key);
  var origin = (_a2 = valueTransition.from) !== null && _a2 !== void 0 ? _a2 : value.get();
  var isTargetAnimatable = isAnimatable(key, target);
  if (origin === "none" && isTargetAnimatable && typeof target === "string") {
    origin = getAnimatableNone(key, target);
  } else if (isZero(origin) && typeof target === "string") {
    origin = getZeroUnit(target);
  } else if (!Array.isArray(target) && isZero(target) && typeof origin === "string") {
    target = getZeroUnit(origin);
  }
  var isOriginAnimatable = isAnimatable(key, origin);
  function start() {
    var options = {
      from: origin,
      to: target,
      velocity: value.getVelocity(),
      onComplete,
      onUpdate: function(v2) {
        return value.set(v2);
      }
    };
    return valueTransition.type === "inertia" || valueTransition.type === "decay" ? inertia(__assign$2(__assign$2({}, options), valueTransition)) : animate(__assign$2(__assign$2({}, getPopmotionAnimationOptions(valueTransition, options, key)), { onUpdate: function(v2) {
      var _a3;
      options.onUpdate(v2);
      (_a3 = valueTransition.onUpdate) === null || _a3 === void 0 ? void 0 : _a3.call(valueTransition, v2);
    }, onComplete: function() {
      var _a3;
      options.onComplete();
      (_a3 = valueTransition.onComplete) === null || _a3 === void 0 ? void 0 : _a3.call(valueTransition);
    } }));
  }
  function set7() {
    var _a3;
    value.set(target);
    onComplete();
    (_a3 = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onComplete) === null || _a3 === void 0 ? void 0 : _a3.call(valueTransition);
    return { stop: function() {
    } };
  }
  return !isOriginAnimatable || !isTargetAnimatable || valueTransition.type === false ? set7 : start;
}
function isZero(value) {
  return value === 0 || typeof value === "string" && parseFloat(value) === 0 && value.indexOf(" ") === -1;
}
function getZeroUnit(potentialUnitType) {
  return typeof potentialUnitType === "number" ? 0 : getAnimatableNone("", potentialUnitType);
}
function getValueTransition(transition2, key) {
  return transition2[key] || transition2["default"] || transition2;
}
function startAnimation(key, value, target, transition2) {
  if (transition2 === void 0) {
    transition2 = {};
  }
  return value.start(function(onComplete) {
    var delayTimer;
    var controls;
    var animation = getAnimation(key, value, target, transition2, onComplete);
    var delay = getDelayFromTransition(transition2, key);
    var start = function() {
      return controls = animation();
    };
    if (delay) {
      delayTimer = setTimeout(start, secondsToMilliseconds(delay));
    } else {
      start();
    }
    return function() {
      clearTimeout(delayTimer);
      controls === null || controls === void 0 ? void 0 : controls.stop();
    };
  });
}
var isNumericalString = function(v2) {
  return /^\-?\d*\.?\d+$/.test(v2);
};
function addUniqueItem(arr, item) {
  arr.indexOf(item) === -1 && arr.push(item);
}
function removeItem(arr, item) {
  var index = arr.indexOf(item);
  index > -1 && arr.splice(index, 1);
}
var SubscriptionManager = function() {
  function SubscriptionManager2() {
    this.subscriptions = [];
  }
  SubscriptionManager2.prototype.add = function(handler) {
    var _this = this;
    addUniqueItem(this.subscriptions, handler);
    return function() {
      return removeItem(_this.subscriptions, handler);
    };
  };
  SubscriptionManager2.prototype.notify = function(a2, b2, c2) {
    var numSubscriptions = this.subscriptions.length;
    if (!numSubscriptions)
      return;
    if (numSubscriptions === 1) {
      this.subscriptions[0](a2, b2, c2);
    } else {
      for (var i = 0; i < numSubscriptions; i++) {
        var handler = this.subscriptions[i];
        handler && handler(a2, b2, c2);
      }
    }
  };
  SubscriptionManager2.prototype.getSize = function() {
    return this.subscriptions.length;
  };
  SubscriptionManager2.prototype.clear = function() {
    this.subscriptions.length = 0;
  };
  return SubscriptionManager2;
}();
var isFloat = function(value) {
  return !isNaN(parseFloat(value));
};
var MotionValue = function() {
  function MotionValue2(init) {
    var _this = this;
    this.timeDelta = 0;
    this.lastUpdated = 0;
    this.updateSubscribers = new SubscriptionManager();
    this.velocityUpdateSubscribers = new SubscriptionManager();
    this.renderSubscribers = new SubscriptionManager();
    this.canTrackVelocity = false;
    this.updateAndNotify = function(v2, render) {
      if (render === void 0) {
        render = true;
      }
      _this.prev = _this.current;
      _this.current = v2;
      var _a2 = getFrameData(), delta2 = _a2.delta, timestamp = _a2.timestamp;
      if (_this.lastUpdated !== timestamp) {
        _this.timeDelta = delta2;
        _this.lastUpdated = timestamp;
        sync.postRender(_this.scheduleVelocityCheck);
      }
      if (_this.prev !== _this.current) {
        _this.updateSubscribers.notify(_this.current);
      }
      if (_this.velocityUpdateSubscribers.getSize()) {
        _this.velocityUpdateSubscribers.notify(_this.getVelocity());
      }
      if (render) {
        _this.renderSubscribers.notify(_this.current);
      }
    };
    this.scheduleVelocityCheck = function() {
      return sync.postRender(_this.velocityCheck);
    };
    this.velocityCheck = function(_a2) {
      var timestamp = _a2.timestamp;
      if (timestamp !== _this.lastUpdated) {
        _this.prev = _this.current;
        _this.velocityUpdateSubscribers.notify(_this.getVelocity());
      }
    };
    this.hasAnimated = false;
    this.prev = this.current = init;
    this.canTrackVelocity = isFloat(this.current);
  }
  MotionValue2.prototype.onChange = function(subscription) {
    return this.updateSubscribers.add(subscription);
  };
  MotionValue2.prototype.clearListeners = function() {
    this.updateSubscribers.clear();
  };
  MotionValue2.prototype.onRenderRequest = function(subscription) {
    subscription(this.get());
    return this.renderSubscribers.add(subscription);
  };
  MotionValue2.prototype.attach = function(passiveEffect) {
    this.passiveEffect = passiveEffect;
  };
  MotionValue2.prototype.set = function(v2, render) {
    if (render === void 0) {
      render = true;
    }
    if (!render || !this.passiveEffect) {
      this.updateAndNotify(v2, render);
    } else {
      this.passiveEffect(v2, this.updateAndNotify);
    }
  };
  MotionValue2.prototype.get = function() {
    return this.current;
  };
  MotionValue2.prototype.getPrevious = function() {
    return this.prev;
  };
  MotionValue2.prototype.getVelocity = function() {
    return this.canTrackVelocity ? velocityPerSecond(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta) : 0;
  };
  MotionValue2.prototype.start = function(animation) {
    var _this = this;
    this.stop();
    return new Promise(function(resolve2) {
      _this.hasAnimated = true;
      _this.stopAnimation = animation(resolve2);
    }).then(function() {
      return _this.clearAnimation();
    });
  };
  MotionValue2.prototype.stop = function() {
    if (this.stopAnimation)
      this.stopAnimation();
    this.clearAnimation();
  };
  MotionValue2.prototype.isAnimating = function() {
    return !!this.stopAnimation;
  };
  MotionValue2.prototype.clearAnimation = function() {
    this.stopAnimation = null;
  };
  MotionValue2.prototype.destroy = function() {
    this.updateSubscribers.clear();
    this.renderSubscribers.clear();
    this.stop();
  };
  return MotionValue2;
}();
function motionValue(init) {
  return new MotionValue(init);
}
var testValueType = function(v2) {
  return function(type) {
    return type.test(v2);
  };
};
var auto = {
  test: function(v2) {
    return v2 === "auto";
  },
  parse: function(v2) {
    return v2;
  }
};
var dimensionValueTypes = [number$1, px2, percent, degrees, vw, vh, auto];
var findDimensionValueType = function(v2) {
  return dimensionValueTypes.find(testValueType(v2));
};
var valueTypes = __spreadArray(__spreadArray([], __read$2(dimensionValueTypes)), [color, complex]);
var findValueType = function(v2) {
  return valueTypes.find(testValueType(v2));
};
function setMotionValue(visualElement2, key, value) {
  if (visualElement2.hasValue(key)) {
    visualElement2.getValue(key).set(value);
  } else {
    visualElement2.addValue(key, motionValue(value));
  }
}
function setTarget(visualElement2, definition) {
  var resolved = resolveVariant(visualElement2, definition);
  var _a2 = resolved ? visualElement2.makeTargetAnimatable(resolved, false) : {}, _b = _a2.transitionEnd, transitionEnd = _b === void 0 ? {} : _b;
  _a2.transition;
  var target = __rest$1(_a2, ["transitionEnd", "transition"]);
  target = __assign$2(__assign$2({}, target), transitionEnd);
  for (var key in target) {
    var value = resolveFinalValueInKeyframes(target[key]);
    setMotionValue(visualElement2, key, value);
  }
}
function checkTargetForNewValues(visualElement2, target, origin) {
  var _a2, _b, _c;
  var _d;
  var newValueKeys = Object.keys(target).filter(function(key2) {
    return !visualElement2.hasValue(key2);
  });
  var numNewValues = newValueKeys.length;
  if (!numNewValues)
    return;
  for (var i = 0; i < numNewValues; i++) {
    var key = newValueKeys[i];
    var targetValue = target[key];
    var value = null;
    if (Array.isArray(targetValue)) {
      value = targetValue[0];
    }
    if (value === null) {
      value = (_b = (_a2 = origin[key]) !== null && _a2 !== void 0 ? _a2 : visualElement2.readValue(key)) !== null && _b !== void 0 ? _b : target[key];
    }
    if (value === void 0 || value === null)
      continue;
    if (typeof value === "string" && isNumericalString(value)) {
      value = parseFloat(value);
    } else if (!findValueType(value) && complex.test(targetValue)) {
      value = getAnimatableNone(key, targetValue);
    }
    visualElement2.addValue(key, motionValue(value));
    (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : _d[key] = value;
    visualElement2.setBaseTarget(key, value);
  }
}
function getOriginFromTransition(key, transition2) {
  if (!transition2)
    return;
  var valueTransition = transition2[key] || transition2["default"] || transition2;
  return valueTransition.from;
}
function getOrigin(target, transition2, visualElement2) {
  var _a2, _b;
  var origin = {};
  for (var key in target) {
    origin[key] = (_a2 = getOriginFromTransition(key, transition2)) !== null && _a2 !== void 0 ? _a2 : (_b = visualElement2.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();
  }
  return origin;
}
function animateVisualElement(visualElement2, definition, options) {
  if (options === void 0) {
    options = {};
  }
  visualElement2.notifyAnimationStart();
  var animation;
  if (Array.isArray(definition)) {
    var animations2 = definition.map(function(variant) {
      return animateVariant(visualElement2, variant, options);
    });
    animation = Promise.all(animations2);
  } else if (typeof definition === "string") {
    animation = animateVariant(visualElement2, definition, options);
  } else {
    var resolvedDefinition = typeof definition === "function" ? resolveVariant(visualElement2, definition, options.custom) : definition;
    animation = animateTarget(visualElement2, resolvedDefinition, options);
  }
  return animation.then(function() {
    return visualElement2.notifyAnimationComplete(definition);
  });
}
function animateVariant(visualElement2, variant, options) {
  var _a2;
  if (options === void 0) {
    options = {};
  }
  var resolved = resolveVariant(visualElement2, variant, options.custom);
  var _b = (resolved || {}).transition, transition2 = _b === void 0 ? visualElement2.getDefaultTransition() || {} : _b;
  if (options.transitionOverride) {
    transition2 = options.transitionOverride;
  }
  var getAnimation2 = resolved ? function() {
    return animateTarget(visualElement2, resolved, options);
  } : function() {
    return Promise.resolve();
  };
  var getChildAnimations = ((_a2 = visualElement2.variantChildren) === null || _a2 === void 0 ? void 0 : _a2.size) ? function(forwardDelay) {
    if (forwardDelay === void 0) {
      forwardDelay = 0;
    }
    var _a3 = transition2.delayChildren, delayChildren = _a3 === void 0 ? 0 : _a3, staggerChildren = transition2.staggerChildren, staggerDirection = transition2.staggerDirection;
    return animateChildren(visualElement2, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);
  } : function() {
    return Promise.resolve();
  };
  var when = transition2.when;
  if (when) {
    var _c = __read$2(when === "beforeChildren" ? [getAnimation2, getChildAnimations] : [getChildAnimations, getAnimation2], 2), first = _c[0], last = _c[1];
    return first().then(last);
  } else {
    return Promise.all([getAnimation2(), getChildAnimations(options.delay)]);
  }
}
function animateTarget(visualElement2, definition, _a2) {
  var _b;
  var _c = _a2 === void 0 ? {} : _a2, _d = _c.delay, delay = _d === void 0 ? 0 : _d, transitionOverride = _c.transitionOverride, type = _c.type;
  var _e = visualElement2.makeTargetAnimatable(definition), _f = _e.transition, transition2 = _f === void 0 ? visualElement2.getDefaultTransition() : _f, transitionEnd = _e.transitionEnd, target = __rest$1(_e, ["transition", "transitionEnd"]);
  if (transitionOverride)
    transition2 = transitionOverride;
  var animations2 = [];
  var animationTypeState = type && ((_b = visualElement2.animationState) === null || _b === void 0 ? void 0 : _b.getState()[type]);
  for (var key in target) {
    var value = visualElement2.getValue(key);
    var valueTarget = target[key];
    if (!value || valueTarget === void 0 || animationTypeState && shouldBlockAnimation(animationTypeState, key)) {
      continue;
    }
    var animation = startAnimation(key, value, valueTarget, __assign$2({ delay }, transition2));
    animations2.push(animation);
  }
  return Promise.all(animations2).then(function() {
    transitionEnd && setTarget(visualElement2, transitionEnd);
  });
}
function animateChildren(visualElement2, variant, delayChildren, staggerChildren, staggerDirection, options) {
  if (delayChildren === void 0) {
    delayChildren = 0;
  }
  if (staggerChildren === void 0) {
    staggerChildren = 0;
  }
  if (staggerDirection === void 0) {
    staggerDirection = 1;
  }
  var animations2 = [];
  var maxStaggerDuration = (visualElement2.variantChildren.size - 1) * staggerChildren;
  var generateStaggerDuration = staggerDirection === 1 ? function(i) {
    if (i === void 0) {
      i = 0;
    }
    return i * staggerChildren;
  } : function(i) {
    if (i === void 0) {
      i = 0;
    }
    return maxStaggerDuration - i * staggerChildren;
  };
  Array.from(visualElement2.variantChildren).sort(sortByTreeOrder).forEach(function(child, i) {
    animations2.push(animateVariant(child, variant, __assign$2(__assign$2({}, options), { delay: delayChildren + generateStaggerDuration(i) })).then(function() {
      return child.notifyAnimationComplete(variant);
    }));
  });
  return Promise.all(animations2);
}
function sortByTreeOrder(a2, b2) {
  return a2.sortNodePosition(b2);
}
function shouldBlockAnimation(_a2, key) {
  var protectedKeys = _a2.protectedKeys, needsAnimating = _a2.needsAnimating;
  var shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;
  needsAnimating[key] = false;
  return shouldBlock;
}
var variantPriorityOrder = [
  AnimationType.Animate,
  AnimationType.Hover,
  AnimationType.Tap,
  AnimationType.Drag,
  AnimationType.Focus,
  AnimationType.Exit
];
var reversePriorityOrder = __spreadArray([], __read$2(variantPriorityOrder)).reverse();
var numAnimationTypes = variantPriorityOrder.length;
function animateList(visualElement2) {
  return function(animations2) {
    return Promise.all(animations2.map(function(_a2) {
      var animation = _a2.animation, options = _a2.options;
      return animateVisualElement(visualElement2, animation, options);
    }));
  };
}
function createAnimationState(visualElement2) {
  var animate2 = animateList(visualElement2);
  var state = createState();
  var allAnimatedKeys = {};
  var isInitialRender = true;
  var buildResolvedTypeValues = function(acc, definition) {
    var resolved = resolveVariant(visualElement2, definition);
    if (resolved) {
      resolved.transition;
      var transitionEnd = resolved.transitionEnd, target = __rest$1(resolved, ["transition", "transitionEnd"]);
      acc = __assign$2(__assign$2(__assign$2({}, acc), target), transitionEnd);
    }
    return acc;
  };
  function isAnimated(key) {
    return allAnimatedKeys[key] !== void 0;
  }
  function setAnimateFunction(makeAnimator) {
    animate2 = makeAnimator(visualElement2);
  }
  function animateChanges(options, changedActiveType) {
    var _a2;
    var props = visualElement2.getProps();
    var context = visualElement2.getVariantContext(true) || {};
    var animations2 = [];
    var removedKeys = new Set();
    var encounteredKeys = {};
    var removedVariantIndex = Infinity;
    var _loop_1 = function(i2) {
      var type = reversePriorityOrder[i2];
      var typeState = state[type];
      var prop2 = (_a2 = props[type]) !== null && _a2 !== void 0 ? _a2 : context[type];
      var propIsVariant = isVariantLabel(prop2);
      var activeDelta = type === changedActiveType ? typeState.isActive : null;
      if (activeDelta === false)
        removedVariantIndex = i2;
      var isInherited = prop2 === context[type] && prop2 !== props[type] && propIsVariant;
      if (isInherited && isInitialRender && visualElement2.manuallyAnimateOnMount) {
        isInherited = false;
      }
      typeState.protectedKeys = __assign$2({}, encounteredKeys);
      if (!typeState.isActive && activeDelta === null || !prop2 && !typeState.prevProp || isAnimationControls(prop2) || typeof prop2 === "boolean") {
        return "continue";
      }
      var shouldAnimateType = variantsHaveChanged(typeState.prevProp, prop2) || type === changedActiveType && typeState.isActive && !isInherited && propIsVariant || i2 > removedVariantIndex && propIsVariant;
      var definitionList = Array.isArray(prop2) ? prop2 : [prop2];
      var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});
      if (activeDelta === false)
        resolvedValues = {};
      var _b = typeState.prevResolvedValues, prevResolvedValues = _b === void 0 ? {} : _b;
      var allKeys = __assign$2(__assign$2({}, prevResolvedValues), resolvedValues);
      var markToAnimate = function(key2) {
        shouldAnimateType = true;
        removedKeys.delete(key2);
        typeState.needsAnimating[key2] = true;
      };
      for (var key in allKeys) {
        var next2 = resolvedValues[key];
        var prev2 = prevResolvedValues[key];
        if (encounteredKeys.hasOwnProperty(key))
          continue;
        if (next2 !== prev2) {
          if (isKeyframesTarget(next2) && isKeyframesTarget(prev2)) {
            if (!shallowCompare(next2, prev2)) {
              markToAnimate(key);
            } else {
              typeState.protectedKeys[key] = true;
            }
          } else if (next2 !== void 0) {
            markToAnimate(key);
          } else {
            removedKeys.add(key);
          }
        } else if (next2 !== void 0 && removedKeys.has(key)) {
          markToAnimate(key);
        } else {
          typeState.protectedKeys[key] = true;
        }
      }
      typeState.prevProp = prop2;
      typeState.prevResolvedValues = resolvedValues;
      if (typeState.isActive) {
        encounteredKeys = __assign$2(__assign$2({}, encounteredKeys), resolvedValues);
      }
      if (isInitialRender && visualElement2.blockInitialAnimation) {
        shouldAnimateType = false;
      }
      if (shouldAnimateType && !isInherited) {
        animations2.push.apply(animations2, __spreadArray([], __read$2(definitionList.map(function(animation) {
          return {
            animation,
            options: __assign$2({ type }, options)
          };
        }))));
      }
    };
    for (var i = 0; i < numAnimationTypes; i++) {
      _loop_1(i);
    }
    allAnimatedKeys = __assign$2({}, encounteredKeys);
    if (removedKeys.size) {
      var fallbackAnimation_1 = {};
      removedKeys.forEach(function(key) {
        var fallbackTarget = visualElement2.getBaseTarget(key);
        if (fallbackTarget !== void 0) {
          fallbackAnimation_1[key] = fallbackTarget;
        }
      });
      animations2.push({ animation: fallbackAnimation_1 });
    }
    var shouldAnimate = Boolean(animations2.length);
    if (isInitialRender && props.initial === false && !visualElement2.manuallyAnimateOnMount) {
      shouldAnimate = false;
    }
    isInitialRender = false;
    return shouldAnimate ? animate2(animations2) : Promise.resolve();
  }
  function setActive(type, isActive, options) {
    var _a2;
    if (state[type].isActive === isActive)
      return Promise.resolve();
    (_a2 = visualElement2.variantChildren) === null || _a2 === void 0 ? void 0 : _a2.forEach(function(child) {
      var _a3;
      return (_a3 = child.animationState) === null || _a3 === void 0 ? void 0 : _a3.setActive(type, isActive);
    });
    state[type].isActive = isActive;
    return animateChanges(options, type);
  }
  return {
    isAnimated,
    animateChanges,
    setActive,
    setAnimateFunction,
    getState: function() {
      return state;
    }
  };
}
function variantsHaveChanged(prev2, next2) {
  if (typeof next2 === "string") {
    return next2 !== prev2;
  } else if (isVariantLabels(next2)) {
    return !shallowCompare(next2, prev2);
  }
  return false;
}
function createTypeState(isActive) {
  if (isActive === void 0) {
    isActive = false;
  }
  return {
    isActive,
    protectedKeys: {},
    needsAnimating: {},
    prevResolvedValues: {}
  };
}
function createState() {
  var _a2;
  return _a2 = {}, _a2[AnimationType.Animate] = createTypeState(true), _a2[AnimationType.Hover] = createTypeState(), _a2[AnimationType.Tap] = createTypeState(), _a2[AnimationType.Drag] = createTypeState(), _a2[AnimationType.Focus] = createTypeState(), _a2[AnimationType.Exit] = createTypeState(), _a2;
}
var animations = {
  animation: makeRenderlessComponent(function(_a2) {
    var visualElement2 = _a2.visualElement, animate2 = _a2.animate;
    visualElement2.animationState || (visualElement2.animationState = createAnimationState(visualElement2));
    if (isAnimationControls(animate2)) {
      react.exports.useEffect(function() {
        return animate2.subscribe(visualElement2);
      }, [animate2]);
    }
  }),
  exit: makeRenderlessComponent(function(props) {
    var custom2 = props.custom, visualElement2 = props.visualElement;
    var _a2 = __read$2(usePresence(), 2), isPresent2 = _a2[0], onExitComplete = _a2[1];
    var presenceContext = react.exports.useContext(PresenceContext);
    react.exports.useEffect(function() {
      var _a3, _b;
      var animation = (_a3 = visualElement2.animationState) === null || _a3 === void 0 ? void 0 : _a3.setActive(AnimationType.Exit, !isPresent2, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom2 });
      !isPresent2 && (animation === null || animation === void 0 ? void 0 : animation.then(onExitComplete));
    }, [isPresent2]);
  })
};
var PanSession = function() {
  function PanSession2(event, handlers, _a2) {
    var _this = this;
    var _b = _a2 === void 0 ? {} : _a2, transformPagePoint = _b.transformPagePoint;
    this.startEvent = null;
    this.lastMoveEvent = null;
    this.lastMoveEventInfo = null;
    this.handlers = {};
    this.updatePoint = function() {
      if (!(_this.lastMoveEvent && _this.lastMoveEventInfo))
        return;
      var info2 = getPanInfo(_this.lastMoveEventInfo, _this.history);
      var isPanStarted = _this.startEvent !== null;
      var isDistancePastThreshold = distance(info2.offset, { x: 0, y: 0 }) >= 3;
      if (!isPanStarted && !isDistancePastThreshold)
        return;
      var point2 = info2.point;
      var timestamp2 = getFrameData().timestamp;
      _this.history.push(__assign$2(__assign$2({}, point2), { timestamp: timestamp2 }));
      var _a3 = _this.handlers, onStart = _a3.onStart, onMove = _a3.onMove;
      if (!isPanStarted) {
        onStart && onStart(_this.lastMoveEvent, info2);
        _this.startEvent = _this.lastMoveEvent;
      }
      onMove && onMove(_this.lastMoveEvent, info2);
    };
    this.handlePointerMove = function(event2, info2) {
      _this.lastMoveEvent = event2;
      _this.lastMoveEventInfo = transformPoint(info2, _this.transformPagePoint);
      if (isMouseEvent(event2) && event2.buttons === 0) {
        _this.handlePointerUp(event2, info2);
        return;
      }
      sync.update(_this.updatePoint, true);
    };
    this.handlePointerUp = function(event2, info2) {
      _this.end();
      var _a3 = _this.handlers, onEnd = _a3.onEnd, onSessionEnd = _a3.onSessionEnd;
      var panInfo = getPanInfo(transformPoint(info2, _this.transformPagePoint), _this.history);
      if (_this.startEvent && onEnd) {
        onEnd(event2, panInfo);
      }
      onSessionEnd && onSessionEnd(event2, panInfo);
    };
    if (isTouchEvent(event) && event.touches.length > 1)
      return;
    this.handlers = handlers;
    this.transformPagePoint = transformPagePoint;
    var info = extractEventInfo(event);
    var initialInfo = transformPoint(info, this.transformPagePoint);
    var point = initialInfo.point;
    var timestamp = getFrameData().timestamp;
    this.history = [__assign$2(__assign$2({}, point), { timestamp })];
    var onSessionStart = handlers.onSessionStart;
    onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history));
    this.removeListeners = pipe(addPointerEvent(window, "pointermove", this.handlePointerMove), addPointerEvent(window, "pointerup", this.handlePointerUp), addPointerEvent(window, "pointercancel", this.handlePointerUp));
  }
  PanSession2.prototype.updateHandlers = function(handlers) {
    this.handlers = handlers;
  };
  PanSession2.prototype.end = function() {
    this.removeListeners && this.removeListeners();
    cancelSync.update(this.updatePoint);
  };
  return PanSession2;
}();
function transformPoint(info, transformPagePoint) {
  return transformPagePoint ? { point: transformPagePoint(info.point) } : info;
}
function subtractPoint(a2, b2) {
  return { x: a2.x - b2.x, y: a2.y - b2.y };
}
function getPanInfo(_a2, history) {
  var point = _a2.point;
  return {
    point,
    delta: subtractPoint(point, lastDevicePoint(history)),
    offset: subtractPoint(point, startDevicePoint(history)),
    velocity: getVelocity(history, 0.1)
  };
}
function startDevicePoint(history) {
  return history[0];
}
function lastDevicePoint(history) {
  return history[history.length - 1];
}
function getVelocity(history, timeDelta) {
  if (history.length < 2) {
    return { x: 0, y: 0 };
  }
  var i = history.length - 1;
  var timestampedPoint = null;
  var lastPoint = lastDevicePoint(history);
  while (i >= 0) {
    timestampedPoint = history[i];
    if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta)) {
      break;
    }
    i--;
  }
  if (!timestampedPoint) {
    return { x: 0, y: 0 };
  }
  var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1e3;
  if (time === 0) {
    return { x: 0, y: 0 };
  }
  var currentVelocity = {
    x: (lastPoint.x - timestampedPoint.x) / time,
    y: (lastPoint.y - timestampedPoint.y) / time
  };
  if (currentVelocity.x === Infinity) {
    currentVelocity.x = 0;
  }
  if (currentVelocity.y === Infinity) {
    currentVelocity.y = 0;
  }
  return currentVelocity;
}
function noop$1(any) {
  return any;
}
function convertBoundingBoxToAxisBox(_a2) {
  var top2 = _a2.top, left = _a2.left, right = _a2.right, bottom = _a2.bottom;
  return {
    x: { min: left, max: right },
    y: { min: top2, max: bottom }
  };
}
function convertAxisBoxToBoundingBox(_a2) {
  var x2 = _a2.x, y2 = _a2.y;
  return {
    top: y2.min,
    bottom: y2.max,
    left: x2.min,
    right: x2.max
  };
}
function transformBoundingBox(_a2, transformPoint2) {
  var top2 = _a2.top, left = _a2.left, bottom = _a2.bottom, right = _a2.right;
  if (transformPoint2 === void 0) {
    transformPoint2 = noop$1;
  }
  var topLeft = transformPoint2({ x: left, y: top2 });
  var bottomRight = transformPoint2({ x: right, y: bottom });
  return {
    top: topLeft.y,
    left: topLeft.x,
    bottom: bottomRight.y,
    right: bottomRight.x
  };
}
function axisBox() {
  return { x: { min: 0, max: 1 }, y: { min: 0, max: 1 } };
}
function copyAxisBox(box2) {
  return {
    x: __assign$2({}, box2.x),
    y: __assign$2({}, box2.y)
  };
}
var zeroDelta = {
  translate: 0,
  scale: 1,
  origin: 0,
  originPoint: 0
};
function delta() {
  return {
    x: __assign$2({}, zeroDelta),
    y: __assign$2({}, zeroDelta)
  };
}
function eachAxis(handler) {
  return [handler("x"), handler("y")];
}
function applyConstraints(point, _a2, elastic) {
  var min = _a2.min, max = _a2.max;
  if (min !== void 0 && point < min) {
    point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);
  } else if (max !== void 0 && point > max) {
    point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);
  }
  return point;
}
function calcConstrainedMinPoint(point, length2, progress2, constraints, elastic) {
  var min = point - length2 * progress2;
  return constraints ? applyConstraints(min, constraints, elastic) : min;
}
function calcRelativeAxisConstraints(axis, min, max) {
  return {
    min: min !== void 0 ? axis.min + min : void 0,
    max: max !== void 0 ? axis.max + max - (axis.max - axis.min) : void 0
  };
}
function calcRelativeConstraints(layoutBox, _a2) {
  var top2 = _a2.top, left = _a2.left, bottom = _a2.bottom, right = _a2.right;
  return {
    x: calcRelativeAxisConstraints(layoutBox.x, left, right),
    y: calcRelativeAxisConstraints(layoutBox.y, top2, bottom)
  };
}
function calcViewportAxisConstraints(layoutAxis, constraintsAxis) {
  var _a2;
  var min = constraintsAxis.min - layoutAxis.min;
  var max = constraintsAxis.max - layoutAxis.max;
  if (constraintsAxis.max - constraintsAxis.min < layoutAxis.max - layoutAxis.min) {
    _a2 = __read$2([max, min], 2), min = _a2[0], max = _a2[1];
  }
  return {
    min: layoutAxis.min + min,
    max: layoutAxis.min + max
  };
}
function calcViewportConstraints(layoutBox, constraintsBox) {
  return {
    x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),
    y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y)
  };
}
function calcPositionFromProgress(axis, constraints, progress2) {
  var axisLength = axis.max - axis.min;
  var min = mix(constraints.min, constraints.max - axisLength, progress2);
  return { min, max: min + axisLength };
}
function rebaseAxisConstraints(layout2, constraints) {
  var relativeConstraints = {};
  if (constraints.min !== void 0) {
    relativeConstraints.min = constraints.min - layout2.min;
  }
  if (constraints.max !== void 0) {
    relativeConstraints.max = constraints.max - layout2.min;
  }
  return relativeConstraints;
}
var defaultElastic = 0.35;
function resolveDragElastic(dragElastic) {
  if (dragElastic === false) {
    dragElastic = 0;
  } else if (dragElastic === true) {
    dragElastic = defaultElastic;
  }
  return {
    x: resolveAxisElastic(dragElastic, "left", "right"),
    y: resolveAxisElastic(dragElastic, "top", "bottom")
  };
}
function resolveAxisElastic(dragElastic, minLabel, maxLabel) {
  return {
    min: resolvePointElastic(dragElastic, minLabel),
    max: resolvePointElastic(dragElastic, maxLabel)
  };
}
function resolvePointElastic(dragElastic, label) {
  var _a2;
  return typeof dragElastic === "number" ? dragElastic : (_a2 = dragElastic[label]) !== null && _a2 !== void 0 ? _a2 : 0;
}
function getBoundingBox(element, transformPagePoint) {
  var box2 = element.getBoundingClientRect();
  return convertBoundingBoxToAxisBox(transformBoundingBox(box2, transformPagePoint));
}
var clampProgress = function(v2) {
  return clamp(0, 1, v2);
};
function isNear(value, target, maxDistance) {
  if (target === void 0) {
    target = 0;
  }
  if (maxDistance === void 0) {
    maxDistance = 0.01;
  }
  return distance(value, target) < maxDistance;
}
function calcLength(axis) {
  return axis.max - axis.min;
}
function calcOrigin(source, target) {
  var origin = 0.5;
  var sourceLength = calcLength(source);
  var targetLength = calcLength(target);
  if (targetLength > sourceLength) {
    origin = progress(target.min, target.max - sourceLength, source.min);
  } else if (sourceLength > targetLength) {
    origin = progress(source.min, source.max - targetLength, target.min);
  }
  return clampProgress(origin);
}
function updateAxisDelta(delta2, source, target, origin) {
  if (origin === void 0) {
    origin = 0.5;
  }
  delta2.origin = origin;
  delta2.originPoint = mix(source.min, source.max, delta2.origin);
  delta2.scale = calcLength(target) / calcLength(source);
  if (isNear(delta2.scale, 1, 1e-4))
    delta2.scale = 1;
  delta2.translate = mix(target.min, target.max, delta2.origin) - delta2.originPoint;
  if (isNear(delta2.translate))
    delta2.translate = 0;
}
function updateBoxDelta(delta2, source, target, origin) {
  updateAxisDelta(delta2.x, source.x, target.x, defaultOrigin(origin.originX));
  updateAxisDelta(delta2.y, source.y, target.y, defaultOrigin(origin.originY));
}
function defaultOrigin(origin) {
  return typeof origin === "number" ? origin : 0.5;
}
function calcRelativeAxis(target, relative2, parent) {
  target.min = parent.min + relative2.min;
  target.max = target.min + calcLength(relative2);
}
function calcRelativeBox(projection, parentProjection) {
  calcRelativeAxis(projection.target.x, projection.relativeTarget.x, parentProjection.target.x);
  calcRelativeAxis(projection.target.y, projection.relativeTarget.y, parentProjection.target.y);
}
var compareByDepth = function(a2, b2) {
  return a2.depth - b2.depth;
};
function isProjecting(visualElement2) {
  var isEnabled = visualElement2.projection.isEnabled;
  return isEnabled || visualElement2.shouldResetTransform();
}
function collectProjectingAncestors(visualElement2, ancestors) {
  if (ancestors === void 0) {
    ancestors = [];
  }
  var parent = visualElement2.parent;
  if (parent)
    collectProjectingAncestors(parent, ancestors);
  if (isProjecting(visualElement2))
    ancestors.push(visualElement2);
  return ancestors;
}
function collectProjectingChildren(visualElement2) {
  var children = [];
  var addChild = function(child) {
    if (isProjecting(child))
      children.push(child);
    child.children.forEach(addChild);
  };
  visualElement2.children.forEach(addChild);
  return children.sort(compareByDepth);
}
function updateLayoutMeasurement(visualElement2) {
  if (visualElement2.shouldResetTransform())
    return;
  var layoutState = visualElement2.getLayoutState();
  visualElement2.notifyBeforeLayoutMeasure(layoutState.layout);
  layoutState.isHydrated = true;
  layoutState.layout = visualElement2.measureViewportBox();
  layoutState.layoutCorrected = copyAxisBox(layoutState.layout);
  visualElement2.notifyLayoutMeasure(layoutState.layout, visualElement2.prevViewportBox || layoutState.layout);
  sync.update(function() {
    return visualElement2.rebaseProjectionTarget();
  });
}
function snapshotViewportBox(visualElement2) {
  if (visualElement2.shouldResetTransform())
    return;
  visualElement2.prevViewportBox = visualElement2.measureViewportBox(false);
  visualElement2.rebaseProjectionTarget(false, visualElement2.prevViewportBox);
}
function tweenAxis(target, prev2, next2, p2) {
  target.min = mix(prev2.min, next2.min, p2);
  target.max = mix(prev2.max, next2.max, p2);
}
function calcRelativeOffsetAxis(parent, child) {
  return {
    min: child.min - parent.min,
    max: child.max - parent.min
  };
}
function calcRelativeOffset(parent, child) {
  return {
    x: calcRelativeOffsetAxis(parent.x, child.x),
    y: calcRelativeOffsetAxis(parent.y, child.y)
  };
}
function checkIfParentHasChanged(prev2, next2) {
  var prevId = prev2.getLayoutId();
  var nextId = next2.getLayoutId();
  return prevId !== nextId || nextId === void 0 && prev2 !== next2;
}
function isDraggable(visualElement2) {
  var _a2 = visualElement2.getProps(), drag2 = _a2.drag, _dragX = _a2._dragX;
  return drag2 && !_dragX;
}
function resetAxis(axis, originAxis) {
  axis.min = originAxis.min;
  axis.max = originAxis.max;
}
function resetBox(box2, originBox) {
  resetAxis(box2.x, originBox.x);
  resetAxis(box2.y, originBox.y);
}
function scalePoint(point, scale2, originPoint) {
  var distanceFromOrigin = point - originPoint;
  var scaled = scale2 * distanceFromOrigin;
  return originPoint + scaled;
}
function applyPointDelta(point, translate, scale2, originPoint, boxScale) {
  if (boxScale !== void 0) {
    point = scalePoint(point, boxScale, originPoint);
  }
  return scalePoint(point, scale2, originPoint) + translate;
}
function applyAxisDelta(axis, translate, scale2, originPoint, boxScale) {
  if (translate === void 0) {
    translate = 0;
  }
  if (scale2 === void 0) {
    scale2 = 1;
  }
  axis.min = applyPointDelta(axis.min, translate, scale2, originPoint, boxScale);
  axis.max = applyPointDelta(axis.max, translate, scale2, originPoint, boxScale);
}
function applyBoxDelta(box2, _a2) {
  var x2 = _a2.x, y2 = _a2.y;
  applyAxisDelta(box2.x, x2.translate, x2.scale, x2.originPoint);
  applyAxisDelta(box2.y, y2.translate, y2.scale, y2.originPoint);
}
function applyAxisTransforms(final, axis, transforms, _a2) {
  var _b = __read$2(_a2, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];
  final.min = axis.min;
  final.max = axis.max;
  var axisOrigin = transforms[originKey] !== void 0 ? transforms[originKey] : 0.5;
  var originPoint = mix(axis.min, axis.max, axisOrigin);
  applyAxisDelta(final, transforms[key], transforms[scaleKey], originPoint, transforms.scale);
}
var xKeys = ["x", "scaleX", "originX"];
var yKeys = ["y", "scaleY", "originY"];
function applyBoxTransforms(finalBox, box2, transforms) {
  applyAxisTransforms(finalBox.x, box2.x, transforms, xKeys);
  applyAxisTransforms(finalBox.y, box2.y, transforms, yKeys);
}
function removePointDelta(point, translate, scale2, originPoint, boxScale) {
  point -= translate;
  point = scalePoint(point, 1 / scale2, originPoint);
  if (boxScale !== void 0) {
    point = scalePoint(point, 1 / boxScale, originPoint);
  }
  return point;
}
function removeAxisDelta(axis, translate, scale2, origin, boxScale) {
  if (translate === void 0) {
    translate = 0;
  }
  if (scale2 === void 0) {
    scale2 = 1;
  }
  if (origin === void 0) {
    origin = 0.5;
  }
  var originPoint = mix(axis.min, axis.max, origin) - translate;
  axis.min = removePointDelta(axis.min, translate, scale2, originPoint, boxScale);
  axis.max = removePointDelta(axis.max, translate, scale2, originPoint, boxScale);
}
function removeAxisTransforms(axis, transforms, _a2) {
  var _b = __read$2(_a2, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];
  removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale);
}
function removeBoxTransforms(box2, transforms) {
  removeAxisTransforms(box2.x, transforms, xKeys);
  removeAxisTransforms(box2.y, transforms, yKeys);
}
function applyTreeDeltas(box2, treeScale, treePath) {
  var treeLength = treePath.length;
  if (!treeLength)
    return;
  treeScale.x = treeScale.y = 1;
  var node2;
  var delta2;
  for (var i = 0; i < treeLength; i++) {
    node2 = treePath[i];
    delta2 = node2.getLayoutState().delta;
    treeScale.x *= delta2.x.scale;
    treeScale.y *= delta2.y.scale;
    applyBoxDelta(box2, delta2);
    if (isDraggable(node2)) {
      applyBoxTransforms(box2, box2, node2.getLatestValues());
    }
  }
}
function convertToRelativeProjection(visualElement2, isLayoutDrag) {
  if (isLayoutDrag === void 0) {
    isLayoutDrag = true;
  }
  var projectionParent = visualElement2.getProjectionParent();
  if (!projectionParent)
    return false;
  var offset;
  if (isLayoutDrag) {
    offset = calcRelativeOffset(projectionParent.projection.target, visualElement2.projection.target);
    removeBoxTransforms(offset, projectionParent.getLatestValues());
  } else {
    offset = calcRelativeOffset(projectionParent.getLayoutState().layout, visualElement2.getLayoutState().layout);
  }
  eachAxis(function(axis) {
    return visualElement2.setProjectionTargetAxis(axis, offset[axis].min, offset[axis].max, true);
  });
  return true;
}
var unresolvedJobs = new Set();
function pushJob(stack, job, pointer) {
  if (!stack[pointer])
    stack[pointer] = [];
  stack[pointer].push(job);
}
function batchLayout(callback) {
  unresolvedJobs.add(callback);
  return function() {
    return unresolvedJobs.delete(callback);
  };
}
function flushLayout() {
  if (!unresolvedJobs.size)
    return;
  var pointer = 0;
  var reads = [[]];
  var writes = [];
  var setRead = function(job) {
    return pushJob(reads, job, pointer);
  };
  var setWrite = function(job) {
    pushJob(writes, job, pointer);
    pointer++;
  };
  unresolvedJobs.forEach(function(callback) {
    callback(setRead, setWrite);
    pointer = 0;
  });
  unresolvedJobs.clear();
  var numStacks = writes.length;
  for (var i = 0; i <= numStacks; i++) {
    reads[i] && reads[i].forEach(executeJob);
    writes[i] && writes[i].forEach(executeJob);
  }
}
var executeJob = function(job) {
  return job();
};
var elementDragControls = new WeakMap();
var lastPointerEvent;
var VisualElementDragControls = function() {
  function VisualElementDragControls2(_a2) {
    var visualElement2 = _a2.visualElement;
    this.isDragging = false;
    this.currentDirection = null;
    this.constraints = false;
    this.elastic = axisBox();
    this.props = {};
    this.hasMutatedConstraints = false;
    this.cursorProgress = {
      x: 0.5,
      y: 0.5
    };
    this.originPoint = {};
    this.openGlobalLock = null;
    this.panSession = null;
    this.visualElement = visualElement2;
    this.visualElement.enableLayoutProjection();
    elementDragControls.set(visualElement2, this);
  }
  VisualElementDragControls2.prototype.start = function(originEvent, _a2) {
    var _this = this;
    var _b = _a2 === void 0 ? {} : _a2, _c = _b.snapToCursor, snapToCursor = _c === void 0 ? false : _c, cursorProgress = _b.cursorProgress;
    var onSessionStart = function(event) {
      var _a3;
      _this.stopMotion();
      var initialPoint = getViewportPointFromEvent(event).point;
      (_a3 = _this.cancelLayout) === null || _a3 === void 0 ? void 0 : _a3.call(_this);
      _this.cancelLayout = batchLayout(function(read, write) {
        var ancestors = collectProjectingAncestors(_this.visualElement);
        var children = collectProjectingChildren(_this.visualElement);
        var tree = __spreadArray(__spreadArray([], __read$2(ancestors)), __read$2(children));
        var hasManuallySetCursorOrigin = false;
        _this.isLayoutDrag() && _this.visualElement.lockProjectionTarget();
        write(function() {
          tree.forEach(function(element) {
            return element.resetTransform();
          });
        });
        read(function() {
          updateLayoutMeasurement(_this.visualElement);
          children.forEach(updateLayoutMeasurement);
        });
        write(function() {
          tree.forEach(function(element) {
            return element.restoreTransform();
          });
          if (snapToCursor) {
            hasManuallySetCursorOrigin = _this.snapToCursor(initialPoint);
          }
        });
        read(function() {
          var isRelativeDrag = Boolean(_this.getAxisMotionValue("x") && !_this.isExternalDrag());
          if (!isRelativeDrag) {
            _this.visualElement.rebaseProjectionTarget(true, _this.visualElement.measureViewportBox(false));
          }
          _this.visualElement.scheduleUpdateLayoutProjection();
          var projection = _this.visualElement.projection;
          eachAxis(function(axis) {
            if (!hasManuallySetCursorOrigin) {
              var _a4 = projection.target[axis], min = _a4.min, max = _a4.max;
              _this.cursorProgress[axis] = cursorProgress ? cursorProgress[axis] : progress(min, max, initialPoint[axis]);
            }
            var axisValue = _this.getAxisMotionValue(axis);
            if (axisValue) {
              _this.originPoint[axis] = axisValue.get();
            }
          });
        });
        write(function() {
          flushSync.update();
          flushSync.preRender();
          flushSync.render();
          flushSync.postRender();
        });
        read(function() {
          return _this.resolveDragConstraints();
        });
      });
    };
    var onStart = function(event, info) {
      var _a3, _b2, _c2;
      var _d = _this.props, drag2 = _d.drag, dragPropagation = _d.dragPropagation;
      if (drag2 && !dragPropagation) {
        if (_this.openGlobalLock)
          _this.openGlobalLock();
        _this.openGlobalLock = getGlobalLock(drag2);
        if (!_this.openGlobalLock)
          return;
      }
      flushLayout();
      _this.isDragging = true;
      _this.currentDirection = null;
      (_b2 = (_a3 = _this.props).onDragStart) === null || _b2 === void 0 ? void 0 : _b2.call(_a3, event, info);
      (_c2 = _this.visualElement.animationState) === null || _c2 === void 0 ? void 0 : _c2.setActive(AnimationType.Drag, true);
    };
    var onMove = function(event, info) {
      var _a3, _b2, _c2, _d;
      var _e = _this.props, dragPropagation = _e.dragPropagation, dragDirectionLock = _e.dragDirectionLock;
      if (!dragPropagation && !_this.openGlobalLock)
        return;
      var offset = info.offset;
      if (dragDirectionLock && _this.currentDirection === null) {
        _this.currentDirection = getCurrentDirection(offset);
        if (_this.currentDirection !== null) {
          (_b2 = (_a3 = _this.props).onDirectionLock) === null || _b2 === void 0 ? void 0 : _b2.call(_a3, _this.currentDirection);
        }
        return;
      }
      _this.updateAxis("x", info.point, offset);
      _this.updateAxis("y", info.point, offset);
      (_d = (_c2 = _this.props).onDrag) === null || _d === void 0 ? void 0 : _d.call(_c2, event, info);
      lastPointerEvent = event;
    };
    var onSessionEnd = function(event, info) {
      return _this.stop(event, info);
    };
    var transformPagePoint = this.props.transformPagePoint;
    this.panSession = new PanSession(originEvent, {
      onSessionStart,
      onStart,
      onMove,
      onSessionEnd
    }, { transformPagePoint });
  };
  VisualElementDragControls2.prototype.resolveDragConstraints = function() {
    var _this = this;
    var _a2 = this.props, dragConstraints = _a2.dragConstraints, dragElastic = _a2.dragElastic;
    var layout2 = this.visualElement.getLayoutState().layoutCorrected;
    if (dragConstraints) {
      this.constraints = isRefObject(dragConstraints) ? this.resolveRefConstraints(layout2, dragConstraints) : calcRelativeConstraints(layout2, dragConstraints);
    } else {
      this.constraints = false;
    }
    this.elastic = resolveDragElastic(dragElastic);
    if (this.constraints && !this.hasMutatedConstraints) {
      eachAxis(function(axis) {
        if (_this.getAxisMotionValue(axis)) {
          _this.constraints[axis] = rebaseAxisConstraints(layout2[axis], _this.constraints[axis]);
        }
      });
    }
  };
  VisualElementDragControls2.prototype.resolveRefConstraints = function(layoutBox, constraints) {
    var _a2 = this.props, onMeasureDragConstraints = _a2.onMeasureDragConstraints, transformPagePoint = _a2.transformPagePoint;
    var constraintsElement = constraints.current;
    this.constraintsBox = getBoundingBox(constraintsElement, transformPagePoint);
    var measuredConstraints = calcViewportConstraints(layoutBox, this.constraintsBox);
    if (onMeasureDragConstraints) {
      var userConstraints = onMeasureDragConstraints(convertAxisBoxToBoundingBox(measuredConstraints));
      this.hasMutatedConstraints = !!userConstraints;
      if (userConstraints) {
        measuredConstraints = convertBoundingBoxToAxisBox(userConstraints);
      }
    }
    return measuredConstraints;
  };
  VisualElementDragControls2.prototype.cancelDrag = function() {
    var _a2, _b;
    this.visualElement.unlockProjectionTarget();
    (_a2 = this.cancelLayout) === null || _a2 === void 0 ? void 0 : _a2.call(this);
    this.isDragging = false;
    this.panSession && this.panSession.end();
    this.panSession = null;
    if (!this.props.dragPropagation && this.openGlobalLock) {
      this.openGlobalLock();
      this.openGlobalLock = null;
    }
    (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);
  };
  VisualElementDragControls2.prototype.stop = function(event, info) {
    var _a2, _b, _c;
    (_a2 = this.panSession) === null || _a2 === void 0 ? void 0 : _a2.end();
    this.panSession = null;
    var isDragging = this.isDragging;
    this.cancelDrag();
    if (!isDragging)
      return;
    var velocity = info.velocity;
    this.animateDragEnd(velocity);
    (_c = (_b = this.props).onDragEnd) === null || _c === void 0 ? void 0 : _c.call(_b, event, info);
  };
  VisualElementDragControls2.prototype.snapToCursor = function(point) {
    var _this = this;
    return eachAxis(function(axis) {
      var drag2 = _this.props.drag;
      if (!shouldDrag(axis, drag2, _this.currentDirection))
        return;
      var axisValue = _this.getAxisMotionValue(axis);
      if (axisValue) {
        var box2 = _this.visualElement.getLayoutState().layout;
        var length_1 = box2[axis].max - box2[axis].min;
        var center = box2[axis].min + length_1 / 2;
        var offset = point[axis] - center;
        _this.originPoint[axis] = point[axis];
        axisValue.set(offset);
      } else {
        _this.cursorProgress[axis] = 0.5;
        return true;
      }
    }).includes(true);
  };
  VisualElementDragControls2.prototype.updateAxis = function(axis, point, offset) {
    var drag2 = this.props.drag;
    if (!shouldDrag(axis, drag2, this.currentDirection))
      return;
    return this.getAxisMotionValue(axis) ? this.updateAxisMotionValue(axis, offset) : this.updateVisualElementAxis(axis, point);
  };
  VisualElementDragControls2.prototype.updateAxisMotionValue = function(axis, offset) {
    var axisValue = this.getAxisMotionValue(axis);
    if (!offset || !axisValue)
      return;
    var nextValue = this.originPoint[axis] + offset[axis];
    var update = this.constraints ? applyConstraints(nextValue, this.constraints[axis], this.elastic[axis]) : nextValue;
    axisValue.set(update);
  };
  VisualElementDragControls2.prototype.updateVisualElementAxis = function(axis, point) {
    var _a2;
    var axisLayout = this.visualElement.getLayoutState().layout[axis];
    var axisLength = axisLayout.max - axisLayout.min;
    var axisProgress = this.cursorProgress[axis];
    var min = calcConstrainedMinPoint(point[axis], axisLength, axisProgress, (_a2 = this.constraints) === null || _a2 === void 0 ? void 0 : _a2[axis], this.elastic[axis]);
    this.visualElement.setProjectionTargetAxis(axis, min, min + axisLength);
  };
  VisualElementDragControls2.prototype.setProps = function(_a2) {
    var _b = _a2.drag, drag2 = _b === void 0 ? false : _b, _c = _a2.dragDirectionLock, dragDirectionLock = _c === void 0 ? false : _c, _d = _a2.dragPropagation, dragPropagation = _d === void 0 ? false : _d, _e = _a2.dragConstraints, dragConstraints = _e === void 0 ? false : _e, _f = _a2.dragElastic, dragElastic = _f === void 0 ? defaultElastic : _f, _g = _a2.dragMomentum, dragMomentum = _g === void 0 ? true : _g, remainingProps = __rest$1(_a2, ["drag", "dragDirectionLock", "dragPropagation", "dragConstraints", "dragElastic", "dragMomentum"]);
    this.props = __assign$2({
      drag: drag2,
      dragDirectionLock,
      dragPropagation,
      dragConstraints,
      dragElastic,
      dragMomentum
    }, remainingProps);
  };
  VisualElementDragControls2.prototype.getAxisMotionValue = function(axis) {
    var _a2 = this.props, layout2 = _a2.layout, layoutId = _a2.layoutId;
    var dragKey = "_drag" + axis.toUpperCase();
    if (this.props[dragKey]) {
      return this.props[dragKey];
    } else if (!layout2 && layoutId === void 0) {
      return this.visualElement.getValue(axis, 0);
    }
  };
  VisualElementDragControls2.prototype.isLayoutDrag = function() {
    return !this.getAxisMotionValue("x");
  };
  VisualElementDragControls2.prototype.isExternalDrag = function() {
    var _a2 = this.props, _dragX = _a2._dragX, _dragY = _a2._dragY;
    return _dragX || _dragY;
  };
  VisualElementDragControls2.prototype.animateDragEnd = function(velocity) {
    var _this = this;
    var _a2 = this.props, drag2 = _a2.drag, dragMomentum = _a2.dragMomentum, dragElastic = _a2.dragElastic, dragTransition = _a2.dragTransition;
    var isRelative = convertToRelativeProjection(this.visualElement, this.isLayoutDrag() && !this.isExternalDrag());
    var constraints = this.constraints || {};
    if (isRelative && Object.keys(constraints).length && this.isLayoutDrag()) {
      var projectionParent = this.visualElement.getProjectionParent();
      if (projectionParent) {
        var relativeConstraints_1 = calcRelativeOffset(projectionParent.projection.targetFinal, constraints);
        eachAxis(function(axis) {
          var _a3 = relativeConstraints_1[axis], min = _a3.min, max = _a3.max;
          constraints[axis] = {
            min: isNaN(min) ? void 0 : min,
            max: isNaN(max) ? void 0 : max
          };
        });
      }
    }
    var momentumAnimations = eachAxis(function(axis) {
      var _a3;
      if (!shouldDrag(axis, drag2, _this.currentDirection)) {
        return;
      }
      var transition2 = (_a3 = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a3 !== void 0 ? _a3 : {};
      var bounceStiffness = dragElastic ? 200 : 1e6;
      var bounceDamping = dragElastic ? 40 : 1e7;
      var inertia2 = __assign$2(__assign$2({
        type: "inertia",
        velocity: dragMomentum ? velocity[axis] : 0,
        bounceStiffness,
        bounceDamping,
        timeConstant: 750,
        restDelta: 1,
        restSpeed: 10
      }, dragTransition), transition2);
      return _this.getAxisMotionValue(axis) ? _this.startAxisValueAnimation(axis, inertia2) : _this.visualElement.startLayoutAnimation(axis, inertia2, isRelative);
    });
    return Promise.all(momentumAnimations).then(function() {
      var _a3, _b;
      (_b = (_a3 = _this.props).onDragTransitionEnd) === null || _b === void 0 ? void 0 : _b.call(_a3);
    });
  };
  VisualElementDragControls2.prototype.stopMotion = function() {
    var _this = this;
    eachAxis(function(axis) {
      var axisValue = _this.getAxisMotionValue(axis);
      axisValue ? axisValue.stop() : _this.visualElement.stopLayoutAnimation();
    });
  };
  VisualElementDragControls2.prototype.startAxisValueAnimation = function(axis, transition2) {
    var axisValue = this.getAxisMotionValue(axis);
    if (!axisValue)
      return;
    var currentValue = axisValue.get();
    axisValue.set(currentValue);
    axisValue.set(currentValue);
    return startAnimation(axis, axisValue, 0, transition2);
  };
  VisualElementDragControls2.prototype.scalePoint = function() {
    var _this = this;
    var _a2 = this.props, drag2 = _a2.drag, dragConstraints = _a2.dragConstraints;
    if (!isRefObject(dragConstraints) || !this.constraintsBox)
      return;
    this.stopMotion();
    var boxProgress = { x: 0, y: 0 };
    eachAxis(function(axis) {
      boxProgress[axis] = calcOrigin(_this.visualElement.projection.target[axis], _this.constraintsBox[axis]);
    });
    this.updateConstraints(function() {
      eachAxis(function(axis) {
        if (!shouldDrag(axis, drag2, null))
          return;
        var _a3 = calcPositionFromProgress(_this.visualElement.projection.target[axis], _this.constraintsBox[axis], boxProgress[axis]), min = _a3.min, max = _a3.max;
        _this.visualElement.setProjectionTargetAxis(axis, min, max);
      });
    });
    setTimeout(flushLayout, 1);
  };
  VisualElementDragControls2.prototype.updateConstraints = function(onReady) {
    var _this = this;
    this.cancelLayout = batchLayout(function(read, write) {
      var ancestors = collectProjectingAncestors(_this.visualElement);
      write(function() {
        return ancestors.forEach(function(element) {
          return element.resetTransform();
        });
      });
      read(function() {
        return updateLayoutMeasurement(_this.visualElement);
      });
      write(function() {
        return ancestors.forEach(function(element) {
          return element.restoreTransform();
        });
      });
      read(function() {
        _this.resolveDragConstraints();
      });
      if (onReady)
        write(onReady);
    });
  };
  VisualElementDragControls2.prototype.mount = function(visualElement2) {
    var _this = this;
    var element = visualElement2.getInstance();
    var stopPointerListener = addPointerEvent(element, "pointerdown", function(event) {
      var _a2 = _this.props, drag2 = _a2.drag, _b = _a2.dragListener, dragListener = _b === void 0 ? true : _b;
      drag2 && dragListener && _this.start(event);
    });
    var stopResizeListener = addDomEvent(window, "resize", function() {
      _this.scalePoint();
    });
    var stopLayoutUpdateListener = visualElement2.onLayoutUpdate(function() {
      if (_this.isDragging) {
        _this.resolveDragConstraints();
      }
    });
    var prevDragCursor = visualElement2.prevDragCursor;
    if (prevDragCursor) {
      this.start(lastPointerEvent, { cursorProgress: prevDragCursor });
    }
    return function() {
      stopPointerListener === null || stopPointerListener === void 0 ? void 0 : stopPointerListener();
      stopResizeListener === null || stopResizeListener === void 0 ? void 0 : stopResizeListener();
      stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();
      _this.cancelDrag();
    };
  };
  return VisualElementDragControls2;
}();
function shouldDrag(direction2, drag2, currentDirection) {
  return (drag2 === true || drag2 === direction2) && (currentDirection === null || currentDirection === direction2);
}
function getCurrentDirection(offset, lockThreshold) {
  if (lockThreshold === void 0) {
    lockThreshold = 10;
  }
  var direction2 = null;
  if (Math.abs(offset.y) > lockThreshold) {
    direction2 = "y";
  } else if (Math.abs(offset.x) > lockThreshold) {
    direction2 = "x";
  }
  return direction2;
}
function useDrag(props) {
  var groupDragControls = props.dragControls, visualElement2 = props.visualElement;
  var transformPagePoint = react.exports.useContext(MotionConfigContext).transformPagePoint;
  var dragControls = useConstant(function() {
    return new VisualElementDragControls({
      visualElement: visualElement2
    });
  });
  dragControls.setProps(__assign$2(__assign$2({}, props), { transformPagePoint }));
  react.exports.useEffect(function() {
    return groupDragControls && groupDragControls.subscribe(dragControls);
  }, [dragControls]);
  react.exports.useEffect(function() {
    return dragControls.mount(visualElement2);
  }, []);
}
function usePanGesture(_a2) {
  var onPan = _a2.onPan, onPanStart = _a2.onPanStart, onPanEnd = _a2.onPanEnd, onPanSessionStart = _a2.onPanSessionStart, visualElement2 = _a2.visualElement;
  var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;
  var panSession = react.exports.useRef(null);
  var transformPagePoint = react.exports.useContext(MotionConfigContext).transformPagePoint;
  var handlers = {
    onSessionStart: onPanSessionStart,
    onStart: onPanStart,
    onMove: onPan,
    onEnd: function(event, info) {
      panSession.current = null;
      onPanEnd && onPanEnd(event, info);
    }
  };
  react.exports.useEffect(function() {
    if (panSession.current !== null) {
      panSession.current.updateHandlers(handlers);
    }
  });
  function onPointerDown(event) {
    panSession.current = new PanSession(event, handlers, {
      transformPagePoint
    });
  }
  usePointerEvent(visualElement2, "pointerdown", hasPanEvents && onPointerDown);
  useUnmountEffect(function() {
    return panSession.current && panSession.current.end();
  });
}
var drag = {
  pan: makeRenderlessComponent(usePanGesture),
  drag: makeRenderlessComponent(useDrag)
};
var Presence;
(function(Presence2) {
  Presence2[Presence2["Entering"] = 0] = "Entering";
  Presence2[Presence2["Present"] = 1] = "Present";
  Presence2[Presence2["Exiting"] = 2] = "Exiting";
})(Presence || (Presence = {}));
var VisibilityAction;
(function(VisibilityAction2) {
  VisibilityAction2[VisibilityAction2["Hide"] = 0] = "Hide";
  VisibilityAction2[VisibilityAction2["Show"] = 1] = "Show";
})(VisibilityAction || (VisibilityAction = {}));
function isCSSVariable(value) {
  return typeof value === "string" && value.startsWith("var(--");
}
var cssVariableRegex = /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;
function parseCSSVariable(current) {
  var match2 = cssVariableRegex.exec(current);
  if (!match2)
    return [,];
  var _a2 = __read$2(match2, 3), token2 = _a2[1], fallback = _a2[2];
  return [token2, fallback];
}
function getVariableValue(current, element, depth) {
  var _a2 = __read$2(parseCSSVariable(current), 2), token2 = _a2[0], fallback = _a2[1];
  if (!token2)
    return;
  var resolved = window.getComputedStyle(element).getPropertyValue(token2);
  if (resolved) {
    return resolved.trim();
  } else if (isCSSVariable(fallback)) {
    return getVariableValue(fallback, element);
  } else {
    return fallback;
  }
}
function resolveCSSVariables(visualElement2, _a2, transitionEnd) {
  var _b;
  var target = __rest$1(_a2, []);
  var element = visualElement2.getInstance();
  if (!(element instanceof HTMLElement))
    return { target, transitionEnd };
  if (transitionEnd) {
    transitionEnd = __assign$2({}, transitionEnd);
  }
  visualElement2.forEachValue(function(value) {
    var current2 = value.get();
    if (!isCSSVariable(current2))
      return;
    var resolved2 = getVariableValue(current2, element);
    if (resolved2)
      value.set(resolved2);
  });
  for (var key in target) {
    var current = target[key];
    if (!isCSSVariable(current))
      continue;
    var resolved = getVariableValue(current, element);
    if (!resolved)
      continue;
    target[key] = resolved;
    if (transitionEnd)
      (_b = transitionEnd[key]) !== null && _b !== void 0 ? _b : transitionEnd[key] = current;
  }
  return { target, transitionEnd };
}
function pixelsToPercent(pixels, axis) {
  return pixels / (axis.max - axis.min) * 100;
}
function correctBorderRadius(latest, _layoutState, _a2) {
  var target = _a2.target;
  if (typeof latest === "string") {
    if (px2.test(latest)) {
      latest = parseFloat(latest);
    } else {
      return latest;
    }
  }
  var x2 = pixelsToPercent(latest, target.x);
  var y2 = pixelsToPercent(latest, target.y);
  return x2 + "% " + y2 + "%";
}
var varToken = "_$css";
function correctBoxShadow(latest, _a2) {
  var delta2 = _a2.delta, treeScale = _a2.treeScale;
  var original = latest;
  var containsCSSVariables = latest.includes("var(");
  var cssVariables = [];
  if (containsCSSVariables) {
    latest = latest.replace(cssVariableRegex, function(match2) {
      cssVariables.push(match2);
      return varToken;
    });
  }
  var shadow = complex.parse(latest);
  if (shadow.length > 5)
    return original;
  var template = complex.createTransformer(latest);
  var offset = typeof shadow[0] !== "number" ? 1 : 0;
  var xScale = delta2.x.scale * treeScale.x;
  var yScale = delta2.y.scale * treeScale.y;
  shadow[0 + offset] /= xScale;
  shadow[1 + offset] /= yScale;
  var averageScale = mix(xScale, yScale, 0.5);
  if (typeof shadow[2 + offset] === "number")
    shadow[2 + offset] /= averageScale;
  if (typeof shadow[3 + offset] === "number")
    shadow[3 + offset] /= averageScale;
  var output = template(shadow);
  if (containsCSSVariables) {
    var i_1 = 0;
    output = output.replace(varToken, function() {
      var cssVariable = cssVariables[i_1];
      i_1++;
      return cssVariable;
    });
  }
  return output;
}
var borderCorrectionDefinition = {
  process: correctBorderRadius
};
var defaultScaleCorrectors = {
  borderRadius: __assign$2(__assign$2({}, borderCorrectionDefinition), { applyTo: [
    "borderTopLeftRadius",
    "borderTopRightRadius",
    "borderBottomLeftRadius",
    "borderBottomRightRadius"
  ] }),
  borderTopLeftRadius: borderCorrectionDefinition,
  borderTopRightRadius: borderCorrectionDefinition,
  borderBottomLeftRadius: borderCorrectionDefinition,
  borderBottomRightRadius: borderCorrectionDefinition,
  boxShadow: {
    process: correctBoxShadow
  }
};
var progressTarget = 1e3;
var Animate = function(_super) {
  __extends$1(Animate2, _super);
  function Animate2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.frameTarget = axisBox();
    _this.currentAnimationTarget = axisBox();
    _this.isAnimating = {
      x: false,
      y: false
    };
    _this.stopAxisAnimation = {
      x: void 0,
      y: void 0
    };
    _this.isAnimatingTree = false;
    _this.animate = function(target, origin, _a2) {
      if (_a2 === void 0) {
        _a2 = {};
      }
      var originBox = _a2.originBox, targetBox = _a2.targetBox, visibilityAction = _a2.visibilityAction, shouldStackAnimate = _a2.shouldStackAnimate, onComplete = _a2.onComplete, prevParent = _a2.prevParent, config2 = __rest$1(_a2, ["originBox", "targetBox", "visibilityAction", "shouldStackAnimate", "onComplete", "prevParent"]);
      var _b = _this.props, visualElement2 = _b.visualElement, layout2 = _b.layout;
      if (shouldStackAnimate === false) {
        _this.isAnimatingTree = false;
        return _this.safeToRemove();
      }
      if (_this.isAnimatingTree && shouldStackAnimate !== true) {
        return;
      } else if (shouldStackAnimate) {
        _this.isAnimatingTree = true;
      }
      origin = originBox || origin;
      target = targetBox || target;
      var isRelative = false;
      var projectionParent = visualElement2.getProjectionParent();
      if (projectionParent) {
        var prevParentViewportBox = projectionParent.prevViewportBox;
        var parentLayout = projectionParent.getLayoutState().layout;
        if (prevParent) {
          if (targetBox) {
            parentLayout = prevParent.getLayoutState().layout;
          }
          if (originBox && !checkIfParentHasChanged(prevParent, projectionParent) && prevParent.prevViewportBox) {
            prevParentViewportBox = prevParent.prevViewportBox;
          }
        }
        if (prevParentViewportBox && isProvidedCorrectDataForRelativeSharedLayout(prevParent, originBox, targetBox)) {
          isRelative = true;
          origin = calcRelativeOffset(prevParentViewportBox, origin);
          target = calcRelativeOffset(parentLayout, target);
        }
      }
      var boxHasMoved = hasMoved(origin, target);
      var animations2 = eachAxis(function(axis) {
        var _a3, _b2;
        if (layout2 === "position") {
          var targetLength = target[axis].max - target[axis].min;
          origin[axis].max = origin[axis].min + targetLength;
        }
        if (visualElement2.projection.isTargetLocked) {
          return;
        } else if (visibilityAction !== void 0) {
          visualElement2.setVisibility(visibilityAction === VisibilityAction.Show);
        } else if (boxHasMoved) {
          return _this.animateAxis(axis, target[axis], origin[axis], __assign$2(__assign$2({}, config2), { isRelative }));
        } else {
          (_b2 = (_a3 = _this.stopAxisAnimation)[axis]) === null || _b2 === void 0 ? void 0 : _b2.call(_a3);
          return visualElement2.setProjectionTargetAxis(axis, target[axis].min, target[axis].max, isRelative);
        }
      });
      visualElement2.syncRender();
      return Promise.all(animations2).then(function() {
        _this.isAnimatingTree = false;
        onComplete && onComplete();
        visualElement2.notifyLayoutAnimationComplete();
      });
    };
    return _this;
  }
  Animate2.prototype.componentDidMount = function() {
    var _this = this;
    var visualElement2 = this.props.visualElement;
    visualElement2.animateMotionValue = startAnimation;
    visualElement2.enableLayoutProjection();
    this.unsubLayoutReady = visualElement2.onLayoutUpdate(this.animate);
    visualElement2.layoutSafeToRemove = function() {
      return _this.safeToRemove();
    };
    addScaleCorrection(defaultScaleCorrectors);
  };
  Animate2.prototype.componentWillUnmount = function() {
    var _this = this;
    this.unsubLayoutReady();
    eachAxis(function(axis) {
      var _a2, _b;
      return (_b = (_a2 = _this.stopAxisAnimation)[axis]) === null || _b === void 0 ? void 0 : _b.call(_a2);
    });
  };
  Animate2.prototype.animateAxis = function(axis, target, origin, _a2) {
    var _this = this;
    var _b, _c;
    var _d = _a2 === void 0 ? {} : _a2, transition2 = _d.transition, isRelative = _d.isRelative;
    if (this.isAnimating[axis] && axisIsEqual(target, this.currentAnimationTarget[axis])) {
      return;
    }
    (_c = (_b = this.stopAxisAnimation)[axis]) === null || _c === void 0 ? void 0 : _c.call(_b);
    this.isAnimating[axis] = true;
    var visualElement2 = this.props.visualElement;
    var frameTarget = this.frameTarget[axis];
    var layoutProgress = visualElement2.getProjectionAnimationProgress()[axis];
    layoutProgress.clearListeners();
    layoutProgress.set(0);
    layoutProgress.set(0);
    var frame2 = function() {
      var p2 = layoutProgress.get() / progressTarget;
      tweenAxis(frameTarget, origin, target, p2);
      visualElement2.setProjectionTargetAxis(axis, frameTarget.min, frameTarget.max, isRelative);
    };
    frame2();
    var unsubscribeProgress = layoutProgress.onChange(frame2);
    this.stopAxisAnimation[axis] = function() {
      _this.isAnimating[axis] = false;
      layoutProgress.stop();
      unsubscribeProgress();
    };
    this.currentAnimationTarget[axis] = target;
    var layoutTransition = transition2 || visualElement2.getDefaultTransition() || defaultLayoutTransition;
    var animation = startAnimation(axis === "x" ? "layoutX" : "layoutY", layoutProgress, progressTarget, layoutTransition && getValueTransition(layoutTransition, "layout")).then(this.stopAxisAnimation[axis]);
    return animation;
  };
  Animate2.prototype.safeToRemove = function() {
    var _a2, _b;
    (_b = (_a2 = this.props).safeToRemove) === null || _b === void 0 ? void 0 : _b.call(_a2);
  };
  Animate2.prototype.render = function() {
    return null;
  };
  return Animate2;
}(react.exports.Component);
function AnimateLayoutContextProvider(props) {
  var _a2 = __read$2(usePresence(), 2), safeToRemove = _a2[1];
  return react.exports.createElement(Animate, __assign$2({}, props, { safeToRemove }));
}
function hasMoved(a2, b2) {
  return !isZeroBox(a2) && !isZeroBox(b2) && (!axisIsEqual(a2.x, b2.x) || !axisIsEqual(a2.y, b2.y));
}
var zeroAxis = { min: 0, max: 0 };
function isZeroBox(a2) {
  return axisIsEqual(a2.x, zeroAxis) && axisIsEqual(a2.y, zeroAxis);
}
function axisIsEqual(a2, b2) {
  return a2.min === b2.min && a2.max === b2.max;
}
var defaultLayoutTransition = {
  duration: 0.45,
  ease: [0.4, 0, 0.1, 1]
};
function isProvidedCorrectDataForRelativeSharedLayout(prevParent, originBox, targetBox) {
  return prevParent || !prevParent && !(originBox || targetBox);
}
var defaultHandler2 = {
  layoutReady: function(child) {
    return child.notifyLayoutReady();
  }
};
function createBatcher() {
  var queue = new Set();
  return {
    add: function(child) {
      return queue.add(child);
    },
    flush: function(_a2) {
      var _b = _a2 === void 0 ? defaultHandler2 : _a2, layoutReady = _b.layoutReady, parent = _b.parent;
      batchLayout(function(read, write) {
        var order2 = Array.from(queue).sort(compareByDepth);
        var ancestors = parent ? collectProjectingAncestors(parent) : [];
        write(function() {
          var allElements = __spreadArray(__spreadArray([], __read$2(ancestors)), __read$2(order2));
          allElements.forEach(function(element) {
            return element.resetTransform();
          });
        });
        read(function() {
          order2.forEach(updateLayoutMeasurement);
        });
        write(function() {
          ancestors.forEach(function(element) {
            return element.restoreTransform();
          });
          order2.forEach(layoutReady);
        });
        read(function() {
          order2.forEach(function(child) {
            if (child.isPresent)
              child.presence = Presence.Present;
          });
        });
        write(function() {
          flushSync.preRender();
          flushSync.render();
        });
        read(function() {
          sync.postRender(function() {
            return order2.forEach(assignProjectionToSnapshot);
          });
          queue.clear();
        });
      });
      flushLayout();
    }
  };
}
function assignProjectionToSnapshot(child) {
  child.prevViewportBox = child.projection.target;
}
var SharedLayoutContext = react.exports.createContext(createBatcher());
var FramerTreeLayoutContext = react.exports.createContext(createBatcher());
function isSharedLayout(context) {
  return !!context.forceUpdate;
}
var Measure = function(_super) {
  __extends$1(Measure2, _super);
  function Measure2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Measure2.prototype.componentDidMount = function() {
    var _a2 = this.props, syncLayout = _a2.syncLayout, framerSyncLayout = _a2.framerSyncLayout, visualElement2 = _a2.visualElement;
    isSharedLayout(syncLayout) && syncLayout.register(visualElement2);
    isSharedLayout(framerSyncLayout) && framerSyncLayout.register(visualElement2);
    visualElement2.onUnmount(function() {
      if (isSharedLayout(syncLayout)) {
        syncLayout.remove(visualElement2);
      }
      if (isSharedLayout(framerSyncLayout)) {
        framerSyncLayout.remove(visualElement2);
      }
    });
  };
  Measure2.prototype.getSnapshotBeforeUpdate = function() {
    var _a2 = this.props, syncLayout = _a2.syncLayout, visualElement2 = _a2.visualElement;
    if (isSharedLayout(syncLayout)) {
      syncLayout.syncUpdate();
    } else {
      snapshotViewportBox(visualElement2);
      syncLayout.add(visualElement2);
    }
    return null;
  };
  Measure2.prototype.componentDidUpdate = function() {
    var syncLayout = this.props.syncLayout;
    if (!isSharedLayout(syncLayout))
      syncLayout.flush();
  };
  Measure2.prototype.render = function() {
    return null;
  };
  return Measure2;
}(React.Component);
function MeasureContextProvider(props) {
  var syncLayout = react.exports.useContext(SharedLayoutContext);
  var framerSyncLayout = react.exports.useContext(FramerTreeLayoutContext);
  return /* @__PURE__ */ jsx(Measure, __spreadValues({}, __assign$2({}, props, {
    syncLayout,
    framerSyncLayout
  })));
}
var layoutAnimations = {
  measureLayout: MeasureContextProvider,
  layoutAnimation: AnimateLayoutContextProvider
};
var createProjectionState = function() {
  return {
    isEnabled: false,
    isHydrated: false,
    isTargetLocked: false,
    target: axisBox(),
    targetFinal: axisBox()
  };
};
function createLayoutState() {
  return {
    isHydrated: false,
    layout: axisBox(),
    layoutCorrected: axisBox(),
    treeScale: { x: 1, y: 1 },
    delta: delta(),
    deltaFinal: delta(),
    deltaTransform: ""
  };
}
var zeroLayout = createLayoutState();
function buildLayoutProjectionTransform(_a2, treeScale, latestTransform) {
  var x2 = _a2.x, y2 = _a2.y;
  var xTranslate = x2.translate / treeScale.x;
  var yTranslate = y2.translate / treeScale.y;
  var transform10 = "translate3d(" + xTranslate + "px, " + yTranslate + "px, 0) ";
  if (latestTransform) {
    var rotate = latestTransform.rotate, rotateX = latestTransform.rotateX, rotateY = latestTransform.rotateY;
    if (rotate)
      transform10 += "rotate(" + rotate + ") ";
    if (rotateX)
      transform10 += "rotateX(" + rotateX + ") ";
    if (rotateY)
      transform10 += "rotateY(" + rotateY + ") ";
  }
  transform10 += "scale(" + x2.scale + ", " + y2.scale + ")";
  return !latestTransform && transform10 === identityProjection ? "" : transform10;
}
function buildLayoutProjectionTransformOrigin(_a2) {
  var deltaFinal = _a2.deltaFinal;
  return deltaFinal.x.origin * 100 + "% " + deltaFinal.y.origin * 100 + "% 0";
}
var identityProjection = buildLayoutProjectionTransform(zeroLayout.delta, zeroLayout.treeScale, { x: 1, y: 1 });
var names = [
  "LayoutMeasure",
  "BeforeLayoutMeasure",
  "LayoutUpdate",
  "ViewportBoxUpdate",
  "Update",
  "Render",
  "AnimationComplete",
  "LayoutAnimationComplete",
  "AnimationStart",
  "SetAxisTarget",
  "Unmount"
];
function createLifecycles() {
  var managers = names.map(function() {
    return new SubscriptionManager();
  });
  var propSubscriptions = {};
  var lifecycles = {
    clearAllListeners: function() {
      return managers.forEach(function(manager) {
        return manager.clear();
      });
    },
    updatePropListeners: function(props) {
      return names.forEach(function(name) {
        var _a2;
        (_a2 = propSubscriptions[name]) === null || _a2 === void 0 ? void 0 : _a2.call(propSubscriptions);
        var on = "on" + name;
        var propListener = props[on];
        if (propListener) {
          propSubscriptions[name] = lifecycles[on](propListener);
        }
      });
    }
  };
  managers.forEach(function(manager, i) {
    lifecycles["on" + names[i]] = function(handler) {
      return manager.add(handler);
    };
    lifecycles["notify" + names[i]] = function() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return manager.notify.apply(manager, __spreadArray([], __read$2(args)));
    };
  });
  return lifecycles;
}
function updateMotionValuesFromProps(element, next2, prev2) {
  var _a2;
  for (var key in next2) {
    var nextValue = next2[key];
    var prevValue = prev2[key];
    if (isMotionValue(nextValue)) {
      element.addValue(key, nextValue);
    } else if (isMotionValue(prevValue)) {
      element.addValue(key, motionValue(nextValue));
    } else if (prevValue !== nextValue) {
      if (element.hasValue(key)) {
        var existingValue = element.getValue(key);
        !existingValue.hasAnimated && existingValue.set(nextValue);
      } else {
        element.addValue(key, motionValue((_a2 = element.getStaticValue(key)) !== null && _a2 !== void 0 ? _a2 : nextValue));
      }
    }
  }
  for (var key in prev2) {
    if (next2[key] === void 0)
      element.removeValue(key);
  }
  return next2;
}
function updateLayoutDeltas(_a2, _b, treePath, transformOrigin) {
  var delta2 = _a2.delta, layout2 = _a2.layout, layoutCorrected = _a2.layoutCorrected, treeScale = _a2.treeScale;
  var target = _b.target;
  resetBox(layoutCorrected, layout2);
  applyTreeDeltas(layoutCorrected, treeScale, treePath);
  updateBoxDelta(delta2, layoutCorrected, target, transformOrigin);
}
var FlatTree = function() {
  function FlatTree2() {
    this.children = [];
    this.isDirty = false;
  }
  FlatTree2.prototype.add = function(child) {
    addUniqueItem(this.children, child);
    this.isDirty = true;
  };
  FlatTree2.prototype.remove = function(child) {
    removeItem(this.children, child);
    this.isDirty = true;
  };
  FlatTree2.prototype.forEach = function(callback) {
    this.isDirty && this.children.sort(compareByDepth);
    this.isDirty = false;
    this.children.forEach(callback);
  };
  return FlatTree2;
}();
function setCurrentViewportBox(visualElement2) {
  var projectionParent = visualElement2.getProjectionParent();
  if (!projectionParent) {
    visualElement2.rebaseProjectionTarget();
    return;
  }
  var relativeOffset = calcRelativeOffset(projectionParent.getLayoutState().layout, visualElement2.getLayoutState().layout);
  eachAxis(function(axis) {
    visualElement2.setProjectionTargetAxis(axis, relativeOffset[axis].min, relativeOffset[axis].max, true);
  });
}
var visualElement = function(_a2) {
  var _b = _a2.treeType, treeType = _b === void 0 ? "" : _b, build = _a2.build, getBaseTarget = _a2.getBaseTarget, makeTargetAnimatable = _a2.makeTargetAnimatable, measureViewportBox = _a2.measureViewportBox, renderInstance = _a2.render, readValueFromInstance = _a2.readValueFromInstance, resetTransform = _a2.resetTransform, restoreTransform = _a2.restoreTransform, removeValueFromRenderState = _a2.removeValueFromRenderState, sortNodePosition = _a2.sortNodePosition, scrapeMotionValuesFromProps2 = _a2.scrapeMotionValuesFromProps;
  return function(_a3, options) {
    var parent = _a3.parent, props = _a3.props, presenceId2 = _a3.presenceId, blockInitialAnimation = _a3.blockInitialAnimation, visualState = _a3.visualState;
    if (options === void 0) {
      options = {};
    }
    var latestValues = visualState.latestValues, renderState = visualState.renderState;
    var instance;
    var lifecycles = createLifecycles();
    var projection = createProjectionState();
    var projectionParent;
    var leadProjection = projection;
    var leadLatestValues = latestValues;
    var unsubscribeFromLeadVisualElement;
    var layoutState = createLayoutState();
    var crossfader;
    var hasViewportBoxUpdated = false;
    var values2 = new Map();
    var valueSubscriptions = new Map();
    var prevMotionValues = {};
    var projectionTargetProgress;
    var baseTarget = __assign$2({}, latestValues);
    var removeFromVariantTree;
    function render() {
      if (!instance)
        return;
      if (element.isProjectionReady()) {
        applyBoxTransforms(leadProjection.targetFinal, leadProjection.target, leadLatestValues);
        updateBoxDelta(layoutState.deltaFinal, layoutState.layoutCorrected, leadProjection.targetFinal, latestValues);
      }
      triggerBuild();
      renderInstance(instance, renderState);
    }
    function triggerBuild() {
      var valuesToRender = latestValues;
      if (crossfader && crossfader.isActive()) {
        var crossfadedValues = crossfader.getCrossfadeState(element);
        if (crossfadedValues)
          valuesToRender = crossfadedValues;
      }
      build(element, renderState, valuesToRender, leadProjection, layoutState, options, props);
    }
    function update() {
      lifecycles.notifyUpdate(latestValues);
    }
    function updateLayoutProjection() {
      if (!element.isProjectionReady())
        return;
      var delta2 = layoutState.delta, treeScale = layoutState.treeScale;
      var prevTreeScaleX = treeScale.x;
      var prevTreeScaleY = treeScale.y;
      var prevDeltaTransform = layoutState.deltaTransform;
      updateLayoutDeltas(layoutState, leadProjection, element.path, latestValues);
      hasViewportBoxUpdated && element.notifyViewportBoxUpdate(leadProjection.target, delta2);
      hasViewportBoxUpdated = false;
      var deltaTransform = buildLayoutProjectionTransform(delta2, treeScale);
      if (deltaTransform !== prevDeltaTransform || prevTreeScaleX !== treeScale.x || prevTreeScaleY !== treeScale.y) {
        element.scheduleRender();
      }
      layoutState.deltaTransform = deltaTransform;
    }
    function updateTreeLayoutProjection() {
      element.layoutTree.forEach(fireUpdateLayoutProjection);
    }
    function bindToMotionValue(key2, value2) {
      var removeOnChange = value2.onChange(function(latestValue) {
        latestValues[key2] = latestValue;
        props.onUpdate && sync.update(update, false, true);
      });
      var removeOnRenderRequest = value2.onRenderRequest(element.scheduleRender);
      valueSubscriptions.set(key2, function() {
        removeOnChange();
        removeOnRenderRequest();
      });
    }
    var initialMotionValues = scrapeMotionValuesFromProps2(props);
    for (var key in initialMotionValues) {
      var value = initialMotionValues[key];
      if (latestValues[key] !== void 0 && isMotionValue(value)) {
        value.set(latestValues[key], false);
      }
    }
    var isControllingVariants = checkIfControllingVariants(props);
    var isVariantNode = checkIfVariantNode(props);
    var element = __assign$2(__assign$2({
      treeType,
      current: null,
      depth: parent ? parent.depth + 1 : 0,
      parent,
      children: new Set(),
      path: parent ? __spreadArray(__spreadArray([], __read$2(parent.path)), [parent]) : [],
      layoutTree: parent ? parent.layoutTree : new FlatTree(),
      presenceId: presenceId2,
      projection,
      variantChildren: isVariantNode ? new Set() : void 0,
      isVisible: void 0,
      manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()),
      blockInitialAnimation,
      isMounted: function() {
        return Boolean(instance);
      },
      mount: function(newInstance) {
        instance = element.current = newInstance;
        element.pointTo(element);
        if (isVariantNode && parent && !isControllingVariants) {
          removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);
        }
        parent === null || parent === void 0 ? void 0 : parent.children.add(element);
      },
      unmount: function() {
        cancelSync.update(update);
        cancelSync.render(render);
        cancelSync.preRender(element.updateLayoutProjection);
        valueSubscriptions.forEach(function(remove3) {
          return remove3();
        });
        element.stopLayoutAnimation();
        element.layoutTree.remove(element);
        removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();
        parent === null || parent === void 0 ? void 0 : parent.children.delete(element);
        unsubscribeFromLeadVisualElement === null || unsubscribeFromLeadVisualElement === void 0 ? void 0 : unsubscribeFromLeadVisualElement();
        lifecycles.clearAllListeners();
      },
      addVariantChild: function(child) {
        var _a4;
        var closestVariantNode = element.getClosestVariantNode();
        if (closestVariantNode) {
          (_a4 = closestVariantNode.variantChildren) === null || _a4 === void 0 ? void 0 : _a4.add(child);
          return function() {
            return closestVariantNode.variantChildren.delete(child);
          };
        }
      },
      sortNodePosition: function(other) {
        if (!sortNodePosition || treeType !== other.treeType)
          return 0;
        return sortNodePosition(element.getInstance(), other.getInstance());
      },
      getClosestVariantNode: function() {
        return isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode();
      },
      scheduleUpdateLayoutProjection: parent ? parent.scheduleUpdateLayoutProjection : function() {
        return sync.preRender(element.updateTreeLayoutProjection, false, true);
      },
      getLayoutId: function() {
        return props.layoutId;
      },
      getInstance: function() {
        return instance;
      },
      getStaticValue: function(key2) {
        return latestValues[key2];
      },
      setStaticValue: function(key2, value2) {
        return latestValues[key2] = value2;
      },
      getLatestValues: function() {
        return latestValues;
      },
      setVisibility: function(visibility) {
        if (element.isVisible === visibility)
          return;
        element.isVisible = visibility;
        element.scheduleRender();
      },
      makeTargetAnimatable: function(target, canMutate) {
        if (canMutate === void 0) {
          canMutate = true;
        }
        return makeTargetAnimatable(element, target, props, canMutate);
      },
      addValue: function(key2, value2) {
        if (element.hasValue(key2))
          element.removeValue(key2);
        values2.set(key2, value2);
        latestValues[key2] = value2.get();
        bindToMotionValue(key2, value2);
      },
      removeValue: function(key2) {
        var _a4;
        values2.delete(key2);
        (_a4 = valueSubscriptions.get(key2)) === null || _a4 === void 0 ? void 0 : _a4();
        valueSubscriptions.delete(key2);
        delete latestValues[key2];
        removeValueFromRenderState(key2, renderState);
      },
      hasValue: function(key2) {
        return values2.has(key2);
      },
      getValue: function(key2, defaultValue) {
        var value2 = values2.get(key2);
        if (value2 === void 0 && defaultValue !== void 0) {
          value2 = motionValue(defaultValue);
          element.addValue(key2, value2);
        }
        return value2;
      },
      forEachValue: function(callback) {
        return values2.forEach(callback);
      },
      readValue: function(key2) {
        var _a4;
        return (_a4 = latestValues[key2]) !== null && _a4 !== void 0 ? _a4 : readValueFromInstance(instance, key2, options);
      },
      setBaseTarget: function(key2, value2) {
        baseTarget[key2] = value2;
      },
      getBaseTarget: function(key2) {
        if (getBaseTarget) {
          var target = getBaseTarget(props, key2);
          if (target !== void 0 && !isMotionValue(target))
            return target;
        }
        return baseTarget[key2];
      }
    }, lifecycles), {
      build: function() {
        triggerBuild();
        return renderState;
      },
      scheduleRender: function() {
        sync.render(render, false, true);
      },
      syncRender: render,
      setProps: function(newProps) {
        props = newProps;
        lifecycles.updatePropListeners(newProps);
        prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps2(props), prevMotionValues);
      },
      getProps: function() {
        return props;
      },
      getVariant: function(name) {
        var _a4;
        return (_a4 = props.variants) === null || _a4 === void 0 ? void 0 : _a4[name];
      },
      getDefaultTransition: function() {
        return props.transition;
      },
      getVariantContext: function(startAtParent) {
        if (startAtParent === void 0) {
          startAtParent = false;
        }
        if (startAtParent)
          return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();
        if (!isControllingVariants) {
          var context_1 = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};
          if (props.initial !== void 0) {
            context_1.initial = props.initial;
          }
          return context_1;
        }
        var context = {};
        for (var i = 0; i < numVariantProps; i++) {
          var name_1 = variantProps[i];
          var prop2 = props[name_1];
          if (isVariantLabel(prop2) || prop2 === false) {
            context[name_1] = prop2;
          }
        }
        return context;
      },
      enableLayoutProjection: function() {
        projection.isEnabled = true;
        element.layoutTree.add(element);
      },
      lockProjectionTarget: function() {
        projection.isTargetLocked = true;
      },
      unlockProjectionTarget: function() {
        element.stopLayoutAnimation();
        projection.isTargetLocked = false;
      },
      getLayoutState: function() {
        return layoutState;
      },
      setCrossfader: function(newCrossfader) {
        crossfader = newCrossfader;
      },
      isProjectionReady: function() {
        return projection.isEnabled && projection.isHydrated && layoutState.isHydrated;
      },
      startLayoutAnimation: function(axis, transition2, isRelative) {
        if (isRelative === void 0) {
          isRelative = false;
        }
        var progress2 = element.getProjectionAnimationProgress()[axis];
        var _a4 = isRelative ? projection.relativeTarget[axis] : projection.target[axis], min = _a4.min, max = _a4.max;
        var length2 = max - min;
        progress2.clearListeners();
        progress2.set(min);
        progress2.set(min);
        progress2.onChange(function(v2) {
          element.setProjectionTargetAxis(axis, v2, v2 + length2, isRelative);
        });
        return element.animateMotionValue(axis, progress2, 0, transition2);
      },
      stopLayoutAnimation: function() {
        eachAxis(function(axis) {
          return element.getProjectionAnimationProgress()[axis].stop();
        });
      },
      measureViewportBox: function(withTransform) {
        if (withTransform === void 0) {
          withTransform = true;
        }
        var viewportBox = measureViewportBox(instance, options);
        if (!withTransform)
          removeBoxTransforms(viewportBox, latestValues);
        return viewportBox;
      },
      getProjectionAnimationProgress: function() {
        projectionTargetProgress || (projectionTargetProgress = {
          x: motionValue(0),
          y: motionValue(0)
        });
        return projectionTargetProgress;
      },
      setProjectionTargetAxis: function(axis, min, max, isRelative) {
        if (isRelative === void 0) {
          isRelative = false;
        }
        var target;
        if (isRelative) {
          if (!projection.relativeTarget) {
            projection.relativeTarget = axisBox();
          }
          target = projection.relativeTarget[axis];
        } else {
          projection.relativeTarget = void 0;
          target = projection.target[axis];
        }
        projection.isHydrated = true;
        target.min = min;
        target.max = max;
        hasViewportBoxUpdated = true;
        lifecycles.notifySetAxisTarget();
      },
      rebaseProjectionTarget: function(force, box2) {
        if (box2 === void 0) {
          box2 = layoutState.layout;
        }
        var _a4 = element.getProjectionAnimationProgress(), x2 = _a4.x, y2 = _a4.y;
        var shouldRebase = !projection.relativeTarget && !projection.isTargetLocked && !x2.isAnimating() && !y2.isAnimating();
        if (force || shouldRebase) {
          eachAxis(function(axis) {
            var _a5 = box2[axis], min = _a5.min, max = _a5.max;
            element.setProjectionTargetAxis(axis, min, max);
          });
        }
      },
      notifyLayoutReady: function(config2) {
        setCurrentViewportBox(element);
        element.notifyLayoutUpdate(layoutState.layout, element.prevViewportBox || layoutState.layout, config2);
      },
      resetTransform: function() {
        return resetTransform(element, instance, props);
      },
      restoreTransform: function() {
        return restoreTransform(instance, renderState);
      },
      updateLayoutProjection,
      updateTreeLayoutProjection: function() {
        element.layoutTree.forEach(fireResolveRelativeTargetBox);
        sync.preRender(updateTreeLayoutProjection, false, true);
      },
      getProjectionParent: function() {
        if (projectionParent === void 0) {
          var foundParent = false;
          for (var i = element.path.length - 1; i >= 0; i--) {
            var ancestor = element.path[i];
            if (ancestor.projection.isEnabled) {
              foundParent = ancestor;
              break;
            }
          }
          projectionParent = foundParent;
        }
        return projectionParent;
      },
      resolveRelativeTargetBox: function() {
        var relativeParent = element.getProjectionParent();
        if (!projection.relativeTarget || !relativeParent)
          return;
        calcRelativeBox(projection, relativeParent.projection);
        if (isDraggable(relativeParent)) {
          var target = projection.target;
          applyBoxTransforms(target, target, relativeParent.getLatestValues());
        }
      },
      shouldResetTransform: function() {
        return Boolean(props._layoutResetTransform);
      },
      pointTo: function(newLead) {
        leadProjection = newLead.projection;
        leadLatestValues = newLead.getLatestValues();
        unsubscribeFromLeadVisualElement === null || unsubscribeFromLeadVisualElement === void 0 ? void 0 : unsubscribeFromLeadVisualElement();
        unsubscribeFromLeadVisualElement = pipe(newLead.onSetAxisTarget(element.scheduleUpdateLayoutProjection), newLead.onLayoutAnimationComplete(function() {
          var _a4;
          if (element.isPresent) {
            element.presence = Presence.Present;
          } else {
            (_a4 = element.layoutSafeToRemove) === null || _a4 === void 0 ? void 0 : _a4.call(element);
          }
        }));
      },
      isPresent: true,
      presence: Presence.Entering
    });
    return element;
  };
};
function fireResolveRelativeTargetBox(child) {
  child.resolveRelativeTargetBox();
}
function fireUpdateLayoutProjection(child) {
  child.updateLayoutProjection();
}
var variantProps = __spreadArray(["initial"], __read$2(variantPriorityOrder));
var numVariantProps = variantProps.length;
var positionalKeys = new Set([
  "width",
  "height",
  "top",
  "left",
  "right",
  "bottom",
  "x",
  "y"
]);
var isPositionalKey = function(key) {
  return positionalKeys.has(key);
};
var hasPositionalKey = function(target) {
  return Object.keys(target).some(isPositionalKey);
};
var setAndResetVelocity = function(value, to) {
  value.set(to, false);
  value.set(to);
};
var isNumOrPxType = function(v2) {
  return v2 === number$1 || v2 === px2;
};
var BoundingBoxDimension;
(function(BoundingBoxDimension2) {
  BoundingBoxDimension2["width"] = "width";
  BoundingBoxDimension2["height"] = "height";
  BoundingBoxDimension2["left"] = "left";
  BoundingBoxDimension2["right"] = "right";
  BoundingBoxDimension2["top"] = "top";
  BoundingBoxDimension2["bottom"] = "bottom";
})(BoundingBoxDimension || (BoundingBoxDimension = {}));
var getPosFromMatrix = function(matrix, pos) {
  return parseFloat(matrix.split(", ")[pos]);
};
var getTranslateFromMatrix = function(pos2, pos3) {
  return function(_bbox, _a2) {
    var transform10 = _a2.transform;
    if (transform10 === "none" || !transform10)
      return 0;
    var matrix3d = transform10.match(/^matrix3d\((.+)\)$/);
    if (matrix3d) {
      return getPosFromMatrix(matrix3d[1], pos3);
    } else {
      var matrix = transform10.match(/^matrix\((.+)\)$/);
      if (matrix) {
        return getPosFromMatrix(matrix[1], pos2);
      } else {
        return 0;
      }
    }
  };
};
var transformKeys = new Set(["x", "y", "z"]);
var nonTranslationalTransformKeys = transformProps.filter(function(key) {
  return !transformKeys.has(key);
});
function removeNonTranslationalTransform(visualElement2) {
  var removedTransforms = [];
  nonTranslationalTransformKeys.forEach(function(key) {
    var value = visualElement2.getValue(key);
    if (value !== void 0) {
      removedTransforms.push([key, value.get()]);
      value.set(key.startsWith("scale") ? 1 : 0);
    }
  });
  if (removedTransforms.length)
    visualElement2.syncRender();
  return removedTransforms;
}
var positionalValues = {
  width: function(_a2) {
    var x2 = _a2.x;
    return x2.max - x2.min;
  },
  height: function(_a2) {
    var y2 = _a2.y;
    return y2.max - y2.min;
  },
  top: function(_bbox, _a2) {
    var top2 = _a2.top;
    return parseFloat(top2);
  },
  left: function(_bbox, _a2) {
    var left = _a2.left;
    return parseFloat(left);
  },
  bottom: function(_a2, _b) {
    var y2 = _a2.y;
    var top2 = _b.top;
    return parseFloat(top2) + (y2.max - y2.min);
  },
  right: function(_a2, _b) {
    var x2 = _a2.x;
    var left = _b.left;
    return parseFloat(left) + (x2.max - x2.min);
  },
  x: getTranslateFromMatrix(4, 13),
  y: getTranslateFromMatrix(5, 14)
};
var convertChangedValueTypes = function(target, visualElement2, changedKeys) {
  var originBbox = visualElement2.measureViewportBox();
  var element = visualElement2.getInstance();
  var elementComputedStyle = getComputedStyle(element);
  var display = elementComputedStyle.display, top2 = elementComputedStyle.top, left = elementComputedStyle.left, bottom = elementComputedStyle.bottom, right = elementComputedStyle.right, transform10 = elementComputedStyle.transform;
  var originComputedStyle = { top: top2, left, bottom, right, transform: transform10 };
  if (display === "none") {
    visualElement2.setStaticValue("display", target.display || "block");
  }
  visualElement2.syncRender();
  var targetBbox = visualElement2.measureViewportBox();
  changedKeys.forEach(function(key) {
    var value = visualElement2.getValue(key);
    setAndResetVelocity(value, positionalValues[key](originBbox, originComputedStyle));
    target[key] = positionalValues[key](targetBbox, elementComputedStyle);
  });
  return target;
};
var checkAndConvertChangedValueTypes = function(visualElement2, target, origin, transitionEnd) {
  if (origin === void 0) {
    origin = {};
  }
  if (transitionEnd === void 0) {
    transitionEnd = {};
  }
  target = __assign$2({}, target);
  transitionEnd = __assign$2({}, transitionEnd);
  var targetPositionalKeys = Object.keys(target).filter(isPositionalKey);
  var removedTransformValues = [];
  var hasAttemptedToRemoveTransformValues = false;
  var changedValueTypeKeys = [];
  targetPositionalKeys.forEach(function(key) {
    var value = visualElement2.getValue(key);
    if (!visualElement2.hasValue(key))
      return;
    var from2 = origin[key];
    var to = target[key];
    var fromType = findDimensionValueType(from2);
    var toType;
    if (isKeyframesTarget(to)) {
      var numKeyframes = to.length;
      for (var i = to[0] === null ? 1 : 0; i < numKeyframes; i++) {
        if (!toType) {
          toType = findDimensionValueType(to[i]);
        } else {
          invariant(findDimensionValueType(to[i]) === toType);
        }
      }
    } else {
      toType = findDimensionValueType(to);
    }
    if (fromType !== toType) {
      if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {
        var current = value.get();
        if (typeof current === "string") {
          value.set(parseFloat(current));
        }
        if (typeof to === "string") {
          target[key] = parseFloat(to);
        } else if (Array.isArray(to) && toType === px2) {
          target[key] = to.map(parseFloat);
        }
      } else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) && (toType === null || toType === void 0 ? void 0 : toType.transform) && (from2 === 0 || to === 0)) {
        if (from2 === 0) {
          value.set(toType.transform(from2));
        } else {
          target[key] = fromType.transform(to);
        }
      } else {
        if (!hasAttemptedToRemoveTransformValues) {
          removedTransformValues = removeNonTranslationalTransform(visualElement2);
          hasAttemptedToRemoveTransformValues = true;
        }
        changedValueTypeKeys.push(key);
        transitionEnd[key] = transitionEnd[key] !== void 0 ? transitionEnd[key] : target[key];
        setAndResetVelocity(value, to);
      }
    }
  });
  if (changedValueTypeKeys.length) {
    var convertedTarget = convertChangedValueTypes(target, visualElement2, changedValueTypeKeys);
    if (removedTransformValues.length) {
      removedTransformValues.forEach(function(_a2) {
        var _b = __read$2(_a2, 2), key = _b[0], value = _b[1];
        visualElement2.getValue(key).set(value);
      });
    }
    visualElement2.syncRender();
    return { target: convertedTarget, transitionEnd };
  } else {
    return { target, transitionEnd };
  }
};
function unitConversion(visualElement2, target, origin, transitionEnd) {
  return hasPositionalKey(target) ? checkAndConvertChangedValueTypes(visualElement2, target, origin, transitionEnd) : { target, transitionEnd };
}
var parseDomVariant = function(visualElement2, target, origin, transitionEnd) {
  var resolved = resolveCSSVariables(visualElement2, target, transitionEnd);
  target = resolved.target;
  transitionEnd = resolved.transitionEnd;
  return unitConversion(visualElement2, target, origin, transitionEnd);
};
function getComputedStyle$1(element) {
  return window.getComputedStyle(element);
}
var htmlConfig = {
  treeType: "dom",
  readValueFromInstance: function(domElement, key) {
    if (isTransformProp(key)) {
      var defaultType = getDefaultValueType(key);
      return defaultType ? defaultType.default || 0 : 0;
    } else {
      var computedStyle = getComputedStyle$1(domElement);
      return (isCSSVariable$1(key) ? computedStyle.getPropertyValue(key) : computedStyle[key]) || 0;
    }
  },
  sortNodePosition: function(a2, b2) {
    return a2.compareDocumentPosition(b2) & 2 ? 1 : -1;
  },
  getBaseTarget: function(props, key) {
    var _a2;
    return (_a2 = props.style) === null || _a2 === void 0 ? void 0 : _a2[key];
  },
  measureViewportBox: function(element, _a2) {
    var transformPagePoint = _a2.transformPagePoint;
    return getBoundingBox(element, transformPagePoint);
  },
  resetTransform: function(element, domElement, props) {
    var transformTemplate2 = props.transformTemplate;
    domElement.style.transform = transformTemplate2 ? transformTemplate2({}, "") : "none";
    element.scheduleRender();
  },
  restoreTransform: function(instance, mutableState) {
    instance.style.transform = mutableState.style.transform;
  },
  removeValueFromRenderState: function(key, _a2) {
    var vars = _a2.vars, style = _a2.style;
    delete vars[key];
    delete style[key];
  },
  makeTargetAnimatable: function(element, _a2, _b, isMounted) {
    var transformValues = _b.transformValues;
    if (isMounted === void 0) {
      isMounted = true;
    }
    var transition2 = _a2.transition, transitionEnd = _a2.transitionEnd, target = __rest$1(_a2, ["transition", "transitionEnd"]);
    var origin = getOrigin(target, transition2 || {}, element);
    if (transformValues) {
      if (transitionEnd)
        transitionEnd = transformValues(transitionEnd);
      if (target)
        target = transformValues(target);
      if (origin)
        origin = transformValues(origin);
    }
    if (isMounted) {
      checkTargetForNewValues(element, target, origin);
      var parsed = parseDomVariant(element, target, origin, transitionEnd);
      transitionEnd = parsed.transitionEnd;
      target = parsed.target;
    }
    return __assign$2({
      transition: transition2,
      transitionEnd
    }, target);
  },
  scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,
  build: function(element, renderState, latestValues, projection, layoutState, options, props) {
    if (element.isVisible !== void 0) {
      renderState.style.visibility = element.isVisible ? "visible" : "hidden";
    }
    var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;
    buildHTMLStyles(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : void 0, isProjectionTranform ? buildLayoutProjectionTransformOrigin : void 0);
  },
  render: renderHTML
};
var htmlVisualElement = visualElement(htmlConfig);
var svgVisualElement = visualElement(__assign$2(__assign$2({}, htmlConfig), {
  getBaseTarget: function(props, key) {
    return props[key];
  },
  readValueFromInstance: function(domElement, key) {
    var _a2;
    if (isTransformProp(key)) {
      return ((_a2 = getDefaultValueType(key)) === null || _a2 === void 0 ? void 0 : _a2.default) || 0;
    }
    key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;
    return domElement.getAttribute(key);
  },
  scrapeMotionValuesFromProps,
  build: function(_element, renderState, latestValues, projection, layoutState, options, props) {
    var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;
    buildSVGAttrs(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : void 0, isProjectionTranform ? buildLayoutProjectionTransformOrigin : void 0);
  },
  render: renderSVG
}));
var createDomVisualElement = function(Component, options) {
  return isSVGComponent(Component) ? svgVisualElement(options, { enableHardwareAcceleration: false }) : htmlVisualElement(options, { enableHardwareAcceleration: true });
};
var featureBundle = __assign$2(__assign$2(__assign$2(__assign$2({}, animations), gestureAnimations), drag), layoutAnimations);
var motion = /* @__PURE__ */ createMotionProxy(function(Component, config2) {
  return createDomMotionConfig(Component, config2, featureBundle, createDomVisualElement);
});
function useForceUpdate() {
  var unloadingRef = react.exports.useRef(false);
  var _a2 = __read$2(react.exports.useState(0), 2), forcedRenderCount = _a2[0], setForcedRenderCount = _a2[1];
  useUnmountEffect(function() {
    return unloadingRef.current = true;
  });
  return react.exports.useCallback(function() {
    !unloadingRef.current && setForcedRenderCount(forcedRenderCount + 1);
  }, [forcedRenderCount]);
}
var presenceId = 0;
function getPresenceId() {
  var id2 = presenceId;
  presenceId++;
  return id2;
}
var PresenceChild = function(_a2) {
  var children = _a2.children, initial = _a2.initial, isPresent2 = _a2.isPresent, onExitComplete = _a2.onExitComplete, custom2 = _a2.custom, presenceAffectsLayout = _a2.presenceAffectsLayout;
  var presenceChildren = useConstant(newChildrenMap);
  var id2 = useConstant(getPresenceId);
  var context = react.exports.useMemo(function() {
    return {
      id: id2,
      initial,
      isPresent: isPresent2,
      custom: custom2,
      onExitComplete: function(childId) {
        presenceChildren.set(childId, true);
        var allComplete = true;
        presenceChildren.forEach(function(isComplete) {
          if (!isComplete)
            allComplete = false;
        });
        allComplete && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());
      },
      register: function(childId) {
        presenceChildren.set(childId, false);
        return function() {
          return presenceChildren.delete(childId);
        };
      }
    };
  }, presenceAffectsLayout ? void 0 : [isPresent2]);
  react.exports.useMemo(function() {
    presenceChildren.forEach(function(_2, key) {
      return presenceChildren.set(key, false);
    });
  }, [isPresent2]);
  react.exports.useEffect(function() {
    !isPresent2 && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());
  }, [isPresent2]);
  return react.exports.createElement(PresenceContext.Provider, { value: context }, children);
};
function newChildrenMap() {
  return new Map();
}
function getChildKey(child) {
  return child.key || "";
}
function updateChildLookup(children, allChildren) {
  children.forEach(function(child) {
    var key = getChildKey(child);
    allChildren.set(key, child);
  });
}
function onlyElements(children) {
  var filtered = [];
  react.exports.Children.forEach(children, function(child) {
    if (react.exports.isValidElement(child))
      filtered.push(child);
  });
  return filtered;
}
var AnimatePresence = function(_a2) {
  var children = _a2.children, custom2 = _a2.custom, _b = _a2.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a2.onExitComplete, exitBeforeEnter = _a2.exitBeforeEnter, _c = _a2.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;
  var forceRender = useForceUpdate();
  var layoutContext = react.exports.useContext(SharedLayoutContext);
  if (isSharedLayout(layoutContext)) {
    forceRender = layoutContext.forceUpdate;
  }
  var isInitialRender = react.exports.useRef(true);
  var filteredChildren = onlyElements(children);
  var presentChildren = react.exports.useRef(filteredChildren);
  var allChildren = react.exports.useRef(new Map()).current;
  var exiting = react.exports.useRef(new Set()).current;
  updateChildLookup(filteredChildren, allChildren);
  if (isInitialRender.current) {
    isInitialRender.current = false;
    return react.exports.createElement(react.exports.Fragment, null, filteredChildren.map(function(child) {
      return react.exports.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? void 0 : false, presenceAffectsLayout }, child);
    }));
  }
  var childrenToRender = __spreadArray([], __read$2(filteredChildren));
  var presentKeys = presentChildren.current.map(getChildKey);
  var targetKeys = filteredChildren.map(getChildKey);
  var numPresent = presentKeys.length;
  for (var i = 0; i < numPresent; i++) {
    var key = presentKeys[i];
    if (targetKeys.indexOf(key) === -1) {
      exiting.add(key);
    } else {
      exiting.delete(key);
    }
  }
  if (exitBeforeEnter && exiting.size) {
    childrenToRender = [];
  }
  exiting.forEach(function(key2) {
    if (targetKeys.indexOf(key2) !== -1)
      return;
    var child = allChildren.get(key2);
    if (!child)
      return;
    var insertionIndex = presentKeys.indexOf(key2);
    var onExit = function() {
      allChildren.delete(key2);
      exiting.delete(key2);
      var removeIndex = presentChildren.current.findIndex(function(presentChild) {
        return presentChild.key === key2;
      });
      presentChildren.current.splice(removeIndex, 1);
      if (!exiting.size) {
        presentChildren.current = filteredChildren;
        forceRender();
        onExitComplete && onExitComplete();
      }
    };
    childrenToRender.splice(insertionIndex, 0, react.exports.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom2, presenceAffectsLayout }, child));
  });
  childrenToRender = childrenToRender.map(function(child) {
    var key2 = child.key;
    return exiting.has(key2) ? child : react.exports.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout }, child);
  });
  presentChildren.current = childrenToRender;
  return react.exports.createElement(react.exports.Fragment, null, exiting.size ? childrenToRender : childrenToRender.map(function(child) {
    return react.exports.cloneElement(child);
  }));
};
var visuallyHiddenStyle = {
  border: "0px",
  clip: "rect(0px, 0px, 0px, 0px)",
  height: "1px",
  width: "1px",
  margin: "-1px",
  padding: "0px",
  overflow: "hidden",
  whiteSpace: "nowrap",
  position: "absolute"
};
var VisuallyHidden = chakra("span", {
  baseStyle: visuallyHiddenStyle
});
chakra("input", {
  baseStyle: visuallyHiddenStyle
});
function _extends$5() {
  _extends$5 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$5.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$4(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded$j = ["label", "thickness", "speed", "emptyColor", "className"];
var spin = keyframes$2({
  "0%": {
    transform: "rotate(0deg)"
  },
  "100%": {
    transform: "rotate(360deg)"
  }
});
var Spinner = /* @__PURE__ */ forwardRef(function(props, ref) {
  var styles2 = useStyleConfig("Spinner", props);
  var _omitThemingProps = omitThemingProps(props), _omitThemingProps$lab = _omitThemingProps.label, label = _omitThemingProps$lab === void 0 ? "Loading..." : _omitThemingProps$lab, _omitThemingProps$thi = _omitThemingProps.thickness, thickness = _omitThemingProps$thi === void 0 ? "2px" : _omitThemingProps$thi, _omitThemingProps$spe = _omitThemingProps.speed, speed = _omitThemingProps$spe === void 0 ? "0.45s" : _omitThemingProps$spe, _omitThemingProps$emp = _omitThemingProps.emptyColor, emptyColor = _omitThemingProps$emp === void 0 ? "transparent" : _omitThemingProps$emp, className = _omitThemingProps.className, rest = _objectWithoutPropertiesLoose$4(_omitThemingProps, _excluded$j);
  var _className = cx("chakra-spinner", className);
  var spinnerStyles = _extends$5({
    display: "inline-block",
    borderColor: "currentColor",
    borderStyle: "solid",
    borderRadius: "99999px",
    borderWidth: thickness,
    borderBottomColor: emptyColor,
    borderLeftColor: emptyColor,
    animation: spin + " " + speed + " linear infinite"
  }, styles2);
  return /* @__PURE__ */ react.exports.createElement(chakra.div, _extends$5({
    ref,
    __css: spinnerStyles,
    className: _className
  }, rest), label && /* @__PURE__ */ react.exports.createElement(VisuallyHidden, null, label));
});
function _objectWithoutPropertiesLoose$3(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends$4() {
  _extends$4 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$4.apply(this, arguments);
}
var _excluded$4$1 = ["size", "colorScheme", "variant", "className", "spacing", "isAttached", "isDisabled"];
var _createContext$3 = createContext({
  strict: false,
  name: "ButtonGroupContext"
}), ButtonGroupProvider = _createContext$3[0], useButtonGroup = _createContext$3[1];
var ButtonGroup = /* @__PURE__ */ forwardRef(function(props, ref) {
  var size2 = props.size, colorScheme = props.colorScheme, variant = props.variant, className = props.className, _props$spacing = props.spacing, spacing2 = _props$spacing === void 0 ? "0.5rem" : _props$spacing, isAttached = props.isAttached, isDisabled = props.isDisabled, rest = _objectWithoutPropertiesLoose$3(props, _excluded$4$1);
  var _className = cx("chakra-button__group", className);
  var context = react.exports.useMemo(function() {
    return {
      size: size2,
      colorScheme,
      variant,
      isDisabled
    };
  }, [size2, colorScheme, variant, isDisabled]);
  var groupStyles = {
    display: "inline-flex"
  };
  if (isAttached) {
    groupStyles = _extends$4({}, groupStyles, {
      "> *:first-of-type:not(:last-of-type)": {
        borderEndRadius: 0
      },
      "> *:not(:first-of-type):not(:last-of-type)": {
        borderRadius: 0
      },
      "> *:not(:first-of-type):last-of-type": {
        borderStartRadius: 0
      }
    });
  } else {
    groupStyles = _extends$4({}, groupStyles, {
      "& > *:not(style) ~ *:not(style)": {
        marginStart: spacing2
      }
    });
  }
  return /* @__PURE__ */ react.exports.createElement(ButtonGroupProvider, {
    value: context
  }, /* @__PURE__ */ react.exports.createElement(chakra.div, _extends$4({
    ref,
    role: "group",
    __css: groupStyles,
    className: _className
  }, rest)));
});
if (__DEV__) {
  ButtonGroup.displayName = "ButtonGroup";
}
var _excluded$3$2 = ["label", "placement", "spacing", "children", "className", "__css"];
var ButtonSpinner = function ButtonSpinner2(props) {
  var label = props.label, placement = props.placement;
  props.spacing;
  var _props$children = props.children, children = _props$children === void 0 ? /* @__PURE__ */ react.exports.createElement(Spinner, {
    color: "currentColor",
    width: "1em",
    height: "1em"
  }) : _props$children, className = props.className, __css = props.__css, rest = _objectWithoutPropertiesLoose$3(props, _excluded$3$2);
  var _className = cx("chakra-button__spinner", className);
  var marginProp = placement === "start" ? "marginEnd" : "marginStart";
  var spinnerStyles = react.exports.useMemo(function() {
    var _extends2;
    return _extends$4((_extends2 = {
      display: "flex",
      alignItems: "center",
      position: label ? "relative" : "absolute"
    }, _extends2[marginProp] = label ? "0.5rem" : 0, _extends2.fontSize = "1em", _extends2.lineHeight = "normal", _extends2), __css);
  }, [__css, label, marginProp]);
  return /* @__PURE__ */ react.exports.createElement(chakra.div, _extends$4({
    className: _className
  }, rest, {
    __css: spinnerStyles
  }), children);
};
if (__DEV__) {
  ButtonSpinner.displayName = "ButtonSpinner";
}
var _excluded$2$3 = ["children", "className"];
var ButtonIcon = function ButtonIcon2(props) {
  var children = props.children, className = props.className, rest = _objectWithoutPropertiesLoose$3(props, _excluded$2$3);
  var _children = /* @__PURE__ */ react.exports.isValidElement(children) ? /* @__PURE__ */ react.exports.cloneElement(children, {
    "aria-hidden": true,
    focusable: false
  }) : children;
  var _className = cx("chakra-button__icon", className);
  return /* @__PURE__ */ react.exports.createElement(chakra.span, _extends$4({
    display: "inline-flex",
    alignSelf: "center",
    flexShrink: 0
  }, rest, {
    className: _className
  }), _children);
};
if (__DEV__) {
  ButtonIcon.displayName = "ButtonIcon";
}
function useButtonType(value) {
  var _React$useState = react.exports.useState(!value), isButton = _React$useState[0], setIsButton = _React$useState[1];
  var refCallback = react.exports.useCallback(function(node2) {
    if (!node2)
      return;
    setIsButton(node2.tagName === "BUTTON");
  }, []);
  var type = isButton ? "button" : void 0;
  return {
    ref: refCallback,
    type
  };
}
var _excluded$1$3 = ["isDisabled", "isLoading", "isActive", "isFullWidth", "children", "leftIcon", "rightIcon", "loadingText", "iconSpacing", "type", "spinner", "spinnerPlacement", "className", "as"];
var Button = /* @__PURE__ */ forwardRef(function(props, ref) {
  var group2 = useButtonGroup();
  var styles2 = useStyleConfig("Button", _extends$4({}, group2, props));
  var _omitThemingProps = omitThemingProps(props), _omitThemingProps$isD = _omitThemingProps.isDisabled, isDisabled = _omitThemingProps$isD === void 0 ? group2 == null ? void 0 : group2.isDisabled : _omitThemingProps$isD, isLoading = _omitThemingProps.isLoading, isActive = _omitThemingProps.isActive, isFullWidth = _omitThemingProps.isFullWidth, children = _omitThemingProps.children, leftIcon = _omitThemingProps.leftIcon, rightIcon = _omitThemingProps.rightIcon, loadingText = _omitThemingProps.loadingText, _omitThemingProps$ico = _omitThemingProps.iconSpacing, iconSpacing2 = _omitThemingProps$ico === void 0 ? "0.5rem" : _omitThemingProps$ico, type = _omitThemingProps.type, spinner = _omitThemingProps.spinner, _omitThemingProps$spi = _omitThemingProps.spinnerPlacement, spinnerPlacement = _omitThemingProps$spi === void 0 ? "start" : _omitThemingProps$spi, className = _omitThemingProps.className, as = _omitThemingProps.as, rest = _objectWithoutPropertiesLoose$3(_omitThemingProps, _excluded$1$3);
  var buttonStyles = react.exports.useMemo(function() {
    var _styles$_focus;
    var _focus = mergeWith({}, (_styles$_focus = styles2 == null ? void 0 : styles2["_focus"]) != null ? _styles$_focus : {}, {
      zIndex: 1
    });
    return _extends$4({
      display: "inline-flex",
      appearance: "none",
      alignItems: "center",
      justifyContent: "center",
      userSelect: "none",
      position: "relative",
      whiteSpace: "nowrap",
      verticalAlign: "middle",
      outline: "none",
      width: isFullWidth ? "100%" : "auto"
    }, styles2, !!group2 && {
      _focus
    });
  }, [styles2, group2, isFullWidth]);
  var _useButtonType = useButtonType(as), _ref = _useButtonType.ref, defaultType = _useButtonType.type;
  var contentProps = {
    rightIcon,
    leftIcon,
    iconSpacing: iconSpacing2,
    children
  };
  return /* @__PURE__ */ react.exports.createElement(chakra.button, _extends$4({
    disabled: isDisabled || isLoading,
    ref: useMergeRefs(ref, _ref),
    as,
    type: type != null ? type : defaultType,
    "data-active": dataAttr(isActive),
    "data-loading": dataAttr(isLoading),
    __css: buttonStyles,
    className: cx("chakra-button", className)
  }, rest), isLoading && spinnerPlacement === "start" && /* @__PURE__ */ react.exports.createElement(ButtonSpinner, {
    className: "chakra-button__spinner--start",
    label: loadingText,
    placement: "start"
  }, spinner), isLoading ? loadingText || /* @__PURE__ */ react.exports.createElement(chakra.span, {
    opacity: 0
  }, /* @__PURE__ */ react.exports.createElement(ButtonContent, contentProps)) : /* @__PURE__ */ react.exports.createElement(ButtonContent, contentProps), isLoading && spinnerPlacement === "end" && /* @__PURE__ */ react.exports.createElement(ButtonSpinner, {
    className: "chakra-button__spinner--end",
    label: loadingText,
    placement: "end"
  }, spinner));
});
if (__DEV__) {
  Button.displayName = "Button";
}
function ButtonContent(props) {
  var leftIcon = props.leftIcon, rightIcon = props.rightIcon, children = props.children, iconSpacing2 = props.iconSpacing;
  return /* @__PURE__ */ react.exports.createElement(react.exports.Fragment, null, leftIcon && /* @__PURE__ */ react.exports.createElement(ButtonIcon, {
    marginEnd: iconSpacing2
  }, leftIcon), children, rightIcon && /* @__PURE__ */ react.exports.createElement(ButtonIcon, {
    marginStart: iconSpacing2
  }, rightIcon));
}
var _excluded$i = ["icon", "children", "isRound", "aria-label"];
var IconButton = /* @__PURE__ */ forwardRef(function(props, ref) {
  var icon = props.icon, children = props.children, isRound = props.isRound, ariaLabel = props["aria-label"], rest = _objectWithoutPropertiesLoose$3(props, _excluded$i);
  var element = icon || children;
  var _children = /* @__PURE__ */ react.exports.isValidElement(element) ? /* @__PURE__ */ react.exports.cloneElement(element, {
    "aria-hidden": true,
    focusable: false
  }) : null;
  return /* @__PURE__ */ react.exports.createElement(Button, _extends$4({
    padding: "0",
    borderRadius: isRound ? "full" : void 0,
    ref,
    "aria-label": ariaLabel
  }, rest), _children);
});
if (__DEV__) {
  IconButton.displayName = "IconButton";
}
function _extends$3() {
  _extends$3 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$3.apply(this, arguments);
}
function useCheckboxGroup(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, defaultValue = _props.defaultValue, valueProp = _props.value, onChange = _props.onChange, isDisabled = _props.isDisabled, isNative = _props.isNative;
  var onChangeProp = useCallbackRef(onChange);
  var _useControllableState = useControllableState({
    value: valueProp,
    defaultValue: defaultValue || [],
    onChange: onChangeProp
  }), value = _useControllableState[0], setValue = _useControllableState[1];
  var handleChange = react.exports.useCallback(function(eventOrValue) {
    if (!value)
      return;
    var isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);
    var selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;
    var nextValue = isChecked ? addItem(value, selectedValue) : removeItem$1(value, selectedValue);
    setValue(nextValue);
  }, [setValue, value]);
  var getCheckboxProps = react.exports.useCallback(function(props2) {
    var _extends2;
    if (props2 === void 0) {
      props2 = {};
    }
    var checkedKey = isNative ? "checked" : "isChecked";
    return _extends$3({}, props2, (_extends2 = {}, _extends2[checkedKey] = value.includes(props2.value), _extends2.onChange = handleChange, _extends2));
  }, [handleChange, isNative, value]);
  return {
    value,
    isDisabled,
    onChange: handleChange,
    setValue,
    getCheckboxProps
  };
}
var _createContext$2 = createContext({
  name: "CheckboxGroupContext",
  strict: false
}), CheckboxGroupProvider = _createContext$2[0], useCheckboxGroupContext = _createContext$2[1];
var CheckboxGroup = function CheckboxGroup2(props) {
  var colorScheme = props.colorScheme, size2 = props.size, variant = props.variant, children = props.children, isDisabled = props.isDisabled;
  var _useCheckboxGroup = useCheckboxGroup(props), value = _useCheckboxGroup.value, onChange = _useCheckboxGroup.onChange;
  var group2 = react.exports.useMemo(function() {
    return {
      size: size2,
      onChange,
      colorScheme,
      value,
      variant,
      isDisabled
    };
  }, [size2, onChange, colorScheme, value, variant, isDisabled]);
  return /* @__PURE__ */ react.exports.createElement(CheckboxGroupProvider, {
    value: group2
  }, children);
};
function _objectWithoutPropertiesLoose$2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded$2$2 = ["isIndeterminate", "isChecked"];
var MotionSvg = "custom" in motion ? motion.custom(chakra.svg) : motion(chakra.svg);
var CheckIcon = function CheckIcon2(props) {
  return /* @__PURE__ */ react.exports.createElement(MotionSvg, _extends$3({
    width: "1.2em",
    viewBox: "0 0 12 10",
    variants: {
      unchecked: {
        opacity: 0,
        strokeDashoffset: 16
      },
      checked: {
        opacity: 1,
        strokeDashoffset: 0,
        transition: {
          duration: 0.2
        }
      }
    },
    style: {
      fill: "none",
      strokeWidth: 2,
      stroke: "currentColor",
      strokeDasharray: 16
    }
  }, props), /* @__PURE__ */ react.exports.createElement("polyline", {
    points: "1.5 6 4.5 9 10.5 1"
  }));
};
var IndeterminateIcon = function IndeterminateIcon2(props) {
  return /* @__PURE__ */ react.exports.createElement(MotionSvg, _extends$3({
    width: "1.2em",
    viewBox: "0 0 24 24",
    variants: {
      unchecked: {
        scaleX: 0.65,
        opacity: 0
      },
      checked: {
        scaleX: 1,
        opacity: 1,
        transition: {
          scaleX: {
            duration: 0
          },
          opacity: {
            duration: 0.02
          }
        }
      }
    },
    style: {
      stroke: "currentColor",
      strokeWidth: 4
    }
  }, props), /* @__PURE__ */ react.exports.createElement("line", {
    x1: "21",
    x2: "3",
    y1: "12",
    y2: "12"
  }));
};
var CheckboxTransition = function CheckboxTransition2(_ref) {
  var open = _ref.open, children = _ref.children;
  return /* @__PURE__ */ react.exports.createElement(AnimatePresence, {
    initial: false
  }, open && /* @__PURE__ */ react.exports.createElement(motion.div, {
    variants: {
      unchecked: {
        scale: 0.5
      },
      checked: {
        scale: 1
      }
    },
    initial: "unchecked",
    animate: "checked",
    exit: "unchecked",
    style: {
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      height: "100%"
    }
  }, children));
};
var CheckboxIcon = function CheckboxIcon2(props) {
  var isIndeterminate = props.isIndeterminate, isChecked = props.isChecked, rest = _objectWithoutPropertiesLoose$2(props, _excluded$2$2);
  var IconEl = isIndeterminate ? IndeterminateIcon : CheckIcon;
  return /* @__PURE__ */ react.exports.createElement(CheckboxTransition, {
    open: isChecked || isIndeterminate
  }, /* @__PURE__ */ react.exports.createElement(IconEl, rest));
};
var _excluded$1$2 = ["defaultIsChecked", "defaultChecked", "isChecked", "isFocusable", "isDisabled", "isReadOnly", "isRequired", "onChange", "isIndeterminate", "isInvalid", "name", "value", "id", "onBlur", "onFocus", "tabIndex", "aria-label", "aria-labelledby", "aria-invalid", "aria-describedby"];
function useCheckbox(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, defaultIsChecked = _props.defaultIsChecked, _props$defaultChecked = _props.defaultChecked, defaultChecked = _props$defaultChecked === void 0 ? defaultIsChecked : _props$defaultChecked, checkedProp = _props.isChecked, isFocusable = _props.isFocusable, isDisabled = _props.isDisabled, isReadOnly = _props.isReadOnly, isRequired = _props.isRequired, onChange = _props.onChange, isIndeterminate = _props.isIndeterminate, isInvalid = _props.isInvalid, name = _props.name, value = _props.value, id2 = _props.id, onBlur = _props.onBlur, onFocus = _props.onFocus, _props$tabIndex = _props.tabIndex, tabIndex = _props$tabIndex === void 0 ? void 0 : _props$tabIndex, ariaLabel = _props["aria-label"], ariaLabelledBy = _props["aria-labelledby"], ariaInvalid = _props["aria-invalid"], ariaDescribedBy = _props["aria-describedby"], htmlProps = _objectWithoutPropertiesLoose$2(_props, _excluded$1$2);
  var onChangeProp = useCallbackRef(onChange);
  var onBlurProp = useCallbackRef(onBlur);
  var onFocusProp = useCallbackRef(onFocus);
  var _useBoolean = useBoolean(), isFocused = _useBoolean[0], setFocused = _useBoolean[1];
  var _useBoolean2 = useBoolean(), isHovered = _useBoolean2[0], setHovered = _useBoolean2[1];
  var _useBoolean3 = useBoolean(), isActive = _useBoolean3[0], setActive = _useBoolean3[1];
  var inputRef = react.exports.useRef(null);
  var _useState = react.exports.useState(true), rootIsLabelElement = _useState[0], setRootIsLabelElement = _useState[1];
  var _useState2 = react.exports.useState(!!defaultChecked), checkedState = _useState2[0], setCheckedState = _useState2[1];
  var _useControllableProp = useControllableProp(checkedProp, checkedState), isControlled = _useControllableProp[0], isChecked = _useControllableProp[1];
  warn({
    condition: !!defaultIsChecked,
    message: 'The "defaultIsChecked" prop has been deprecated and will be removed in a future version. Please use the "defaultChecked" prop instead, which mirrors default React checkbox behavior.'
  });
  var handleChange = react.exports.useCallback(function(event) {
    if (isReadOnly || isDisabled) {
      event.preventDefault();
      return;
    }
    if (!isControlled) {
      if (isChecked) {
        setCheckedState(event.target.checked);
      } else {
        setCheckedState(isIndeterminate ? true : event.target.checked);
      }
    }
    onChangeProp == null ? void 0 : onChangeProp(event);
  }, [isReadOnly, isDisabled, isChecked, isControlled, isIndeterminate, onChangeProp]);
  useSafeLayoutEffect(function() {
    if (inputRef.current) {
      inputRef.current.indeterminate = Boolean(isIndeterminate);
    }
  }, [isIndeterminate]);
  var trulyDisabled = isDisabled && !isFocusable;
  var onKeyDown = react.exports.useCallback(function(event) {
    if (event.key === " ") {
      setActive.on();
    }
  }, [setActive]);
  var onKeyUp = react.exports.useCallback(function(event) {
    if (event.key === " ") {
      setActive.off();
    }
  }, [setActive]);
  useSafeLayoutEffect(function() {
    if (!inputRef.current)
      return;
    var notInSync = inputRef.current.checked !== isChecked;
    if (notInSync) {
      setCheckedState(inputRef.current.checked);
    }
  }, [inputRef.current]);
  var getCheckboxProps = react.exports.useCallback(function(props2, forwardedRef) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (forwardedRef === void 0) {
      forwardedRef = null;
    }
    var onPressDown = function onPressDown2(event) {
      event.preventDefault();
      setActive.on();
    };
    return _extends$3({}, props2, {
      ref: forwardedRef,
      "data-active": dataAttr(isActive),
      "data-hover": dataAttr(isHovered),
      "data-checked": dataAttr(isChecked),
      "data-focus": dataAttr(isFocused),
      "data-indeterminate": dataAttr(isIndeterminate),
      "data-disabled": dataAttr(isDisabled),
      "data-invalid": dataAttr(isInvalid),
      "data-readonly": dataAttr(isReadOnly),
      "aria-hidden": true,
      onMouseDown: callAllHandlers(props2.onMouseDown, onPressDown),
      onMouseUp: callAllHandlers(props2.onMouseUp, setActive.off),
      onMouseEnter: callAllHandlers(props2.onMouseEnter, setHovered.on),
      onMouseLeave: callAllHandlers(props2.onMouseLeave, setHovered.off)
    });
  }, [isActive, isChecked, isDisabled, isFocused, isHovered, isIndeterminate, isInvalid, isReadOnly, setActive, setHovered.off, setHovered.on]);
  var getRootProps = react.exports.useCallback(function(props2, forwardedRef) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (forwardedRef === void 0) {
      forwardedRef = null;
    }
    return _extends$3({}, htmlProps, props2, {
      ref: mergeRefs(forwardedRef, function(node2) {
        if (!node2)
          return;
        setRootIsLabelElement(node2.tagName === "LABEL");
      }),
      onClick: callAllHandlers(props2.onClick, function() {
        if (!rootIsLabelElement) {
          var _inputRef$current;
          (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.click();
          focus(inputRef.current, {
            nextTick: true
          });
        }
      }),
      "data-disabled": dataAttr(isDisabled),
      "data-checked": dataAttr(isChecked),
      "data-invalid": dataAttr(isInvalid)
    });
  }, [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]);
  var getInputProps = react.exports.useCallback(function(props2, forwardedRef) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (forwardedRef === void 0) {
      forwardedRef = null;
    }
    return _extends$3({}, props2, {
      ref: mergeRefs(inputRef, forwardedRef),
      type: "checkbox",
      name,
      value,
      id: id2,
      tabIndex,
      onChange: callAllHandlers(props2.onChange, handleChange),
      onBlur: callAllHandlers(props2.onBlur, onBlurProp, setFocused.off),
      onFocus: callAllHandlers(props2.onFocus, onFocusProp, setFocused.on),
      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),
      onKeyUp: callAllHandlers(props2.onKeyUp, onKeyUp),
      required: isRequired,
      checked: isChecked,
      disabled: trulyDisabled,
      readOnly: isReadOnly,
      "aria-label": ariaLabel,
      "aria-labelledby": ariaLabelledBy,
      "aria-invalid": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,
      "aria-describedby": ariaDescribedBy,
      "aria-disabled": isDisabled,
      style: visuallyHiddenStyle
    });
  }, [name, value, id2, handleChange, setFocused.off, setFocused.on, onBlurProp, onFocusProp, onKeyDown, onKeyUp, isRequired, isChecked, trulyDisabled, isReadOnly, ariaLabel, ariaLabelledBy, ariaInvalid, isInvalid, ariaDescribedBy, isDisabled, tabIndex]);
  var getLabelProps = react.exports.useCallback(function(props2, forwardedRef) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (forwardedRef === void 0) {
      forwardedRef = null;
    }
    return _extends$3({}, props2, {
      ref: forwardedRef,
      onMouseDown: callAllHandlers(props2.onMouseDown, stopEvent),
      onTouchStart: callAllHandlers(props2.onTouchStart, stopEvent),
      "data-disabled": dataAttr(isDisabled),
      "data-checked": dataAttr(isChecked),
      "data-invalid": dataAttr(isInvalid)
    });
  }, [isChecked, isDisabled, isInvalid]);
  return {
    state: {
      isInvalid,
      isFocused,
      isChecked,
      isActive,
      isHovered,
      isIndeterminate,
      isDisabled,
      isReadOnly,
      isRequired
    },
    getRootProps,
    getCheckboxProps,
    getInputProps,
    getLabelProps,
    htmlProps
  };
}
function stopEvent(event) {
  event.preventDefault();
  event.stopPropagation();
}
var _excluded$e = ["spacing", "className", "children", "iconColor", "iconSize", "icon", "isChecked", "isDisabled", "onChange"];
var CheckboxControl = chakra("span", {
  baseStyle: {
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    verticalAlign: "top",
    userSelect: "none",
    flexShrink: 0
  }
});
var Label = chakra("label", {
  baseStyle: {
    cursor: "pointer",
    display: "inline-flex",
    alignItems: "center",
    verticalAlign: "top",
    position: "relative",
    _disabled: {
      cursor: "not-allowed"
    }
  }
});
var Checkbox = /* @__PURE__ */ forwardRef(function(props, ref) {
  var group2 = useCheckboxGroupContext();
  var mergedProps = _extends$3({}, group2, props);
  var styles2 = useMultiStyleConfig("Checkbox", mergedProps);
  var ownProps = omitThemingProps(props);
  var _ownProps$spacing = ownProps.spacing, spacing2 = _ownProps$spacing === void 0 ? "0.5rem" : _ownProps$spacing, className = ownProps.className, children = ownProps.children, iconColor = ownProps.iconColor, iconSize = ownProps.iconSize, _ownProps$icon = ownProps.icon, icon = _ownProps$icon === void 0 ? /* @__PURE__ */ react.exports.createElement(CheckboxIcon, null) : _ownProps$icon, isCheckedProp = ownProps.isChecked, _ownProps$isDisabled = ownProps.isDisabled, isDisabled = _ownProps$isDisabled === void 0 ? group2 == null ? void 0 : group2.isDisabled : _ownProps$isDisabled, onChangeProp = ownProps.onChange, rest = _objectWithoutPropertiesLoose$2(ownProps, _excluded$e);
  var isChecked = isCheckedProp;
  if (group2 != null && group2.value && ownProps.value) {
    isChecked = group2.value.includes(ownProps.value);
  }
  var onChange = onChangeProp;
  if (group2 != null && group2.onChange && ownProps.value) {
    onChange = callAll(group2.onChange, onChangeProp);
  }
  var _useCheckbox = useCheckbox(_extends$3({}, rest, {
    isDisabled,
    isChecked,
    onChange
  })), state = _useCheckbox.state, getInputProps = _useCheckbox.getInputProps, getCheckboxProps = _useCheckbox.getCheckboxProps, getLabelProps = _useCheckbox.getLabelProps, getRootProps = _useCheckbox.getRootProps;
  var iconStyles = react.exports.useMemo(function() {
    return _extends$3({
      opacity: state.isChecked || state.isIndeterminate ? 1 : 0,
      transform: state.isChecked || state.isIndeterminate ? "scale(1)" : "scale(0.95)",
      fontSize: iconSize,
      color: iconColor
    }, styles2.icon);
  }, [iconColor, iconSize, state.isChecked, state.isIndeterminate, styles2.icon]);
  var clonedIcon = /* @__PURE__ */ react.exports.cloneElement(icon, {
    __css: iconStyles,
    isIndeterminate: state.isIndeterminate,
    isChecked: state.isChecked
  });
  return /* @__PURE__ */ react.exports.createElement(Label, _extends$3({
    __css: styles2.container,
    className: cx("chakra-checkbox", className)
  }, getRootProps()), /* @__PURE__ */ react.exports.createElement("input", _extends$3({
    className: "chakra-checkbox__input"
  }, getInputProps({}, ref))), /* @__PURE__ */ react.exports.createElement(CheckboxControl, _extends$3({
    __css: styles2.control,
    className: "chakra-checkbox__control"
  }, getCheckboxProps()), clonedIcon), children && /* @__PURE__ */ react.exports.createElement(chakra.span, _extends$3({
    className: "chakra-checkbox__label"
  }, getLabelProps(), {
    __css: _extends$3({
      marginStart: spacing2
    }, styles2.label)
  }), children));
});
var _createContext$1 = createContext({
  strict: false,
  name: "FormControlContext"
}), useFormControlContext = _createContext$1[1];
function _extends$2() {
  _extends$2 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$2.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$1(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded$h = ["ratio", "children", "className"];
var AspectRatio = /* @__PURE__ */ forwardRef(function(props, ref) {
  var _props$ratio = props.ratio, ratio = _props$ratio === void 0 ? 4 / 3 : _props$ratio, children = props.children, className = props.className, rest = _objectWithoutPropertiesLoose$1(props, _excluded$h);
  var child = react.exports.Children.only(children);
  var _className = cx("chakra-aspect-ratio", className);
  return /* @__PURE__ */ react.exports.createElement(chakra.div, _extends$2({
    ref,
    position: "relative",
    className: _className,
    _before: {
      height: 0,
      content: '""',
      display: "block",
      paddingBottom: mapResponsive(ratio, function(r2) {
        return 1 / r2 * 100 + "%";
      })
    },
    __css: {
      "& > *:not(style)": {
        overflow: "hidden",
        position: "absolute",
        top: "0",
        right: "0",
        bottom: "0",
        left: "0",
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        width: "100%",
        height: "100%"
      },
      "& > img, & > video": {
        objectFit: "cover"
      }
    }
  }, rest), child);
});
if (__DEV__) {
  AspectRatio.displayName = "AspectRatio";
}
var _excluded$g = ["className"];
var Badge = /* @__PURE__ */ forwardRef(function(props, ref) {
  var styles2 = useStyleConfig("Badge", props);
  var _omitThemingProps = omitThemingProps(props);
  _omitThemingProps.className;
  var rest = _objectWithoutPropertiesLoose$1(_omitThemingProps, _excluded$g);
  return /* @__PURE__ */ react.exports.createElement(chakra.span, _extends$2({
    ref,
    className: cx("chakra-badge", props.className)
  }, rest, {
    __css: _extends$2({
      display: "inline-block",
      whiteSpace: "nowrap",
      verticalAlign: "middle"
    }, styles2)
  }));
});
if (__DEV__) {
  Badge.displayName = "Badge";
}
var _excluded$f = ["size", "centerContent"], _excluded2$5 = ["size"];
var Box = chakra("div");
if (__DEV__) {
  Box.displayName = "Box";
}
var Square = /* @__PURE__ */ forwardRef(function(props, ref) {
  var size2 = props.size, _props$centerContent = props.centerContent, centerContent = _props$centerContent === void 0 ? true : _props$centerContent, rest = _objectWithoutPropertiesLoose$1(props, _excluded$f);
  var styles2 = centerContent ? {
    display: "flex",
    alignItems: "center",
    justifyContent: "center"
  } : {};
  return /* @__PURE__ */ react.exports.createElement(Box, _extends$2({
    ref,
    boxSize: size2,
    __css: _extends$2({}, styles2, {
      flexShrink: 0,
      flexGrow: 0
    })
  }, rest));
});
if (__DEV__) {
  Square.displayName = "Square";
}
var Circle = /* @__PURE__ */ forwardRef(function(props, ref) {
  var size2 = props.size, rest = _objectWithoutPropertiesLoose$1(props, _excluded2$5);
  return /* @__PURE__ */ react.exports.createElement(Square, _extends$2({
    size: size2,
    ref,
    borderRadius: "9999px"
  }, rest));
});
if (__DEV__) {
  Circle.displayName = "Circle";
}
var Center = chakra("div", {
  baseStyle: {
    display: "flex",
    alignItems: "center",
    justifyContent: "center"
  }
});
if (__DEV__) {
  Center.displayName = "Center";
}
var _excluded$d = ["className"];
var Code = /* @__PURE__ */ forwardRef(function(props, ref) {
  var styles2 = useStyleConfig("Code", props);
  var _omitThemingProps = omitThemingProps(props);
  _omitThemingProps.className;
  var rest = _objectWithoutPropertiesLoose$1(_omitThemingProps, _excluded$d);
  return /* @__PURE__ */ react.exports.createElement(chakra.code, _extends$2({
    ref,
    className: cx("chakra-code", props.className)
  }, rest, {
    __css: _extends$2({
      display: "inline-block"
    }, styles2)
  }));
});
if (__DEV__) {
  Code.displayName = "Code";
}
var _excluded$c = ["className", "centerContent"];
var Container = /* @__PURE__ */ forwardRef(function(props, ref) {
  var _omitThemingProps = omitThemingProps(props), className = _omitThemingProps.className, centerContent = _omitThemingProps.centerContent, rest = _objectWithoutPropertiesLoose$1(_omitThemingProps, _excluded$c);
  var styles2 = useStyleConfig("Container", props);
  return /* @__PURE__ */ react.exports.createElement(chakra.div, _extends$2({
    ref,
    className: cx("chakra-container", className)
  }, rest, {
    __css: _extends$2({}, styles2, centerContent && {
      display: "flex",
      flexDirection: "column",
      alignItems: "center"
    })
  }));
});
if (__DEV__) {
  Container.displayName = "Container";
}
var _excluded$b = ["borderLeftWidth", "borderBottomWidth", "borderTopWidth", "borderRightWidth", "borderWidth", "borderStyle", "borderColor"], _excluded2$4 = ["className", "orientation", "__css"];
var Divider = /* @__PURE__ */ forwardRef(function(props, ref) {
  var _useStyleConfig = useStyleConfig("Divider", props), borderLeftWidth = _useStyleConfig.borderLeftWidth, borderBottomWidth = _useStyleConfig.borderBottomWidth, borderTopWidth = _useStyleConfig.borderTopWidth, borderRightWidth = _useStyleConfig.borderRightWidth, borderWidth = _useStyleConfig.borderWidth, borderStyle = _useStyleConfig.borderStyle, borderColor = _useStyleConfig.borderColor, styles2 = _objectWithoutPropertiesLoose$1(_useStyleConfig, _excluded$b);
  var _omitThemingProps = omitThemingProps(props), className = _omitThemingProps.className, _omitThemingProps$ori = _omitThemingProps.orientation, orientation = _omitThemingProps$ori === void 0 ? "horizontal" : _omitThemingProps$ori, __css = _omitThemingProps.__css, rest = _objectWithoutPropertiesLoose$1(_omitThemingProps, _excluded2$4);
  var dividerStyles = {
    vertical: {
      borderLeftWidth: borderLeftWidth || borderRightWidth || borderWidth || "1px",
      height: "100%"
    },
    horizontal: {
      borderBottomWidth: borderBottomWidth || borderTopWidth || borderWidth || "1px",
      width: "100%"
    }
  };
  return /* @__PURE__ */ react.exports.createElement(chakra.hr, _extends$2({
    ref,
    "aria-orientation": orientation
  }, rest, {
    __css: _extends$2({}, styles2, {
      border: "0",
      borderColor,
      borderStyle
    }, dividerStyles[orientation], __css),
    className: cx("chakra-divider", className)
  }));
});
if (__DEV__) {
  Divider.displayName = "Divider";
}
var _excluded$a = ["direction", "align", "justify", "wrap", "basis", "grow", "shrink"];
var Flex = /* @__PURE__ */ forwardRef(function(props, ref) {
  var direction2 = props.direction, align = props.align, justify = props.justify, wrap3 = props.wrap, basis = props.basis, grow = props.grow, shrink = props.shrink, rest = _objectWithoutPropertiesLoose$1(props, _excluded$a);
  var styles2 = {
    display: "flex",
    flexDirection: direction2,
    alignItems: align,
    justifyContent: justify,
    flexWrap: wrap3,
    flexBasis: basis,
    flexGrow: grow,
    flexShrink: shrink
  };
  return /* @__PURE__ */ react.exports.createElement(chakra.div, _extends$2({
    ref,
    __css: styles2
  }, rest));
});
if (__DEV__) {
  Flex.displayName = "Flex";
}
var _excluded$9 = ["area", "templateAreas", "gap", "rowGap", "columnGap", "column", "row", "autoFlow", "autoRows", "templateRows", "autoColumns", "templateColumns"];
var Grid = /* @__PURE__ */ forwardRef(function(props, ref) {
  var area = props.area, templateAreas = props.templateAreas, gap = props.gap, rowGap = props.rowGap, columnGap = props.columnGap, column2 = props.column, row = props.row, autoFlow = props.autoFlow, autoRows = props.autoRows, templateRows = props.templateRows, autoColumns = props.autoColumns, templateColumns = props.templateColumns, rest = _objectWithoutPropertiesLoose$1(props, _excluded$9);
  var styles2 = {
    display: "grid",
    gridArea: area,
    gridTemplateAreas: templateAreas,
    gridGap: gap,
    gridRowGap: rowGap,
    gridColumnGap: columnGap,
    gridAutoColumns: autoColumns,
    gridColumn: column2,
    gridRow: row,
    gridAutoFlow: autoFlow,
    gridAutoRows: autoRows,
    gridTemplateRows: templateRows,
    gridTemplateColumns: templateColumns
  };
  return /* @__PURE__ */ react.exports.createElement(chakra.div, _extends$2({
    ref,
    __css: styles2
  }, rest));
});
if (__DEV__) {
  Grid.displayName = "Grid";
}
var _excluded$8 = ["className"];
var Heading = /* @__PURE__ */ forwardRef(function(props, ref) {
  var styles2 = useStyleConfig("Heading", props);
  var _omitThemingProps = omitThemingProps(props);
  _omitThemingProps.className;
  var rest = _objectWithoutPropertiesLoose$1(_omitThemingProps, _excluded$8);
  return /* @__PURE__ */ react.exports.createElement(chakra.h2, _extends$2({
    ref,
    className: cx("chakra-heading", props.className)
  }, rest, {
    __css: styles2
  }));
});
if (__DEV__) {
  Heading.displayName = "Heading";
}
var _excluded$7 = ["className"];
var Kbd = /* @__PURE__ */ forwardRef(function(props, ref) {
  var styles2 = useStyleConfig("Kbd", props);
  var _omitThemingProps = omitThemingProps(props), className = _omitThemingProps.className, rest = _objectWithoutPropertiesLoose$1(_omitThemingProps, _excluded$7);
  return /* @__PURE__ */ react.exports.createElement(chakra.kbd, _extends$2({
    ref,
    className: cx("chakra-kbd", className)
  }, rest, {
    __css: _extends$2({
      fontFamily: "mono"
    }, styles2)
  }));
});
if (__DEV__) {
  Kbd.displayName = "Kbd";
}
var _excluded$6 = ["className", "isExternal"];
var Link = /* @__PURE__ */ forwardRef(function(props, ref) {
  var styles2 = useStyleConfig("Link", props);
  var _omitThemingProps = omitThemingProps(props), className = _omitThemingProps.className, isExternal = _omitThemingProps.isExternal, rest = _objectWithoutPropertiesLoose$1(_omitThemingProps, _excluded$6);
  return /* @__PURE__ */ react.exports.createElement(chakra.a, _extends$2({
    target: isExternal ? "_blank" : void 0,
    rel: isExternal ? "noopener noreferrer" : void 0,
    ref,
    className: cx("chakra-link", className)
  }, rest, {
    __css: styles2
  }));
});
if (__DEV__) {
  Link.displayName = "Link";
}
var _excluded$5 = ["children", "styleType", "stylePosition", "spacing"], _excluded2$2 = ["as"], _excluded3 = ["as"];
var List = /* @__PURE__ */ forwardRef(function(props, ref) {
  var _ref;
  var styles2 = useMultiStyleConfig("List", props);
  var _omitThemingProps = omitThemingProps(props), children = _omitThemingProps.children, _omitThemingProps$sty = _omitThemingProps.styleType, styleType = _omitThemingProps$sty === void 0 ? "none" : _omitThemingProps$sty, stylePosition = _omitThemingProps.stylePosition, spacing2 = _omitThemingProps.spacing, rest = _objectWithoutPropertiesLoose$1(_omitThemingProps, _excluded$5);
  var validChildren = getValidChildren(children);
  var selector2 = "& > *:not(style) ~ *:not(style)";
  var spacingStyle = spacing2 ? (_ref = {}, _ref[selector2] = {
    mt: spacing2
  }, _ref) : {};
  return /* @__PURE__ */ react.exports.createElement(StylesProvider, {
    value: styles2
  }, /* @__PURE__ */ react.exports.createElement(chakra.ul, _extends$2({
    ref,
    listStyleType: styleType,
    listStylePosition: stylePosition,
    role: "list",
    __css: _extends$2({}, styles2.container, spacingStyle)
  }, rest), validChildren));
});
if (__DEV__) {
  List.displayName = "List";
}
var OrderedList = /* @__PURE__ */ forwardRef(function(props, ref) {
  props.as;
  var rest = _objectWithoutPropertiesLoose$1(props, _excluded2$2);
  return /* @__PURE__ */ react.exports.createElement(List, _extends$2({
    ref,
    as: "ol",
    styleType: "decimal",
    marginStart: "1em"
  }, rest));
});
if (__DEV__) {
  OrderedList.displayName = "OrderedList";
}
var UnorderedList = /* @__PURE__ */ forwardRef(function(props, ref) {
  props.as;
  var rest = _objectWithoutPropertiesLoose$1(props, _excluded3);
  return /* @__PURE__ */ react.exports.createElement(List, _extends$2({
    ref,
    as: "ul",
    styleType: "initial",
    marginStart: "1em"
  }, rest));
});
if (__DEV__) {
  UnorderedList.displayName = "UnorderedList";
}
var ListItem = /* @__PURE__ */ forwardRef(function(props, ref) {
  var styles2 = useStyles();
  return /* @__PURE__ */ react.exports.createElement(chakra.li, _extends$2({
    ref
  }, props, {
    __css: styles2.item
  }));
});
if (__DEV__) {
  ListItem.displayName = "ListItem";
}
var ListIcon = /* @__PURE__ */ forwardRef(function(props, ref) {
  var styles2 = useStyles();
  return /* @__PURE__ */ react.exports.createElement(Icon, _extends$2({
    ref,
    role: "presentation"
  }, props, {
    __css: styles2.icon
  }));
});
if (__DEV__) {
  ListIcon.displayName = "ListIcon";
}
var _excluded$4 = ["columns", "spacingX", "spacingY", "spacing", "minChildWidth"];
var SimpleGrid = /* @__PURE__ */ forwardRef(function(props, ref) {
  var columns = props.columns, spacingX = props.spacingX, spacingY = props.spacingY, spacing2 = props.spacing, minChildWidth = props.minChildWidth, rest = _objectWithoutPropertiesLoose$1(props, _excluded$4);
  var templateColumns = minChildWidth ? widthToColumns(minChildWidth) : countToColumns(columns);
  return /* @__PURE__ */ react.exports.createElement(Grid, _extends$2({
    ref,
    gap: spacing2,
    columnGap: spacingX,
    rowGap: spacingY,
    templateColumns
  }, rest));
});
if (__DEV__) {
  SimpleGrid.displayName = "SimpleGrid";
}
function toPx(n2) {
  return isNumber$1(n2) ? n2 + "px" : n2;
}
function widthToColumns(width) {
  return mapResponsive(width, function(value) {
    return isNull(value) ? null : "repeat(auto-fit, minmax(" + toPx(value) + ", 1fr))";
  });
}
function countToColumns(count) {
  return mapResponsive(count, function(value) {
    return isNull(value) ? null : "repeat(" + value + ", minmax(0, 1fr))";
  });
}
var Spacer = chakra("div", {
  baseStyle: {
    flex: 1,
    justifySelf: "stretch",
    alignSelf: "stretch"
  }
});
if (__DEV__) {
  Spacer.displayName = "Spacer";
}
var selector = "& > *:not(style) ~ *:not(style)";
function getStackStyles(options) {
  var _ref;
  var spacing2 = options.spacing, direction2 = options.direction;
  var directionStyles = {
    column: {
      marginTop: spacing2,
      marginEnd: 0,
      marginBottom: 0,
      marginStart: 0
    },
    row: {
      marginTop: 0,
      marginEnd: 0,
      marginBottom: 0,
      marginStart: spacing2
    },
    "column-reverse": {
      marginTop: 0,
      marginEnd: 0,
      marginBottom: spacing2,
      marginStart: 0
    },
    "row-reverse": {
      marginTop: 0,
      marginEnd: spacing2,
      marginBottom: 0,
      marginStart: 0
    }
  };
  return _ref = {
    flexDirection: direction2
  }, _ref[selector] = mapResponsive(direction2, function(value) {
    return directionStyles[value];
  }), _ref;
}
function getDividerStyles(options) {
  var spacing2 = options.spacing, direction2 = options.direction;
  var dividerStyles = {
    column: {
      my: spacing2,
      mx: 0,
      borderLeftWidth: 0,
      borderBottomWidth: "1px"
    },
    "column-reverse": {
      my: spacing2,
      mx: 0,
      borderLeftWidth: 0,
      borderBottomWidth: "1px"
    },
    row: {
      mx: spacing2,
      my: 0,
      borderLeftWidth: "1px",
      borderBottomWidth: 0
    },
    "row-reverse": {
      mx: spacing2,
      my: 0,
      borderLeftWidth: "1px",
      borderBottomWidth: 0
    }
  };
  return {
    "&": mapResponsive(direction2, function(value) {
      return dividerStyles[value];
    })
  };
}
var _excluded$3$1 = ["isInline", "direction", "align", "justify", "spacing", "wrap", "children", "divider", "className", "shouldWrapChildren"];
var StackItem = function StackItem2(props) {
  return /* @__PURE__ */ react.exports.createElement(chakra.div, _extends$2({
    className: "chakra-stack__item"
  }, props, {
    __css: _extends$2({
      display: "inline-block",
      flex: "0 0 auto",
      minWidth: 0
    }, props["__css"])
  }));
};
var Stack = /* @__PURE__ */ forwardRef(function(props, ref) {
  var _ref;
  var isInline = props.isInline, directionProp = props.direction, align = props.align, justify = props.justify, _props$spacing = props.spacing, spacing2 = _props$spacing === void 0 ? "0.5rem" : _props$spacing, wrap3 = props.wrap, children = props.children, divider = props.divider, className = props.className, shouldWrapChildren = props.shouldWrapChildren, rest = _objectWithoutPropertiesLoose$1(props, _excluded$3$1);
  var direction2 = isInline ? "row" : directionProp != null ? directionProp : "column";
  var styles2 = react.exports.useMemo(function() {
    return getStackStyles({
      direction: direction2,
      spacing: spacing2
    });
  }, [direction2, spacing2]);
  var dividerStyle = react.exports.useMemo(function() {
    return getDividerStyles({
      spacing: spacing2,
      direction: direction2
    });
  }, [spacing2, direction2]);
  var hasDivider = !!divider;
  var shouldUseChildren = !shouldWrapChildren && !hasDivider;
  var validChildren = getValidChildren(children);
  var clones = shouldUseChildren ? validChildren : validChildren.map(function(child, index) {
    var key = typeof child.key !== "undefined" ? child.key : index;
    var isLast = index + 1 === validChildren.length;
    var wrappedChild = /* @__PURE__ */ react.exports.createElement(StackItem, {
      key
    }, child);
    var _child = shouldWrapChildren ? wrappedChild : child;
    if (!hasDivider)
      return _child;
    var clonedDivider = /* @__PURE__ */ react.exports.cloneElement(divider, {
      __css: dividerStyle
    });
    var _divider = isLast ? null : clonedDivider;
    return /* @__PURE__ */ react.exports.createElement(react.exports.Fragment, {
      key
    }, _child, _divider);
  });
  var _className = cx("chakra-stack", className);
  return /* @__PURE__ */ react.exports.createElement(chakra.div, _extends$2({
    ref,
    display: "flex",
    alignItems: align,
    justifyContent: justify,
    flexDirection: styles2.flexDirection,
    flexWrap: wrap3,
    className: _className,
    __css: hasDivider ? {} : (_ref = {}, _ref[selector] = styles2[selector], _ref)
  }, rest), clones);
});
if (__DEV__) {
  Stack.displayName = "Stack";
}
var HStack = /* @__PURE__ */ forwardRef(function(props, ref) {
  return /* @__PURE__ */ react.exports.createElement(Stack, _extends$2({
    align: "center"
  }, props, {
    direction: "row",
    ref
  }));
});
if (__DEV__) {
  HStack.displayName = "HStack";
}
var VStack = /* @__PURE__ */ forwardRef(function(props, ref) {
  return /* @__PURE__ */ react.exports.createElement(Stack, _extends$2({
    align: "center"
  }, props, {
    direction: "column",
    ref
  }));
});
if (__DEV__) {
  VStack.displayName = "VStack";
}
var _excluded$2$1 = ["className", "align", "decoration", "casing"];
var Text = /* @__PURE__ */ forwardRef(function(props, ref) {
  var styles2 = useStyleConfig("Text", props);
  var _omitThemingProps = omitThemingProps(props);
  _omitThemingProps.className;
  _omitThemingProps.align;
  _omitThemingProps.decoration;
  _omitThemingProps.casing;
  var rest = _objectWithoutPropertiesLoose$1(_omitThemingProps, _excluded$2$1);
  var aliasedProps = filterUndefined({
    textAlign: props.align,
    textDecoration: props.decoration,
    textTransform: props.casing
  });
  return /* @__PURE__ */ react.exports.createElement(chakra.p, _extends$2({
    ref,
    className: cx("chakra-text", props.className)
  }, aliasedProps, rest, {
    __css: styles2
  }));
});
if (__DEV__) {
  Text.displayName = "Text";
}
var _excluded$1$1 = ["spacing", "children", "justify", "direction", "align", "className", "shouldWrapChildren"], _excluded2$1 = ["className"];
var Wrap = /* @__PURE__ */ forwardRef(function(props, ref) {
  var _props$spacing = props.spacing, spacing2 = _props$spacing === void 0 ? "0.5rem" : _props$spacing, children = props.children, justify = props.justify, direction2 = props.direction, align = props.align, className = props.className, shouldWrapChildren = props.shouldWrapChildren, rest = _objectWithoutPropertiesLoose$1(props, _excluded$1$1);
  var styles2 = react.exports.useMemo(function() {
    return {
      "--chakra-wrap-spacing": function chakraWrapSpacing(theme2) {
        return mapResponsive(spacing2, function(value) {
          return tokenToCSSVar("space", value)(theme2);
        });
      },
      "--wrap-spacing": "calc(var(--chakra-wrap-spacing) / 2)",
      display: "flex",
      flexWrap: "wrap",
      justifyContent: justify,
      alignItems: align,
      flexDirection: direction2,
      listStyleType: "none",
      padding: "0",
      margin: "calc(var(--wrap-spacing) * -1)",
      "& > *:not(style)": {
        margin: "var(--wrap-spacing)"
      }
    };
  }, [spacing2, justify, align, direction2]);
  var childrenToRender = shouldWrapChildren ? react.exports.Children.map(children, function(child, index) {
    return /* @__PURE__ */ react.exports.createElement(WrapItem, {
      key: index
    }, child);
  }) : children;
  return /* @__PURE__ */ react.exports.createElement(chakra.div, _extends$2({
    ref,
    className: cx("chakra-wrap", className)
  }, rest), /* @__PURE__ */ react.exports.createElement(chakra.ul, {
    className: "chakra-wrap__list",
    __css: styles2
  }, childrenToRender));
});
if (__DEV__) {
  Wrap.displayName = "Wrap";
}
var WrapItem = /* @__PURE__ */ forwardRef(function(props, ref) {
  var className = props.className, rest = _objectWithoutPropertiesLoose$1(props, _excluded2$1);
  return /* @__PURE__ */ react.exports.createElement(chakra.li, _extends$2({
    ref,
    __css: {
      display: "flex",
      alignItems: "flex-start"
    },
    className: cx("chakra-wrap__listitem", className)
  }, rest));
});
if (__DEV__) {
  WrapItem.displayName = "WrapItem";
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends$1() {
  _extends$1 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$1.apply(this, arguments);
}
var _excluded$3 = ["onChange", "value", "defaultValue", "name", "isDisabled", "isFocusable", "isNative"];
function useRadioGroup(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, onChangeProp = _props.onChange, valueProp = _props.value, defaultValue = _props.defaultValue, nameProp = _props.name, isDisabled = _props.isDisabled, isFocusable = _props.isFocusable, isNative = _props.isNative, htmlProps = _objectWithoutPropertiesLoose(_props, _excluded$3);
  var _React$useState = react.exports.useState(defaultValue || ""), valueState = _React$useState[0], setValue = _React$useState[1];
  var _useControllableProp = useControllableProp(valueProp, valueState), isControlled = _useControllableProp[0], value = _useControllableProp[1];
  var ref = react.exports.useRef(null);
  var focus3 = react.exports.useCallback(function() {
    var rootNode = ref.current;
    if (!rootNode)
      return;
    var query = "input:not(:disabled):checked";
    var firstEnabledAndCheckedInput = rootNode.querySelector(query);
    if (firstEnabledAndCheckedInput) {
      firstEnabledAndCheckedInput.focus();
      return;
    }
    query = "input:not(:disabled)";
    var firstEnabledInput = rootNode.querySelector(query);
    firstEnabledInput == null ? void 0 : firstEnabledInput.focus();
  }, []);
  var fallbackName = useId(void 0, "radio");
  var name = nameProp || fallbackName;
  var onChange = react.exports.useCallback(function(eventOrValue) {
    var nextValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;
    if (!isControlled) {
      setValue(nextValue);
    }
    onChangeProp == null ? void 0 : onChangeProp(String(nextValue));
  }, [onChangeProp, isControlled]);
  var getRootProps = react.exports.useCallback(function(props2, forwardedRef) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (forwardedRef === void 0) {
      forwardedRef = null;
    }
    return _extends$1({}, props2, {
      ref: mergeRefs(forwardedRef, ref),
      role: "radiogroup"
    });
  }, []);
  var getRadioProps = react.exports.useCallback(function(props2, ref2) {
    var _extends2;
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref2 === void 0) {
      ref2 = null;
    }
    var checkedKey = isNative ? "checked" : "isChecked";
    return _extends$1({}, props2, (_extends2 = {
      ref: ref2,
      name
    }, _extends2[checkedKey] = value != null ? props2.value === value : void 0, _extends2.onChange = onChange, _extends2["data-radiogroup"] = true, _extends2));
  }, [isNative, name, onChange, value]);
  return {
    getRootProps,
    getRadioProps,
    name,
    ref,
    focus: focus3,
    setValue,
    value,
    onChange,
    isDisabled,
    isFocusable,
    htmlProps
  };
}
var _excluded$2 = ["colorScheme", "size", "variant", "children", "className", "isDisabled", "isFocusable"];
var _createContext = createContext({
  name: "RadioGroupContext",
  strict: false
}), RadioGroupProvider = _createContext[0], useRadioGroupContext = _createContext[1];
var RadioGroup = /* @__PURE__ */ forwardRef(function(props, ref) {
  var colorScheme = props.colorScheme, size2 = props.size, variant = props.variant, children = props.children, className = props.className, isDisabled = props.isDisabled, isFocusable = props.isFocusable, rest = _objectWithoutPropertiesLoose(props, _excluded$2);
  var _useRadioGroup = useRadioGroup(rest), value = _useRadioGroup.value, onChange = _useRadioGroup.onChange, getRootProps = _useRadioGroup.getRootProps, name = _useRadioGroup.name, htmlProps = _useRadioGroup.htmlProps;
  var group2 = react.exports.useMemo(function() {
    return {
      name,
      size: size2,
      onChange,
      colorScheme,
      value,
      variant,
      isDisabled,
      isFocusable
    };
  }, [name, size2, onChange, colorScheme, value, variant, isDisabled, isFocusable]);
  var groupProps = getRootProps(htmlProps, ref);
  var _className = cx("chakra-radio-group", className);
  return /* @__PURE__ */ react.exports.createElement(RadioGroupProvider, {
    value: group2
  }, /* @__PURE__ */ react.exports.createElement(chakra.div, _extends$1({}, groupProps, {
    className: _className
  }), children));
});
var _excluded$1 = ["defaultIsChecked", "defaultChecked", "isChecked", "isFocusable", "isDisabled", "isReadOnly", "isRequired", "onChange", "isInvalid", "name", "value", "id", "data-radiogroup"];
function useRadio(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, defaultIsChecked = _props.defaultIsChecked, _props$defaultChecked = _props.defaultChecked, defaultChecked = _props$defaultChecked === void 0 ? defaultIsChecked : _props$defaultChecked, isCheckedProp = _props.isChecked, isFocusable = _props.isFocusable, isDisabledProp = _props.isDisabled, isReadOnlyProp = _props.isReadOnly, isRequiredProp = _props.isRequired, onChange = _props.onChange, isInvalidProp = _props.isInvalid, name = _props.name, value = _props.value, idProp = _props.id, dataRadioGroup = _props["data-radiogroup"], htmlProps = _objectWithoutPropertiesLoose(_props, _excluded$1);
  var uuid = useId(void 0, "radio");
  var formControl = useFormControlContext();
  var group2 = useRadioGroupContext();
  var isWithinRadioGroup = !!group2 || !!dataRadioGroup;
  var isWithinFormControl = !!formControl;
  var id2 = isWithinFormControl && !isWithinRadioGroup ? formControl.id : uuid;
  id2 = idProp != null ? idProp : id2;
  var isDisabled = isDisabledProp != null ? isDisabledProp : formControl == null ? void 0 : formControl.isDisabled;
  var isReadOnly = isReadOnlyProp != null ? isReadOnlyProp : formControl == null ? void 0 : formControl.isReadOnly;
  var isRequired = isRequiredProp != null ? isRequiredProp : formControl == null ? void 0 : formControl.isRequired;
  var isInvalid = isInvalidProp != null ? isInvalidProp : formControl == null ? void 0 : formControl.isInvalid;
  var _useBoolean = useBoolean(), isFocused = _useBoolean[0], setFocused = _useBoolean[1];
  var _useBoolean2 = useBoolean(), isHovered = _useBoolean2[0], setHovering = _useBoolean2[1];
  var _useBoolean3 = useBoolean(), isActive = _useBoolean3[0], setActive = _useBoolean3[1];
  var _useState = react.exports.useState(Boolean(defaultChecked)), isCheckedState = _useState[0], setChecked = _useState[1];
  var _useControllableProp = useControllableProp(isCheckedProp, isCheckedState), isControlled = _useControllableProp[0], isChecked = _useControllableProp[1];
  warn({
    condition: !!defaultIsChecked,
    message: 'The "defaultIsChecked" prop has been deprecated and will be removed in a future version. Please use the "defaultChecked" prop instead, which mirrors default React checkbox behavior.'
  });
  var handleChange = react.exports.useCallback(function(event) {
    if (isReadOnly || isDisabled) {
      event.preventDefault();
      return;
    }
    if (!isControlled) {
      setChecked(event.target.checked);
    }
    onChange == null ? void 0 : onChange(event);
  }, [isControlled, isDisabled, isReadOnly, onChange]);
  var onKeyDown = react.exports.useCallback(function(event) {
    if (event.key === " ") {
      setActive.on();
    }
  }, [setActive]);
  var onKeyUp = react.exports.useCallback(function(event) {
    if (event.key === " ") {
      setActive.off();
    }
  }, [setActive]);
  var getCheckboxProps = react.exports.useCallback(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends$1({}, props2, {
      ref,
      "data-active": dataAttr(isActive),
      "data-hover": dataAttr(isHovered),
      "data-disabled": dataAttr(isDisabled),
      "data-invalid": dataAttr(isInvalid),
      "data-checked": dataAttr(isChecked),
      "data-focus": dataAttr(isFocused),
      "data-readonly": dataAttr(isReadOnly),
      "aria-hidden": true,
      onMouseDown: callAllHandlers(props2.onMouseDown, setActive.on),
      onMouseUp: callAllHandlers(props2.onMouseUp, setActive.off),
      onMouseEnter: callAllHandlers(props2.onMouseEnter, setHovering.on),
      onMouseLeave: callAllHandlers(props2.onMouseLeave, setHovering.off)
    });
  }, [isActive, isHovered, isDisabled, isInvalid, isChecked, isFocused, isReadOnly, setActive.on, setActive.off, setHovering.on, setHovering.off]);
  var _ref = formControl != null ? formControl : {}, onFocus = _ref.onFocus, onBlur = _ref.onBlur;
  var getInputProps = react.exports.useCallback(function(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    var trulyDisabled = isDisabled && !isFocusable;
    return _extends$1({}, props2, {
      id: id2,
      ref,
      type: "radio",
      name,
      value,
      onChange: callAllHandlers(props2.onChange, handleChange),
      onBlur: callAllHandlers(onBlur, props2.onBlur, setFocused.off),
      onFocus: callAllHandlers(onFocus, props2.onFocus, setFocused.on),
      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),
      onKeyUp: callAllHandlers(props2.onKeyUp, onKeyUp),
      checked: isChecked,
      disabled: trulyDisabled,
      readOnly: isReadOnly,
      required: isRequired,
      "aria-invalid": ariaAttr(isInvalid),
      "aria-disabled": ariaAttr(trulyDisabled),
      "aria-required": ariaAttr(isRequired),
      "data-readonly": dataAttr(isReadOnly),
      style: visuallyHiddenStyle
    });
  }, [isDisabled, isFocusable, id2, name, value, handleChange, onBlur, setFocused, onFocus, onKeyDown, onKeyUp, isChecked, isReadOnly, isRequired, isInvalid]);
  var getLabelProps = function getLabelProps2(props2, ref) {
    if (props2 === void 0) {
      props2 = {};
    }
    if (ref === void 0) {
      ref = null;
    }
    return _extends$1({}, props2, {
      ref,
      onMouseDown: callAllHandlers(props2.onMouseDown, stop),
      onTouchStart: callAllHandlers(props2.onTouchStart, stop),
      "data-disabled": dataAttr(isDisabled),
      "data-checked": dataAttr(isChecked),
      "data-invalid": dataAttr(isInvalid)
    });
  };
  var getRootProps = function getRootProps2(props2, ref) {
    if (ref === void 0) {
      ref = null;
    }
    return _extends$1({}, props2, {
      ref,
      "data-disabled": dataAttr(isDisabled),
      "data-checked": dataAttr(isChecked),
      "data-invalid": dataAttr(isInvalid)
    });
  };
  return {
    state: {
      isInvalid,
      isFocused,
      isChecked,
      isActive,
      isHovered,
      isDisabled,
      isReadOnly,
      isRequired
    },
    getCheckboxProps,
    getInputProps,
    getLabelProps,
    getRootProps,
    htmlProps
  };
}
function stop(event) {
  event.preventDefault();
  event.stopPropagation();
}
var _excluded = ["spacing", "children", "isFullWidth", "isDisabled", "isFocusable"];
var Radio = /* @__PURE__ */ forwardRef(function(props, ref) {
  var _props$name;
  var group2 = useRadioGroupContext();
  var onChangeProp = props.onChange, valueProp = props.value;
  var styles2 = useMultiStyleConfig("Radio", _extends$1({}, group2, props));
  var ownProps = omitThemingProps(props);
  var _ownProps$spacing = ownProps.spacing, spacing2 = _ownProps$spacing === void 0 ? "0.5rem" : _ownProps$spacing, children = ownProps.children, isFullWidth = ownProps.isFullWidth, _ownProps$isDisabled = ownProps.isDisabled, isDisabled = _ownProps$isDisabled === void 0 ? group2 == null ? void 0 : group2.isDisabled : _ownProps$isDisabled, _ownProps$isFocusable = ownProps.isFocusable, isFocusable = _ownProps$isFocusable === void 0 ? group2 == null ? void 0 : group2.isFocusable : _ownProps$isFocusable, rest = _objectWithoutPropertiesLoose(ownProps, _excluded);
  var isChecked = props.isChecked;
  if ((group2 == null ? void 0 : group2.value) != null && valueProp != null) {
    isChecked = group2.value === valueProp;
  }
  var onChange = onChangeProp;
  if (group2 != null && group2.onChange && valueProp != null) {
    onChange = callAll(group2.onChange, onChangeProp);
  }
  var name = (_props$name = props == null ? void 0 : props.name) != null ? _props$name : group2 == null ? void 0 : group2.name;
  var _useRadio = useRadio(_extends$1({}, rest, {
    isChecked,
    isFocusable,
    isDisabled,
    onChange,
    name
  })), getInputProps = _useRadio.getInputProps, getCheckboxProps = _useRadio.getCheckboxProps, getLabelProps = _useRadio.getLabelProps, getRootProps = _useRadio.getRootProps, htmlProps = _useRadio.htmlProps;
  var _split = split(htmlProps, layoutPropNames), layoutProps = _split[0], otherProps = _split[1];
  var checkboxProps = getCheckboxProps(otherProps);
  var inputProps = getInputProps({}, ref);
  var labelProps = getLabelProps();
  var rootProps = Object.assign({}, layoutProps, getRootProps());
  var rootStyles = _extends$1({
    width: isFullWidth ? "full" : void 0,
    display: "inline-flex",
    alignItems: "center",
    verticalAlign: "top",
    cursor: "pointer"
  }, styles2.container);
  var checkboxStyles = _extends$1({
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    flexShrink: 0
  }, styles2.control);
  var labelStyles = _extends$1({
    userSelect: "none",
    marginStart: spacing2
  }, styles2.label);
  return /* @__PURE__ */ react.exports.createElement(chakra.label, _extends$1({
    className: "chakra-radio"
  }, rootProps, {
    __css: rootStyles
  }), /* @__PURE__ */ react.exports.createElement("input", _extends$1({
    className: "chakra-radio__input"
  }, inputProps)), /* @__PURE__ */ react.exports.createElement(chakra.span, _extends$1({
    className: "chakra-radio__control"
  }, checkboxProps, {
    __css: checkboxStyles
  })), children && /* @__PURE__ */ react.exports.createElement(chakra.span, _extends$1({
    className: "chakra-radio__label"
  }, labelProps, {
    __css: labelStyles
  }), children));
});
var ChakraProvider2 = ChakraProvider$1;
ChakraProvider2.defaultProps = {
  theme
};
function die(error) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }
  throw new Error(typeof error === "number" ? "[MobX] minified error nr: " + error + (args.length ? " " + args.map(String).join(",") : "") + ". Find the full error at: https://github.com/mobxjs/mobx/blob/main/packages/mobx/src/errors.ts" : "[MobX] " + error);
}
var mockGlobal = {};
function getGlobal() {
  if (typeof globalThis !== "undefined") {
    return globalThis;
  }
  if (typeof window !== "undefined") {
    return window;
  }
  if (typeof global !== "undefined") {
    return global;
  }
  if (typeof self !== "undefined") {
    return self;
  }
  return mockGlobal;
}
var assign = Object.assign;
var getDescriptor = Object.getOwnPropertyDescriptor;
var defineProperty$1 = Object.defineProperty;
var objectPrototype = Object.prototype;
var EMPTY_ARRAY$1 = [];
Object.freeze(EMPTY_ARRAY$1);
var EMPTY_OBJECT$1 = {};
Object.freeze(EMPTY_OBJECT$1);
var hasProxy = typeof Proxy !== "undefined";
var plainObjectString$1 = /* @__PURE__ */ Object.toString();
function assertProxies() {
  if (!hasProxy) {
    die("Proxy not available");
  }
}
function once(func) {
  var invoked = false;
  return function() {
    if (invoked)
      return;
    invoked = true;
    return func.apply(this, arguments);
  };
}
var noop3 = function noop4() {
};
function isFunction(fn) {
  return typeof fn === "function";
}
function isStringish(value) {
  var t2 = typeof value;
  switch (t2) {
    case "string":
    case "symbol":
    case "number":
      return true;
  }
  return false;
}
function isObject(value) {
  return value !== null && typeof value === "object";
}
function isPlainObject$1(value) {
  var _proto$constructor;
  if (!isObject(value))
    return false;
  var proto = Object.getPrototypeOf(value);
  if (proto == null)
    return true;
  return ((_proto$constructor = proto.constructor) == null ? void 0 : _proto$constructor.toString()) === plainObjectString$1;
}
function isGenerator(obj) {
  var constructor = obj == null ? void 0 : obj.constructor;
  if (!constructor)
    return false;
  if (constructor.name === "GeneratorFunction" || constructor.displayName === "GeneratorFunction")
    return true;
  return false;
}
function addHiddenProp(object2, propName, value) {
  defineProperty$1(object2, propName, {
    enumerable: false,
    writable: true,
    configurable: true,
    value
  });
}
function addHiddenFinalProp$1(object2, propName, value) {
  defineProperty$1(object2, propName, {
    enumerable: false,
    writable: false,
    configurable: true,
    value
  });
}
function createInstanceofPredicate(name, theClass) {
  var propName = "isMobX" + name;
  theClass.prototype[propName] = true;
  return function(x2) {
    return isObject(x2) && x2[propName] === true;
  };
}
function isES6Map(thing) {
  return thing instanceof Map;
}
function isES6Set(thing) {
  return thing instanceof Set;
}
var hasGetOwnPropertySymbols = typeof Object.getOwnPropertySymbols !== "undefined";
function getPlainObjectKeys(object2) {
  var keys2 = Object.keys(object2);
  if (!hasGetOwnPropertySymbols)
    return keys2;
  var symbols = Object.getOwnPropertySymbols(object2);
  if (!symbols.length)
    return keys2;
  return [].concat(keys2, symbols.filter(function(s) {
    return objectPrototype.propertyIsEnumerable.call(object2, s);
  }));
}
var ownKeys = typeof Reflect !== "undefined" && Reflect.ownKeys ? Reflect.ownKeys : hasGetOwnPropertySymbols ? function(obj) {
  return Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj));
} : Object.getOwnPropertyNames;
function toPrimitive(value) {
  return value === null ? null : typeof value === "object" ? "" + value : value;
}
function hasProp(target, prop2) {
  return objectPrototype.hasOwnProperty.call(target, prop2);
}
var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors2(target) {
  var res = {};
  ownKeys(target).forEach(function(key) {
    res[key] = getDescriptor(target, key);
  });
  return res;
};
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  return Constructor;
}
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}
function _assertThisInitialized(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _unsupportedIterableToArray(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray(o2, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _createForOfIteratorHelperLoose(o2, allowArrayLike) {
  var it;
  if (typeof Symbol === "undefined" || o2[Symbol.iterator] == null) {
    if (Array.isArray(o2) || (it = _unsupportedIterableToArray(o2)) || allowArrayLike && o2 && typeof o2.length === "number") {
      if (it)
        o2 = it;
      var i = 0;
      return function() {
        if (i >= o2.length)
          return {
            done: true
          };
        return {
          done: false,
          value: o2[i++]
        };
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  it = o2[Symbol.iterator]();
  return it.next.bind(it);
}
var storedAnnotationsSymbol = /* @__PURE__ */ Symbol("mobx-stored-annotations");
function createDecoratorAnnotation(annotation) {
  function decorator(target, property) {
    storeAnnotation(target, property, annotation);
  }
  return Object.assign(decorator, annotation);
}
function storeAnnotation(prototype, key, annotation) {
  if (!hasProp(prototype, storedAnnotationsSymbol)) {
    addHiddenProp(prototype, storedAnnotationsSymbol, _extends({}, prototype[storedAnnotationsSymbol]));
  }
  if (!isOverride(annotation)) {
    prototype[storedAnnotationsSymbol][key] = annotation;
  }
}
function collectStoredAnnotations(target) {
  if (!hasProp(target, storedAnnotationsSymbol)) {
    addHiddenProp(target, storedAnnotationsSymbol, _extends({}, target[storedAnnotationsSymbol]));
  }
  return target[storedAnnotationsSymbol];
}
var $mobx = /* @__PURE__ */ Symbol("mobx administration");
var Atom = /* @__PURE__ */ function() {
  function Atom2(name_) {
    if (name_ === void 0) {
      name_ = "Atom";
    }
    this.name_ = void 0;
    this.isPendingUnobservation_ = false;
    this.isBeingObserved_ = false;
    this.observers_ = new Set();
    this.diffValue_ = 0;
    this.lastAccessedBy_ = 0;
    this.lowestObserverState_ = IDerivationState_.NOT_TRACKING_;
    this.onBOL = void 0;
    this.onBUOL = void 0;
    this.name_ = name_;
  }
  var _proto = Atom2.prototype;
  _proto.onBO = function onBO() {
    if (this.onBOL) {
      this.onBOL.forEach(function(listener) {
        return listener();
      });
    }
  };
  _proto.onBUO = function onBUO() {
    if (this.onBUOL) {
      this.onBUOL.forEach(function(listener) {
        return listener();
      });
    }
  };
  _proto.reportObserved = function reportObserved$1() {
    return reportObserved(this);
  };
  _proto.reportChanged = function reportChanged() {
    startBatch();
    propagateChanged(this);
    endBatch();
  };
  _proto.toString = function toString2() {
    return this.name_;
  };
  return Atom2;
}();
var isAtom = /* @__PURE__ */ createInstanceofPredicate("Atom", Atom);
function createAtom(name, onBecomeObservedHandler, onBecomeUnobservedHandler) {
  if (onBecomeObservedHandler === void 0) {
    onBecomeObservedHandler = noop3;
  }
  if (onBecomeUnobservedHandler === void 0) {
    onBecomeUnobservedHandler = noop3;
  }
  var atom = new Atom(name);
  if (onBecomeObservedHandler !== noop3) {
    onBecomeObserved(atom, onBecomeObservedHandler);
  }
  if (onBecomeUnobservedHandler !== noop3) {
    onBecomeUnobserved(atom, onBecomeUnobservedHandler);
  }
  return atom;
}
function identityComparer(a2, b2) {
  return a2 === b2;
}
function structuralComparer(a2, b2) {
  return deepEqual(a2, b2);
}
function shallowComparer(a2, b2) {
  return deepEqual(a2, b2, 1);
}
function defaultComparer(a2, b2) {
  if (Object.is)
    return Object.is(a2, b2);
  return a2 === b2 ? a2 !== 0 || 1 / a2 === 1 / b2 : a2 !== a2 && b2 !== b2;
}
var comparer = {
  identity: identityComparer,
  structural: structuralComparer,
  "default": defaultComparer,
  shallow: shallowComparer
};
function deepEnhancer(v2, _2, name) {
  if (isObservable(v2))
    return v2;
  if (Array.isArray(v2))
    return observable.array(v2, {
      name
    });
  if (isPlainObject$1(v2))
    return observable.object(v2, void 0, {
      name
    });
  if (isES6Map(v2))
    return observable.map(v2, {
      name
    });
  if (isES6Set(v2))
    return observable.set(v2, {
      name
    });
  if (typeof v2 === "function" && !isAction(v2) && !isFlow(v2)) {
    if (isGenerator(v2)) {
      return flow(v2);
    } else {
      return autoAction(name, v2);
    }
  }
  return v2;
}
function shallowEnhancer(v2, _2, name) {
  if (v2 === void 0 || v2 === null)
    return v2;
  if (isObservableObject(v2) || isObservableArray(v2) || isObservableMap(v2) || isObservableSet(v2))
    return v2;
  if (Array.isArray(v2))
    return observable.array(v2, {
      name,
      deep: false
    });
  if (isPlainObject$1(v2))
    return observable.object(v2, void 0, {
      name,
      deep: false
    });
  if (isES6Map(v2))
    return observable.map(v2, {
      name,
      deep: false
    });
  if (isES6Set(v2))
    return observable.set(v2, {
      name,
      deep: false
    });
}
function referenceEnhancer(newValue) {
  return newValue;
}
function refStructEnhancer(v2, oldValue) {
  if (deepEqual(v2, oldValue))
    return oldValue;
  return v2;
}
var OVERRIDE = "override";
function isOverride(annotation) {
  return annotation.annotationType_ === OVERRIDE;
}
function createActionAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$1,
    extend_: extend_$1
  };
}
function make_$1(adm, key, descriptor, source) {
  var _this$options_;
  if ((_this$options_ = this.options_) == null ? void 0 : _this$options_.bound) {
    return this.extend_(adm, key, descriptor, false) === null ? 0 : 1;
  }
  if (source === adm.target_) {
    return this.extend_(adm, key, descriptor, false) === null ? 0 : 2;
  }
  if (isAction(descriptor.value)) {
    return 1;
  }
  var actionDescriptor = createActionDescriptor(adm, this, key, descriptor, false);
  defineProperty$1(source, key, actionDescriptor);
  return 2;
}
function extend_$1(adm, key, descriptor, proxyTrap) {
  var actionDescriptor = createActionDescriptor(adm, this, key, descriptor);
  return adm.defineProperty_(key, actionDescriptor, proxyTrap);
}
function assertActionDescriptor(adm, _ref, key, _ref2) {
  _ref.annotationType_;
  _ref2.value;
}
function createActionDescriptor(adm, annotation, key, descriptor, safeDescriptors) {
  var _annotation$options_, _annotation$options_$, _annotation$options_2, _annotation$options_$2, _annotation$options_3, _annotation$options_4, _adm$proxy_2;
  if (safeDescriptors === void 0) {
    safeDescriptors = globalState.safeDescriptors;
  }
  assertActionDescriptor(adm, annotation, key, descriptor);
  var value = descriptor.value;
  if ((_annotation$options_ = annotation.options_) == null ? void 0 : _annotation$options_.bound) {
    var _adm$proxy_;
    value = value.bind((_adm$proxy_ = adm.proxy_) != null ? _adm$proxy_ : adm.target_);
  }
  return {
    value: createAction((_annotation$options_$ = (_annotation$options_2 = annotation.options_) == null ? void 0 : _annotation$options_2.name) != null ? _annotation$options_$ : key.toString(), value, (_annotation$options_$2 = (_annotation$options_3 = annotation.options_) == null ? void 0 : _annotation$options_3.autoAction) != null ? _annotation$options_$2 : false, ((_annotation$options_4 = annotation.options_) == null ? void 0 : _annotation$options_4.bound) ? (_adm$proxy_2 = adm.proxy_) != null ? _adm$proxy_2 : adm.target_ : void 0),
    configurable: safeDescriptors ? adm.isPlainObject_ : true,
    enumerable: false,
    writable: safeDescriptors ? false : true
  };
}
function createFlowAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$2,
    extend_: extend_$2
  };
}
function make_$2(adm, key, descriptor, source) {
  var _this$options_;
  if (source === adm.target_) {
    return this.extend_(adm, key, descriptor, false) === null ? 0 : 2;
  }
  if (((_this$options_ = this.options_) == null ? void 0 : _this$options_.bound) && !isFlow(adm.target_[key])) {
    if (this.extend_(adm, key, descriptor, false) === null)
      return 0;
  }
  if (isFlow(descriptor.value)) {
    return 1;
  }
  var flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, false, false);
  defineProperty$1(source, key, flowDescriptor);
  return 2;
}
function extend_$2(adm, key, descriptor, proxyTrap) {
  var _this$options_2;
  var flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, (_this$options_2 = this.options_) == null ? void 0 : _this$options_2.bound);
  return adm.defineProperty_(key, flowDescriptor, proxyTrap);
}
function assertFlowDescriptor(adm, _ref, key, _ref2) {
  _ref.annotationType_;
  _ref2.value;
}
function createFlowDescriptor(adm, annotation, key, descriptor, bound, safeDescriptors) {
  if (safeDescriptors === void 0) {
    safeDescriptors = globalState.safeDescriptors;
  }
  assertFlowDescriptor(adm, annotation, key, descriptor);
  var value = descriptor.value;
  if (bound) {
    var _adm$proxy_;
    value = value.bind((_adm$proxy_ = adm.proxy_) != null ? _adm$proxy_ : adm.target_);
  }
  return {
    value: flow(value),
    configurable: safeDescriptors ? adm.isPlainObject_ : true,
    enumerable: false,
    writable: safeDescriptors ? false : true
  };
}
function createComputedAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$3,
    extend_: extend_$3
  };
}
function make_$3(adm, key, descriptor) {
  return this.extend_(adm, key, descriptor, false) === null ? 0 : 1;
}
function extend_$3(adm, key, descriptor, proxyTrap) {
  assertComputedDescriptor(adm, this, key, descriptor);
  return adm.defineComputedProperty_(key, _extends({}, this.options_, {
    get: descriptor.get,
    set: descriptor.set
  }), proxyTrap);
}
function assertComputedDescriptor(adm, _ref, key, _ref2) {
  _ref.annotationType_;
  _ref2.get;
}
function createObservableAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$4,
    extend_: extend_$4
  };
}
function make_$4(adm, key, descriptor) {
  return this.extend_(adm, key, descriptor, false) === null ? 0 : 1;
}
function extend_$4(adm, key, descriptor, proxyTrap) {
  var _this$options_$enhanc, _this$options_;
  assertObservableDescriptor(adm, this);
  return adm.defineObservableProperty_(key, descriptor.value, (_this$options_$enhanc = (_this$options_ = this.options_) == null ? void 0 : _this$options_.enhancer) != null ? _this$options_$enhanc : deepEnhancer, proxyTrap);
}
function assertObservableDescriptor(adm, _ref, key, descriptor) {
  _ref.annotationType_;
}
var AUTO = "true";
var autoAnnotation = /* @__PURE__ */ createAutoAnnotation();
function createAutoAnnotation(options) {
  return {
    annotationType_: AUTO,
    options_: options,
    make_: make_$5,
    extend_: extend_$5
  };
}
function make_$5(adm, key, descriptor, source) {
  var _this$options_3, _this$options_4;
  if (descriptor.get) {
    return computed.make_(adm, key, descriptor, source);
  }
  if (descriptor.set) {
    var set7 = createAction(key.toString(), descriptor.set);
    if (source === adm.target_) {
      return adm.defineProperty_(key, {
        configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,
        set: set7
      }) === null ? 0 : 2;
    }
    defineProperty$1(source, key, {
      configurable: true,
      set: set7
    });
    return 2;
  }
  if (source !== adm.target_ && typeof descriptor.value === "function") {
    var _this$options_2;
    if (isGenerator(descriptor.value)) {
      var _this$options_;
      var flowAnnotation2 = ((_this$options_ = this.options_) == null ? void 0 : _this$options_.autoBind) ? flow.bound : flow;
      return flowAnnotation2.make_(adm, key, descriptor, source);
    }
    var actionAnnotation2 = ((_this$options_2 = this.options_) == null ? void 0 : _this$options_2.autoBind) ? autoAction.bound : autoAction;
    return actionAnnotation2.make_(adm, key, descriptor, source);
  }
  var observableAnnotation2 = ((_this$options_3 = this.options_) == null ? void 0 : _this$options_3.deep) === false ? observable.ref : observable;
  if (typeof descriptor.value === "function" && ((_this$options_4 = this.options_) == null ? void 0 : _this$options_4.autoBind)) {
    var _adm$proxy_;
    descriptor.value = descriptor.value.bind((_adm$proxy_ = adm.proxy_) != null ? _adm$proxy_ : adm.target_);
  }
  return observableAnnotation2.make_(adm, key, descriptor, source);
}
function extend_$5(adm, key, descriptor, proxyTrap) {
  var _this$options_5, _this$options_6;
  if (descriptor.get) {
    return computed.extend_(adm, key, descriptor, proxyTrap);
  }
  if (descriptor.set) {
    return adm.defineProperty_(key, {
      configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,
      set: createAction(key.toString(), descriptor.set)
    }, proxyTrap);
  }
  if (typeof descriptor.value === "function" && ((_this$options_5 = this.options_) == null ? void 0 : _this$options_5.autoBind)) {
    var _adm$proxy_2;
    descriptor.value = descriptor.value.bind((_adm$proxy_2 = adm.proxy_) != null ? _adm$proxy_2 : adm.target_);
  }
  var observableAnnotation2 = ((_this$options_6 = this.options_) == null ? void 0 : _this$options_6.deep) === false ? observable.ref : observable;
  return observableAnnotation2.extend_(adm, key, descriptor, proxyTrap);
}
var OBSERVABLE = "observable";
var OBSERVABLE_REF = "observable.ref";
var OBSERVABLE_SHALLOW = "observable.shallow";
var OBSERVABLE_STRUCT = "observable.struct";
var defaultCreateObservableOptions = {
  deep: true,
  name: void 0,
  defaultDecorator: void 0,
  proxy: true
};
Object.freeze(defaultCreateObservableOptions);
function asCreateObservableOptions(thing) {
  return thing || defaultCreateObservableOptions;
}
var observableAnnotation = /* @__PURE__ */ createObservableAnnotation(OBSERVABLE);
var observableRefAnnotation = /* @__PURE__ */ createObservableAnnotation(OBSERVABLE_REF, {
  enhancer: referenceEnhancer
});
var observableShallowAnnotation = /* @__PURE__ */ createObservableAnnotation(OBSERVABLE_SHALLOW, {
  enhancer: shallowEnhancer
});
var observableStructAnnotation = /* @__PURE__ */ createObservableAnnotation(OBSERVABLE_STRUCT, {
  enhancer: refStructEnhancer
});
var observableDecoratorAnnotation = /* @__PURE__ */ createDecoratorAnnotation(observableAnnotation);
function getEnhancerFromOptions(options) {
  return options.deep === true ? deepEnhancer : options.deep === false ? referenceEnhancer : getEnhancerFromAnnotation(options.defaultDecorator);
}
function getAnnotationFromOptions(options) {
  var _options$defaultDecor;
  return options ? (_options$defaultDecor = options.defaultDecorator) != null ? _options$defaultDecor : createAutoAnnotation(options) : void 0;
}
function getEnhancerFromAnnotation(annotation) {
  var _annotation$options_$, _annotation$options_;
  return !annotation ? deepEnhancer : (_annotation$options_$ = (_annotation$options_ = annotation.options_) == null ? void 0 : _annotation$options_.enhancer) != null ? _annotation$options_$ : deepEnhancer;
}
function createObservable(v2, arg2, arg3) {
  if (isStringish(arg2)) {
    storeAnnotation(v2, arg2, observableAnnotation);
    return;
  }
  if (isObservable(v2))
    return v2;
  if (isPlainObject$1(v2))
    return observable.object(v2, arg2, arg3);
  if (Array.isArray(v2))
    return observable.array(v2, arg2);
  if (isES6Map(v2))
    return observable.map(v2, arg2);
  if (isES6Set(v2))
    return observable.set(v2, arg2);
  if (typeof v2 === "object" && v2 !== null)
    return v2;
  return observable.box(v2, arg2);
}
Object.assign(createObservable, observableDecoratorAnnotation);
var observableFactories = {
  box: function box(value, options) {
    var o2 = asCreateObservableOptions(options);
    return new ObservableValue(value, getEnhancerFromOptions(o2), o2.name, true, o2.equals);
  },
  array: function array(initialValues, options) {
    var o2 = asCreateObservableOptions(options);
    return (globalState.useProxies === false || o2.proxy === false ? createLegacyArray : createObservableArray)(initialValues, getEnhancerFromOptions(o2), o2.name);
  },
  map: function map(initialValues, options) {
    var o2 = asCreateObservableOptions(options);
    return new ObservableMap(initialValues, getEnhancerFromOptions(o2), o2.name);
  },
  set: function set3(initialValues, options) {
    var o2 = asCreateObservableOptions(options);
    return new ObservableSet(initialValues, getEnhancerFromOptions(o2), o2.name);
  },
  object: function object(props, decorators, options) {
    return extendObservable(globalState.useProxies === false || (options == null ? void 0 : options.proxy) === false ? asObservableObject({}, options) : asDynamicObservableObject({}, options), props, decorators);
  },
  ref: /* @__PURE__ */ createDecoratorAnnotation(observableRefAnnotation),
  shallow: /* @__PURE__ */ createDecoratorAnnotation(observableShallowAnnotation),
  deep: observableDecoratorAnnotation,
  struct: /* @__PURE__ */ createDecoratorAnnotation(observableStructAnnotation)
};
var observable = /* @__PURE__ */ assign(createObservable, observableFactories);
var COMPUTED = "computed";
var COMPUTED_STRUCT = "computed.struct";
var computedAnnotation = /* @__PURE__ */ createComputedAnnotation(COMPUTED);
var computedStructAnnotation = /* @__PURE__ */ createComputedAnnotation(COMPUTED_STRUCT, {
  equals: comparer.structural
});
var computed = function computed2(arg1, arg2) {
  if (isStringish(arg2)) {
    return storeAnnotation(arg1, arg2, computedAnnotation);
  }
  if (isPlainObject$1(arg1)) {
    return createDecoratorAnnotation(createComputedAnnotation(COMPUTED, arg1));
  }
  var opts = isPlainObject$1(arg2) ? arg2 : {};
  opts.get = arg1;
  opts.name || (opts.name = arg1.name || "");
  return new ComputedValue(opts);
};
Object.assign(computed, computedAnnotation);
computed.struct = /* @__PURE__ */ createDecoratorAnnotation(computedStructAnnotation);
var _getDescriptor$config, _getDescriptor;
var currentActionId = 0;
var nextActionId$1 = 1;
var isFunctionNameConfigurable = (_getDescriptor$config = (_getDescriptor = /* @__PURE__ */ getDescriptor(function() {
}, "name")) == null ? void 0 : _getDescriptor.configurable) != null ? _getDescriptor$config : false;
var tmpNameDescriptor = {
  value: "action",
  configurable: true,
  writable: false,
  enumerable: false
};
function createAction(actionName, fn, autoAction2, ref) {
  if (autoAction2 === void 0) {
    autoAction2 = false;
  }
  function res() {
    return executeAction(actionName, autoAction2, fn, ref || this, arguments);
  }
  res.isMobxAction = true;
  if (isFunctionNameConfigurable) {
    tmpNameDescriptor.value = actionName;
    Object.defineProperty(res, "name", tmpNameDescriptor);
  }
  return res;
}
function executeAction(actionName, canRunAsDerivation, fn, scope, args) {
  var runInfo = _startAction(actionName, canRunAsDerivation);
  try {
    return fn.apply(scope, args);
  } catch (err) {
    runInfo.error_ = err;
    throw err;
  } finally {
    _endAction(runInfo);
  }
}
function _startAction(actionName, canRunAsDerivation, scope, args) {
  var notifySpy_ = false;
  var startTime_ = 0;
  var prevDerivation_ = globalState.trackingDerivation;
  var runAsAction = !canRunAsDerivation || !prevDerivation_;
  startBatch();
  var prevAllowStateChanges_ = globalState.allowStateChanges;
  if (runAsAction) {
    untrackedStart();
    prevAllowStateChanges_ = allowStateChangesStart(true);
  }
  var prevAllowStateReads_ = allowStateReadsStart(true);
  var runInfo = {
    runAsAction_: runAsAction,
    prevDerivation_,
    prevAllowStateChanges_,
    prevAllowStateReads_,
    notifySpy_,
    startTime_,
    actionId_: nextActionId$1++,
    parentActionId_: currentActionId
  };
  currentActionId = runInfo.actionId_;
  return runInfo;
}
function _endAction(runInfo) {
  if (currentActionId !== runInfo.actionId_) {
    die(30);
  }
  currentActionId = runInfo.parentActionId_;
  if (runInfo.error_ !== void 0) {
    globalState.suppressReactionErrors = true;
  }
  allowStateChangesEnd(runInfo.prevAllowStateChanges_);
  allowStateReadsEnd(runInfo.prevAllowStateReads_);
  endBatch();
  if (runInfo.runAsAction_)
    untrackedEnd(runInfo.prevDerivation_);
  globalState.suppressReactionErrors = false;
}
function allowStateChanges(allowStateChanges2, func) {
  var prev2 = allowStateChangesStart(allowStateChanges2);
  try {
    return func();
  } finally {
    allowStateChangesEnd(prev2);
  }
}
function allowStateChangesStart(allowStateChanges2) {
  var prev2 = globalState.allowStateChanges;
  globalState.allowStateChanges = allowStateChanges2;
  return prev2;
}
function allowStateChangesEnd(prev2) {
  globalState.allowStateChanges = prev2;
}
var _Symbol$toPrimitive;
_Symbol$toPrimitive = Symbol.toPrimitive;
var ObservableValue = /* @__PURE__ */ function(_Atom) {
  _inheritsLoose(ObservableValue2, _Atom);
  function ObservableValue2(value, enhancer, name_, notifySpy, equals) {
    var _this;
    if (name_ === void 0) {
      name_ = "ObservableValue";
    }
    if (equals === void 0) {
      equals = comparer["default"];
    }
    _this = _Atom.call(this, name_) || this;
    _this.enhancer = void 0;
    _this.name_ = void 0;
    _this.equals = void 0;
    _this.hasUnreportedChange_ = false;
    _this.interceptors_ = void 0;
    _this.changeListeners_ = void 0;
    _this.value_ = void 0;
    _this.dehancer = void 0;
    _this.enhancer = enhancer;
    _this.name_ = name_;
    _this.equals = equals;
    _this.value_ = enhancer(value, void 0, name_);
    return _this;
  }
  var _proto = ObservableValue2.prototype;
  _proto.dehanceValue = function dehanceValue(value) {
    if (this.dehancer !== void 0)
      return this.dehancer(value);
    return value;
  };
  _proto.set = function set7(newValue) {
    this.value_;
    newValue = this.prepareNewValue_(newValue);
    if (newValue !== globalState.UNCHANGED) {
      this.setNewValue_(newValue);
    }
  };
  _proto.prepareNewValue_ = function prepareNewValue_(newValue) {
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        object: this,
        type: UPDATE,
        newValue
      });
      if (!change)
        return globalState.UNCHANGED;
      newValue = change.newValue;
    }
    newValue = this.enhancer(newValue, this.value_, this.name_);
    return this.equals(this.value_, newValue) ? globalState.UNCHANGED : newValue;
  };
  _proto.setNewValue_ = function setNewValue_(newValue) {
    var oldValue = this.value_;
    this.value_ = newValue;
    this.reportChanged();
    if (hasListeners(this)) {
      notifyListeners(this, {
        type: UPDATE,
        object: this,
        newValue,
        oldValue
      });
    }
  };
  _proto.get = function get6() {
    this.reportObserved();
    return this.dehanceValue(this.value_);
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    if (fireImmediately)
      listener({
        observableKind: "value",
        debugObjectName: this.name_,
        object: this,
        type: UPDATE,
        newValue: this.value_,
        oldValue: void 0
      });
    return registerListener(this, listener);
  };
  _proto.raw = function raw() {
    return this.value_;
  };
  _proto.toJSON = function toJSON3() {
    return this.get();
  };
  _proto.toString = function toString2() {
    return this.name_ + "[" + this.value_ + "]";
  };
  _proto.valueOf = function valueOf() {
    return toPrimitive(this.get());
  };
  _proto[_Symbol$toPrimitive] = function() {
    return this.valueOf();
  };
  return ObservableValue2;
}(Atom);
var isObservableValue = /* @__PURE__ */ createInstanceofPredicate("ObservableValue", ObservableValue);
var _Symbol$toPrimitive$1;
_Symbol$toPrimitive$1 = Symbol.toPrimitive;
var ComputedValue = /* @__PURE__ */ function() {
  function ComputedValue2(options) {
    this.dependenciesState_ = IDerivationState_.NOT_TRACKING_;
    this.observing_ = [];
    this.newObserving_ = null;
    this.isBeingObserved_ = false;
    this.isPendingUnobservation_ = false;
    this.observers_ = new Set();
    this.diffValue_ = 0;
    this.runId_ = 0;
    this.lastAccessedBy_ = 0;
    this.lowestObserverState_ = IDerivationState_.UP_TO_DATE_;
    this.unboundDepsCount_ = 0;
    this.value_ = new CaughtException(null);
    this.name_ = void 0;
    this.triggeredBy_ = void 0;
    this.isComputing_ = false;
    this.isRunningSetter_ = false;
    this.derivation = void 0;
    this.setter_ = void 0;
    this.isTracing_ = TraceMode.NONE;
    this.scope_ = void 0;
    this.equals_ = void 0;
    this.requiresReaction_ = void 0;
    this.keepAlive_ = void 0;
    this.onBOL = void 0;
    this.onBUOL = void 0;
    if (!options.get)
      die(31);
    this.derivation = options.get;
    this.name_ = options.name || "ComputedValue";
    if (options.set) {
      this.setter_ = createAction("ComputedValue-setter", options.set);
    }
    this.equals_ = options.equals || (options.compareStructural || options.struct ? comparer.structural : comparer["default"]);
    this.scope_ = options.context;
    this.requiresReaction_ = !!options.requiresReaction;
    this.keepAlive_ = !!options.keepAlive;
  }
  var _proto = ComputedValue2.prototype;
  _proto.onBecomeStale_ = function onBecomeStale_() {
    propagateMaybeChanged(this);
  };
  _proto.onBO = function onBO() {
    if (this.onBOL) {
      this.onBOL.forEach(function(listener) {
        return listener();
      });
    }
  };
  _proto.onBUO = function onBUO() {
    if (this.onBUOL) {
      this.onBUOL.forEach(function(listener) {
        return listener();
      });
    }
  };
  _proto.get = function get6() {
    if (this.isComputing_)
      die(32, this.name_, this.derivation);
    if (globalState.inBatch === 0 && this.observers_.size === 0 && !this.keepAlive_) {
      if (shouldCompute(this)) {
        this.warnAboutUntrackedRead_();
        startBatch();
        this.value_ = this.computeValue_(false);
        endBatch();
      }
    } else {
      reportObserved(this);
      if (shouldCompute(this)) {
        var prevTrackingContext = globalState.trackingContext;
        if (this.keepAlive_ && !prevTrackingContext)
          globalState.trackingContext = this;
        if (this.trackAndCompute())
          propagateChangeConfirmed(this);
        globalState.trackingContext = prevTrackingContext;
      }
    }
    var result = this.value_;
    if (isCaughtException(result))
      throw result.cause;
    return result;
  };
  _proto.set = function set7(value) {
    if (this.setter_) {
      if (this.isRunningSetter_)
        die(33, this.name_);
      this.isRunningSetter_ = true;
      try {
        this.setter_.call(this.scope_, value);
      } finally {
        this.isRunningSetter_ = false;
      }
    } else
      die(34, this.name_);
  };
  _proto.trackAndCompute = function trackAndCompute() {
    var oldValue = this.value_;
    var wasSuspended = this.dependenciesState_ === IDerivationState_.NOT_TRACKING_;
    var newValue = this.computeValue_(true);
    var changed = wasSuspended || isCaughtException(oldValue) || isCaughtException(newValue) || !this.equals_(oldValue, newValue);
    if (changed) {
      this.value_ = newValue;
    }
    return changed;
  };
  _proto.computeValue_ = function computeValue_(track) {
    this.isComputing_ = true;
    var prev2 = allowStateChangesStart(false);
    var res;
    if (track) {
      res = trackDerivedFunction(this, this.derivation, this.scope_);
    } else {
      if (globalState.disableErrorBoundaries === true) {
        res = this.derivation.call(this.scope_);
      } else {
        try {
          res = this.derivation.call(this.scope_);
        } catch (e2) {
          res = new CaughtException(e2);
        }
      }
    }
    allowStateChangesEnd(prev2);
    this.isComputing_ = false;
    return res;
  };
  _proto.suspend_ = function suspend_() {
    if (!this.keepAlive_) {
      clearObserving(this);
      this.value_ = void 0;
    }
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    var _this = this;
    var firstTime = true;
    var prevValue = void 0;
    return autorun(function() {
      var newValue = _this.get();
      if (!firstTime || fireImmediately) {
        var prevU = untrackedStart();
        listener({
          observableKind: "computed",
          debugObjectName: _this.name_,
          type: UPDATE,
          object: _this,
          newValue,
          oldValue: prevValue
        });
        untrackedEnd(prevU);
      }
      firstTime = false;
      prevValue = newValue;
    });
  };
  _proto.warnAboutUntrackedRead_ = function warnAboutUntrackedRead_() {
    return;
  };
  _proto.toString = function toString2() {
    return this.name_ + "[" + this.derivation.toString() + "]";
  };
  _proto.valueOf = function valueOf() {
    return toPrimitive(this.get());
  };
  _proto[_Symbol$toPrimitive$1] = function() {
    return this.valueOf();
  };
  return ComputedValue2;
}();
var isComputedValue = /* @__PURE__ */ createInstanceofPredicate("ComputedValue", ComputedValue);
var IDerivationState_;
(function(IDerivationState_2) {
  IDerivationState_2[IDerivationState_2["NOT_TRACKING_"] = -1] = "NOT_TRACKING_";
  IDerivationState_2[IDerivationState_2["UP_TO_DATE_"] = 0] = "UP_TO_DATE_";
  IDerivationState_2[IDerivationState_2["POSSIBLY_STALE_"] = 1] = "POSSIBLY_STALE_";
  IDerivationState_2[IDerivationState_2["STALE_"] = 2] = "STALE_";
})(IDerivationState_ || (IDerivationState_ = {}));
var TraceMode;
(function(TraceMode2) {
  TraceMode2[TraceMode2["NONE"] = 0] = "NONE";
  TraceMode2[TraceMode2["LOG"] = 1] = "LOG";
  TraceMode2[TraceMode2["BREAK"] = 2] = "BREAK";
})(TraceMode || (TraceMode = {}));
var CaughtException = function CaughtException2(cause) {
  this.cause = void 0;
  this.cause = cause;
};
function isCaughtException(e2) {
  return e2 instanceof CaughtException;
}
function shouldCompute(derivation) {
  switch (derivation.dependenciesState_) {
    case IDerivationState_.UP_TO_DATE_:
      return false;
    case IDerivationState_.NOT_TRACKING_:
    case IDerivationState_.STALE_:
      return true;
    case IDerivationState_.POSSIBLY_STALE_: {
      var prevAllowStateReads = allowStateReadsStart(true);
      var prevUntracked = untrackedStart();
      var obs = derivation.observing_, l2 = obs.length;
      for (var i = 0; i < l2; i++) {
        var obj = obs[i];
        if (isComputedValue(obj)) {
          if (globalState.disableErrorBoundaries) {
            obj.get();
          } else {
            try {
              obj.get();
            } catch (e2) {
              untrackedEnd(prevUntracked);
              allowStateReadsEnd(prevAllowStateReads);
              return true;
            }
          }
          if (derivation.dependenciesState_ === IDerivationState_.STALE_) {
            untrackedEnd(prevUntracked);
            allowStateReadsEnd(prevAllowStateReads);
            return true;
          }
        }
      }
      changeDependenciesStateTo0(derivation);
      untrackedEnd(prevUntracked);
      allowStateReadsEnd(prevAllowStateReads);
      return false;
    }
  }
}
function checkIfStateModificationsAreAllowed(atom) {
  {
    return;
  }
}
function trackDerivedFunction(derivation, f2, context) {
  var prevAllowStateReads = allowStateReadsStart(true);
  changeDependenciesStateTo0(derivation);
  derivation.newObserving_ = new Array(derivation.observing_.length + 100);
  derivation.unboundDepsCount_ = 0;
  derivation.runId_ = ++globalState.runId;
  var prevTracking = globalState.trackingDerivation;
  globalState.trackingDerivation = derivation;
  globalState.inBatch++;
  var result;
  if (globalState.disableErrorBoundaries === true) {
    result = f2.call(context);
  } else {
    try {
      result = f2.call(context);
    } catch (e2) {
      result = new CaughtException(e2);
    }
  }
  globalState.inBatch--;
  globalState.trackingDerivation = prevTracking;
  bindDependencies(derivation);
  allowStateReadsEnd(prevAllowStateReads);
  return result;
}
function bindDependencies(derivation) {
  var prevObserving = derivation.observing_;
  var observing = derivation.observing_ = derivation.newObserving_;
  var lowestNewObservingDerivationState = IDerivationState_.UP_TO_DATE_;
  var i0 = 0, l2 = derivation.unboundDepsCount_;
  for (var i = 0; i < l2; i++) {
    var dep = observing[i];
    if (dep.diffValue_ === 0) {
      dep.diffValue_ = 1;
      if (i0 !== i)
        observing[i0] = dep;
      i0++;
    }
    if (dep.dependenciesState_ > lowestNewObservingDerivationState) {
      lowestNewObservingDerivationState = dep.dependenciesState_;
    }
  }
  observing.length = i0;
  derivation.newObserving_ = null;
  l2 = prevObserving.length;
  while (l2--) {
    var _dep = prevObserving[l2];
    if (_dep.diffValue_ === 0) {
      removeObserver(_dep, derivation);
    }
    _dep.diffValue_ = 0;
  }
  while (i0--) {
    var _dep2 = observing[i0];
    if (_dep2.diffValue_ === 1) {
      _dep2.diffValue_ = 0;
      addObserver(_dep2, derivation);
    }
  }
  if (lowestNewObservingDerivationState !== IDerivationState_.UP_TO_DATE_) {
    derivation.dependenciesState_ = lowestNewObservingDerivationState;
    derivation.onBecomeStale_();
  }
}
function clearObserving(derivation) {
  var obs = derivation.observing_;
  derivation.observing_ = [];
  var i = obs.length;
  while (i--) {
    removeObserver(obs[i], derivation);
  }
  derivation.dependenciesState_ = IDerivationState_.NOT_TRACKING_;
}
function untracked(action2) {
  var prev2 = untrackedStart();
  try {
    return action2();
  } finally {
    untrackedEnd(prev2);
  }
}
function untrackedStart() {
  var prev2 = globalState.trackingDerivation;
  globalState.trackingDerivation = null;
  return prev2;
}
function untrackedEnd(prev2) {
  globalState.trackingDerivation = prev2;
}
function allowStateReadsStart(allowStateReads) {
  var prev2 = globalState.allowStateReads;
  globalState.allowStateReads = allowStateReads;
  return prev2;
}
function allowStateReadsEnd(prev2) {
  globalState.allowStateReads = prev2;
}
function changeDependenciesStateTo0(derivation) {
  if (derivation.dependenciesState_ === IDerivationState_.UP_TO_DATE_)
    return;
  derivation.dependenciesState_ = IDerivationState_.UP_TO_DATE_;
  var obs = derivation.observing_;
  var i = obs.length;
  while (i--) {
    obs[i].lowestObserverState_ = IDerivationState_.UP_TO_DATE_;
  }
}
var MobXGlobals = function MobXGlobals2() {
  this.version = 6;
  this.UNCHANGED = {};
  this.trackingDerivation = null;
  this.trackingContext = null;
  this.runId = 0;
  this.mobxGuid = 0;
  this.inBatch = 0;
  this.pendingUnobservations = [];
  this.pendingReactions = [];
  this.isRunningReactions = false;
  this.allowStateChanges = false;
  this.allowStateReads = true;
  this.enforceActions = true;
  this.spyListeners = [];
  this.globalReactionErrorHandlers = [];
  this.computedRequiresReaction = false;
  this.reactionRequiresObservable = false;
  this.observableRequiresReaction = false;
  this.disableErrorBoundaries = false;
  this.suppressReactionErrors = false;
  this.useProxies = true;
  this.verifyProxies = false;
  this.safeDescriptors = true;
};
var canMergeGlobalState = true;
var isolateCalled = false;
var globalState = /* @__PURE__ */ function() {
  var global3 = /* @__PURE__ */ getGlobal();
  if (global3.__mobxInstanceCount > 0 && !global3.__mobxGlobals)
    canMergeGlobalState = false;
  if (global3.__mobxGlobals && global3.__mobxGlobals.version !== new MobXGlobals().version)
    canMergeGlobalState = false;
  if (!canMergeGlobalState) {
    setTimeout(function() {
      if (!isolateCalled) {
        die(35);
      }
    }, 1);
    return new MobXGlobals();
  } else if (global3.__mobxGlobals) {
    global3.__mobxInstanceCount += 1;
    if (!global3.__mobxGlobals.UNCHANGED)
      global3.__mobxGlobals.UNCHANGED = {};
    return global3.__mobxGlobals;
  } else {
    global3.__mobxInstanceCount = 1;
    return global3.__mobxGlobals = /* @__PURE__ */ new MobXGlobals();
  }
}();
function isolateGlobalState() {
  if (globalState.pendingReactions.length || globalState.inBatch || globalState.isRunningReactions)
    die(36);
  isolateCalled = true;
  if (canMergeGlobalState) {
    var global3 = getGlobal();
    if (--global3.__mobxInstanceCount === 0)
      global3.__mobxGlobals = void 0;
    globalState = new MobXGlobals();
  }
}
function getGlobalState() {
  return globalState;
}
function addObserver(observable2, node2) {
  observable2.observers_.add(node2);
  if (observable2.lowestObserverState_ > node2.dependenciesState_)
    observable2.lowestObserverState_ = node2.dependenciesState_;
}
function removeObserver(observable2, node2) {
  observable2.observers_["delete"](node2);
  if (observable2.observers_.size === 0) {
    queueForUnobservation(observable2);
  }
}
function queueForUnobservation(observable2) {
  if (observable2.isPendingUnobservation_ === false) {
    observable2.isPendingUnobservation_ = true;
    globalState.pendingUnobservations.push(observable2);
  }
}
function startBatch() {
  globalState.inBatch++;
}
function endBatch() {
  if (--globalState.inBatch === 0) {
    runReactions();
    var list2 = globalState.pendingUnobservations;
    for (var i = 0; i < list2.length; i++) {
      var observable2 = list2[i];
      observable2.isPendingUnobservation_ = false;
      if (observable2.observers_.size === 0) {
        if (observable2.isBeingObserved_) {
          observable2.isBeingObserved_ = false;
          observable2.onBUO();
        }
        if (observable2 instanceof ComputedValue) {
          observable2.suspend_();
        }
      }
    }
    globalState.pendingUnobservations = [];
  }
}
function reportObserved(observable2) {
  var derivation = globalState.trackingDerivation;
  if (derivation !== null) {
    if (derivation.runId_ !== observable2.lastAccessedBy_) {
      observable2.lastAccessedBy_ = derivation.runId_;
      derivation.newObserving_[derivation.unboundDepsCount_++] = observable2;
      if (!observable2.isBeingObserved_ && globalState.trackingContext) {
        observable2.isBeingObserved_ = true;
        observable2.onBO();
      }
    }
    return true;
  } else if (observable2.observers_.size === 0 && globalState.inBatch > 0) {
    queueForUnobservation(observable2);
  }
  return false;
}
function propagateChanged(observable2) {
  if (observable2.lowestObserverState_ === IDerivationState_.STALE_)
    return;
  observable2.lowestObserverState_ = IDerivationState_.STALE_;
  observable2.observers_.forEach(function(d2) {
    if (d2.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {
      d2.onBecomeStale_();
    }
    d2.dependenciesState_ = IDerivationState_.STALE_;
  });
}
function propagateChangeConfirmed(observable2) {
  if (observable2.lowestObserverState_ === IDerivationState_.STALE_)
    return;
  observable2.lowestObserverState_ = IDerivationState_.STALE_;
  observable2.observers_.forEach(function(d2) {
    if (d2.dependenciesState_ === IDerivationState_.POSSIBLY_STALE_) {
      d2.dependenciesState_ = IDerivationState_.STALE_;
    } else if (d2.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {
      observable2.lowestObserverState_ = IDerivationState_.UP_TO_DATE_;
    }
  });
}
function propagateMaybeChanged(observable2) {
  if (observable2.lowestObserverState_ !== IDerivationState_.UP_TO_DATE_)
    return;
  observable2.lowestObserverState_ = IDerivationState_.POSSIBLY_STALE_;
  observable2.observers_.forEach(function(d2) {
    if (d2.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {
      d2.dependenciesState_ = IDerivationState_.POSSIBLY_STALE_;
      d2.onBecomeStale_();
    }
  });
}
var Reaction = /* @__PURE__ */ function() {
  function Reaction2(name_, onInvalidate_, errorHandler_, requiresObservable_) {
    if (name_ === void 0) {
      name_ = "Reaction";
    }
    if (requiresObservable_ === void 0) {
      requiresObservable_ = false;
    }
    this.name_ = void 0;
    this.onInvalidate_ = void 0;
    this.errorHandler_ = void 0;
    this.requiresObservable_ = void 0;
    this.observing_ = [];
    this.newObserving_ = [];
    this.dependenciesState_ = IDerivationState_.NOT_TRACKING_;
    this.diffValue_ = 0;
    this.runId_ = 0;
    this.unboundDepsCount_ = 0;
    this.isDisposed_ = false;
    this.isScheduled_ = false;
    this.isTrackPending_ = false;
    this.isRunning_ = false;
    this.isTracing_ = TraceMode.NONE;
    this.name_ = name_;
    this.onInvalidate_ = onInvalidate_;
    this.errorHandler_ = errorHandler_;
    this.requiresObservable_ = requiresObservable_;
  }
  var _proto = Reaction2.prototype;
  _proto.onBecomeStale_ = function onBecomeStale_() {
    this.schedule_();
  };
  _proto.schedule_ = function schedule_() {
    if (!this.isScheduled_) {
      this.isScheduled_ = true;
      globalState.pendingReactions.push(this);
      runReactions();
    }
  };
  _proto.isScheduled = function isScheduled() {
    return this.isScheduled_;
  };
  _proto.runReaction_ = function runReaction_() {
    if (!this.isDisposed_) {
      startBatch();
      this.isScheduled_ = false;
      var prev2 = globalState.trackingContext;
      globalState.trackingContext = this;
      if (shouldCompute(this)) {
        this.isTrackPending_ = true;
        try {
          this.onInvalidate_();
          if (false)
            ;
        } catch (e2) {
          this.reportExceptionInDerivation_(e2);
        }
      }
      globalState.trackingContext = prev2;
      endBatch();
    }
  };
  _proto.track = function track(fn) {
    if (this.isDisposed_) {
      return;
    }
    startBatch();
    this.isRunning_ = true;
    var prevReaction = globalState.trackingContext;
    globalState.trackingContext = this;
    var result = trackDerivedFunction(this, fn, void 0);
    globalState.trackingContext = prevReaction;
    this.isRunning_ = false;
    this.isTrackPending_ = false;
    if (this.isDisposed_) {
      clearObserving(this);
    }
    if (isCaughtException(result))
      this.reportExceptionInDerivation_(result.cause);
    endBatch();
  };
  _proto.reportExceptionInDerivation_ = function reportExceptionInDerivation_(error) {
    var _this = this;
    if (this.errorHandler_) {
      this.errorHandler_(error, this);
      return;
    }
    if (globalState.disableErrorBoundaries)
      throw error;
    var message = "[mobx] uncaught error in '" + this + "'";
    if (!globalState.suppressReactionErrors) {
      console.error(message, error);
    }
    globalState.globalReactionErrorHandlers.forEach(function(f2) {
      return f2(error, _this);
    });
  };
  _proto.dispose = function dispose() {
    if (!this.isDisposed_) {
      this.isDisposed_ = true;
      if (!this.isRunning_) {
        startBatch();
        clearObserving(this);
        endBatch();
      }
    }
  };
  _proto.getDisposer_ = function getDisposer_() {
    var r2 = this.dispose.bind(this);
    r2[$mobx] = this;
    return r2;
  };
  _proto.toString = function toString2() {
    return "Reaction[" + this.name_ + "]";
  };
  _proto.trace = function trace$1(enterBreakPoint) {
    if (enterBreakPoint === void 0) {
      enterBreakPoint = false;
    }
    trace(this, enterBreakPoint);
  };
  return Reaction2;
}();
var MAX_REACTION_ITERATIONS = 100;
var reactionScheduler = function reactionScheduler2(f2) {
  return f2();
};
function runReactions() {
  if (globalState.inBatch > 0 || globalState.isRunningReactions)
    return;
  reactionScheduler(runReactionsHelper);
}
function runReactionsHelper() {
  globalState.isRunningReactions = true;
  var allReactions = globalState.pendingReactions;
  var iterations = 0;
  while (allReactions.length > 0) {
    if (++iterations === MAX_REACTION_ITERATIONS) {
      console.error("[mobx] cycle in reaction: " + allReactions[0]);
      allReactions.splice(0);
    }
    var remainingReactions = allReactions.splice(0);
    for (var i = 0, l2 = remainingReactions.length; i < l2; i++) {
      remainingReactions[i].runReaction_();
    }
  }
  globalState.isRunningReactions = false;
}
var isReaction = /* @__PURE__ */ createInstanceofPredicate("Reaction", Reaction);
function setReactionScheduler(fn) {
  var baseScheduler = reactionScheduler;
  reactionScheduler = function reactionScheduler3(f2) {
    return fn(function() {
      return baseScheduler(f2);
    });
  };
}
function isSpyEnabled() {
  return false;
}
function spyReport(event) {
  return;
}
function spyReportStart(event) {
  return;
}
function spyReportEnd(change) {
  return;
}
function spy(listener) {
  {
    console.warn("[mobx.spy] Is a no-op in production builds");
    return function() {
    };
  }
}
var ACTION = "action";
var ACTION_BOUND = "action.bound";
var AUTOACTION = "autoAction";
var AUTOACTION_BOUND = "autoAction.bound";
var DEFAULT_ACTION_NAME = "<unnamed action>";
var actionAnnotation = /* @__PURE__ */ createActionAnnotation(ACTION);
var actionBoundAnnotation = /* @__PURE__ */ createActionAnnotation(ACTION_BOUND, {
  bound: true
});
var autoActionAnnotation = /* @__PURE__ */ createActionAnnotation(AUTOACTION, {
  autoAction: true
});
var autoActionBoundAnnotation = /* @__PURE__ */ createActionAnnotation(AUTOACTION_BOUND, {
  autoAction: true,
  bound: true
});
function createActionFactory(autoAction2) {
  var res = function action2(arg1, arg2) {
    if (isFunction(arg1))
      return createAction(arg1.name || DEFAULT_ACTION_NAME, arg1, autoAction2);
    if (isFunction(arg2))
      return createAction(arg1, arg2, autoAction2);
    if (isStringish(arg2)) {
      return storeAnnotation(arg1, arg2, autoAction2 ? autoActionAnnotation : actionAnnotation);
    }
    if (isStringish(arg1)) {
      return createDecoratorAnnotation(createActionAnnotation(autoAction2 ? AUTOACTION : ACTION, {
        name: arg1,
        autoAction: autoAction2
      }));
    }
  };
  return res;
}
var action = /* @__PURE__ */ createActionFactory(false);
Object.assign(action, actionAnnotation);
var autoAction = /* @__PURE__ */ createActionFactory(true);
Object.assign(autoAction, autoActionAnnotation);
action.bound = /* @__PURE__ */ createDecoratorAnnotation(actionBoundAnnotation);
autoAction.bound = /* @__PURE__ */ createDecoratorAnnotation(autoActionBoundAnnotation);
function runInAction(fn) {
  return executeAction(fn.name || DEFAULT_ACTION_NAME, false, fn, this, void 0);
}
function isAction(thing) {
  return isFunction(thing) && thing.isMobxAction === true;
}
function autorun(view, opts) {
  var _opts$name, _opts;
  if (opts === void 0) {
    opts = EMPTY_OBJECT$1;
  }
  var name = (_opts$name = (_opts = opts) == null ? void 0 : _opts.name) != null ? _opts$name : "Autorun";
  var runSync = !opts.scheduler && !opts.delay;
  var reaction2;
  if (runSync) {
    reaction2 = new Reaction(name, function() {
      this.track(reactionRunner);
    }, opts.onError, opts.requiresObservable);
  } else {
    var scheduler2 = createSchedulerFromOptions(opts);
    var isScheduled = false;
    reaction2 = new Reaction(name, function() {
      if (!isScheduled) {
        isScheduled = true;
        scheduler2(function() {
          isScheduled = false;
          if (!reaction2.isDisposed_)
            reaction2.track(reactionRunner);
        });
      }
    }, opts.onError, opts.requiresObservable);
  }
  function reactionRunner() {
    view(reaction2);
  }
  reaction2.schedule_();
  return reaction2.getDisposer_();
}
var run = function run2(f2) {
  return f2();
};
function createSchedulerFromOptions(opts) {
  return opts.scheduler ? opts.scheduler : opts.delay ? function(f2) {
    return setTimeout(f2, opts.delay);
  } : run;
}
function reaction(expression, effect2, opts) {
  var _opts$name2;
  if (opts === void 0) {
    opts = EMPTY_OBJECT$1;
  }
  var name = (_opts$name2 = opts.name) != null ? _opts$name2 : "Reaction";
  var effectAction = action(name, opts.onError ? wrapErrorHandler(opts.onError, effect2) : effect2);
  var runSync = !opts.scheduler && !opts.delay;
  var scheduler2 = createSchedulerFromOptions(opts);
  var firstTime = true;
  var isScheduled = false;
  var value;
  var oldValue;
  var equals = opts.compareStructural ? comparer.structural : opts.equals || comparer["default"];
  var r2 = new Reaction(name, function() {
    if (firstTime || runSync) {
      reactionRunner();
    } else if (!isScheduled) {
      isScheduled = true;
      scheduler2(reactionRunner);
    }
  }, opts.onError, opts.requiresObservable);
  function reactionRunner() {
    isScheduled = false;
    if (r2.isDisposed_)
      return;
    var changed = false;
    r2.track(function() {
      var nextValue = allowStateChanges(false, function() {
        return expression(r2);
      });
      changed = firstTime || !equals(value, nextValue);
      oldValue = value;
      value = nextValue;
    });
    if (firstTime && opts.fireImmediately)
      effectAction(value, oldValue, r2);
    else if (!firstTime && changed)
      effectAction(value, oldValue, r2);
    firstTime = false;
  }
  r2.schedule_();
  return r2.getDisposer_();
}
function wrapErrorHandler(errorHandler, baseFn) {
  return function() {
    try {
      return baseFn.apply(this, arguments);
    } catch (e2) {
      errorHandler.call(this, e2);
    }
  };
}
var ON_BECOME_OBSERVED = "onBO";
var ON_BECOME_UNOBSERVED = "onBUO";
function onBecomeObserved(thing, arg2, arg3) {
  return interceptHook(ON_BECOME_OBSERVED, thing, arg2, arg3);
}
function onBecomeUnobserved(thing, arg2, arg3) {
  return interceptHook(ON_BECOME_UNOBSERVED, thing, arg2, arg3);
}
function interceptHook(hook, thing, arg2, arg3) {
  var atom = typeof arg3 === "function" ? getAtom(thing, arg2) : getAtom(thing);
  var cb2 = isFunction(arg3) ? arg3 : arg2;
  var listenersKey = hook + "L";
  if (atom[listenersKey]) {
    atom[listenersKey].add(cb2);
  } else {
    atom[listenersKey] = new Set([cb2]);
  }
  return function() {
    var hookListeners = atom[listenersKey];
    if (hookListeners) {
      hookListeners["delete"](cb2);
      if (hookListeners.size === 0) {
        delete atom[listenersKey];
      }
    }
  };
}
var NEVER = "never";
var ALWAYS = "always";
var OBSERVED = "observed";
function configure(options) {
  if (options.isolateGlobalState === true) {
    isolateGlobalState();
  }
  var useProxies = options.useProxies, enforceActions = options.enforceActions;
  if (useProxies !== void 0) {
    globalState.useProxies = useProxies === ALWAYS ? true : useProxies === NEVER ? false : typeof Proxy !== "undefined";
  }
  if (useProxies === "ifavailable")
    globalState.verifyProxies = true;
  if (enforceActions !== void 0) {
    var ea2 = enforceActions === ALWAYS ? ALWAYS : enforceActions === OBSERVED;
    globalState.enforceActions = ea2;
    globalState.allowStateChanges = ea2 === true || ea2 === ALWAYS ? false : true;
  }
  ["computedRequiresReaction", "reactionRequiresObservable", "observableRequiresReaction", "disableErrorBoundaries", "safeDescriptors"].forEach(function(key) {
    if (key in options)
      globalState[key] = !!options[key];
  });
  globalState.allowStateReads = !globalState.observableRequiresReaction;
  if (options.reactionScheduler) {
    setReactionScheduler(options.reactionScheduler);
  }
}
function extendObservable(target, properties, annotations, options) {
  var descriptors = getOwnPropertyDescriptors(properties);
  var adm = asObservableObject(target, options)[$mobx];
  startBatch();
  try {
    ownKeys(descriptors).forEach(function(key) {
      adm.extend_(key, descriptors[key], !annotations ? true : key in annotations ? annotations[key] : true);
    });
  } finally {
    endBatch();
  }
  return target;
}
function getDependencyTree(thing, property) {
  return nodeToDependencyTree(getAtom(thing, property));
}
function nodeToDependencyTree(node2) {
  var result = {
    name: node2.name_
  };
  if (node2.observing_ && node2.observing_.length > 0)
    result.dependencies = unique(node2.observing_).map(nodeToDependencyTree);
  return result;
}
function unique(list2) {
  return Array.from(new Set(list2));
}
var generatorId = 0;
function FlowCancellationError() {
  this.message = "FLOW_CANCELLED";
}
FlowCancellationError.prototype = /* @__PURE__ */ Object.create(Error.prototype);
var flowAnnotation = /* @__PURE__ */ createFlowAnnotation("flow");
var flowBoundAnnotation = /* @__PURE__ */ createFlowAnnotation("flow.bound", {
  bound: true
});
var flow = /* @__PURE__ */ Object.assign(function flow2(arg1, arg2) {
  if (isStringish(arg2)) {
    return storeAnnotation(arg1, arg2, flowAnnotation);
  }
  var generator = arg1;
  var name = generator.name || "<unnamed flow>";
  var res = function res2() {
    var ctx = this;
    var args = arguments;
    var runId = ++generatorId;
    var gen = action(name + " - runid: " + runId + " - init", generator).apply(ctx, args);
    var rejector;
    var pendingPromise = void 0;
    var promise = new Promise(function(resolve2, reject2) {
      var stepId = 0;
      rejector = reject2;
      function onFulfilled(res3) {
        pendingPromise = void 0;
        var ret;
        try {
          ret = action(name + " - runid: " + runId + " - yield " + stepId++, gen.next).call(gen, res3);
        } catch (e2) {
          return reject2(e2);
        }
        next2(ret);
      }
      function onRejected(err) {
        pendingPromise = void 0;
        var ret;
        try {
          ret = action(name + " - runid: " + runId + " - yield " + stepId++, gen["throw"]).call(gen, err);
        } catch (e2) {
          return reject2(e2);
        }
        next2(ret);
      }
      function next2(ret) {
        if (isFunction(ret == null ? void 0 : ret.then)) {
          ret.then(next2, reject2);
          return;
        }
        if (ret.done)
          return resolve2(ret.value);
        pendingPromise = Promise.resolve(ret.value);
        return pendingPromise.then(onFulfilled, onRejected);
      }
      onFulfilled(void 0);
    });
    promise.cancel = action(name + " - runid: " + runId + " - cancel", function() {
      try {
        if (pendingPromise)
          cancelPromise(pendingPromise);
        var _res = gen["return"](void 0);
        var yieldedPromise = Promise.resolve(_res.value);
        yieldedPromise.then(noop3, noop3);
        cancelPromise(yieldedPromise);
        rejector(new FlowCancellationError());
      } catch (e2) {
        rejector(e2);
      }
    });
    return promise;
  };
  res.isMobXFlow = true;
  return res;
}, flowAnnotation);
flow.bound = /* @__PURE__ */ createDecoratorAnnotation(flowBoundAnnotation);
function cancelPromise(promise) {
  if (isFunction(promise.cancel))
    promise.cancel();
}
function isFlow(fn) {
  return (fn == null ? void 0 : fn.isMobXFlow) === true;
}
function interceptReads(thing, propOrHandler, handler) {
  var target;
  if (isObservableMap(thing) || isObservableArray(thing) || isObservableValue(thing)) {
    target = getAdministration(thing);
  } else if (isObservableObject(thing)) {
    target = getAdministration(thing, propOrHandler);
  } else
    ;
  target.dehancer = typeof propOrHandler === "function" ? propOrHandler : handler;
  return function() {
    target.dehancer = void 0;
  };
}
function intercept(thing, propOrHandler, handler) {
  if (isFunction(handler))
    return interceptProperty(thing, propOrHandler, handler);
  else
    return interceptInterceptable(thing, propOrHandler);
}
function interceptInterceptable(thing, handler) {
  return getAdministration(thing).intercept_(handler);
}
function interceptProperty(thing, property, handler) {
  return getAdministration(thing, property).intercept_(handler);
}
function _isObservable(value, property) {
  if (!value)
    return false;
  if (property !== void 0) {
    if (isObservableObject(value)) {
      return value[$mobx].values_.has(property);
    }
    return false;
  }
  return isObservableObject(value) || !!value[$mobx] || isAtom(value) || isReaction(value) || isComputedValue(value);
}
function isObservable(value) {
  return _isObservable(value);
}
function keys(obj) {
  if (isObservableObject(obj)) {
    return obj[$mobx].keys_();
  }
  if (isObservableMap(obj) || isObservableSet(obj)) {
    return Array.from(obj.keys());
  }
  if (isObservableArray(obj)) {
    return obj.map(function(_2, index) {
      return index;
    });
  }
  die(5);
}
function values(obj) {
  if (isObservableObject(obj)) {
    return keys(obj).map(function(key) {
      return obj[key];
    });
  }
  if (isObservableMap(obj)) {
    return keys(obj).map(function(key) {
      return obj.get(key);
    });
  }
  if (isObservableSet(obj)) {
    return Array.from(obj.values());
  }
  if (isObservableArray(obj)) {
    return obj.slice();
  }
  die(6);
}
function entries(obj) {
  if (isObservableObject(obj)) {
    return keys(obj).map(function(key) {
      return [key, obj[key]];
    });
  }
  if (isObservableMap(obj)) {
    return keys(obj).map(function(key) {
      return [key, obj.get(key)];
    });
  }
  if (isObservableSet(obj)) {
    return Array.from(obj.entries());
  }
  if (isObservableArray(obj)) {
    return obj.map(function(key, index) {
      return [index, key];
    });
  }
  die(7);
}
function set4(obj, key, value) {
  if (arguments.length === 2 && !isObservableSet(obj)) {
    startBatch();
    var _values = key;
    try {
      for (var _key in _values) {
        set4(obj, _key, _values[_key]);
      }
    } finally {
      endBatch();
    }
    return;
  }
  if (isObservableObject(obj)) {
    obj[$mobx].set_(key, value);
  } else if (isObservableMap(obj)) {
    obj.set(key, value);
  } else if (isObservableSet(obj)) {
    obj.add(key);
  } else if (isObservableArray(obj)) {
    if (typeof key !== "number")
      key = parseInt(key, 10);
    if (key < 0)
      die("Invalid index: '" + key + "'");
    startBatch();
    if (key >= obj.length)
      obj.length = key + 1;
    obj[key] = value;
    endBatch();
  } else
    die(8);
}
function apiDefineProperty(obj, key, descriptor) {
  if (isObservableObject(obj)) {
    return obj[$mobx].defineProperty_(key, descriptor);
  }
  die(39);
}
function observe(thing, propOrCb, cbOrFire, fireImmediately) {
  if (isFunction(cbOrFire))
    return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately);
  else
    return observeObservable(thing, propOrCb, cbOrFire);
}
function observeObservable(thing, listener, fireImmediately) {
  return getAdministration(thing).observe_(listener, fireImmediately);
}
function observeObservableProperty(thing, property, listener, fireImmediately) {
  return getAdministration(thing, property).observe_(listener, fireImmediately);
}
function trace() {
  die("trace() is not available in production builds");
  var enterBreakPoint = false;
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  if (typeof args[args.length - 1] === "boolean")
    enterBreakPoint = args.pop();
  var derivation = getAtomFromArgs(args);
  if (!derivation) {
    return die("'trace(break?)' can only be used inside a tracked computed value or a Reaction. Consider passing in the computed value or reaction explicitly");
  }
  if (derivation.isTracing_ === TraceMode.NONE) {
    console.log("[mobx.trace] '" + derivation.name_ + "' tracing enabled");
  }
  derivation.isTracing_ = enterBreakPoint ? TraceMode.BREAK : TraceMode.LOG;
}
function getAtomFromArgs(args) {
  switch (args.length) {
    case 0:
      return globalState.trackingDerivation;
    case 1:
      return getAtom(args[0]);
    case 2:
      return getAtom(args[0], args[1]);
  }
}
function transaction(action2, thisArg) {
  if (thisArg === void 0) {
    thisArg = void 0;
  }
  startBatch();
  try {
    return action2.apply(thisArg);
  } finally {
    endBatch();
  }
}
function getAdm(target) {
  return target[$mobx];
}
var objectProxyTraps = {
  has: function has(target, name) {
    return getAdm(target).has_(name);
  },
  get: function get4(target, name) {
    return getAdm(target).get_(name);
  },
  set: function set5(target, name, value) {
    var _getAdm$set_;
    if (!isStringish(name))
      return false;
    return (_getAdm$set_ = getAdm(target).set_(name, value, true)) != null ? _getAdm$set_ : true;
  },
  deleteProperty: function deleteProperty(target, name) {
    var _getAdm$delete_;
    if (!isStringish(name))
      return false;
    return (_getAdm$delete_ = getAdm(target).delete_(name, true)) != null ? _getAdm$delete_ : true;
  },
  defineProperty: function defineProperty(target, name, descriptor) {
    var _getAdm$definePropert;
    return (_getAdm$definePropert = getAdm(target).defineProperty_(name, descriptor)) != null ? _getAdm$definePropert : true;
  },
  ownKeys: function ownKeys2(target) {
    return getAdm(target).ownKeys_();
  },
  preventExtensions: function preventExtensions(target) {
    die(13);
  }
};
function asDynamicObservableObject(target, options) {
  var _target$$mobx, _target$$mobx$proxy_;
  assertProxies();
  target = asObservableObject(target, options);
  return (_target$$mobx$proxy_ = (_target$$mobx = target[$mobx]).proxy_) != null ? _target$$mobx$proxy_ : _target$$mobx.proxy_ = new Proxy(target, objectProxyTraps);
}
function hasInterceptors(interceptable) {
  return interceptable.interceptors_ !== void 0 && interceptable.interceptors_.length > 0;
}
function registerInterceptor(interceptable, handler) {
  var interceptors = interceptable.interceptors_ || (interceptable.interceptors_ = []);
  interceptors.push(handler);
  return once(function() {
    var idx = interceptors.indexOf(handler);
    if (idx !== -1)
      interceptors.splice(idx, 1);
  });
}
function interceptChange(interceptable, change) {
  var prevU = untrackedStart();
  try {
    var interceptors = [].concat(interceptable.interceptors_ || []);
    for (var i = 0, l2 = interceptors.length; i < l2; i++) {
      change = interceptors[i](change);
      if (change && !change.type)
        die(14);
      if (!change)
        break;
    }
    return change;
  } finally {
    untrackedEnd(prevU);
  }
}
function hasListeners(listenable) {
  return listenable.changeListeners_ !== void 0 && listenable.changeListeners_.length > 0;
}
function registerListener(listenable, handler) {
  var listeners = listenable.changeListeners_ || (listenable.changeListeners_ = []);
  listeners.push(handler);
  return once(function() {
    var idx = listeners.indexOf(handler);
    if (idx !== -1)
      listeners.splice(idx, 1);
  });
}
function notifyListeners(listenable, change) {
  var prevU = untrackedStart();
  var listeners = listenable.changeListeners_;
  if (!listeners)
    return;
  listeners = listeners.slice();
  for (var i = 0, l2 = listeners.length; i < l2; i++) {
    listeners[i](change);
  }
  untrackedEnd(prevU);
}
function makeObservable(target, annotations, options) {
  var adm = asObservableObject(target, options)[$mobx];
  startBatch();
  try {
    var _annotations;
    if (false)
      ;
    (_annotations = annotations) != null ? _annotations : annotations = collectStoredAnnotations(target);
    ownKeys(annotations).forEach(function(key) {
      return adm.make_(key, annotations[key]);
    });
  } finally {
    endBatch();
  }
  return target;
}
var SPLICE = "splice";
var UPDATE = "update";
var MAX_SPLICE_SIZE = 1e4;
var arrayTraps = {
  get: function get5(target, name) {
    var adm = target[$mobx];
    if (name === $mobx)
      return adm;
    if (name === "length")
      return adm.getArrayLength_();
    if (typeof name === "string" && !isNaN(name)) {
      return adm.get_(parseInt(name));
    }
    if (hasProp(arrayExtensions, name)) {
      return arrayExtensions[name];
    }
    return target[name];
  },
  set: function set6(target, name, value) {
    var adm = target[$mobx];
    if (name === "length") {
      adm.setArrayLength_(value);
    }
    if (typeof name === "symbol" || isNaN(name)) {
      target[name] = value;
    } else {
      adm.set_(parseInt(name), value);
    }
    return true;
  },
  preventExtensions: function preventExtensions2() {
    die(15);
  }
};
var ObservableArrayAdministration = /* @__PURE__ */ function() {
  function ObservableArrayAdministration2(name, enhancer, owned_, legacyMode_) {
    if (name === void 0) {
      name = "ObservableArray";
    }
    this.owned_ = void 0;
    this.legacyMode_ = void 0;
    this.atom_ = void 0;
    this.values_ = [];
    this.interceptors_ = void 0;
    this.changeListeners_ = void 0;
    this.enhancer_ = void 0;
    this.dehancer = void 0;
    this.proxy_ = void 0;
    this.lastKnownLength_ = 0;
    this.owned_ = owned_;
    this.legacyMode_ = legacyMode_;
    this.atom_ = new Atom(name);
    this.enhancer_ = function(newV, oldV) {
      return enhancer(newV, oldV, "ObservableArray[..]");
    };
  }
  var _proto = ObservableArrayAdministration2.prototype;
  _proto.dehanceValue_ = function dehanceValue_(value) {
    if (this.dehancer !== void 0)
      return this.dehancer(value);
    return value;
  };
  _proto.dehanceValues_ = function dehanceValues_(values2) {
    if (this.dehancer !== void 0 && values2.length > 0)
      return values2.map(this.dehancer);
    return values2;
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    if (fireImmediately === void 0) {
      fireImmediately = false;
    }
    if (fireImmediately) {
      listener({
        observableKind: "array",
        object: this.proxy_,
        debugObjectName: this.atom_.name_,
        type: "splice",
        index: 0,
        added: this.values_.slice(),
        addedCount: this.values_.length,
        removed: [],
        removedCount: 0
      });
    }
    return registerListener(this, listener);
  };
  _proto.getArrayLength_ = function getArrayLength_() {
    this.atom_.reportObserved();
    return this.values_.length;
  };
  _proto.setArrayLength_ = function setArrayLength_(newLength) {
    if (typeof newLength !== "number" || isNaN(newLength) || newLength < 0)
      die("Out of range: " + newLength);
    var currentLength = this.values_.length;
    if (newLength === currentLength)
      return;
    else if (newLength > currentLength) {
      var newItems = new Array(newLength - currentLength);
      for (var i = 0; i < newLength - currentLength; i++) {
        newItems[i] = void 0;
      }
      this.spliceWithArray_(currentLength, 0, newItems);
    } else
      this.spliceWithArray_(newLength, currentLength - newLength);
  };
  _proto.updateArrayLength_ = function updateArrayLength_(oldLength, delta2) {
    if (oldLength !== this.lastKnownLength_)
      die(16);
    this.lastKnownLength_ += delta2;
    if (this.legacyMode_ && delta2 > 0)
      reserveArrayBuffer(oldLength + delta2 + 1);
  };
  _proto.spliceWithArray_ = function spliceWithArray_(index, deleteCount, newItems) {
    var _this = this;
    checkIfStateModificationsAreAllowed(this.atom_);
    var length2 = this.values_.length;
    if (index === void 0)
      index = 0;
    else if (index > length2)
      index = length2;
    else if (index < 0)
      index = Math.max(0, length2 + index);
    if (arguments.length === 1)
      deleteCount = length2 - index;
    else if (deleteCount === void 0 || deleteCount === null)
      deleteCount = 0;
    else
      deleteCount = Math.max(0, Math.min(deleteCount, length2 - index));
    if (newItems === void 0)
      newItems = EMPTY_ARRAY$1;
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        object: this.proxy_,
        type: SPLICE,
        index,
        removedCount: deleteCount,
        added: newItems
      });
      if (!change)
        return EMPTY_ARRAY$1;
      deleteCount = change.removedCount;
      newItems = change.added;
    }
    newItems = newItems.length === 0 ? newItems : newItems.map(function(v2) {
      return _this.enhancer_(v2, void 0);
    });
    if (this.legacyMode_ || false) {
      var lengthDelta = newItems.length - deleteCount;
      this.updateArrayLength_(length2, lengthDelta);
    }
    var res = this.spliceItemsIntoValues_(index, deleteCount, newItems);
    if (deleteCount !== 0 || newItems.length !== 0)
      this.notifyArraySplice_(index, newItems, res);
    return this.dehanceValues_(res);
  };
  _proto.spliceItemsIntoValues_ = function spliceItemsIntoValues_(index, deleteCount, newItems) {
    if (newItems.length < MAX_SPLICE_SIZE) {
      var _this$values_;
      return (_this$values_ = this.values_).splice.apply(_this$values_, [index, deleteCount].concat(newItems));
    } else {
      var res = this.values_.slice(index, index + deleteCount);
      var oldItems = this.values_.slice(index + deleteCount);
      this.values_.length += newItems.length - deleteCount;
      for (var i = 0; i < newItems.length; i++) {
        this.values_[index + i] = newItems[i];
      }
      for (var _i = 0; _i < oldItems.length; _i++) {
        this.values_[index + newItems.length + _i] = oldItems[_i];
      }
      return res;
    }
  };
  _proto.notifyArrayChildUpdate_ = function notifyArrayChildUpdate_(index, newValue, oldValue) {
    var notifySpy = !this.owned_ && isSpyEnabled();
    var notify = hasListeners(this);
    var change = notify || notifySpy ? {
      observableKind: "array",
      object: this.proxy_,
      type: UPDATE,
      debugObjectName: this.atom_.name_,
      index,
      newValue,
      oldValue
    } : null;
    this.atom_.reportChanged();
    if (notify)
      notifyListeners(this, change);
  };
  _proto.notifyArraySplice_ = function notifyArraySplice_(index, added, removed) {
    var notifySpy = !this.owned_ && isSpyEnabled();
    var notify = hasListeners(this);
    var change = notify || notifySpy ? {
      observableKind: "array",
      object: this.proxy_,
      debugObjectName: this.atom_.name_,
      type: SPLICE,
      index,
      removed,
      added,
      removedCount: removed.length,
      addedCount: added.length
    } : null;
    this.atom_.reportChanged();
    if (notify)
      notifyListeners(this, change);
  };
  _proto.get_ = function get_(index) {
    if (index < this.values_.length) {
      this.atom_.reportObserved();
      return this.dehanceValue_(this.values_[index]);
    }
    console.warn("[mobx.array] Attempt to read an array index (" + index + ") that is out of bounds (" + this.values_.length + "). Please check length first. Out of bound indices will not be tracked by MobX");
  };
  _proto.set_ = function set_(index, newValue) {
    var values2 = this.values_;
    if (index < values2.length) {
      checkIfStateModificationsAreAllowed(this.atom_);
      var oldValue = values2[index];
      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          type: UPDATE,
          object: this.proxy_,
          index,
          newValue
        });
        if (!change)
          return;
        newValue = change.newValue;
      }
      newValue = this.enhancer_(newValue, oldValue);
      var changed = newValue !== oldValue;
      if (changed) {
        values2[index] = newValue;
        this.notifyArrayChildUpdate_(index, newValue, oldValue);
      }
    } else if (index === values2.length) {
      this.spliceWithArray_(index, 0, [newValue]);
    } else {
      die(17, index, values2.length);
    }
  };
  return ObservableArrayAdministration2;
}();
function createObservableArray(initialValues, enhancer, name, owned) {
  if (name === void 0) {
    name = "ObservableArray";
  }
  if (owned === void 0) {
    owned = false;
  }
  assertProxies();
  var adm = new ObservableArrayAdministration(name, enhancer, owned, false);
  addHiddenFinalProp$1(adm.values_, $mobx, adm);
  var proxy = new Proxy(adm.values_, arrayTraps);
  adm.proxy_ = proxy;
  if (initialValues && initialValues.length) {
    var prev2 = allowStateChangesStart(true);
    adm.spliceWithArray_(0, 0, initialValues);
    allowStateChangesEnd(prev2);
  }
  return proxy;
}
var arrayExtensions = {
  clear: function clear() {
    return this.splice(0);
  },
  replace: function replace2(newItems) {
    var adm = this[$mobx];
    return adm.spliceWithArray_(0, adm.values_.length, newItems);
  },
  toJSON: function toJSON() {
    return this.slice();
  },
  splice: function splice(index, deleteCount) {
    for (var _len = arguments.length, newItems = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      newItems[_key - 2] = arguments[_key];
    }
    var adm = this[$mobx];
    switch (arguments.length) {
      case 0:
        return [];
      case 1:
        return adm.spliceWithArray_(index);
      case 2:
        return adm.spliceWithArray_(index, deleteCount);
    }
    return adm.spliceWithArray_(index, deleteCount, newItems);
  },
  spliceWithArray: function spliceWithArray(index, deleteCount, newItems) {
    return this[$mobx].spliceWithArray_(index, deleteCount, newItems);
  },
  push: function push2() {
    var adm = this[$mobx];
    for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      items[_key2] = arguments[_key2];
    }
    adm.spliceWithArray_(adm.values_.length, 0, items);
    return adm.values_.length;
  },
  pop: function pop() {
    return this.splice(Math.max(this[$mobx].values_.length - 1, 0), 1)[0];
  },
  shift: function shift() {
    return this.splice(0, 1)[0];
  },
  unshift: function unshift() {
    var adm = this[$mobx];
    for (var _len3 = arguments.length, items = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      items[_key3] = arguments[_key3];
    }
    adm.spliceWithArray_(0, 0, items);
    return adm.values_.length;
  },
  reverse: function reverse() {
    if (globalState.trackingDerivation) {
      die(37, "reverse");
    }
    this.replace(this.slice().reverse());
    return this;
  },
  sort: function sort() {
    if (globalState.trackingDerivation) {
      die(37, "sort");
    }
    var copy2 = this.slice();
    copy2.sort.apply(copy2, arguments);
    this.replace(copy2);
    return this;
  },
  remove: function remove2(value) {
    var adm = this[$mobx];
    var idx = adm.dehanceValues_(adm.values_).indexOf(value);
    if (idx > -1) {
      this.splice(idx, 1);
      return true;
    }
    return false;
  }
};
addArrayExtension("concat", simpleFunc);
addArrayExtension("flat", simpleFunc);
addArrayExtension("includes", simpleFunc);
addArrayExtension("indexOf", simpleFunc);
addArrayExtension("join", simpleFunc);
addArrayExtension("lastIndexOf", simpleFunc);
addArrayExtension("slice", simpleFunc);
addArrayExtension("toString", simpleFunc);
addArrayExtension("toLocaleString", simpleFunc);
addArrayExtension("every", mapLikeFunc);
addArrayExtension("filter", mapLikeFunc);
addArrayExtension("find", mapLikeFunc);
addArrayExtension("findIndex", mapLikeFunc);
addArrayExtension("flatMap", mapLikeFunc);
addArrayExtension("forEach", mapLikeFunc);
addArrayExtension("map", mapLikeFunc);
addArrayExtension("some", mapLikeFunc);
addArrayExtension("reduce", reduceLikeFunc);
addArrayExtension("reduceRight", reduceLikeFunc);
function addArrayExtension(funcName, funcFactory) {
  if (typeof Array.prototype[funcName] === "function") {
    arrayExtensions[funcName] = funcFactory(funcName);
  }
}
function simpleFunc(funcName) {
  return function() {
    var adm = this[$mobx];
    adm.atom_.reportObserved();
    var dehancedValues = adm.dehanceValues_(adm.values_);
    return dehancedValues[funcName].apply(dehancedValues, arguments);
  };
}
function mapLikeFunc(funcName) {
  return function(callback, thisArg) {
    var _this2 = this;
    var adm = this[$mobx];
    adm.atom_.reportObserved();
    var dehancedValues = adm.dehanceValues_(adm.values_);
    return dehancedValues[funcName](function(element, index) {
      return callback.call(thisArg, element, index, _this2);
    });
  };
}
function reduceLikeFunc(funcName) {
  return function() {
    var _this3 = this;
    var adm = this[$mobx];
    adm.atom_.reportObserved();
    var dehancedValues = adm.dehanceValues_(adm.values_);
    var callback = arguments[0];
    arguments[0] = function(accumulator, currentValue, index) {
      return callback(accumulator, currentValue, index, _this3);
    };
    return dehancedValues[funcName].apply(dehancedValues, arguments);
  };
}
var isObservableArrayAdministration = /* @__PURE__ */ createInstanceofPredicate("ObservableArrayAdministration", ObservableArrayAdministration);
function isObservableArray(thing) {
  return isObject(thing) && isObservableArrayAdministration(thing[$mobx]);
}
var _Symbol$iterator, _Symbol$toStringTag;
var ObservableMapMarker = {};
var ADD = "add";
var DELETE = "delete";
_Symbol$iterator = Symbol.iterator;
_Symbol$toStringTag = Symbol.toStringTag;
var ObservableMap = /* @__PURE__ */ function() {
  function ObservableMap2(initialData, enhancer_, name_) {
    if (enhancer_ === void 0) {
      enhancer_ = deepEnhancer;
    }
    if (name_ === void 0) {
      name_ = "ObservableMap";
    }
    this.enhancer_ = void 0;
    this.name_ = void 0;
    this[$mobx] = ObservableMapMarker;
    this.data_ = void 0;
    this.hasMap_ = void 0;
    this.keysAtom_ = void 0;
    this.interceptors_ = void 0;
    this.changeListeners_ = void 0;
    this.dehancer = void 0;
    this.enhancer_ = enhancer_;
    this.name_ = name_;
    if (!isFunction(Map)) {
      die(18);
    }
    this.keysAtom_ = createAtom("ObservableMap.keys()");
    this.data_ = new Map();
    this.hasMap_ = new Map();
    this.merge(initialData);
  }
  var _proto = ObservableMap2.prototype;
  _proto.has_ = function has_(key) {
    return this.data_.has(key);
  };
  _proto.has = function has2(key) {
    var _this = this;
    if (!globalState.trackingDerivation)
      return this.has_(key);
    var entry = this.hasMap_.get(key);
    if (!entry) {
      var newEntry = entry = new ObservableValue(this.has_(key), referenceEnhancer, "ObservableMap.key?", false);
      this.hasMap_.set(key, newEntry);
      onBecomeUnobserved(newEntry, function() {
        return _this.hasMap_["delete"](key);
      });
    }
    return entry.get();
  };
  _proto.set = function set7(key, value) {
    var hasKey = this.has_(key);
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: hasKey ? UPDATE : ADD,
        object: this,
        newValue: value,
        name: key
      });
      if (!change)
        return this;
      value = change.newValue;
    }
    if (hasKey) {
      this.updateValue_(key, value);
    } else {
      this.addValue_(key, value);
    }
    return this;
  };
  _proto["delete"] = function _delete(key) {
    var _this2 = this;
    checkIfStateModificationsAreAllowed(this.keysAtom_);
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: DELETE,
        object: this,
        name: key
      });
      if (!change)
        return false;
    }
    if (this.has_(key)) {
      var notifySpy = isSpyEnabled();
      var notify = hasListeners(this);
      var _change = notify || notifySpy ? {
        observableKind: "map",
        debugObjectName: this.name_,
        type: DELETE,
        object: this,
        oldValue: this.data_.get(key).value_,
        name: key
      } : null;
      transaction(function() {
        var _this2$hasMap_$get;
        _this2.keysAtom_.reportChanged();
        (_this2$hasMap_$get = _this2.hasMap_.get(key)) == null ? void 0 : _this2$hasMap_$get.setNewValue_(false);
        var observable2 = _this2.data_.get(key);
        observable2.setNewValue_(void 0);
        _this2.data_["delete"](key);
      });
      if (notify)
        notifyListeners(this, _change);
      return true;
    }
    return false;
  };
  _proto.updateValue_ = function updateValue_(key, newValue) {
    var observable2 = this.data_.get(key);
    newValue = observable2.prepareNewValue_(newValue);
    if (newValue !== globalState.UNCHANGED) {
      var notifySpy = isSpyEnabled();
      var notify = hasListeners(this);
      var change = notify || notifySpy ? {
        observableKind: "map",
        debugObjectName: this.name_,
        type: UPDATE,
        object: this,
        oldValue: observable2.value_,
        name: key,
        newValue
      } : null;
      observable2.setNewValue_(newValue);
      if (notify)
        notifyListeners(this, change);
    }
  };
  _proto.addValue_ = function addValue_(key, newValue) {
    var _this3 = this;
    checkIfStateModificationsAreAllowed(this.keysAtom_);
    transaction(function() {
      var _this3$hasMap_$get;
      var observable2 = new ObservableValue(newValue, _this3.enhancer_, "ObservableMap.key", false);
      _this3.data_.set(key, observable2);
      newValue = observable2.value_;
      (_this3$hasMap_$get = _this3.hasMap_.get(key)) == null ? void 0 : _this3$hasMap_$get.setNewValue_(true);
      _this3.keysAtom_.reportChanged();
    });
    var notifySpy = isSpyEnabled();
    var notify = hasListeners(this);
    var change = notify || notifySpy ? {
      observableKind: "map",
      debugObjectName: this.name_,
      type: ADD,
      object: this,
      name: key,
      newValue
    } : null;
    if (notify)
      notifyListeners(this, change);
  };
  _proto.get = function get6(key) {
    if (this.has(key))
      return this.dehanceValue_(this.data_.get(key).get());
    return this.dehanceValue_(void 0);
  };
  _proto.dehanceValue_ = function dehanceValue_(value) {
    if (this.dehancer !== void 0) {
      return this.dehancer(value);
    }
    return value;
  };
  _proto.keys = function keys2() {
    this.keysAtom_.reportObserved();
    return this.data_.keys();
  };
  _proto.values = function values2() {
    var self2 = this;
    var keys2 = this.keys();
    return makeIterable({
      next: function next2() {
        var _keys$next = keys2.next(), done = _keys$next.done, value = _keys$next.value;
        return {
          done,
          value: done ? void 0 : self2.get(value)
        };
      }
    });
  };
  _proto.entries = function entries2() {
    var self2 = this;
    var keys2 = this.keys();
    return makeIterable({
      next: function next2() {
        var _keys$next2 = keys2.next(), done = _keys$next2.done, value = _keys$next2.value;
        return {
          done,
          value: done ? void 0 : [value, self2.get(value)]
        };
      }
    });
  };
  _proto[_Symbol$iterator] = function() {
    return this.entries();
  };
  _proto.forEach = function forEach(callback, thisArg) {
    for (var _iterator = _createForOfIteratorHelperLoose(this), _step; !(_step = _iterator()).done; ) {
      var _step$value = _step.value, key = _step$value[0], value = _step$value[1];
      callback.call(thisArg, value, key, this);
    }
  };
  _proto.merge = function merge3(other) {
    var _this4 = this;
    if (isObservableMap(other)) {
      other = new Map(other);
    }
    transaction(function() {
      if (isPlainObject$1(other))
        getPlainObjectKeys(other).forEach(function(key) {
          return _this4.set(key, other[key]);
        });
      else if (Array.isArray(other))
        other.forEach(function(_ref) {
          var key = _ref[0], value = _ref[1];
          return _this4.set(key, value);
        });
      else if (isES6Map(other)) {
        if (other.constructor !== Map)
          die(19, other);
        other.forEach(function(value, key) {
          return _this4.set(key, value);
        });
      } else if (other !== null && other !== void 0)
        die(20, other);
    });
    return this;
  };
  _proto.clear = function clear2() {
    var _this5 = this;
    transaction(function() {
      untracked(function() {
        for (var _iterator2 = _createForOfIteratorHelperLoose(_this5.keys()), _step2; !(_step2 = _iterator2()).done; ) {
          var key = _step2.value;
          _this5["delete"](key);
        }
      });
    });
  };
  _proto.replace = function replace3(values2) {
    var _this6 = this;
    transaction(function() {
      var replacementMap = convertToMap(values2);
      var orderedData = new Map();
      var keysReportChangedCalled = false;
      for (var _iterator3 = _createForOfIteratorHelperLoose(_this6.data_.keys()), _step3; !(_step3 = _iterator3()).done; ) {
        var key = _step3.value;
        if (!replacementMap.has(key)) {
          var deleted = _this6["delete"](key);
          if (deleted) {
            keysReportChangedCalled = true;
          } else {
            var value = _this6.data_.get(key);
            orderedData.set(key, value);
          }
        }
      }
      for (var _iterator4 = _createForOfIteratorHelperLoose(replacementMap.entries()), _step4; !(_step4 = _iterator4()).done; ) {
        var _step4$value = _step4.value, _key = _step4$value[0], _value = _step4$value[1];
        var keyExisted = _this6.data_.has(_key);
        _this6.set(_key, _value);
        if (_this6.data_.has(_key)) {
          var _value2 = _this6.data_.get(_key);
          orderedData.set(_key, _value2);
          if (!keyExisted) {
            keysReportChangedCalled = true;
          }
        }
      }
      if (!keysReportChangedCalled) {
        if (_this6.data_.size !== orderedData.size) {
          _this6.keysAtom_.reportChanged();
        } else {
          var iter1 = _this6.data_.keys();
          var iter2 = orderedData.keys();
          var next1 = iter1.next();
          var next2 = iter2.next();
          while (!next1.done) {
            if (next1.value !== next2.value) {
              _this6.keysAtom_.reportChanged();
              break;
            }
            next1 = iter1.next();
            next2 = iter2.next();
          }
        }
      }
      _this6.data_ = orderedData;
    });
    return this;
  };
  _proto.toString = function toString2() {
    return "[object ObservableMap]";
  };
  _proto.toJSON = function toJSON3() {
    return Array.from(this);
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    return registerListener(this, listener);
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _createClass(ObservableMap2, [{
    key: "size",
    get: function get6() {
      this.keysAtom_.reportObserved();
      return this.data_.size;
    }
  }, {
    key: _Symbol$toStringTag,
    get: function get6() {
      return "Map";
    }
  }]);
  return ObservableMap2;
}();
var isObservableMap = /* @__PURE__ */ createInstanceofPredicate("ObservableMap", ObservableMap);
function convertToMap(dataStructure) {
  if (isES6Map(dataStructure) || isObservableMap(dataStructure)) {
    return dataStructure;
  } else if (Array.isArray(dataStructure)) {
    return new Map(dataStructure);
  } else if (isPlainObject$1(dataStructure)) {
    var map3 = new Map();
    for (var key in dataStructure) {
      map3.set(key, dataStructure[key]);
    }
    return map3;
  } else {
    return die(21, dataStructure);
  }
}
var _Symbol$iterator$1, _Symbol$toStringTag$1;
var ObservableSetMarker = {};
_Symbol$iterator$1 = Symbol.iterator;
_Symbol$toStringTag$1 = Symbol.toStringTag;
var ObservableSet = /* @__PURE__ */ function() {
  function ObservableSet2(initialData, enhancer, name_) {
    if (enhancer === void 0) {
      enhancer = deepEnhancer;
    }
    if (name_ === void 0) {
      name_ = "ObservableSet";
    }
    this.name_ = void 0;
    this[$mobx] = ObservableSetMarker;
    this.data_ = new Set();
    this.atom_ = void 0;
    this.changeListeners_ = void 0;
    this.interceptors_ = void 0;
    this.dehancer = void 0;
    this.enhancer_ = void 0;
    this.name_ = name_;
    if (!isFunction(Set)) {
      die(22);
    }
    this.atom_ = createAtom(this.name_);
    this.enhancer_ = function(newV, oldV) {
      return enhancer(newV, oldV, name_);
    };
    if (initialData) {
      this.replace(initialData);
    }
  }
  var _proto = ObservableSet2.prototype;
  _proto.dehanceValue_ = function dehanceValue_(value) {
    if (this.dehancer !== void 0) {
      return this.dehancer(value);
    }
    return value;
  };
  _proto.clear = function clear2() {
    var _this = this;
    transaction(function() {
      untracked(function() {
        for (var _iterator = _createForOfIteratorHelperLoose(_this.data_.values()), _step; !(_step = _iterator()).done; ) {
          var value = _step.value;
          _this["delete"](value);
        }
      });
    });
  };
  _proto.forEach = function forEach(callbackFn, thisArg) {
    for (var _iterator2 = _createForOfIteratorHelperLoose(this), _step2; !(_step2 = _iterator2()).done; ) {
      var value = _step2.value;
      callbackFn.call(thisArg, value, value, this);
    }
  };
  _proto.add = function add4(value) {
    var _this2 = this;
    checkIfStateModificationsAreAllowed(this.atom_);
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: ADD,
        object: this,
        newValue: value
      });
      if (!change)
        return this;
    }
    if (!this.has(value)) {
      transaction(function() {
        _this2.data_.add(_this2.enhancer_(value, void 0));
        _this2.atom_.reportChanged();
      });
      var notifySpy = false;
      var notify = hasListeners(this);
      var _change = notify || notifySpy ? {
        observableKind: "set",
        debugObjectName: this.name_,
        type: ADD,
        object: this,
        newValue: value
      } : null;
      if (notify)
        notifyListeners(this, _change);
    }
    return this;
  };
  _proto["delete"] = function _delete(value) {
    var _this3 = this;
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: DELETE,
        object: this,
        oldValue: value
      });
      if (!change)
        return false;
    }
    if (this.has(value)) {
      var notifySpy = false;
      var notify = hasListeners(this);
      var _change2 = notify || notifySpy ? {
        observableKind: "set",
        debugObjectName: this.name_,
        type: DELETE,
        object: this,
        oldValue: value
      } : null;
      transaction(function() {
        _this3.atom_.reportChanged();
        _this3.data_["delete"](value);
      });
      if (notify)
        notifyListeners(this, _change2);
      return true;
    }
    return false;
  };
  _proto.has = function has2(value) {
    this.atom_.reportObserved();
    return this.data_.has(this.dehanceValue_(value));
  };
  _proto.entries = function entries2() {
    var nextIndex = 0;
    var keys2 = Array.from(this.keys());
    var values2 = Array.from(this.values());
    return makeIterable({
      next: function next2() {
        var index = nextIndex;
        nextIndex += 1;
        return index < values2.length ? {
          value: [keys2[index], values2[index]],
          done: false
        } : {
          done: true
        };
      }
    });
  };
  _proto.keys = function keys2() {
    return this.values();
  };
  _proto.values = function values2() {
    this.atom_.reportObserved();
    var self2 = this;
    var nextIndex = 0;
    var observableValues = Array.from(this.data_.values());
    return makeIterable({
      next: function next2() {
        return nextIndex < observableValues.length ? {
          value: self2.dehanceValue_(observableValues[nextIndex++]),
          done: false
        } : {
          done: true
        };
      }
    });
  };
  _proto.replace = function replace3(other) {
    var _this4 = this;
    if (isObservableSet(other)) {
      other = new Set(other);
    }
    transaction(function() {
      if (Array.isArray(other)) {
        _this4.clear();
        other.forEach(function(value) {
          return _this4.add(value);
        });
      } else if (isES6Set(other)) {
        _this4.clear();
        other.forEach(function(value) {
          return _this4.add(value);
        });
      } else if (other !== null && other !== void 0) {
        die("Cannot initialize set from " + other);
      }
    });
    return this;
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    return registerListener(this, listener);
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _proto.toJSON = function toJSON3() {
    return Array.from(this);
  };
  _proto.toString = function toString2() {
    return "[object ObservableSet]";
  };
  _proto[_Symbol$iterator$1] = function() {
    return this.values();
  };
  _createClass(ObservableSet2, [{
    key: "size",
    get: function get6() {
      this.atom_.reportObserved();
      return this.data_.size;
    }
  }, {
    key: _Symbol$toStringTag$1,
    get: function get6() {
      return "Set";
    }
  }]);
  return ObservableSet2;
}();
var isObservableSet = /* @__PURE__ */ createInstanceofPredicate("ObservableSet", ObservableSet);
var descriptorCache = /* @__PURE__ */ Object.create(null);
var REMOVE = "remove";
var ObservableObjectAdministration = /* @__PURE__ */ function() {
  function ObservableObjectAdministration2(target_, values_, name_, defaultAnnotation_) {
    if (values_ === void 0) {
      values_ = new Map();
    }
    if (defaultAnnotation_ === void 0) {
      defaultAnnotation_ = autoAnnotation;
    }
    this.target_ = void 0;
    this.values_ = void 0;
    this.name_ = void 0;
    this.defaultAnnotation_ = void 0;
    this.keysAtom_ = void 0;
    this.changeListeners_ = void 0;
    this.interceptors_ = void 0;
    this.proxy_ = void 0;
    this.isPlainObject_ = void 0;
    this.appliedAnnotations_ = void 0;
    this.pendingKeys_ = void 0;
    this.target_ = target_;
    this.values_ = values_;
    this.name_ = name_;
    this.defaultAnnotation_ = defaultAnnotation_;
    this.keysAtom_ = new Atom("ObservableObject.keys");
    this.isPlainObject_ = isPlainObject$1(this.target_);
  }
  var _proto = ObservableObjectAdministration2.prototype;
  _proto.getObservablePropValue_ = function getObservablePropValue_(key) {
    return this.values_.get(key).get();
  };
  _proto.setObservablePropValue_ = function setObservablePropValue_(key, newValue) {
    var observable2 = this.values_.get(key);
    if (observable2 instanceof ComputedValue) {
      observable2.set(newValue);
      return true;
    }
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: UPDATE,
        object: this.proxy_ || this.target_,
        name: key,
        newValue
      });
      if (!change)
        return null;
      newValue = change.newValue;
    }
    newValue = observable2.prepareNewValue_(newValue);
    if (newValue !== globalState.UNCHANGED) {
      var notify = hasListeners(this);
      var notifySpy = false;
      var _change = notify || notifySpy ? {
        type: UPDATE,
        observableKind: "object",
        debugObjectName: this.name_,
        object: this.proxy_ || this.target_,
        oldValue: observable2.value_,
        name: key,
        newValue
      } : null;
      observable2.setNewValue_(newValue);
      if (notify)
        notifyListeners(this, _change);
    }
    return true;
  };
  _proto.get_ = function get_(key) {
    if (globalState.trackingDerivation && !hasProp(this.target_, key)) {
      this.has_(key);
    }
    return this.target_[key];
  };
  _proto.set_ = function set_(key, value, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    if (hasProp(this.target_, key)) {
      if (this.values_.has(key)) {
        return this.setObservablePropValue_(key, value);
      } else if (proxyTrap) {
        return Reflect.set(this.target_, key, value);
      } else {
        this.target_[key] = value;
        return true;
      }
    } else {
      return this.extend_(key, {
        value,
        enumerable: true,
        writable: true,
        configurable: true
      }, this.defaultAnnotation_, proxyTrap);
    }
  };
  _proto.has_ = function has_(key) {
    if (!globalState.trackingDerivation) {
      return key in this.target_;
    }
    this.pendingKeys_ || (this.pendingKeys_ = new Map());
    var entry = this.pendingKeys_.get(key);
    if (!entry) {
      entry = new ObservableValue(key in this.target_, referenceEnhancer, "ObservableObject.key?", false);
      this.pendingKeys_.set(key, entry);
    }
    return entry.get();
  };
  _proto.make_ = function make_(key, annotation) {
    if (annotation === true) {
      annotation = this.defaultAnnotation_;
    }
    if (annotation === false) {
      return;
    }
    if (!(key in this.target_)) {
      var _this$target_$storedA;
      if ((_this$target_$storedA = this.target_[storedAnnotationsSymbol]) == null ? void 0 : _this$target_$storedA[key]) {
        return;
      } else {
        die(1, annotation.annotationType_, this.name_ + "." + key.toString());
      }
    }
    var source = this.target_;
    while (source && source !== objectPrototype) {
      var descriptor = getDescriptor(source, key);
      if (descriptor) {
        var outcome = annotation.make_(this, key, descriptor, source);
        if (outcome === 0)
          return;
        if (outcome === 1)
          break;
      }
      source = Object.getPrototypeOf(source);
    }
    recordAnnotationApplied(this, annotation, key);
  };
  _proto.extend_ = function extend_(key, descriptor, annotation, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    if (annotation === true) {
      annotation = this.defaultAnnotation_;
    }
    if (annotation === false) {
      return this.defineProperty_(key, descriptor, proxyTrap);
    }
    var outcome = annotation.extend_(this, key, descriptor, proxyTrap);
    if (outcome) {
      recordAnnotationApplied(this, annotation, key);
    }
    return outcome;
  };
  _proto.defineProperty_ = function defineProperty_(key, descriptor, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    try {
      startBatch();
      var deleteOutcome = this.delete_(key);
      if (!deleteOutcome) {
        return deleteOutcome;
      }
      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          object: this.proxy_ || this.target_,
          name: key,
          type: ADD,
          newValue: descriptor.value
        });
        if (!change)
          return null;
        var newValue = change.newValue;
        if (descriptor.value !== newValue) {
          descriptor = _extends({}, descriptor, {
            value: newValue
          });
        }
      }
      if (proxyTrap) {
        if (!Reflect.defineProperty(this.target_, key, descriptor)) {
          return false;
        }
      } else {
        defineProperty$1(this.target_, key, descriptor);
      }
      this.notifyPropertyAddition_(key, descriptor.value);
    } finally {
      endBatch();
    }
    return true;
  };
  _proto.defineObservableProperty_ = function defineObservableProperty_(key, value, enhancer, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    try {
      startBatch();
      var deleteOutcome = this.delete_(key);
      if (!deleteOutcome) {
        return deleteOutcome;
      }
      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          object: this.proxy_ || this.target_,
          name: key,
          type: ADD,
          newValue: value
        });
        if (!change)
          return null;
        value = change.newValue;
      }
      var cachedDescriptor = getCachedObservablePropDescriptor(key);
      var descriptor = {
        configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,
        enumerable: true,
        get: cachedDescriptor.get,
        set: cachedDescriptor.set
      };
      if (proxyTrap) {
        if (!Reflect.defineProperty(this.target_, key, descriptor)) {
          return false;
        }
      } else {
        defineProperty$1(this.target_, key, descriptor);
      }
      var observable2 = new ObservableValue(value, enhancer, false ? this.name_ + "." + key.toString() : "ObservableObject.key", false);
      this.values_.set(key, observable2);
      this.notifyPropertyAddition_(key, observable2.value_);
    } finally {
      endBatch();
    }
    return true;
  };
  _proto.defineComputedProperty_ = function defineComputedProperty_(key, options, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    try {
      startBatch();
      var deleteOutcome = this.delete_(key);
      if (!deleteOutcome) {
        return deleteOutcome;
      }
      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          object: this.proxy_ || this.target_,
          name: key,
          type: ADD,
          newValue: void 0
        });
        if (!change)
          return null;
      }
      options.name || (options.name = false ? this.name_ + "." + key.toString() : "ObservableObject.key");
      options.context = this.proxy_ || this.target_;
      var cachedDescriptor = getCachedObservablePropDescriptor(key);
      var descriptor = {
        configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,
        enumerable: false,
        get: cachedDescriptor.get,
        set: cachedDescriptor.set
      };
      if (proxyTrap) {
        if (!Reflect.defineProperty(this.target_, key, descriptor)) {
          return false;
        }
      } else {
        defineProperty$1(this.target_, key, descriptor);
      }
      this.values_.set(key, new ComputedValue(options));
      this.notifyPropertyAddition_(key, void 0);
    } finally {
      endBatch();
    }
    return true;
  };
  _proto.delete_ = function delete_(key, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    if (!hasProp(this.target_, key)) {
      return true;
    }
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        object: this.proxy_ || this.target_,
        name: key,
        type: REMOVE
      });
      if (!change)
        return null;
    }
    try {
      var _this$pendingKeys_, _this$pendingKeys_$ge;
      startBatch();
      var notify = hasListeners(this);
      var notifySpy = false;
      var observable2 = this.values_.get(key);
      var value = void 0;
      if (!observable2 && (notify || notifySpy)) {
        var _getDescriptor2;
        value = (_getDescriptor2 = getDescriptor(this.target_, key)) == null ? void 0 : _getDescriptor2.value;
      }
      if (proxyTrap) {
        if (!Reflect.deleteProperty(this.target_, key)) {
          return false;
        }
      } else {
        delete this.target_[key];
      }
      if (false)
        ;
      if (observable2) {
        this.values_["delete"](key);
        if (observable2 instanceof ObservableValue) {
          value = observable2.value_;
        }
        propagateChanged(observable2);
      }
      this.keysAtom_.reportChanged();
      (_this$pendingKeys_ = this.pendingKeys_) == null ? void 0 : (_this$pendingKeys_$ge = _this$pendingKeys_.get(key)) == null ? void 0 : _this$pendingKeys_$ge.set(key in this.target_);
      if (notify || notifySpy) {
        var _change2 = {
          type: REMOVE,
          observableKind: "object",
          object: this.proxy_ || this.target_,
          debugObjectName: this.name_,
          oldValue: value,
          name: key
        };
        if (false)
          ;
        if (notify)
          notifyListeners(this, _change2);
        if (false)
          ;
      }
    } finally {
      endBatch();
    }
    return true;
  };
  _proto.observe_ = function observe_(callback, fireImmediately) {
    return registerListener(this, callback);
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _proto.notifyPropertyAddition_ = function notifyPropertyAddition_(key, value) {
    var _this$pendingKeys_2, _this$pendingKeys_2$g;
    var notify = hasListeners(this);
    var notifySpy = false;
    if (notify || notifySpy) {
      var change = notify || notifySpy ? {
        type: ADD,
        observableKind: "object",
        debugObjectName: this.name_,
        object: this.proxy_ || this.target_,
        name: key,
        newValue: value
      } : null;
      if (notify)
        notifyListeners(this, change);
    }
    (_this$pendingKeys_2 = this.pendingKeys_) == null ? void 0 : (_this$pendingKeys_2$g = _this$pendingKeys_2.get(key)) == null ? void 0 : _this$pendingKeys_2$g.set(true);
    this.keysAtom_.reportChanged();
  };
  _proto.ownKeys_ = function ownKeys_() {
    this.keysAtom_.reportObserved();
    return ownKeys(this.target_);
  };
  _proto.keys_ = function keys_() {
    this.keysAtom_.reportObserved();
    return Object.keys(this.target_);
  };
  return ObservableObjectAdministration2;
}();
function asObservableObject(target, options) {
  var _options$name;
  if (hasProp(target, $mobx)) {
    return target;
  }
  var name = (_options$name = options == null ? void 0 : options.name) != null ? _options$name : "ObservableObject";
  var adm = new ObservableObjectAdministration(target, new Map(), String(name), getAnnotationFromOptions(options));
  addHiddenProp(target, $mobx, adm);
  return target;
}
var isObservableObjectAdministration = /* @__PURE__ */ createInstanceofPredicate("ObservableObjectAdministration", ObservableObjectAdministration);
function getCachedObservablePropDescriptor(key) {
  return descriptorCache[key] || (descriptorCache[key] = {
    get: function get6() {
      return this[$mobx].getObservablePropValue_(key);
    },
    set: function set7(value) {
      return this[$mobx].setObservablePropValue_(key, value);
    }
  });
}
function isObservableObject(thing) {
  if (isObject(thing)) {
    return isObservableObjectAdministration(thing[$mobx]);
  }
  return false;
}
function recordAnnotationApplied(adm, annotation, key) {
  var _adm$target_$storedAn;
  (_adm$target_$storedAn = adm.target_[storedAnnotationsSymbol]) == null ? true : delete _adm$target_$storedAn[key];
}
var OBSERVABLE_ARRAY_BUFFER_SIZE = 0;
var StubArray = function StubArray2() {
};
function inherit(ctor, proto) {
  if (Object.setPrototypeOf) {
    Object.setPrototypeOf(ctor.prototype, proto);
  } else if (ctor.prototype.__proto__ !== void 0) {
    ctor.prototype.__proto__ = proto;
  } else {
    ctor.prototype = proto;
  }
}
inherit(StubArray, Array.prototype);
var LegacyObservableArray = /* @__PURE__ */ function(_StubArray) {
  _inheritsLoose(LegacyObservableArray2, _StubArray);
  function LegacyObservableArray2(initialValues, enhancer, name, owned) {
    var _this;
    if (name === void 0) {
      name = "ObservableArray";
    }
    if (owned === void 0) {
      owned = false;
    }
    _this = _StubArray.call(this) || this;
    var adm = new ObservableArrayAdministration(name, enhancer, owned, true);
    adm.proxy_ = _assertThisInitialized(_this);
    addHiddenFinalProp$1(_assertThisInitialized(_this), $mobx, adm);
    if (initialValues && initialValues.length) {
      var prev2 = allowStateChangesStart(true);
      _this.spliceWithArray(0, 0, initialValues);
      allowStateChangesEnd(prev2);
    }
    return _this;
  }
  var _proto = LegacyObservableArray2.prototype;
  _proto.concat = function concat() {
    this[$mobx].atom_.reportObserved();
    for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {
      arrays[_key] = arguments[_key];
    }
    return Array.prototype.concat.apply(this.slice(), arrays.map(function(a2) {
      return isObservableArray(a2) ? a2.slice() : a2;
    }));
  };
  _proto[Symbol.iterator] = function() {
    var self2 = this;
    var nextIndex = 0;
    return makeIterable({
      next: function next2() {
        return nextIndex < self2.length ? {
          value: self2[nextIndex++],
          done: false
        } : {
          done: true,
          value: void 0
        };
      }
    });
  };
  _createClass(LegacyObservableArray2, [{
    key: "length",
    get: function get6() {
      return this[$mobx].getArrayLength_();
    },
    set: function set7(newLength) {
      this[$mobx].setArrayLength_(newLength);
    }
  }, {
    key: Symbol.toStringTag,
    get: function get6() {
      return "Array";
    }
  }]);
  return LegacyObservableArray2;
}(StubArray);
Object.entries(arrayExtensions).forEach(function(_ref) {
  var prop2 = _ref[0], fn = _ref[1];
  if (prop2 !== "concat")
    addHiddenProp(LegacyObservableArray.prototype, prop2, fn);
});
function createArrayEntryDescriptor(index) {
  return {
    enumerable: false,
    configurable: true,
    get: function get6() {
      return this[$mobx].get_(index);
    },
    set: function set7(value) {
      this[$mobx].set_(index, value);
    }
  };
}
function createArrayBufferItem(index) {
  defineProperty$1(LegacyObservableArray.prototype, "" + index, createArrayEntryDescriptor(index));
}
function reserveArrayBuffer(max) {
  if (max > OBSERVABLE_ARRAY_BUFFER_SIZE) {
    for (var index = OBSERVABLE_ARRAY_BUFFER_SIZE; index < max + 100; index++) {
      createArrayBufferItem(index);
    }
    OBSERVABLE_ARRAY_BUFFER_SIZE = max;
  }
}
reserveArrayBuffer(1e3);
function createLegacyArray(initialValues, enhancer, name) {
  return new LegacyObservableArray(initialValues, enhancer, name);
}
function getAtom(thing, property) {
  if (typeof thing === "object" && thing !== null) {
    if (isObservableArray(thing)) {
      if (property !== void 0)
        die(23);
      return thing[$mobx].atom_;
    }
    if (isObservableSet(thing)) {
      return thing[$mobx];
    }
    if (isObservableMap(thing)) {
      if (property === void 0)
        return thing.keysAtom_;
      var observable2 = thing.data_.get(property) || thing.hasMap_.get(property);
      if (!observable2)
        die(25, property, getDebugName(thing));
      return observable2;
    }
    if (isObservableObject(thing)) {
      if (!property)
        return die(26);
      var _observable = thing[$mobx].values_.get(property);
      if (!_observable)
        die(27, property, getDebugName(thing));
      return _observable;
    }
    if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {
      return thing;
    }
  } else if (isFunction(thing)) {
    if (isReaction(thing[$mobx])) {
      return thing[$mobx];
    }
  }
  die(28);
}
function getAdministration(thing, property) {
  if (!thing)
    die(29);
  if (property !== void 0)
    return getAdministration(getAtom(thing, property));
  if (isAtom(thing) || isComputedValue(thing) || isReaction(thing))
    return thing;
  if (isObservableMap(thing) || isObservableSet(thing))
    return thing;
  if (thing[$mobx])
    return thing[$mobx];
  die(24, thing);
}
function getDebugName(thing, property) {
  var named;
  if (property !== void 0) {
    named = getAtom(thing, property);
  } else if (isAction(thing)) {
    return thing.name;
  } else if (isObservableObject(thing) || isObservableMap(thing) || isObservableSet(thing)) {
    named = getAdministration(thing);
  } else {
    named = getAtom(thing);
  }
  return named.name_;
}
var toString = objectPrototype.toString;
function deepEqual(a2, b2, depth) {
  if (depth === void 0) {
    depth = -1;
  }
  return eq(a2, b2, depth);
}
function eq(a2, b2, depth, aStack, bStack) {
  if (a2 === b2)
    return a2 !== 0 || 1 / a2 === 1 / b2;
  if (a2 == null || b2 == null)
    return false;
  if (a2 !== a2)
    return b2 !== b2;
  var type = typeof a2;
  if (!isFunction(type) && type !== "object" && typeof b2 != "object")
    return false;
  var className = toString.call(a2);
  if (className !== toString.call(b2))
    return false;
  switch (className) {
    case "[object RegExp]":
    case "[object String]":
      return "" + a2 === "" + b2;
    case "[object Number]":
      if (+a2 !== +a2)
        return +b2 !== +b2;
      return +a2 === 0 ? 1 / +a2 === 1 / b2 : +a2 === +b2;
    case "[object Date]":
    case "[object Boolean]":
      return +a2 === +b2;
    case "[object Symbol]":
      return typeof Symbol !== "undefined" && Symbol.valueOf.call(a2) === Symbol.valueOf.call(b2);
    case "[object Map]":
    case "[object Set]":
      if (depth >= 0) {
        depth++;
      }
      break;
  }
  a2 = unwrap(a2);
  b2 = unwrap(b2);
  var areArrays = className === "[object Array]";
  if (!areArrays) {
    if (typeof a2 != "object" || typeof b2 != "object")
      return false;
    var aCtor = a2.constructor, bCtor = b2.constructor;
    if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor && isFunction(bCtor) && bCtor instanceof bCtor) && "constructor" in a2 && "constructor" in b2) {
      return false;
    }
  }
  if (depth === 0) {
    return false;
  } else if (depth < 0) {
    depth = -1;
  }
  aStack = aStack || [];
  bStack = bStack || [];
  var length2 = aStack.length;
  while (length2--) {
    if (aStack[length2] === a2)
      return bStack[length2] === b2;
  }
  aStack.push(a2);
  bStack.push(b2);
  if (areArrays) {
    length2 = a2.length;
    if (length2 !== b2.length)
      return false;
    while (length2--) {
      if (!eq(a2[length2], b2[length2], depth - 1, aStack, bStack))
        return false;
    }
  } else {
    var keys2 = Object.keys(a2);
    var key;
    length2 = keys2.length;
    if (Object.keys(b2).length !== length2)
      return false;
    while (length2--) {
      key = keys2[length2];
      if (!(hasProp(b2, key) && eq(a2[key], b2[key], depth - 1, aStack, bStack)))
        return false;
    }
  }
  aStack.pop();
  bStack.pop();
  return true;
}
function unwrap(a2) {
  if (isObservableArray(a2))
    return a2.slice();
  if (isES6Map(a2) || isObservableMap(a2))
    return Array.from(a2.entries());
  if (isES6Set(a2) || isObservableSet(a2))
    return Array.from(a2.entries());
  return a2;
}
function makeIterable(iterator) {
  iterator[Symbol.iterator] = getSelf;
  return iterator;
}
function getSelf() {
  return this;
}
["Symbol", "Map", "Set"].forEach(function(m2) {
  var g2 = getGlobal();
  if (typeof g2[m2] === "undefined") {
    die("MobX requires global '" + m2 + "' to be available or polyfilled");
  }
});
if (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === "object") {
  __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({
    spy,
    extras: {
      getDebugName
    },
    $mobx
  });
}
var livelinessChecking = "warn";
function getLivelinessChecking() {
  return livelinessChecking;
}
var Hook;
(function(Hook2) {
  Hook2["afterCreate"] = "afterCreate";
  Hook2["afterAttach"] = "afterAttach";
  Hook2["afterCreationFinalization"] = "afterCreationFinalization";
  Hook2["beforeDetach"] = "beforeDetach";
  Hook2["beforeDestroy"] = "beforeDestroy";
})(Hook || (Hook = {}));
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
var extendStatics = function(d2, b2) {
  extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d3, b3) {
    d3.__proto__ = b3;
  } || function(d3, b3) {
    for (var p2 in b3)
      if (Object.prototype.hasOwnProperty.call(b3, p2))
        d3[p2] = b3[p2];
  };
  return extendStatics(d2, b2);
};
function __extends(d2, b2) {
  if (typeof b2 !== "function" && b2 !== null)
    throw new TypeError("Class extends value " + String(b2) + " is not a constructor or null");
  extendStatics(d2, b2);
  function __() {
    this.constructor = d2;
  }
  d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
}
var __assign$1 = function() {
  __assign$1 = Object.assign || function __assign2(t2) {
    for (var s, i = 1, n2 = arguments.length; i < n2; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t2[p2] = s[p2];
    }
    return t2;
  };
  return __assign$1.apply(this, arguments);
};
function __rest(s, e2) {
  var t2 = {};
  for (var p2 in s)
    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)
      t2[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t2[p2[i]] = s[p2[i]];
    }
  return t2;
}
function __values$1(o2) {
  var s = typeof Symbol === "function" && Symbol.iterator, m2 = s && o2[s], i = 0;
  if (m2)
    return m2.call(o2);
  if (o2 && typeof o2.length === "number")
    return {
      next: function() {
        if (o2 && i >= o2.length)
          o2 = void 0;
        return { value: o2 && o2[i++], done: !o2 };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read$1(o2, n2) {
  var m2 = typeof Symbol === "function" && o2[Symbol.iterator];
  if (!m2)
    return o2;
  var i = m2.call(o2), r2, ar = [], e2;
  try {
    while ((n2 === void 0 || n2-- > 0) && !(r2 = i.next()).done)
      ar.push(r2.value);
  } catch (error) {
    e2 = { error };
  } finally {
    try {
      if (r2 && !r2.done && (m2 = i["return"]))
        m2.call(i);
    } finally {
      if (e2)
        throw e2.error;
    }
  }
  return ar;
}
function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++)
    ar = ar.concat(__read$1(arguments[i]));
  return ar;
}
function getType(object2) {
  return getStateTreeNode(object2).type;
}
function onSnapshot(target, callback) {
  return getStateTreeNode(target).onSnapshot(callback);
}
function applyPatch(target, patch) {
  getStateTreeNode(target).applyPatches(asArray(patch));
}
function unprotect(target) {
  var node2 = getStateTreeNode(target);
  if (!node2.isRoot)
    throw fail$1("`unprotect` can only be invoked on root nodes");
  node2.isProtectionEnabled = false;
}
function getSnapshot(target, applyPostProcess) {
  if (applyPostProcess === void 0) {
    applyPostProcess = true;
  }
  var node2 = getStateTreeNode(target);
  if (applyPostProcess)
    return node2.snapshot;
  return freeze(node2.type.getSnapshot(node2, false));
}
function getRoot(target) {
  return getStateTreeNode(target).root.storedValue;
}
function getPath(target) {
  return getStateTreeNode(target).path;
}
function getIdentifier(target) {
  return getStateTreeNode(target).identifier;
}
var BaseNode = function() {
  function BaseNode2(type, parent, subpath, environment) {
    Object.defineProperty(this, "type", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: type
    });
    Object.defineProperty(this, "environment", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: environment
    });
    Object.defineProperty(this, "_escapedSubpath", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "_subpath", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "_subpathUponDeath", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "_pathUponDeath", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "storedValue", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "aliveAtom", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "_state", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: NodeLifeCycle.INITIALIZING
    });
    Object.defineProperty(this, "_hookSubscribers", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "_parent", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "pathAtom", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    this.environment = environment;
    this.baseSetParent(parent, subpath);
  }
  Object.defineProperty(BaseNode2.prototype, "subpath", {
    get: function() {
      return this._subpath;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BaseNode2.prototype, "subpathUponDeath", {
    get: function() {
      return this._subpathUponDeath;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BaseNode2.prototype, "pathUponDeath", {
    get: function() {
      return this._pathUponDeath;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BaseNode2.prototype, "value", {
    get: function() {
      return this.type.getValue(this);
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BaseNode2.prototype, "state", {
    get: function() {
      return this._state;
    },
    set: function(val) {
      var wasAlive = this.isAlive;
      this._state = val;
      var isAlive = this.isAlive;
      if (this.aliveAtom && wasAlive !== isAlive) {
        this.aliveAtom.reportChanged();
      }
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BaseNode2.prototype, "fireInternalHook", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(name) {
      if (this._hookSubscribers) {
        this._hookSubscribers.emit(name, this, name);
      }
    }
  });
  Object.defineProperty(BaseNode2.prototype, "registerHook", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(hook, hookHandler) {
      if (!this._hookSubscribers) {
        this._hookSubscribers = new EventHandlers();
      }
      return this._hookSubscribers.register(hook, hookHandler);
    }
  });
  Object.defineProperty(BaseNode2.prototype, "parent", {
    get: function() {
      return this._parent;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BaseNode2.prototype, "getReconciliationType", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return this.type;
    }
  });
  Object.defineProperty(BaseNode2.prototype, "baseSetParent", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(parent, subpath) {
      this._parent = parent;
      this._subpath = subpath;
      this._escapedSubpath = void 0;
      if (this.pathAtom) {
        this.pathAtom.reportChanged();
      }
    }
  });
  Object.defineProperty(BaseNode2.prototype, "path", {
    get: function() {
      return this.getEscapedPath(true);
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BaseNode2.prototype, "getEscapedPath", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(reportObserved2) {
      if (reportObserved2) {
        if (!this.pathAtom) {
          this.pathAtom = createAtom("path");
        }
        this.pathAtom.reportObserved();
      }
      if (!this.parent)
        return "";
      if (this._escapedSubpath === void 0) {
        this._escapedSubpath = !this._subpath ? "" : escapeJsonPath(this._subpath);
      }
      return this.parent.getEscapedPath(reportObserved2) + "/" + this._escapedSubpath;
    }
  });
  Object.defineProperty(BaseNode2.prototype, "isRoot", {
    get: function() {
      return this.parent === null;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BaseNode2.prototype, "isAlive", {
    get: function() {
      return this.state !== NodeLifeCycle.DEAD;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BaseNode2.prototype, "isDetaching", {
    get: function() {
      return this.state === NodeLifeCycle.DETACHING;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BaseNode2.prototype, "observableIsAlive", {
    get: function() {
      if (!this.aliveAtom) {
        this.aliveAtom = createAtom("alive");
      }
      this.aliveAtom.reportObserved();
      return this.isAlive;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BaseNode2.prototype, "baseFinalizeCreation", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(whenFinalized) {
      if (this.state === NodeLifeCycle.CREATED) {
        if (this.parent) {
          if (this.parent.state !== NodeLifeCycle.FINALIZED) {
            return;
          }
          this.fireHook(Hook.afterAttach);
        }
        this.state = NodeLifeCycle.FINALIZED;
        if (whenFinalized) {
          whenFinalized();
        }
      }
    }
  });
  Object.defineProperty(BaseNode2.prototype, "baseFinalizeDeath", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      if (this._hookSubscribers) {
        this._hookSubscribers.clearAll();
      }
      this._subpathUponDeath = this._subpath;
      this._pathUponDeath = this.getEscapedPath(false);
      this.baseSetParent(null, "");
      this.state = NodeLifeCycle.DEAD;
    }
  });
  Object.defineProperty(BaseNode2.prototype, "baseAboutToDie", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      this.fireHook(Hook.beforeDestroy);
    }
  });
  return BaseNode2;
}();
var ScalarNode = function(_super) {
  __extends(ScalarNode2, _super);
  function ScalarNode2(simpleType, parent, subpath, environment, initialSnapshot) {
    var _this = _super.call(this, simpleType, parent, subpath, environment) || this;
    try {
      _this.storedValue = simpleType.createNewInstance(initialSnapshot);
    } catch (e2) {
      _this.state = NodeLifeCycle.DEAD;
      throw e2;
    }
    _this.state = NodeLifeCycle.CREATED;
    _this.finalizeCreation();
    return _this;
  }
  Object.defineProperty(ScalarNode2.prototype, "root", {
    get: function() {
      if (!this.parent)
        throw fail$1("This scalar node is not part of a tree");
      return this.parent.root;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ScalarNode2.prototype, "setParent", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(newParent, subpath) {
      var parentChanged = this.parent !== newParent;
      var subpathChanged = this.subpath !== subpath;
      if (!parentChanged && !subpathChanged) {
        return;
      }
      this.environment = void 0;
      this.baseSetParent(this.parent, subpath);
    }
  });
  Object.defineProperty(ScalarNode2.prototype, "snapshot", {
    get: function() {
      return freeze(this.getSnapshot());
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ScalarNode2.prototype, "getSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return this.type.getSnapshot(this);
    }
  });
  Object.defineProperty(ScalarNode2.prototype, "toString", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      var path = (this.isAlive ? this.path : this.pathUponDeath) || "<root>";
      return this.type.name + "@" + path + (this.isAlive ? "" : " [dead]");
    }
  });
  Object.defineProperty(ScalarNode2.prototype, "die", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      if (!this.isAlive || this.state === NodeLifeCycle.DETACHING)
        return;
      this.aboutToDie();
      this.finalizeDeath();
    }
  });
  Object.defineProperty(ScalarNode2.prototype, "finalizeCreation", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      this.baseFinalizeCreation();
    }
  });
  Object.defineProperty(ScalarNode2.prototype, "aboutToDie", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      this.baseAboutToDie();
    }
  });
  Object.defineProperty(ScalarNode2.prototype, "finalizeDeath", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      this.baseFinalizeDeath();
    }
  });
  Object.defineProperty(ScalarNode2.prototype, "fireHook", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(name) {
      this.fireInternalHook(name);
    }
  });
  return ScalarNode2;
}(BaseNode);
ScalarNode.prototype.die = action(ScalarNode.prototype.die);
var nextNodeId = 1;
var snapshotReactionOptions = {
  onError: function(e2) {
    throw e2;
  }
};
var ObjectNode = function(_super) {
  __extends(ObjectNode2, _super);
  function ObjectNode2(complexType, parent, subpath, environment, initialValue) {
    var _this = _super.call(this, complexType, parent, subpath, environment) || this;
    Object.defineProperty(_this, "nodeId", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: ++nextNodeId
    });
    Object.defineProperty(_this, "identifierAttribute", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "identifier", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "unnormalizedIdentifier", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "identifierCache", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "isProtectionEnabled", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: true
    });
    Object.defineProperty(_this, "middlewares", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "_applyPatches", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "_applySnapshot", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "_autoUnbox", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: true
    });
    Object.defineProperty(_this, "_isRunningAction", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: false
    });
    Object.defineProperty(_this, "_hasSnapshotReaction", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: false
    });
    Object.defineProperty(_this, "_observableInstanceState", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: 0
    });
    Object.defineProperty(_this, "_childNodes", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "_initialSnapshot", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "_cachedInitialSnapshot", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "_cachedInitialSnapshotCreated", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: false
    });
    Object.defineProperty(_this, "_snapshotComputed", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "_snapshotUponDeath", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "_internalEvents", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    _this._snapshotComputed = computed(function() {
      return freeze(_this.getSnapshot());
    });
    _this.unbox = _this.unbox.bind(_this);
    _this._initialSnapshot = freeze(initialValue);
    _this.identifierAttribute = complexType.identifierAttribute;
    if (!parent) {
      _this.identifierCache = new IdentifierCache();
    }
    _this._childNodes = complexType.initializeChildNodes(_this, _this._initialSnapshot);
    _this.identifier = null;
    _this.unnormalizedIdentifier = null;
    if (_this.identifierAttribute && _this._initialSnapshot) {
      var id2 = _this._initialSnapshot[_this.identifierAttribute];
      if (id2 === void 0) {
        var childNode = _this._childNodes[_this.identifierAttribute];
        if (childNode) {
          id2 = childNode.value;
        }
      }
      if (typeof id2 !== "string" && typeof id2 !== "number") {
        throw fail$1("Instance identifier '" + _this.identifierAttribute + "' for type '" + _this.type.name + "' must be a string or a number");
      }
      _this.identifier = normalizeIdentifier(id2);
      _this.unnormalizedIdentifier = id2;
    }
    if (!parent) {
      _this.identifierCache.addNodeToCache(_this);
    } else {
      parent.root.identifierCache.addNodeToCache(_this);
    }
    return _this;
  }
  Object.defineProperty(ObjectNode2.prototype, "applyPatches", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(patches) {
      this.createObservableInstanceIfNeeded();
      this._applyPatches(patches);
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "applySnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(snapshot) {
      this.createObservableInstanceIfNeeded();
      this._applySnapshot(snapshot);
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "createObservableInstanceIfNeeded", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      if (this._observableInstanceState === 0) {
        this.createObservableInstance();
      }
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "createObservableInstance", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      var e_1, _a2;
      this._observableInstanceState = 1;
      var parentChain = [];
      var parent = this.parent;
      while (parent && parent._observableInstanceState === 0) {
        parentChain.unshift(parent);
        parent = parent.parent;
      }
      try {
        for (var parentChain_1 = __values$1(parentChain), parentChain_1_1 = parentChain_1.next(); !parentChain_1_1.done; parentChain_1_1 = parentChain_1.next()) {
          var p2 = parentChain_1_1.value;
          p2.createObservableInstanceIfNeeded();
        }
      } catch (e_1_1) {
        e_1 = { error: e_1_1 };
      } finally {
        try {
          if (parentChain_1_1 && !parentChain_1_1.done && (_a2 = parentChain_1.return))
            _a2.call(parentChain_1);
        } finally {
          if (e_1)
            throw e_1.error;
        }
      }
      var type = this.type;
      try {
        this.storedValue = type.createNewInstance(this._childNodes);
        this.preboot();
        this._isRunningAction = true;
        type.finalizeNewInstance(this, this.storedValue);
      } catch (e2) {
        this.state = NodeLifeCycle.DEAD;
        throw e2;
      } finally {
        this._isRunningAction = false;
      }
      this._observableInstanceState = 2;
      this._snapshotComputed.trackAndCompute();
      if (this.isRoot)
        this._addSnapshotReaction();
      this._childNodes = EMPTY_OBJECT;
      this.state = NodeLifeCycle.CREATED;
      this.fireHook(Hook.afterCreate);
      this.finalizeCreation();
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "root", {
    get: function() {
      var parent = this.parent;
      return parent ? parent.root : this;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ObjectNode2.prototype, "clearParent", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      if (!this.parent)
        return;
      this.fireHook(Hook.beforeDetach);
      var previousState = this.state;
      this.state = NodeLifeCycle.DETACHING;
      var root2 = this.root;
      var newEnv = root2.environment;
      var newIdCache = root2.identifierCache.splitCache(this);
      try {
        this.parent.removeChild(this.subpath);
        this.baseSetParent(null, "");
        this.environment = newEnv;
        this.identifierCache = newIdCache;
      } finally {
        this.state = previousState;
      }
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "setParent", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(newParent, subpath) {
      var parentChanged = newParent !== this.parent;
      var subpathChanged = subpath !== this.subpath;
      if (!parentChanged && !subpathChanged) {
        return;
      }
      if (parentChanged) {
        this.environment = void 0;
        newParent.root.identifierCache.mergeCache(this);
        this.baseSetParent(newParent, subpath);
        this.fireHook(Hook.afterAttach);
      } else if (subpathChanged) {
        this.baseSetParent(this.parent, subpath);
      }
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "fireHook", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(name) {
      var _this = this;
      this.fireInternalHook(name);
      var fn = this.storedValue && typeof this.storedValue === "object" && this.storedValue[name];
      if (typeof fn === "function") {
        if (runInAction) {
          runInAction(function() {
            fn.apply(_this.storedValue);
          });
        } else {
          fn.apply(this.storedValue);
        }
      }
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "snapshot", {
    get: function() {
      return this._snapshotComputed.get();
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ObjectNode2.prototype, "getSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      if (!this.isAlive)
        return this._snapshotUponDeath;
      return this._observableInstanceState === 2 ? this._getActualSnapshot() : this._getCachedInitialSnapshot();
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "_getActualSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return this.type.getSnapshot(this);
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "_getCachedInitialSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      if (!this._cachedInitialSnapshotCreated) {
        var type = this.type;
        var childNodes = this._childNodes;
        var snapshot = this._initialSnapshot;
        this._cachedInitialSnapshot = type.processInitialSnapshot(childNodes, snapshot);
        this._cachedInitialSnapshotCreated = true;
      }
      return this._cachedInitialSnapshot;
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "isRunningAction", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      if (this._isRunningAction)
        return true;
      if (this.isRoot)
        return false;
      return this.parent.isRunningAction();
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "assertAlive", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(context) {
      var livelinessChecking2 = getLivelinessChecking();
      if (!this.isAlive && livelinessChecking2 !== "ignore") {
        var error = this._getAssertAliveError(context);
        switch (livelinessChecking2) {
          case "error":
            throw fail$1(error);
          case "warn":
            warnError(error);
        }
      }
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "_getAssertAliveError", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(context) {
      var escapedPath = this.getEscapedPath(false) || this.pathUponDeath || "";
      var subpath = context.subpath && escapeJsonPath(context.subpath) || "";
      var actionContext = context.actionContext || getCurrentActionContext();
      if (actionContext && actionContext.type !== "action" && actionContext.parentActionEvent) {
        actionContext = actionContext.parentActionEvent;
      }
      var actionFullPath = "";
      if (actionContext && actionContext.name != null) {
        var actionPath = actionContext && actionContext.context && getPath(actionContext.context) || escapedPath;
        actionFullPath = actionPath + "." + actionContext.name + "()";
      }
      return "You are trying to read or write to an object that is no longer part of a state tree. (Object type: '" + this.type.name + "', Path upon death: '" + escapedPath + "', Subpath: '" + subpath + "', Action: '" + actionFullPath + "'). Either detach nodes first, or don't use objects after removing / replacing them in the tree.";
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "getChildNode", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(subpath) {
      this.assertAlive({
        subpath
      });
      this._autoUnbox = false;
      try {
        return this._observableInstanceState === 2 ? this.type.getChildNode(this, subpath) : this._childNodes[subpath];
      } finally {
        this._autoUnbox = true;
      }
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "getChildren", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      this.assertAlive(EMPTY_OBJECT);
      this._autoUnbox = false;
      try {
        return this._observableInstanceState === 2 ? this.type.getChildren(this) : convertChildNodesToArray(this._childNodes);
      } finally {
        this._autoUnbox = true;
      }
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "getChildType", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(propertyName) {
      return this.type.getChildType(propertyName);
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "isProtected", {
    get: function() {
      return this.root.isProtectionEnabled;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ObjectNode2.prototype, "assertWritable", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(context) {
      this.assertAlive(context);
      if (!this.isRunningAction() && this.isProtected) {
        throw fail$1("Cannot modify '" + this + "', the object is protected and can only be modified by using an action.");
      }
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "removeChild", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(subpath) {
      this.type.removeChild(this, subpath);
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "unbox", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(childNode) {
      if (!childNode)
        return childNode;
      this.assertAlive({
        subpath: childNode.subpath || childNode.subpathUponDeath
      });
      return this._autoUnbox ? childNode.value : childNode;
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "toString", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      var path = (this.isAlive ? this.path : this.pathUponDeath) || "<root>";
      var identifier2 = this.identifier ? "(id: " + this.identifier + ")" : "";
      return this.type.name + "@" + path + identifier2 + (this.isAlive ? "" : " [dead]");
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "finalizeCreation", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      var _this = this;
      this.baseFinalizeCreation(function() {
        var e_2, _a2;
        try {
          for (var _b = __values$1(_this.getChildren()), _c = _b.next(); !_c.done; _c = _b.next()) {
            var child = _c.value;
            child.finalizeCreation();
          }
        } catch (e_2_1) {
          e_2 = { error: e_2_1 };
        } finally {
          try {
            if (_c && !_c.done && (_a2 = _b.return))
              _a2.call(_b);
          } finally {
            if (e_2)
              throw e_2.error;
          }
        }
        _this.fireInternalHook(Hook.afterCreationFinalization);
      });
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "detach", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      if (!this.isAlive)
        throw fail$1("Error while detaching, node is not alive.");
      this.clearParent();
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "preboot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      var self2 = this;
      this._applyPatches = createActionInvoker(this.storedValue, "@APPLY_PATCHES", function(patches) {
        patches.forEach(function(patch) {
          if (!patch.path) {
            self2.type.applySnapshot(self2, patch.value);
            return;
          }
          var parts = splitJsonPath(patch.path);
          var node2 = resolveNodeByPathParts(self2, parts.slice(0, -1));
          node2.applyPatchLocally(parts[parts.length - 1], patch);
        });
      });
      this._applySnapshot = createActionInvoker(this.storedValue, "@APPLY_SNAPSHOT", function(snapshot) {
        if (snapshot === self2.snapshot)
          return;
        return self2.type.applySnapshot(self2, snapshot);
      });
      addHiddenFinalProp(this.storedValue, "$treenode", this);
      addHiddenFinalProp(this.storedValue, "toJSON", toJSON2);
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "die", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      if (!this.isAlive || this.state === NodeLifeCycle.DETACHING)
        return;
      this.aboutToDie();
      this.finalizeDeath();
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "aboutToDie", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      if (this._observableInstanceState === 0) {
        return;
      }
      this.getChildren().forEach(function(node2) {
        node2.aboutToDie();
      });
      this.baseAboutToDie();
      this._internalEventsEmit("dispose");
      this._internalEventsClear("dispose");
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "finalizeDeath", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      this.getChildren().forEach(function(node2) {
        node2.finalizeDeath();
      });
      this.root.identifierCache.notifyDied(this);
      var snapshot = this.snapshot;
      this._snapshotUponDeath = snapshot;
      this._internalEventsClearAll();
      this.baseFinalizeDeath();
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "onSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(onChange) {
      this._addSnapshotReaction();
      return this._internalEventsRegister("snapshot", onChange);
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "emitSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(snapshot) {
      this._internalEventsEmit("snapshot", snapshot);
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "onPatch", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(handler) {
      return this._internalEventsRegister("patch", handler);
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "emitPatch", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(basePatch, source) {
      if (this._internalEventsHasSubscribers("patch")) {
        var localizedPatch = extend({}, basePatch, {
          path: source.path.substr(this.path.length) + "/" + basePatch.path
        });
        var _a2 = __read$1(splitPatch(localizedPatch), 2), patch = _a2[0], reversePatch = _a2[1];
        this._internalEventsEmit("patch", patch, reversePatch);
      }
      if (this.parent)
        this.parent.emitPatch(basePatch, source);
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "hasDisposer", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(disposer) {
      return this._internalEventsHas("dispose", disposer);
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "addDisposer", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(disposer) {
      if (!this.hasDisposer(disposer)) {
        this._internalEventsRegister("dispose", disposer, true);
        return;
      }
      throw fail$1("cannot add a disposer when it is already registered for execution");
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "removeDisposer", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(disposer) {
      if (!this._internalEventsHas("dispose", disposer)) {
        throw fail$1("cannot remove a disposer which was never registered for execution");
      }
      this._internalEventsUnregister("dispose", disposer);
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "removeMiddleware", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(middleware2) {
      if (this.middlewares) {
        var index = this.middlewares.indexOf(middleware2);
        if (index >= 0) {
          this.middlewares.splice(index, 1);
        }
      }
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "addMiddleWare", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(handler, includeHooks) {
      var _this = this;
      if (includeHooks === void 0) {
        includeHooks = true;
      }
      var middleware2 = { handler, includeHooks };
      if (!this.middlewares)
        this.middlewares = [middleware2];
      else
        this.middlewares.push(middleware2);
      return function() {
        _this.removeMiddleware(middleware2);
      };
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "applyPatchLocally", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(subpath, patch) {
      this.assertWritable({
        subpath
      });
      this.createObservableInstanceIfNeeded();
      this.type.applyPatchLocally(this, subpath, patch);
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "_addSnapshotReaction", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      var _this = this;
      if (!this._hasSnapshotReaction) {
        var snapshotDisposer = reaction(function() {
          return _this.snapshot;
        }, function(snapshot) {
          return _this.emitSnapshot(snapshot);
        }, snapshotReactionOptions);
        this.addDisposer(snapshotDisposer);
        this._hasSnapshotReaction = true;
      }
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "_internalEventsHasSubscribers", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(event) {
      return !!this._internalEvents && this._internalEvents.hasSubscribers(event);
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "_internalEventsRegister", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(event, eventHandler, atTheBeginning) {
      if (atTheBeginning === void 0) {
        atTheBeginning = false;
      }
      if (!this._internalEvents) {
        this._internalEvents = new EventHandlers();
      }
      return this._internalEvents.register(event, eventHandler, atTheBeginning);
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "_internalEventsHas", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(event, eventHandler) {
      return !!this._internalEvents && this._internalEvents.has(event, eventHandler);
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "_internalEventsUnregister", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(event, eventHandler) {
      if (this._internalEvents) {
        this._internalEvents.unregister(event, eventHandler);
      }
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "_internalEventsEmit", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(event) {
      var _a2;
      var args = [];
      for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
      }
      if (this._internalEvents) {
        (_a2 = this._internalEvents).emit.apply(_a2, __spread([event], args));
      }
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "_internalEventsClear", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(event) {
      if (this._internalEvents) {
        this._internalEvents.clear(event);
      }
    }
  });
  Object.defineProperty(ObjectNode2.prototype, "_internalEventsClearAll", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      if (this._internalEvents) {
        this._internalEvents.clearAll();
      }
    }
  });
  return ObjectNode2;
}(BaseNode);
ObjectNode.prototype.createObservableInstance = action(ObjectNode.prototype.createObservableInstance);
ObjectNode.prototype.detach = action(ObjectNode.prototype.detach);
ObjectNode.prototype.die = action(ObjectNode.prototype.die);
var _a$1;
var TypeFlags;
(function(TypeFlags2) {
  TypeFlags2[TypeFlags2["String"] = 1] = "String";
  TypeFlags2[TypeFlags2["Number"] = 2] = "Number";
  TypeFlags2[TypeFlags2["Boolean"] = 4] = "Boolean";
  TypeFlags2[TypeFlags2["Date"] = 8] = "Date";
  TypeFlags2[TypeFlags2["Literal"] = 16] = "Literal";
  TypeFlags2[TypeFlags2["Array"] = 32] = "Array";
  TypeFlags2[TypeFlags2["Map"] = 64] = "Map";
  TypeFlags2[TypeFlags2["Object"] = 128] = "Object";
  TypeFlags2[TypeFlags2["Frozen"] = 256] = "Frozen";
  TypeFlags2[TypeFlags2["Optional"] = 512] = "Optional";
  TypeFlags2[TypeFlags2["Reference"] = 1024] = "Reference";
  TypeFlags2[TypeFlags2["Identifier"] = 2048] = "Identifier";
  TypeFlags2[TypeFlags2["Late"] = 4096] = "Late";
  TypeFlags2[TypeFlags2["Refinement"] = 8192] = "Refinement";
  TypeFlags2[TypeFlags2["Union"] = 16384] = "Union";
  TypeFlags2[TypeFlags2["Null"] = 32768] = "Null";
  TypeFlags2[TypeFlags2["Undefined"] = 65536] = "Undefined";
  TypeFlags2[TypeFlags2["Integer"] = 131072] = "Integer";
  TypeFlags2[TypeFlags2["Custom"] = 262144] = "Custom";
  TypeFlags2[TypeFlags2["SnapshotProcessor"] = 524288] = "SnapshotProcessor";
})(TypeFlags || (TypeFlags = {}));
var cannotDetermineSubtype = "cannotDetermine";
var $type = Symbol("$type");
var BaseType = function() {
  function BaseType2(name) {
    Object.defineProperty(this, _a$1, {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "C", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "S", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "T", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "N", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "isType", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: true
    });
    Object.defineProperty(this, "name", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    this.name = name;
  }
  Object.defineProperty(BaseType2.prototype, "create", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(snapshot, environment) {
      typecheckInternal(this, snapshot);
      return this.instantiate(null, "", environment, snapshot).value;
    }
  });
  Object.defineProperty(BaseType2.prototype, "getSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2, applyPostProcess) {
      throw fail$1("unimplemented method");
    }
  });
  Object.defineProperty(BaseType2.prototype, "isAssignableFrom", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(type) {
      return type === this;
    }
  });
  Object.defineProperty(BaseType2.prototype, "validate", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(value, context) {
      var node2 = getStateTreeNodeSafe(value);
      if (node2) {
        var valueType = getType(value);
        return this.isAssignableFrom(valueType) ? typeCheckSuccess() : typeCheckFailure(context, value);
      }
      return this.isValidSnapshot(value, context);
    }
  });
  Object.defineProperty(BaseType2.prototype, "is", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(thing) {
      return this.validate(thing, [{ path: "", type: this }]).length === 0;
    }
  });
  Object.defineProperty(BaseType2.prototype, "Type", {
    get: function() {
      throw fail$1("Factory.Type should not be actually called. It is just a Type signature that can be used at compile time with Typescript, by using `typeof type.Type`");
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BaseType2.prototype, "TypeWithoutSTN", {
    get: function() {
      throw fail$1("Factory.TypeWithoutSTN should not be actually called. It is just a Type signature that can be used at compile time with Typescript, by using `typeof type.TypeWithoutSTN`");
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BaseType2.prototype, "SnapshotType", {
    get: function() {
      throw fail$1("Factory.SnapshotType should not be actually called. It is just a Type signature that can be used at compile time with Typescript, by using `typeof type.SnapshotType`");
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BaseType2.prototype, "CreationType", {
    get: function() {
      throw fail$1("Factory.CreationType should not be actually called. It is just a Type signature that can be used at compile time with Typescript, by using `typeof type.CreationType`");
    },
    enumerable: false,
    configurable: true
  });
  return BaseType2;
}();
_a$1 = $type;
BaseType.prototype.create = action(BaseType.prototype.create);
var ComplexType = function(_super) {
  __extends(ComplexType2, _super);
  function ComplexType2(name) {
    var _this = _super.call(this, name) || this;
    Object.defineProperty(_this, "identifierAttribute", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    return _this;
  }
  Object.defineProperty(ComplexType2.prototype, "create", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(snapshot, environment) {
      if (snapshot === void 0) {
        snapshot = this.getDefaultSnapshot();
      }
      return _super.prototype.create.call(this, snapshot, environment);
    }
  });
  Object.defineProperty(ComplexType2.prototype, "getValue", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2) {
      node2.createObservableInstanceIfNeeded();
      return node2.storedValue;
    }
  });
  Object.defineProperty(ComplexType2.prototype, "isMatchingSnapshotId", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(current, snapshot) {
      return !current.identifierAttribute || current.identifier === normalizeIdentifier(snapshot[current.identifierAttribute]);
    }
  });
  Object.defineProperty(ComplexType2.prototype, "tryToReconcileNode", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(current, newValue) {
      if (current.isDetaching)
        return false;
      if (current.snapshot === newValue) {
        return true;
      }
      if (isStateTreeNode(newValue) && getStateTreeNode(newValue) === current) {
        return true;
      }
      if (current.type === this && isMutable(newValue) && !isStateTreeNode(newValue) && this.isMatchingSnapshotId(current, newValue)) {
        current.applySnapshot(newValue);
        return true;
      }
      return false;
    }
  });
  Object.defineProperty(ComplexType2.prototype, "reconcile", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(current, newValue, parent, subpath) {
      var nodeReconciled = this.tryToReconcileNode(current, newValue);
      if (nodeReconciled) {
        current.setParent(parent, subpath);
        return current;
      }
      current.die();
      if (isStateTreeNode(newValue) && this.isAssignableFrom(getType(newValue))) {
        var newNode = getStateTreeNode(newValue);
        newNode.setParent(parent, subpath);
        return newNode;
      }
      return this.instantiate(parent, subpath, void 0, newValue);
    }
  });
  Object.defineProperty(ComplexType2.prototype, "getSubTypes", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return null;
    }
  });
  return ComplexType2;
}(BaseType);
ComplexType.prototype.create = action(ComplexType.prototype.create);
var SimpleType = function(_super) {
  __extends(SimpleType2, _super);
  function SimpleType2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Object.defineProperty(SimpleType2.prototype, "createNewInstance", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(snapshot) {
      return snapshot;
    }
  });
  Object.defineProperty(SimpleType2.prototype, "getValue", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2) {
      return node2.storedValue;
    }
  });
  Object.defineProperty(SimpleType2.prototype, "getSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2) {
      return node2.storedValue;
    }
  });
  Object.defineProperty(SimpleType2.prototype, "reconcile", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(current, newValue, parent, subpath) {
      if (!current.isDetaching && current.type === this && current.storedValue === newValue) {
        return current;
      }
      var res = this.instantiate(parent, subpath, void 0, newValue);
      current.die();
      return res;
    }
  });
  Object.defineProperty(SimpleType2.prototype, "getSubTypes", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return null;
    }
  });
  return SimpleType2;
}(BaseType);
function isType(value) {
  return typeof value === "object" && value && value.isType === true;
}
(function() {
  function RunningAction(hooks, call) {
    Object.defineProperty(this, "hooks", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: hooks
    });
    Object.defineProperty(this, "call", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: call
    });
    Object.defineProperty(this, "flowsPending", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: 0
    });
    Object.defineProperty(this, "running", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: true
    });
    if (hooks) {
      hooks.onStart(call);
    }
  }
  Object.defineProperty(RunningAction.prototype, "finish", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(error) {
      if (this.running) {
        this.running = false;
        if (this.hooks) {
          this.hooks.onFinish(this.call, error);
        }
      }
    }
  });
  Object.defineProperty(RunningAction.prototype, "incFlowsPending", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      this.flowsPending++;
    }
  });
  Object.defineProperty(RunningAction.prototype, "decFlowsPending", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      this.flowsPending--;
    }
  });
  Object.defineProperty(RunningAction.prototype, "hasFlowsPending", {
    get: function() {
      return this.flowsPending > 0;
    },
    enumerable: false,
    configurable: true
  });
  return RunningAction;
})();
var nextActionId = 1;
var currentActionContext;
function getCurrentActionContext() {
  return currentActionContext;
}
function getNextActionId() {
  return nextActionId++;
}
function runWithActionContext(context, fn) {
  var node2 = getStateTreeNode(context.context);
  if (context.type === "action") {
    node2.assertAlive({
      actionContext: context
    });
  }
  var baseIsRunningAction = node2._isRunningAction;
  node2._isRunningAction = true;
  var previousContext = currentActionContext;
  currentActionContext = context;
  try {
    return runMiddleWares(node2, context, fn);
  } finally {
    currentActionContext = previousContext;
    node2._isRunningAction = baseIsRunningAction;
  }
}
function getParentActionContext(parentContext) {
  if (!parentContext)
    return void 0;
  if (parentContext.type === "action")
    return parentContext;
  return parentContext.parentActionEvent;
}
function createActionInvoker(target, name, fn) {
  var res = function() {
    var id2 = getNextActionId();
    var parentContext = currentActionContext;
    var parentActionContext = getParentActionContext(parentContext);
    return runWithActionContext({
      type: "action",
      name,
      id: id2,
      args: argsToArray(arguments),
      context: target,
      tree: getRoot(target),
      rootId: parentContext ? parentContext.rootId : id2,
      parentId: parentContext ? parentContext.id : 0,
      allParentIds: parentContext ? __spread(parentContext.allParentIds, [parentContext.id]) : [],
      parentEvent: parentContext,
      parentActionEvent: parentActionContext
    }, fn);
  };
  res._isMSTAction = true;
  return res;
}
var CollectedMiddlewares = function() {
  function CollectedMiddlewares2(node2, fn) {
    Object.defineProperty(this, "arrayIndex", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: 0
    });
    Object.defineProperty(this, "inArrayIndex", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: 0
    });
    Object.defineProperty(this, "middlewares", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: []
    });
    if (fn.$mst_middleware) {
      this.middlewares.push(fn.$mst_middleware);
    }
    var n2 = node2;
    while (n2) {
      if (n2.middlewares)
        this.middlewares.push(n2.middlewares);
      n2 = n2.parent;
    }
  }
  Object.defineProperty(CollectedMiddlewares2.prototype, "isEmpty", {
    get: function() {
      return this.middlewares.length <= 0;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(CollectedMiddlewares2.prototype, "getNextMiddleware", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      var array3 = this.middlewares[this.arrayIndex];
      if (!array3)
        return void 0;
      var item = array3[this.inArrayIndex++];
      if (!item) {
        this.arrayIndex++;
        this.inArrayIndex = 0;
        return this.getNextMiddleware();
      }
      return item;
    }
  });
  return CollectedMiddlewares2;
}();
function runMiddleWares(node2, baseCall, originalFn) {
  var middlewares = new CollectedMiddlewares(node2, originalFn);
  if (middlewares.isEmpty)
    return action(originalFn).apply(null, baseCall.args);
  var result = null;
  function runNextMiddleware(call) {
    var middleware2 = middlewares.getNextMiddleware();
    var handler = middleware2 && middleware2.handler;
    if (!handler) {
      return action(originalFn).apply(null, call.args);
    }
    if (!middleware2.includeHooks && Hook[call.name]) {
      return runNextMiddleware(call);
    }
    function next2(call2, callback) {
      result = runNextMiddleware(call2);
      if (callback) {
        result = callback(result);
      }
    }
    function abort(value) {
      result = value;
    }
    handler(call, next2, abort);
    return result;
  }
  return runNextMiddleware(baseCall);
}
function safeStringify(value) {
  try {
    return JSON.stringify(value);
  } catch (e2) {
    return "<Unserializable: " + e2 + ">";
  }
}
function prettyPrintValue(value) {
  return typeof value === "function" ? "<function" + (value.name ? " " + value.name : "") + ">" : isStateTreeNode(value) ? "<" + value + ">" : "`" + safeStringify(value) + "`";
}
function shortenPrintValue(valueInString) {
  return valueInString.length < 280 ? valueInString : valueInString.substring(0, 272) + "......" + valueInString.substring(valueInString.length - 8);
}
function toErrorString(error) {
  var value = error.value;
  var type = error.context[error.context.length - 1].type;
  var fullPath = error.context.map(function(_a2) {
    var path = _a2.path;
    return path;
  }).filter(function(path) {
    return path.length > 0;
  }).join("/");
  var pathPrefix = fullPath.length > 0 ? 'at path "/' + fullPath + '" ' : "";
  var currentTypename = isStateTreeNode(value) ? "value of type " + getStateTreeNode(value).type.name + ":" : isPrimitive(value) ? "value" : "snapshot";
  var isSnapshotCompatible = type && isStateTreeNode(value) && type.is(getStateTreeNode(value).snapshot);
  return "" + pathPrefix + currentTypename + " " + prettyPrintValue(value) + " is not assignable " + (type ? "to type: `" + type.name + "`" : "") + (error.message ? " (" + error.message + ")" : "") + (type ? isPrimitiveType(type) || isPrimitive(value) ? "." : ", expected an instance of `" + type.name + "` or a snapshot like `" + type.describe() + "` instead." + (isSnapshotCompatible ? " (Note that a snapshot of the provided value is compatible with the targeted type)" : "") : ".");
}
function getContextForPath(context, path, type) {
  return context.concat([{ path, type }]);
}
function typeCheckSuccess() {
  return EMPTY_ARRAY;
}
function typeCheckFailure(context, value, message) {
  return [{ context, value, message }];
}
function flattenTypeErrors(errors) {
  return errors.reduce(function(a2, i) {
    return a2.concat(i);
  }, []);
}
function typecheckInternal(type, value) {
  if (isTypeCheckingEnabled()) {
    typecheck(type, value);
  }
}
function typecheck(type, value) {
  var errors = type.validate(value, [{ path: "", type }]);
  if (errors.length > 0) {
    throw fail$1(validationErrorsToString(type, value, errors));
  }
}
function validationErrorsToString(type, value, errors) {
  if (errors.length === 0) {
    return void 0;
  }
  return "Error while converting " + shortenPrintValue(prettyPrintValue(value)) + " to `" + type.name + "`:\n\n    " + errors.map(toErrorString).join("\n    ");
}
var identifierCacheId = 0;
var IdentifierCache = function() {
  function IdentifierCache2() {
    Object.defineProperty(this, "cacheId", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: identifierCacheId++
    });
    Object.defineProperty(this, "cache", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: observable.map()
    });
    Object.defineProperty(this, "lastCacheModificationPerId", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: observable.map()
    });
  }
  Object.defineProperty(IdentifierCache2.prototype, "updateLastCacheModificationPerId", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(identifier2) {
      var lcm = this.lastCacheModificationPerId.get(identifier2);
      this.lastCacheModificationPerId.set(identifier2, lcm === void 0 ? 1 : lcm + 1);
    }
  });
  Object.defineProperty(IdentifierCache2.prototype, "getLastCacheModificationPerId", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(identifier2) {
      var modificationId = this.lastCacheModificationPerId.get(identifier2) || 0;
      return this.cacheId + "-" + modificationId;
    }
  });
  Object.defineProperty(IdentifierCache2.prototype, "addNodeToCache", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2, lastCacheUpdate) {
      if (lastCacheUpdate === void 0) {
        lastCacheUpdate = true;
      }
      if (node2.identifierAttribute) {
        var identifier2 = node2.identifier;
        if (!this.cache.has(identifier2)) {
          this.cache.set(identifier2, observable.array([], mobxShallow));
        }
        var set7 = this.cache.get(identifier2);
        if (set7.indexOf(node2) !== -1)
          throw fail$1("Already registered");
        set7.push(node2);
        if (lastCacheUpdate) {
          this.updateLastCacheModificationPerId(identifier2);
        }
      }
    }
  });
  Object.defineProperty(IdentifierCache2.prototype, "mergeCache", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2) {
      var _this = this;
      values(node2.identifierCache.cache).forEach(function(nodes) {
        return nodes.forEach(function(child) {
          _this.addNodeToCache(child);
        });
      });
    }
  });
  Object.defineProperty(IdentifierCache2.prototype, "notifyDied", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2) {
      if (node2.identifierAttribute) {
        var id2 = node2.identifier;
        var set7 = this.cache.get(id2);
        if (set7) {
          set7.remove(node2);
          if (!set7.length) {
            this.cache.delete(id2);
          }
          this.updateLastCacheModificationPerId(node2.identifier);
        }
      }
    }
  });
  Object.defineProperty(IdentifierCache2.prototype, "splitCache", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2) {
      var _this = this;
      var res = new IdentifierCache2();
      var basePath = node2.path;
      entries(this.cache).forEach(function(_a2) {
        var _b = __read$1(_a2, 2), id2 = _b[0], nodes = _b[1];
        var modified = false;
        for (var i = nodes.length - 1; i >= 0; i--) {
          if (nodes[i].path.indexOf(basePath) === 0) {
            res.addNodeToCache(nodes[i], false);
            nodes.splice(i, 1);
            modified = true;
          }
        }
        if (modified) {
          _this.updateLastCacheModificationPerId(id2);
        }
      });
      return res;
    }
  });
  Object.defineProperty(IdentifierCache2.prototype, "has", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(type, identifier2) {
      var set7 = this.cache.get(identifier2);
      if (!set7)
        return false;
      return set7.some(function(candidate) {
        return type.isAssignableFrom(candidate.type);
      });
    }
  });
  Object.defineProperty(IdentifierCache2.prototype, "resolve", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(type, identifier2) {
      var set7 = this.cache.get(identifier2);
      if (!set7)
        return null;
      var matches = set7.filter(function(candidate) {
        return type.isAssignableFrom(candidate.type);
      });
      switch (matches.length) {
        case 0:
          return null;
        case 1:
          return matches[0];
        default:
          throw fail$1("Cannot resolve a reference to type '" + type.name + "' with id: '" + identifier2 + "' unambigously, there are multiple candidates: " + matches.map(function(n2) {
            return n2.path;
          }).join(", "));
      }
    }
  });
  return IdentifierCache2;
}();
function createObjectNode(type, parent, subpath, environment, initialValue) {
  var existingNode = getStateTreeNodeSafe(initialValue);
  if (existingNode) {
    if (existingNode.parent) {
      throw fail$1("Cannot add an object to a state tree if it is already part of the same or another state tree. Tried to assign an object to '" + (parent ? parent.path : "") + "/" + subpath + "', but it lives already at '" + existingNode.path + "'");
    }
    if (parent) {
      existingNode.setParent(parent, subpath);
    }
    return existingNode;
  }
  return new ObjectNode(type, parent, subpath, environment, initialValue);
}
function createScalarNode(type, parent, subpath, environment, initialValue) {
  return new ScalarNode(type, parent, subpath, environment, initialValue);
}
function isNode(value) {
  return value instanceof ScalarNode || value instanceof ObjectNode;
}
var NodeLifeCycle;
(function(NodeLifeCycle2) {
  NodeLifeCycle2[NodeLifeCycle2["INITIALIZING"] = 0] = "INITIALIZING";
  NodeLifeCycle2[NodeLifeCycle2["CREATED"] = 1] = "CREATED";
  NodeLifeCycle2[NodeLifeCycle2["FINALIZED"] = 2] = "FINALIZED";
  NodeLifeCycle2[NodeLifeCycle2["DETACHING"] = 3] = "DETACHING";
  NodeLifeCycle2[NodeLifeCycle2["DEAD"] = 4] = "DEAD";
})(NodeLifeCycle || (NodeLifeCycle = {}));
function isStateTreeNode(value) {
  return !!(value && value.$treenode);
}
function getStateTreeNode(value) {
  if (!isStateTreeNode(value)) {
    throw fail$1("Value " + value + " is no MST Node");
  }
  return value.$treenode;
}
function getStateTreeNodeSafe(value) {
  return value && value.$treenode || null;
}
function toJSON2() {
  return getStateTreeNode(this).snapshot;
}
function resolveNodeByPathParts(base, pathParts, failIfResolveFails) {
  if (failIfResolveFails === void 0) {
    failIfResolveFails = true;
  }
  var current = base;
  for (var i = 0; i < pathParts.length; i++) {
    var part = pathParts[i];
    if (part === "..") {
      current = current.parent;
      if (current)
        continue;
    } else if (part === ".") {
      continue;
    } else if (current) {
      if (current instanceof ScalarNode) {
        try {
          var value = current.value;
          if (isStateTreeNode(value)) {
            current = getStateTreeNode(value);
          }
        } catch (e2) {
          if (!failIfResolveFails) {
            return void 0;
          }
          throw e2;
        }
      }
      if (current instanceof ObjectNode) {
        var subType = current.getChildType(part);
        if (subType) {
          current = current.getChildNode(part);
          if (current)
            continue;
        }
      }
    }
    if (failIfResolveFails)
      throw fail$1("Could not resolve '" + part + "' in path '" + (joinJsonPath(pathParts.slice(0, i)) || "/") + "' while resolving '" + joinJsonPath(pathParts) + "'");
    else
      return void 0;
  }
  return current;
}
function convertChildNodesToArray(childNodes) {
  if (!childNodes)
    return EMPTY_ARRAY;
  var keys2 = Object.keys(childNodes);
  if (!keys2.length)
    return EMPTY_ARRAY;
  var result = new Array(keys2.length);
  keys2.forEach(function(key, index) {
    result[index] = childNodes[key];
  });
  return result;
}
var plainObjectString = Object.toString();
var EMPTY_ARRAY = Object.freeze([]);
var EMPTY_OBJECT = Object.freeze({});
var mobxShallow = getGlobalState().useProxies ? { deep: false } : { deep: false, proxy: false };
Object.freeze(mobxShallow);
function fail$1(message) {
  if (message === void 0) {
    message = "Illegal state";
  }
  return new Error("[mobx-state-tree] " + message);
}
function identity(_2) {
  return _2;
}
var isInteger = Number.isInteger || function(value) {
  return typeof value === "number" && isFinite(value) && Math.floor(value) === value;
};
function isArray(val) {
  return Array.isArray(val) || isObservableArray(val);
}
function asArray(val) {
  if (!val)
    return EMPTY_ARRAY;
  if (isArray(val))
    return val;
  return [val];
}
function extend(a2) {
  var b2 = [];
  for (var _i = 1; _i < arguments.length; _i++) {
    b2[_i - 1] = arguments[_i];
  }
  for (var i = 0; i < b2.length; i++) {
    var current = b2[i];
    for (var key in current)
      a2[key] = current[key];
  }
  return a2;
}
function isPlainObject(value) {
  var _a2;
  if (value === null || typeof value !== "object")
    return false;
  var proto = Object.getPrototypeOf(value);
  if (proto == null)
    return true;
  return ((_a2 = proto.constructor) === null || _a2 === void 0 ? void 0 : _a2.toString()) === plainObjectString;
}
function isMutable(value) {
  return value !== null && typeof value === "object" && !(value instanceof Date) && !(value instanceof RegExp);
}
function isPrimitive(value, includeDate) {
  if (includeDate === void 0) {
    includeDate = true;
  }
  if (value === null || value === void 0)
    return true;
  if (typeof value === "string" || typeof value === "number" || typeof value === "boolean" || includeDate && value instanceof Date)
    return true;
  return false;
}
function freeze(value) {
  return value;
}
function deepFreeze(value) {
  return value;
}
function isSerializable(value) {
  return typeof value !== "function";
}
function defineProperty2(object2, key, descriptor) {
  isObservableObject(object2) ? apiDefineProperty(object2, key, descriptor) : Object.defineProperty(object2, key, descriptor);
}
function addHiddenFinalProp(object2, propName, value) {
  defineProperty2(object2, propName, {
    enumerable: false,
    writable: false,
    configurable: true,
    value
  });
}
var EventHandler = function() {
  function EventHandler2() {
    Object.defineProperty(this, "handlers", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: []
    });
  }
  Object.defineProperty(EventHandler2.prototype, "hasSubscribers", {
    get: function() {
      return this.handlers.length > 0;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(EventHandler2.prototype, "register", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(fn, atTheBeginning) {
      var _this = this;
      if (atTheBeginning === void 0) {
        atTheBeginning = false;
      }
      if (atTheBeginning) {
        this.handlers.unshift(fn);
      } else {
        this.handlers.push(fn);
      }
      return function() {
        _this.unregister(fn);
      };
    }
  });
  Object.defineProperty(EventHandler2.prototype, "has", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(fn) {
      return this.handlers.indexOf(fn) >= 0;
    }
  });
  Object.defineProperty(EventHandler2.prototype, "unregister", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(fn) {
      var index = this.handlers.indexOf(fn);
      if (index >= 0) {
        this.handlers.splice(index, 1);
      }
    }
  });
  Object.defineProperty(EventHandler2.prototype, "clear", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      this.handlers.length = 0;
    }
  });
  Object.defineProperty(EventHandler2.prototype, "emit", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      var handlers = this.handlers.slice();
      handlers.forEach(function(f2) {
        return f2.apply(void 0, __spread(args));
      });
    }
  });
  return EventHandler2;
}();
var EventHandlers = function() {
  function EventHandlers2() {
    Object.defineProperty(this, "eventHandlers", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
  }
  Object.defineProperty(EventHandlers2.prototype, "hasSubscribers", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(event) {
      var handler = this.eventHandlers && this.eventHandlers[event];
      return !!handler && handler.hasSubscribers;
    }
  });
  Object.defineProperty(EventHandlers2.prototype, "register", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(event, fn, atTheBeginning) {
      if (atTheBeginning === void 0) {
        atTheBeginning = false;
      }
      if (!this.eventHandlers) {
        this.eventHandlers = {};
      }
      var handler = this.eventHandlers[event];
      if (!handler) {
        handler = this.eventHandlers[event] = new EventHandler();
      }
      return handler.register(fn, atTheBeginning);
    }
  });
  Object.defineProperty(EventHandlers2.prototype, "has", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(event, fn) {
      var handler = this.eventHandlers && this.eventHandlers[event];
      return !!handler && handler.has(fn);
    }
  });
  Object.defineProperty(EventHandlers2.prototype, "unregister", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(event, fn) {
      var handler = this.eventHandlers && this.eventHandlers[event];
      if (handler) {
        handler.unregister(fn);
      }
    }
  });
  Object.defineProperty(EventHandlers2.prototype, "clear", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(event) {
      if (this.eventHandlers) {
        delete this.eventHandlers[event];
      }
    }
  });
  Object.defineProperty(EventHandlers2.prototype, "clearAll", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      this.eventHandlers = void 0;
    }
  });
  Object.defineProperty(EventHandlers2.prototype, "emit", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(event) {
      var _a2;
      var args = [];
      for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
      }
      var handler = this.eventHandlers && this.eventHandlers[event];
      if (handler) {
        (_a2 = handler).emit.apply(_a2, __spread(args));
      }
    }
  });
  return EventHandlers2;
}();
function argsToArray(args) {
  var res = new Array(args.length);
  for (var i = 0; i < args.length; i++)
    res[i] = args[i];
  return res;
}
function stringStartsWith(str, beginning) {
  return str.indexOf(beginning) === 0;
}
function warnError(msg) {
  console.warn(new Error("[mobx-state-tree] " + msg));
}
function isTypeCheckingEnabled() {
  return typeof process !== "undefined" && process.env && {}.ENABLE_TYPE_CHECK === "true";
}
function splitPatch(patch) {
  if (!("oldValue" in patch))
    throw fail$1("Patches without `oldValue` field cannot be inversed");
  return [stripPatch(patch), invertPatch(patch)];
}
function stripPatch(patch) {
  switch (patch.op) {
    case "add":
      return { op: "add", path: patch.path, value: patch.value };
    case "remove":
      return { op: "remove", path: patch.path };
    case "replace":
      return { op: "replace", path: patch.path, value: patch.value };
  }
}
function invertPatch(patch) {
  switch (patch.op) {
    case "add":
      return {
        op: "remove",
        path: patch.path
      };
    case "remove":
      return {
        op: "add",
        path: patch.path,
        value: patch.oldValue
      };
    case "replace":
      return {
        op: "replace",
        path: patch.path,
        value: patch.oldValue
      };
  }
}
function isNumber(x2) {
  return typeof x2 === "number";
}
function escapeJsonPath(path) {
  if (isNumber(path) === true) {
    return "" + path;
  }
  if (path.indexOf("/") === -1 && path.indexOf("~") === -1)
    return path;
  return path.replace(/~/g, "~0").replace(/\//g, "~1");
}
function unescapeJsonPath(path) {
  return path.replace(/~1/g, "/").replace(/~0/g, "~");
}
function joinJsonPath(path) {
  if (path.length === 0)
    return "";
  var getPathStr = function(p2) {
    return p2.map(escapeJsonPath).join("/");
  };
  if (path[0] === "." || path[0] === "..") {
    return getPathStr(path);
  } else {
    return "/" + getPathStr(path);
  }
}
function splitJsonPath(path) {
  var parts = path.split("/").map(unescapeJsonPath);
  var valid = path === "" || path === "." || path === ".." || stringStartsWith(path, "/") || stringStartsWith(path, "./") || stringStartsWith(path, "../");
  if (!valid) {
    throw fail$1("a json path must be either rooted, empty or relative, but got '" + path + "'");
  }
  if (parts[0] === "") {
    parts.shift();
  }
  return parts;
}
var $preProcessorFailed = Symbol("$preProcessorFailed");
var SnapshotProcessor = function(_super) {
  __extends(SnapshotProcessor2, _super);
  function SnapshotProcessor2(_subtype, _processors, name) {
    var _this = _super.call(this, name || _subtype.name) || this;
    Object.defineProperty(_this, "_subtype", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: _subtype
    });
    Object.defineProperty(_this, "_processors", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: _processors
    });
    return _this;
  }
  Object.defineProperty(SnapshotProcessor2.prototype, "flags", {
    get: function() {
      return this._subtype.flags | TypeFlags.SnapshotProcessor;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(SnapshotProcessor2.prototype, "describe", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return "snapshotProcessor(" + this._subtype.describe() + ")";
    }
  });
  Object.defineProperty(SnapshotProcessor2.prototype, "preProcessSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(sn) {
      if (this._processors.preProcessor) {
        return this._processors.preProcessor.call(null, sn);
      }
      return sn;
    }
  });
  Object.defineProperty(SnapshotProcessor2.prototype, "preProcessSnapshotSafe", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(sn) {
      try {
        return this.preProcessSnapshot(sn);
      } catch (e2) {
        return $preProcessorFailed;
      }
    }
  });
  Object.defineProperty(SnapshotProcessor2.prototype, "postProcessSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(sn) {
      if (this._processors.postProcessor) {
        return this._processors.postProcessor.call(null, sn);
      }
      return sn;
    }
  });
  Object.defineProperty(SnapshotProcessor2.prototype, "_fixNode", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2) {
      var _this = this;
      proxyNodeTypeMethods(node2.type, this, "create");
      var oldGetSnapshot = node2.getSnapshot;
      node2.getSnapshot = function() {
        return _this.postProcessSnapshot(oldGetSnapshot.call(node2));
      };
      node2.getReconciliationType = function() {
        return _this;
      };
    }
  });
  Object.defineProperty(SnapshotProcessor2.prototype, "instantiate", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(parent, subpath, environment, initialValue) {
      var processedInitialValue = isStateTreeNode(initialValue) ? initialValue : this.preProcessSnapshot(initialValue);
      var node2 = this._subtype.instantiate(parent, subpath, environment, processedInitialValue);
      this._fixNode(node2);
      return node2;
    }
  });
  Object.defineProperty(SnapshotProcessor2.prototype, "reconcile", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(current, newValue, parent, subpath) {
      var node2 = this._subtype.reconcile(current, isStateTreeNode(newValue) ? newValue : this.preProcessSnapshot(newValue), parent, subpath);
      if (node2 !== current) {
        this._fixNode(node2);
      }
      return node2;
    }
  });
  Object.defineProperty(SnapshotProcessor2.prototype, "getSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2, applyPostProcess) {
      if (applyPostProcess === void 0) {
        applyPostProcess = true;
      }
      var sn = this._subtype.getSnapshot(node2);
      return applyPostProcess ? this.postProcessSnapshot(sn) : sn;
    }
  });
  Object.defineProperty(SnapshotProcessor2.prototype, "isValidSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(value, context) {
      var processedSn = this.preProcessSnapshotSafe(value);
      if (processedSn === $preProcessorFailed) {
        return typeCheckFailure(context, value, "Failed to preprocess value");
      }
      return this._subtype.validate(processedSn, context);
    }
  });
  Object.defineProperty(SnapshotProcessor2.prototype, "getSubTypes", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return this._subtype;
    }
  });
  Object.defineProperty(SnapshotProcessor2.prototype, "is", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(thing) {
      var value = isType(thing) ? this._subtype : isStateTreeNode(thing) ? getSnapshot(thing, false) : this.preProcessSnapshotSafe(thing);
      if (value === $preProcessorFailed) {
        return false;
      }
      return this._subtype.validate(value, [{ path: "", type: this._subtype }]).length === 0;
    }
  });
  Object.defineProperty(SnapshotProcessor2.prototype, "isAssignableFrom", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(type) {
      return this._subtype.isAssignableFrom(type);
    }
  });
  Object.defineProperty(SnapshotProcessor2.prototype, "isMatchingSnapshotId", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(current, snapshot) {
      if (!(this._subtype instanceof ComplexType)) {
        return false;
      }
      var processedSn = this.preProcessSnapshot(snapshot);
      return this._subtype.isMatchingSnapshotId(current, processedSn);
    }
  });
  return SnapshotProcessor2;
}(BaseType);
function proxyNodeTypeMethods(nodeType, snapshotProcessorType) {
  var e_1, _a2;
  var methods = [];
  for (var _i = 2; _i < arguments.length; _i++) {
    methods[_i - 2] = arguments[_i];
  }
  try {
    for (var methods_1 = __values$1(methods), methods_1_1 = methods_1.next(); !methods_1_1.done; methods_1_1 = methods_1.next()) {
      var method = methods_1_1.value;
      nodeType[method] = snapshotProcessorType[method].bind(snapshotProcessorType);
    }
  } catch (e_1_1) {
    e_1 = { error: e_1_1 };
  } finally {
    try {
      if (methods_1_1 && !methods_1_1.done && (_a2 = methods_1.return))
        _a2.call(methods_1);
    } finally {
      if (e_1)
        throw e_1.error;
    }
  }
}
function snapshotProcessor(type, processors, name) {
  return new SnapshotProcessor(type, processors, name);
}
var needsIdentifierError = "Map.put can only be used to store complex values that have an identifier type attribute";
function tryCollectModelTypes(type, modelTypes) {
  var e_1, _a2;
  var subtypes = type.getSubTypes();
  if (subtypes === cannotDetermineSubtype) {
    return false;
  }
  if (subtypes) {
    var subtypesArray = asArray(subtypes);
    try {
      for (var subtypesArray_1 = __values$1(subtypesArray), subtypesArray_1_1 = subtypesArray_1.next(); !subtypesArray_1_1.done; subtypesArray_1_1 = subtypesArray_1.next()) {
        var subtype = subtypesArray_1_1.value;
        if (!tryCollectModelTypes(subtype, modelTypes))
          return false;
      }
    } catch (e_1_1) {
      e_1 = { error: e_1_1 };
    } finally {
      try {
        if (subtypesArray_1_1 && !subtypesArray_1_1.done && (_a2 = subtypesArray_1.return))
          _a2.call(subtypesArray_1);
      } finally {
        if (e_1)
          throw e_1.error;
      }
    }
  }
  if (type instanceof ModelType) {
    modelTypes.push(type);
  }
  return true;
}
var MapIdentifierMode;
(function(MapIdentifierMode2) {
  MapIdentifierMode2[MapIdentifierMode2["UNKNOWN"] = 0] = "UNKNOWN";
  MapIdentifierMode2[MapIdentifierMode2["YES"] = 1] = "YES";
  MapIdentifierMode2[MapIdentifierMode2["NO"] = 2] = "NO";
})(MapIdentifierMode || (MapIdentifierMode = {}));
var MSTMap = function(_super) {
  __extends(MSTMap2, _super);
  function MSTMap2(initialData) {
    return _super.call(this, initialData, observable.ref.enhancer) || this;
  }
  Object.defineProperty(MSTMap2.prototype, "get", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(key) {
      return _super.prototype.get.call(this, "" + key);
    }
  });
  Object.defineProperty(MSTMap2.prototype, "has", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(key) {
      return _super.prototype.has.call(this, "" + key);
    }
  });
  Object.defineProperty(MSTMap2.prototype, "delete", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(key) {
      return _super.prototype.delete.call(this, "" + key);
    }
  });
  Object.defineProperty(MSTMap2.prototype, "set", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(key, value) {
      return _super.prototype.set.call(this, "" + key, value);
    }
  });
  Object.defineProperty(MSTMap2.prototype, "put", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(value) {
      if (!value)
        throw fail$1("Map.put cannot be used to set empty values");
      if (isStateTreeNode(value)) {
        var node2 = getStateTreeNode(value);
        if (node2.identifier === null) {
          throw fail$1(needsIdentifierError);
        }
        this.set(node2.identifier, value);
        return value;
      } else if (!isMutable(value)) {
        throw fail$1("Map.put can only be used to store complex values");
      } else {
        var mapNode = getStateTreeNode(this);
        var mapType = mapNode.type;
        if (mapType.identifierMode !== MapIdentifierMode.YES) {
          throw fail$1(needsIdentifierError);
        }
        var idAttr = mapType.mapIdentifierAttribute;
        var id2 = value[idAttr];
        if (!isValidIdentifier(id2)) {
          var newNode = this.put(mapType.getChildType().create(value, mapNode.environment));
          return this.put(getSnapshot(newNode));
        }
        var key = normalizeIdentifier(id2);
        this.set(key, value);
        return this.get(key);
      }
    }
  });
  return MSTMap2;
}(ObservableMap);
var MapType = function(_super) {
  __extends(MapType2, _super);
  function MapType2(name, _subType, hookInitializers) {
    if (hookInitializers === void 0) {
      hookInitializers = [];
    }
    var _this = _super.call(this, name) || this;
    Object.defineProperty(_this, "_subType", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: _subType
    });
    Object.defineProperty(_this, "identifierMode", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: MapIdentifierMode.UNKNOWN
    });
    Object.defineProperty(_this, "mapIdentifierAttribute", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "flags", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: TypeFlags.Map
    });
    Object.defineProperty(_this, "hookInitializers", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: []
    });
    _this._determineIdentifierMode();
    _this.hookInitializers = hookInitializers;
    return _this;
  }
  Object.defineProperty(MapType2.prototype, "hooks", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(hooks) {
      var hookInitializers = this.hookInitializers.length > 0 ? this.hookInitializers.concat(hooks) : [hooks];
      return new MapType2(this.name, this._subType, hookInitializers);
    }
  });
  Object.defineProperty(MapType2.prototype, "instantiate", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(parent, subpath, environment, initialValue) {
      this._determineIdentifierMode();
      return createObjectNode(this, parent, subpath, environment, initialValue);
    }
  });
  Object.defineProperty(MapType2.prototype, "_determineIdentifierMode", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      if (this.identifierMode !== MapIdentifierMode.UNKNOWN) {
        return;
      }
      var modelTypes = [];
      if (tryCollectModelTypes(this._subType, modelTypes)) {
        var identifierAttribute_1 = void 0;
        modelTypes.forEach(function(type) {
          if (type.identifierAttribute) {
            if (identifierAttribute_1 && identifierAttribute_1 !== type.identifierAttribute) {
              throw fail$1("The objects in a map should all have the same identifier attribute, expected '" + identifierAttribute_1 + "', but child of type '" + type.name + "' declared attribute '" + type.identifierAttribute + "' as identifier");
            }
            identifierAttribute_1 = type.identifierAttribute;
          }
        });
        if (identifierAttribute_1) {
          this.identifierMode = MapIdentifierMode.YES;
          this.mapIdentifierAttribute = identifierAttribute_1;
        } else {
          this.identifierMode = MapIdentifierMode.NO;
        }
      }
    }
  });
  Object.defineProperty(MapType2.prototype, "initializeChildNodes", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(objNode, initialSnapshot) {
      if (initialSnapshot === void 0) {
        initialSnapshot = {};
      }
      var subType = objNode.type._subType;
      var result = {};
      Object.keys(initialSnapshot).forEach(function(name) {
        result[name] = subType.instantiate(objNode, name, void 0, initialSnapshot[name]);
      });
      return result;
    }
  });
  Object.defineProperty(MapType2.prototype, "createNewInstance", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(childNodes) {
      return new MSTMap(childNodes);
    }
  });
  Object.defineProperty(MapType2.prototype, "finalizeNewInstance", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2, instance) {
      interceptReads(instance, node2.unbox);
      var type = node2.type;
      type.hookInitializers.forEach(function(initializer) {
        var hooks = initializer(instance);
        Object.keys(hooks).forEach(function(name) {
          var hook = hooks[name];
          var actionInvoker = createActionInvoker(instance, name, hook);
          addHiddenFinalProp(instance, name, actionInvoker);
        });
      });
      intercept(instance, this.willChange);
      observe(instance, this.didChange);
    }
  });
  Object.defineProperty(MapType2.prototype, "describe", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return "Map<string, " + this._subType.describe() + ">";
    }
  });
  Object.defineProperty(MapType2.prototype, "getChildren", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2) {
      return values(node2.storedValue);
    }
  });
  Object.defineProperty(MapType2.prototype, "getChildNode", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2, key) {
      var childNode = node2.storedValue.get("" + key);
      if (!childNode)
        throw fail$1("Not a child " + key);
      return childNode;
    }
  });
  Object.defineProperty(MapType2.prototype, "willChange", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(change) {
      var node2 = getStateTreeNode(change.object);
      var key = change.name;
      node2.assertWritable({ subpath: key });
      var mapType = node2.type;
      var subType = mapType._subType;
      switch (change.type) {
        case "update":
          {
            var newValue = change.newValue;
            var oldValue = change.object.get(key);
            if (newValue === oldValue)
              return null;
            typecheckInternal(subType, newValue);
            change.newValue = subType.reconcile(node2.getChildNode(key), change.newValue, node2, key);
            mapType.processIdentifier(key, change.newValue);
          }
          break;
        case "add":
          {
            typecheckInternal(subType, change.newValue);
            change.newValue = subType.instantiate(node2, key, void 0, change.newValue);
            mapType.processIdentifier(key, change.newValue);
          }
          break;
      }
      return change;
    }
  });
  Object.defineProperty(MapType2.prototype, "processIdentifier", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(expected, node2) {
      if (this.identifierMode === MapIdentifierMode.YES && node2 instanceof ObjectNode) {
        var identifier2 = node2.identifier;
        if (identifier2 !== expected)
          throw fail$1("A map of objects containing an identifier should always store the object under their own identifier. Trying to store key '" + identifier2 + "', but expected: '" + expected + "'");
      }
    }
  });
  Object.defineProperty(MapType2.prototype, "getSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2) {
      var res = {};
      node2.getChildren().forEach(function(childNode) {
        res[childNode.subpath] = childNode.snapshot;
      });
      return res;
    }
  });
  Object.defineProperty(MapType2.prototype, "processInitialSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(childNodes) {
      var processed = {};
      Object.keys(childNodes).forEach(function(key) {
        processed[key] = childNodes[key].getSnapshot();
      });
      return processed;
    }
  });
  Object.defineProperty(MapType2.prototype, "didChange", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(change) {
      var node2 = getStateTreeNode(change.object);
      switch (change.type) {
        case "update":
          return void node2.emitPatch({
            op: "replace",
            path: escapeJsonPath(change.name),
            value: change.newValue.snapshot,
            oldValue: change.oldValue ? change.oldValue.snapshot : void 0
          }, node2);
        case "add":
          return void node2.emitPatch({
            op: "add",
            path: escapeJsonPath(change.name),
            value: change.newValue.snapshot,
            oldValue: void 0
          }, node2);
        case "delete":
          var oldSnapshot = change.oldValue.snapshot;
          change.oldValue.die();
          return void node2.emitPatch({
            op: "remove",
            path: escapeJsonPath(change.name),
            oldValue: oldSnapshot
          }, node2);
      }
    }
  });
  Object.defineProperty(MapType2.prototype, "applyPatchLocally", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2, subpath, patch) {
      var target = node2.storedValue;
      switch (patch.op) {
        case "add":
        case "replace":
          target.set(subpath, patch.value);
          break;
        case "remove":
          target.delete(subpath);
          break;
      }
    }
  });
  Object.defineProperty(MapType2.prototype, "applySnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2, snapshot) {
      typecheckInternal(this, snapshot);
      var target = node2.storedValue;
      var currentKeys = {};
      Array.from(target.keys()).forEach(function(key2) {
        currentKeys[key2] = false;
      });
      if (snapshot) {
        for (var key in snapshot) {
          target.set(key, snapshot[key]);
          currentKeys["" + key] = true;
        }
      }
      Object.keys(currentKeys).forEach(function(key2) {
        if (currentKeys[key2] === false)
          target.delete(key2);
      });
    }
  });
  Object.defineProperty(MapType2.prototype, "getChildType", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return this._subType;
    }
  });
  Object.defineProperty(MapType2.prototype, "isValidSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(value, context) {
      var _this = this;
      if (!isPlainObject(value)) {
        return typeCheckFailure(context, value, "Value is not a plain object");
      }
      return flattenTypeErrors(Object.keys(value).map(function(path) {
        return _this._subType.validate(value[path], getContextForPath(context, path, _this._subType));
      }));
    }
  });
  Object.defineProperty(MapType2.prototype, "getDefaultSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return EMPTY_OBJECT;
    }
  });
  Object.defineProperty(MapType2.prototype, "removeChild", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2, subpath) {
      node2.storedValue.delete(subpath);
    }
  });
  return MapType2;
}(ComplexType);
MapType.prototype.applySnapshot = action(MapType.prototype.applySnapshot);
function map2(subtype) {
  return new MapType("map<string, " + subtype.name + ">", subtype);
}
var ArrayType = function(_super) {
  __extends(ArrayType2, _super);
  function ArrayType2(name, _subType, hookInitializers) {
    if (hookInitializers === void 0) {
      hookInitializers = [];
    }
    var _this = _super.call(this, name) || this;
    Object.defineProperty(_this, "_subType", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: _subType
    });
    Object.defineProperty(_this, "flags", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: TypeFlags.Array
    });
    Object.defineProperty(_this, "hookInitializers", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: []
    });
    _this.hookInitializers = hookInitializers;
    return _this;
  }
  Object.defineProperty(ArrayType2.prototype, "hooks", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(hooks) {
      var hookInitializers = this.hookInitializers.length > 0 ? this.hookInitializers.concat(hooks) : [hooks];
      return new ArrayType2(this.name, this._subType, hookInitializers);
    }
  });
  Object.defineProperty(ArrayType2.prototype, "instantiate", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(parent, subpath, environment, initialValue) {
      return createObjectNode(this, parent, subpath, environment, initialValue);
    }
  });
  Object.defineProperty(ArrayType2.prototype, "initializeChildNodes", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(objNode, snapshot) {
      if (snapshot === void 0) {
        snapshot = [];
      }
      var subType = objNode.type._subType;
      var result = {};
      snapshot.forEach(function(item, index) {
        var subpath = "" + index;
        result[subpath] = subType.instantiate(objNode, subpath, void 0, item);
      });
      return result;
    }
  });
  Object.defineProperty(ArrayType2.prototype, "createNewInstance", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(childNodes) {
      return observable.array(convertChildNodesToArray(childNodes), mobxShallow);
    }
  });
  Object.defineProperty(ArrayType2.prototype, "finalizeNewInstance", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2, instance) {
      getAdministration(instance).dehancer = node2.unbox;
      var type = node2.type;
      type.hookInitializers.forEach(function(initializer) {
        var hooks = initializer(instance);
        Object.keys(hooks).forEach(function(name) {
          var hook = hooks[name];
          var actionInvoker = createActionInvoker(instance, name, hook);
          addHiddenFinalProp(instance, name, actionInvoker);
        });
      });
      intercept(instance, this.willChange);
      observe(instance, this.didChange);
    }
  });
  Object.defineProperty(ArrayType2.prototype, "describe", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return this._subType.describe() + "[]";
    }
  });
  Object.defineProperty(ArrayType2.prototype, "getChildren", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2) {
      return node2.storedValue.slice();
    }
  });
  Object.defineProperty(ArrayType2.prototype, "getChildNode", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2, key) {
      var index = Number(key);
      if (index < node2.storedValue.length)
        return node2.storedValue[index];
      throw fail$1("Not a child: " + key);
    }
  });
  Object.defineProperty(ArrayType2.prototype, "willChange", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(change) {
      var node2 = getStateTreeNode(change.object);
      node2.assertWritable({ subpath: "" + change.index });
      var subType = node2.type._subType;
      var childNodes = node2.getChildren();
      switch (change.type) {
        case "update":
          {
            if (change.newValue === change.object[change.index])
              return null;
            var updatedNodes = reconcileArrayChildren(node2, subType, [childNodes[change.index]], [change.newValue], [change.index]);
            if (!updatedNodes) {
              return null;
            }
            change.newValue = updatedNodes[0];
          }
          break;
        case "splice":
          {
            var index_1 = change.index, removedCount = change.removedCount, added = change.added;
            var addedNodes = reconcileArrayChildren(node2, subType, childNodes.slice(index_1, index_1 + removedCount), added, added.map(function(_2, i2) {
              return index_1 + i2;
            }));
            if (!addedNodes) {
              return null;
            }
            change.added = addedNodes;
            for (var i = index_1 + removedCount; i < childNodes.length; i++) {
              childNodes[i].setParent(node2, "" + (i + added.length - removedCount));
            }
          }
          break;
      }
      return change;
    }
  });
  Object.defineProperty(ArrayType2.prototype, "getSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2) {
      return node2.getChildren().map(function(childNode) {
        return childNode.snapshot;
      });
    }
  });
  Object.defineProperty(ArrayType2.prototype, "processInitialSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(childNodes) {
      var processed = [];
      Object.keys(childNodes).forEach(function(key) {
        processed.push(childNodes[key].getSnapshot());
      });
      return processed;
    }
  });
  Object.defineProperty(ArrayType2.prototype, "didChange", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(change) {
      var node2 = getStateTreeNode(change.object);
      switch (change.type) {
        case "update":
          return void node2.emitPatch({
            op: "replace",
            path: "" + change.index,
            value: change.newValue.snapshot,
            oldValue: change.oldValue ? change.oldValue.snapshot : void 0
          }, node2);
        case "splice":
          for (var i = change.removedCount - 1; i >= 0; i--)
            node2.emitPatch({
              op: "remove",
              path: "" + (change.index + i),
              oldValue: change.removed[i].snapshot
            }, node2);
          for (var i = 0; i < change.addedCount; i++)
            node2.emitPatch({
              op: "add",
              path: "" + (change.index + i),
              value: node2.getChildNode("" + (change.index + i)).snapshot,
              oldValue: void 0
            }, node2);
          return;
      }
    }
  });
  Object.defineProperty(ArrayType2.prototype, "applyPatchLocally", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2, subpath, patch) {
      var target = node2.storedValue;
      var index = subpath === "-" ? target.length : Number(subpath);
      switch (patch.op) {
        case "replace":
          target[index] = patch.value;
          break;
        case "add":
          target.splice(index, 0, patch.value);
          break;
        case "remove":
          target.splice(index, 1);
          break;
      }
    }
  });
  Object.defineProperty(ArrayType2.prototype, "applySnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2, snapshot) {
      typecheckInternal(this, snapshot);
      var target = node2.storedValue;
      target.replace(snapshot);
    }
  });
  Object.defineProperty(ArrayType2.prototype, "getChildType", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return this._subType;
    }
  });
  Object.defineProperty(ArrayType2.prototype, "isValidSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(value, context) {
      var _this = this;
      if (!isArray(value)) {
        return typeCheckFailure(context, value, "Value is not an array");
      }
      return flattenTypeErrors(value.map(function(item, index) {
        return _this._subType.validate(item, getContextForPath(context, "" + index, _this._subType));
      }));
    }
  });
  Object.defineProperty(ArrayType2.prototype, "getDefaultSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return EMPTY_ARRAY;
    }
  });
  Object.defineProperty(ArrayType2.prototype, "removeChild", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2, subpath) {
      node2.storedValue.splice(Number(subpath), 1);
    }
  });
  return ArrayType2;
}(ComplexType);
ArrayType.prototype.applySnapshot = action(ArrayType.prototype.applySnapshot);
function array2(subtype) {
  return new ArrayType(subtype.name + "[]", subtype);
}
function reconcileArrayChildren(parent, childType, oldNodes, newValues, newPaths) {
  var nothingChanged = true;
  for (var i = 0; ; i++) {
    var hasNewNode = i <= newValues.length - 1;
    var oldNode = oldNodes[i];
    var newValue = hasNewNode ? newValues[i] : void 0;
    var newPath = "" + newPaths[i];
    if (isNode(newValue))
      newValue = newValue.storedValue;
    if (!oldNode && !hasNewNode) {
      break;
    } else if (!hasNewNode) {
      nothingChanged = false;
      oldNodes.splice(i, 1);
      if (oldNode instanceof ObjectNode) {
        oldNode.createObservableInstanceIfNeeded();
      }
      oldNode.die();
      i--;
    } else if (!oldNode) {
      if (isStateTreeNode(newValue) && getStateTreeNode(newValue).parent === parent) {
        throw fail$1("Cannot add an object to a state tree if it is already part of the same or another state tree. Tried to assign an object to '" + parent.path + "/" + newPath + "', but it lives already at '" + getStateTreeNode(newValue).path + "'");
      }
      nothingChanged = false;
      var newNode = valueAsNode(childType, parent, newPath, newValue);
      oldNodes.splice(i, 0, newNode);
    } else if (areSame(oldNode, newValue)) {
      oldNodes[i] = valueAsNode(childType, parent, newPath, newValue, oldNode);
    } else {
      var oldMatch = void 0;
      for (var j2 = i; j2 < oldNodes.length; j2++) {
        if (areSame(oldNodes[j2], newValue)) {
          oldMatch = oldNodes.splice(j2, 1)[0];
          break;
        }
      }
      nothingChanged = false;
      var newNode = valueAsNode(childType, parent, newPath, newValue, oldMatch);
      oldNodes.splice(i, 0, newNode);
    }
  }
  return nothingChanged ? null : oldNodes;
}
function valueAsNode(childType, parent, subpath, newValue, oldNode) {
  typecheckInternal(childType, newValue);
  function getNewNode() {
    if (isStateTreeNode(newValue)) {
      var childNode = getStateTreeNode(newValue);
      childNode.assertAlive(EMPTY_OBJECT);
      if (childNode.parent !== null && childNode.parent === parent) {
        childNode.setParent(parent, subpath);
        return childNode;
      }
    }
    if (oldNode) {
      return childType.reconcile(oldNode, newValue, parent, subpath);
    }
    return childType.instantiate(parent, subpath, void 0, newValue);
  }
  var newNode = getNewNode();
  if (oldNode && oldNode !== newNode) {
    if (oldNode instanceof ObjectNode) {
      oldNode.createObservableInstanceIfNeeded();
    }
    oldNode.die();
  }
  return newNode;
}
function areSame(oldNode, newValue) {
  if (!oldNode.isAlive) {
    return false;
  }
  if (isStateTreeNode(newValue)) {
    var newNode = getStateTreeNode(newValue);
    return newNode.isAlive && newNode === oldNode;
  }
  if (oldNode.snapshot === newValue) {
    return true;
  }
  if (!(oldNode instanceof ObjectNode)) {
    return false;
  }
  var oldNodeType = oldNode.getReconciliationType();
  return oldNode.identifier !== null && oldNode.identifierAttribute && isPlainObject(newValue) && oldNodeType.is(newValue) && oldNodeType.isMatchingSnapshotId(oldNode, newValue);
}
var PRE_PROCESS_SNAPSHOT = "preProcessSnapshot";
var POST_PROCESS_SNAPSHOT = "postProcessSnapshot";
function objectTypeToString() {
  return getStateTreeNode(this).toString();
}
var defaultObjectOptions = {
  name: "AnonymousModel",
  properties: {},
  initializers: EMPTY_ARRAY
};
function toPropertiesObject(declaredProps) {
  return Object.keys(declaredProps).reduce(function(props, key) {
    var _a2, _b, _c;
    if (key in Hook)
      throw fail$1("Hook '" + key + "' was defined as property. Hooks should be defined as part of the actions");
    var descriptor = Object.getOwnPropertyDescriptor(props, key);
    if ("get" in descriptor) {
      throw fail$1("Getters are not supported as properties. Please use views instead");
    }
    var value = descriptor.value;
    if (value === null || value === void 0) {
      throw fail$1("The default value of an attribute cannot be null or undefined as the type cannot be inferred. Did you mean `types.maybe(someType)`?");
    } else if (isPrimitive(value)) {
      return Object.assign({}, props, (_a2 = {}, _a2[key] = optional(getPrimitiveFactoryFromValue(value), value), _a2));
    } else if (value instanceof MapType) {
      return Object.assign({}, props, (_b = {}, _b[key] = optional(value, {}), _b));
    } else if (value instanceof ArrayType) {
      return Object.assign({}, props, (_c = {}, _c[key] = optional(value, []), _c));
    } else if (isType(value)) {
      return props;
    } else {
      throw fail$1("Invalid type definition for property '" + key + "', cannot infer a type from a value like '" + value + "' (" + typeof value + ")");
    }
  }, declaredProps);
}
var ModelType = function(_super) {
  __extends(ModelType2, _super);
  function ModelType2(opts) {
    var _this = _super.call(this, opts.name || defaultObjectOptions.name) || this;
    Object.defineProperty(_this, "flags", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: TypeFlags.Object
    });
    Object.defineProperty(_this, "initializers", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "properties", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "preProcessor", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "postProcessor", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "propertyNames", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "named", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function(name) {
        return _this.cloneAndEnhance({ name });
      }
    });
    Object.defineProperty(_this, "props", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function(properties) {
        return _this.cloneAndEnhance({ properties });
      }
    });
    Object.defineProperty(_this, "preProcessSnapshot", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function(preProcessor) {
        var currentPreprocessor = _this.preProcessor;
        if (!currentPreprocessor)
          return _this.cloneAndEnhance({ preProcessor });
        else
          return _this.cloneAndEnhance({
            preProcessor: function(snapshot) {
              return currentPreprocessor(preProcessor(snapshot));
            }
          });
      }
    });
    Object.defineProperty(_this, "postProcessSnapshot", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: function(postProcessor) {
        var currentPostprocessor = _this.postProcessor;
        if (!currentPostprocessor)
          return _this.cloneAndEnhance({ postProcessor });
        else
          return _this.cloneAndEnhance({
            postProcessor: function(snapshot) {
              return postProcessor(currentPostprocessor(snapshot));
            }
          });
      }
    });
    Object.assign(_this, defaultObjectOptions, opts);
    _this.properties = toPropertiesObject(_this.properties);
    freeze(_this.properties);
    _this.propertyNames = Object.keys(_this.properties);
    _this.identifierAttribute = _this._getIdentifierAttribute();
    return _this;
  }
  Object.defineProperty(ModelType2.prototype, "_getIdentifierAttribute", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      var identifierAttribute = void 0;
      this.forAllProps(function(propName, propType) {
        if (propType.flags & TypeFlags.Identifier) {
          if (identifierAttribute)
            throw fail$1("Cannot define property '" + propName + "' as object identifier, property '" + identifierAttribute + "' is already defined as identifier property");
          identifierAttribute = propName;
        }
      });
      return identifierAttribute;
    }
  });
  Object.defineProperty(ModelType2.prototype, "cloneAndEnhance", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(opts) {
      return new ModelType2({
        name: opts.name || this.name,
        properties: Object.assign({}, this.properties, opts.properties),
        initializers: this.initializers.concat(opts.initializers || []),
        preProcessor: opts.preProcessor || this.preProcessor,
        postProcessor: opts.postProcessor || this.postProcessor
      });
    }
  });
  Object.defineProperty(ModelType2.prototype, "actions", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(fn) {
      var _this = this;
      var actionInitializer = function(self2) {
        _this.instantiateActions(self2, fn(self2));
        return self2;
      };
      return this.cloneAndEnhance({ initializers: [actionInitializer] });
    }
  });
  Object.defineProperty(ModelType2.prototype, "instantiateActions", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(self2, actions) {
      if (!isPlainObject(actions))
        throw fail$1("actions initializer should return a plain object containing actions");
      Object.keys(actions).forEach(function(name) {
        if (name === PRE_PROCESS_SNAPSHOT)
          throw fail$1("Cannot define action '" + PRE_PROCESS_SNAPSHOT + "', it should be defined using 'type.preProcessSnapshot(fn)' instead");
        if (name === POST_PROCESS_SNAPSHOT)
          throw fail$1("Cannot define action '" + POST_PROCESS_SNAPSHOT + "', it should be defined using 'type.postProcessSnapshot(fn)' instead");
        var action2 = actions[name];
        var baseAction = self2[name];
        if (name in Hook && baseAction) {
          var specializedAction_1 = action2;
          action2 = function() {
            baseAction.apply(null, arguments);
            specializedAction_1.apply(null, arguments);
          };
        }
        var middlewares = action2.$mst_middleware;
        var boundAction = action2.bind(actions);
        boundAction.$mst_middleware = middlewares;
        var actionInvoker = createActionInvoker(self2, name, boundAction);
        actions[name] = actionInvoker;
        addHiddenFinalProp(self2, name, actionInvoker);
      });
    }
  });
  Object.defineProperty(ModelType2.prototype, "volatile", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(fn) {
      var _this = this;
      if (typeof fn !== "function") {
        throw fail$1("You passed an " + typeof fn + " to volatile state as an argument, when function is expected");
      }
      var stateInitializer = function(self2) {
        _this.instantiateVolatileState(self2, fn(self2));
        return self2;
      };
      return this.cloneAndEnhance({ initializers: [stateInitializer] });
    }
  });
  Object.defineProperty(ModelType2.prototype, "instantiateVolatileState", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(self2, state) {
      if (!isPlainObject(state))
        throw fail$1("volatile state initializer should return a plain object containing state");
      set4(self2, state);
    }
  });
  Object.defineProperty(ModelType2.prototype, "extend", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(fn) {
      var _this = this;
      var initializer = function(self2) {
        var _a2 = fn(self2), actions = _a2.actions, views = _a2.views, state = _a2.state, rest = __rest(_a2, ["actions", "views", "state"]);
        for (var key in rest)
          throw fail$1("The `extend` function should return an object with a subset of the fields 'actions', 'views' and 'state'. Found invalid key '" + key + "'");
        if (state)
          _this.instantiateVolatileState(self2, state);
        if (views)
          _this.instantiateViews(self2, views);
        if (actions)
          _this.instantiateActions(self2, actions);
        return self2;
      };
      return this.cloneAndEnhance({ initializers: [initializer] });
    }
  });
  Object.defineProperty(ModelType2.prototype, "views", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(fn) {
      var _this = this;
      var viewInitializer = function(self2) {
        _this.instantiateViews(self2, fn(self2));
        return self2;
      };
      return this.cloneAndEnhance({ initializers: [viewInitializer] });
    }
  });
  Object.defineProperty(ModelType2.prototype, "instantiateViews", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(self2, views) {
      if (!isPlainObject(views))
        throw fail$1("views initializer should return a plain object containing views");
      Object.keys(views).forEach(function(key) {
        var _a2;
        var descriptor = Object.getOwnPropertyDescriptor(views, key);
        if ("get" in descriptor) {
          apiDefineProperty(self2, key, descriptor);
          makeObservable(self2, (_a2 = {}, _a2[key] = computed, _a2));
        } else if (typeof descriptor.value === "function") {
          addHiddenFinalProp(self2, key, descriptor.value);
        } else {
          throw fail$1("A view member should either be a function or getter based property");
        }
      });
    }
  });
  Object.defineProperty(ModelType2.prototype, "instantiate", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(parent, subpath, environment, initialValue) {
      var value = isStateTreeNode(initialValue) ? initialValue : this.applySnapshotPreProcessor(initialValue);
      return createObjectNode(this, parent, subpath, environment, value);
    }
  });
  Object.defineProperty(ModelType2.prototype, "initializeChildNodes", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(objNode, initialSnapshot) {
      if (initialSnapshot === void 0) {
        initialSnapshot = {};
      }
      var type = objNode.type;
      var result = {};
      type.forAllProps(function(name, childType) {
        result[name] = childType.instantiate(objNode, name, void 0, initialSnapshot[name]);
      });
      return result;
    }
  });
  Object.defineProperty(ModelType2.prototype, "createNewInstance", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(childNodes) {
      return observable.object(childNodes, EMPTY_OBJECT, mobxShallow);
    }
  });
  Object.defineProperty(ModelType2.prototype, "finalizeNewInstance", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2, instance) {
      addHiddenFinalProp(instance, "toString", objectTypeToString);
      this.forAllProps(function(name) {
        interceptReads(instance, name, node2.unbox);
      });
      this.initializers.reduce(function(self2, fn) {
        return fn(self2);
      }, instance);
      intercept(instance, this.willChange);
      observe(instance, this.didChange);
    }
  });
  Object.defineProperty(ModelType2.prototype, "willChange", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(chg) {
      var change = chg;
      var node2 = getStateTreeNode(change.object);
      var subpath = change.name;
      node2.assertWritable({ subpath });
      var childType = node2.type.properties[subpath];
      if (childType) {
        typecheckInternal(childType, change.newValue);
        change.newValue = childType.reconcile(node2.getChildNode(subpath), change.newValue, node2, subpath);
      }
      return change;
    }
  });
  Object.defineProperty(ModelType2.prototype, "didChange", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(chg) {
      var change = chg;
      var childNode = getStateTreeNode(change.object);
      var childType = childNode.type.properties[change.name];
      if (!childType) {
        return;
      }
      var oldChildValue = change.oldValue ? change.oldValue.snapshot : void 0;
      childNode.emitPatch({
        op: "replace",
        path: escapeJsonPath(change.name),
        value: change.newValue.snapshot,
        oldValue: oldChildValue
      }, childNode);
    }
  });
  Object.defineProperty(ModelType2.prototype, "getChildren", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2) {
      var _this = this;
      var res = [];
      this.forAllProps(function(name) {
        res.push(_this.getChildNode(node2, name));
      });
      return res;
    }
  });
  Object.defineProperty(ModelType2.prototype, "getChildNode", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2, key) {
      if (!(key in this.properties))
        throw fail$1("Not a value property: " + key);
      var adm = getAdministration(node2.storedValue, key);
      var childNode = adm.raw();
      if (!childNode)
        throw fail$1("Node not available for property " + key);
      return childNode;
    }
  });
  Object.defineProperty(ModelType2.prototype, "getSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2, applyPostProcess) {
      var _this = this;
      if (applyPostProcess === void 0) {
        applyPostProcess = true;
      }
      var res = {};
      this.forAllProps(function(name, type) {
        getAtom(node2.storedValue, name).reportObserved();
        res[name] = _this.getChildNode(node2, name).snapshot;
      });
      if (applyPostProcess) {
        return this.applySnapshotPostProcessor(res);
      }
      return res;
    }
  });
  Object.defineProperty(ModelType2.prototype, "processInitialSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(childNodes) {
      var processed = {};
      Object.keys(childNodes).forEach(function(key) {
        processed[key] = childNodes[key].getSnapshot();
      });
      return this.applySnapshotPostProcessor(processed);
    }
  });
  Object.defineProperty(ModelType2.prototype, "applyPatchLocally", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2, subpath, patch) {
      if (!(patch.op === "replace" || patch.op === "add")) {
        throw fail$1("object does not support operation " + patch.op);
      }
      node2.storedValue[subpath] = patch.value;
    }
  });
  Object.defineProperty(ModelType2.prototype, "applySnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2, snapshot) {
      var preProcessedSnapshot = this.applySnapshotPreProcessor(snapshot);
      typecheckInternal(this, preProcessedSnapshot);
      this.forAllProps(function(name) {
        node2.storedValue[name] = preProcessedSnapshot[name];
      });
    }
  });
  Object.defineProperty(ModelType2.prototype, "applySnapshotPreProcessor", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(snapshot) {
      var processor = this.preProcessor;
      return processor ? processor.call(null, snapshot) : snapshot;
    }
  });
  Object.defineProperty(ModelType2.prototype, "applySnapshotPostProcessor", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(snapshot) {
      var postProcessor = this.postProcessor;
      if (postProcessor)
        return postProcessor.call(null, snapshot);
      return snapshot;
    }
  });
  Object.defineProperty(ModelType2.prototype, "getChildType", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(propertyName) {
      return this.properties[propertyName];
    }
  });
  Object.defineProperty(ModelType2.prototype, "isValidSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(value, context) {
      var _this = this;
      var snapshot = this.applySnapshotPreProcessor(value);
      if (!isPlainObject(snapshot)) {
        return typeCheckFailure(context, snapshot, "Value is not a plain object");
      }
      return flattenTypeErrors(this.propertyNames.map(function(key) {
        return _this.properties[key].validate(snapshot[key], getContextForPath(context, key, _this.properties[key]));
      }));
    }
  });
  Object.defineProperty(ModelType2.prototype, "forAllProps", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(fn) {
      var _this = this;
      this.propertyNames.forEach(function(key) {
        return fn(key, _this.properties[key]);
      });
    }
  });
  Object.defineProperty(ModelType2.prototype, "describe", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      var _this = this;
      return "{ " + this.propertyNames.map(function(key) {
        return key + ": " + _this.properties[key].describe();
      }).join("; ") + " }";
    }
  });
  Object.defineProperty(ModelType2.prototype, "getDefaultSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return EMPTY_OBJECT;
    }
  });
  Object.defineProperty(ModelType2.prototype, "removeChild", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2, subpath) {
      node2.storedValue[subpath] = void 0;
    }
  });
  return ModelType2;
}(ComplexType);
ModelType.prototype.applySnapshot = action(ModelType.prototype.applySnapshot);
function model() {
  var args = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }
  var name = typeof args[0] === "string" ? args.shift() : "AnonymousModel";
  var properties = args.shift() || {};
  return new ModelType({ name, properties });
}
function compose() {
  var args = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }
  var hasTypename = typeof args[0] === "string";
  var typeName = hasTypename ? args[0] : "AnonymousModel";
  if (hasTypename) {
    args.shift();
  }
  return args.reduce(function(prev2, cur) {
    return prev2.cloneAndEnhance({
      name: prev2.name + "_" + cur.name,
      properties: cur.properties,
      initializers: cur.initializers,
      preProcessor: function(snapshot) {
        return cur.applySnapshotPreProcessor(prev2.applySnapshotPreProcessor(snapshot));
      },
      postProcessor: function(snapshot) {
        return cur.applySnapshotPostProcessor(prev2.applySnapshotPostProcessor(snapshot));
      }
    });
  }).named(typeName);
}
function isModelType(type) {
  return isType(type) && (type.flags & TypeFlags.Object) > 0;
}
var CoreType = function(_super) {
  __extends(CoreType2, _super);
  function CoreType2(name, flags, checker, initializer) {
    if (initializer === void 0) {
      initializer = identity;
    }
    var _this = _super.call(this, name) || this;
    Object.defineProperty(_this, "flags", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: flags
    });
    Object.defineProperty(_this, "checker", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: checker
    });
    Object.defineProperty(_this, "initializer", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: initializer
    });
    _this.flags = flags;
    return _this;
  }
  Object.defineProperty(CoreType2.prototype, "describe", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return this.name;
    }
  });
  Object.defineProperty(CoreType2.prototype, "instantiate", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(parent, subpath, environment, initialValue) {
      return createScalarNode(this, parent, subpath, environment, initialValue);
    }
  });
  Object.defineProperty(CoreType2.prototype, "createNewInstance", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(snapshot) {
      return this.initializer(snapshot);
    }
  });
  Object.defineProperty(CoreType2.prototype, "isValidSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(value, context) {
      if (isPrimitive(value) && this.checker(value)) {
        return typeCheckSuccess();
      }
      var typeName = this.name === "Date" ? "Date or a unix milliseconds timestamp" : this.name;
      return typeCheckFailure(context, value, "Value is not a " + typeName);
    }
  });
  return CoreType2;
}(SimpleType);
var string = new CoreType("string", TypeFlags.String, function(v2) {
  return typeof v2 === "string";
});
var number = new CoreType("number", TypeFlags.Number, function(v2) {
  return typeof v2 === "number";
});
var integer = new CoreType("integer", TypeFlags.Integer, function(v2) {
  return isInteger(v2);
});
var boolean = new CoreType("boolean", TypeFlags.Boolean, function(v2) {
  return typeof v2 === "boolean";
});
var nullType = new CoreType("null", TypeFlags.Null, function(v2) {
  return v2 === null;
});
var undefinedType = new CoreType("undefined", TypeFlags.Undefined, function(v2) {
  return v2 === void 0;
});
var _DatePrimitive = new CoreType("Date", TypeFlags.Date, function(v2) {
  return typeof v2 === "number" || v2 instanceof Date;
}, function(v2) {
  return v2 instanceof Date ? v2 : new Date(v2);
});
_DatePrimitive.getSnapshot = function(node2) {
  return node2.storedValue.getTime();
};
var DatePrimitive = _DatePrimitive;
function getPrimitiveFactoryFromValue(value) {
  switch (typeof value) {
    case "string":
      return string;
    case "number":
      return number;
    case "boolean":
      return boolean;
    case "object":
      if (value instanceof Date)
        return DatePrimitive;
  }
  throw fail$1("Cannot determine primitive type from value " + value);
}
function isPrimitiveType(type) {
  return isType(type) && (type.flags & (TypeFlags.String | TypeFlags.Number | TypeFlags.Integer | TypeFlags.Boolean | TypeFlags.Date)) > 0;
}
var Literal = function(_super) {
  __extends(Literal2, _super);
  function Literal2(value) {
    var _this = _super.call(this, JSON.stringify(value)) || this;
    Object.defineProperty(_this, "value", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "flags", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: TypeFlags.Literal
    });
    _this.value = value;
    return _this;
  }
  Object.defineProperty(Literal2.prototype, "instantiate", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(parent, subpath, environment, initialValue) {
      return createScalarNode(this, parent, subpath, environment, initialValue);
    }
  });
  Object.defineProperty(Literal2.prototype, "describe", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return JSON.stringify(this.value);
    }
  });
  Object.defineProperty(Literal2.prototype, "isValidSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(value, context) {
      if (isPrimitive(value) && value === this.value) {
        return typeCheckSuccess();
      }
      return typeCheckFailure(context, value, "Value is not a literal " + JSON.stringify(this.value));
    }
  });
  return Literal2;
}(SimpleType);
function literal(value) {
  return new Literal(value);
}
var Refinement = function(_super) {
  __extends(Refinement2, _super);
  function Refinement2(name, _subtype, _predicate, _message) {
    var _this = _super.call(this, name) || this;
    Object.defineProperty(_this, "_subtype", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: _subtype
    });
    Object.defineProperty(_this, "_predicate", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: _predicate
    });
    Object.defineProperty(_this, "_message", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: _message
    });
    return _this;
  }
  Object.defineProperty(Refinement2.prototype, "flags", {
    get: function() {
      return this._subtype.flags | TypeFlags.Refinement;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Refinement2.prototype, "describe", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return this.name;
    }
  });
  Object.defineProperty(Refinement2.prototype, "instantiate", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(parent, subpath, environment, initialValue) {
      return this._subtype.instantiate(parent, subpath, environment, initialValue);
    }
  });
  Object.defineProperty(Refinement2.prototype, "isAssignableFrom", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(type) {
      return this._subtype.isAssignableFrom(type);
    }
  });
  Object.defineProperty(Refinement2.prototype, "isValidSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(value, context) {
      var subtypeErrors = this._subtype.validate(value, context);
      if (subtypeErrors.length > 0)
        return subtypeErrors;
      var snapshot = isStateTreeNode(value) ? getStateTreeNode(value).snapshot : value;
      if (!this._predicate(snapshot)) {
        return typeCheckFailure(context, value, this._message(value));
      }
      return typeCheckSuccess();
    }
  });
  Object.defineProperty(Refinement2.prototype, "reconcile", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(current, newValue, parent, subpath) {
      return this._subtype.reconcile(current, newValue, parent, subpath);
    }
  });
  Object.defineProperty(Refinement2.prototype, "getSubTypes", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return this._subtype;
    }
  });
  return Refinement2;
}(BaseType);
function refinement() {
  var args = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }
  var name = typeof args[0] === "string" ? args.shift() : isType(args[0]) ? args[0].name : null;
  var type = args[0];
  var predicate = args[1];
  var message = args[2] ? args[2] : function(v2) {
    return "Value does not respect the refinement predicate";
  };
  return new Refinement(name, type, predicate, message);
}
function enumeration(name, options) {
  var realOptions = typeof name === "string" ? options : name;
  var type = union.apply(void 0, __spread(realOptions.map(function(option) {
    return literal("" + option);
  })));
  if (typeof name === "string")
    type.name = name;
  return type;
}
var Union = function(_super) {
  __extends(Union2, _super);
  function Union2(name, _types, options) {
    var _this = _super.call(this, name) || this;
    Object.defineProperty(_this, "_types", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: _types
    });
    Object.defineProperty(_this, "_dispatcher", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(_this, "_eager", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: true
    });
    options = __assign$1({ eager: true, dispatcher: void 0 }, options);
    _this._dispatcher = options.dispatcher;
    if (!options.eager)
      _this._eager = false;
    return _this;
  }
  Object.defineProperty(Union2.prototype, "flags", {
    get: function() {
      var result = TypeFlags.Union;
      this._types.forEach(function(type) {
        result |= type.flags;
      });
      return result;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Union2.prototype, "isAssignableFrom", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(type) {
      return this._types.some(function(subType) {
        return subType.isAssignableFrom(type);
      });
    }
  });
  Object.defineProperty(Union2.prototype, "describe", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return "(" + this._types.map(function(factory) {
        return factory.describe();
      }).join(" | ") + ")";
    }
  });
  Object.defineProperty(Union2.prototype, "instantiate", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(parent, subpath, environment, initialValue) {
      var type = this.determineType(initialValue, void 0);
      if (!type)
        throw fail$1("No matching type for union " + this.describe());
      return type.instantiate(parent, subpath, environment, initialValue);
    }
  });
  Object.defineProperty(Union2.prototype, "reconcile", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(current, newValue, parent, subpath) {
      var type = this.determineType(newValue, current.getReconciliationType());
      if (!type)
        throw fail$1("No matching type for union " + this.describe());
      return type.reconcile(current, newValue, parent, subpath);
    }
  });
  Object.defineProperty(Union2.prototype, "determineType", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(value, reconcileCurrentType) {
      if (this._dispatcher) {
        return this._dispatcher(value);
      }
      if (reconcileCurrentType) {
        if (reconcileCurrentType.is(value)) {
          return reconcileCurrentType;
        }
        return this._types.filter(function(t2) {
          return t2 !== reconcileCurrentType;
        }).find(function(type) {
          return type.is(value);
        });
      } else {
        return this._types.find(function(type) {
          return type.is(value);
        });
      }
    }
  });
  Object.defineProperty(Union2.prototype, "isValidSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(value, context) {
      if (this._dispatcher) {
        return this._dispatcher(value).validate(value, context);
      }
      var allErrors = [];
      var applicableTypes = 0;
      for (var i = 0; i < this._types.length; i++) {
        var type = this._types[i];
        var errors = type.validate(value, context);
        if (errors.length === 0) {
          if (this._eager)
            return typeCheckSuccess();
          else
            applicableTypes++;
        } else {
          allErrors.push(errors);
        }
      }
      if (applicableTypes === 1)
        return typeCheckSuccess();
      return typeCheckFailure(context, value, "No type is applicable for the union").concat(flattenTypeErrors(allErrors));
    }
  });
  Object.defineProperty(Union2.prototype, "getSubTypes", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return this._types;
    }
  });
  return Union2;
}(BaseType);
function union(optionsOrType) {
  var otherTypes = [];
  for (var _i = 1; _i < arguments.length; _i++) {
    otherTypes[_i - 1] = arguments[_i];
  }
  var options = isType(optionsOrType) ? void 0 : optionsOrType;
  var types2 = isType(optionsOrType) ? __spread([optionsOrType], otherTypes) : otherTypes;
  var name = "(" + types2.map(function(type) {
    return type.name;
  }).join(" | ") + ")";
  return new Union(name, types2, options);
}
var OptionalValue = function(_super) {
  __extends(OptionalValue2, _super);
  function OptionalValue2(_subtype, _defaultValue, optionalValues) {
    var _this = _super.call(this, _subtype.name) || this;
    Object.defineProperty(_this, "_subtype", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: _subtype
    });
    Object.defineProperty(_this, "_defaultValue", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: _defaultValue
    });
    Object.defineProperty(_this, "optionalValues", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: optionalValues
    });
    return _this;
  }
  Object.defineProperty(OptionalValue2.prototype, "flags", {
    get: function() {
      return this._subtype.flags | TypeFlags.Optional;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(OptionalValue2.prototype, "describe", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return this._subtype.describe() + "?";
    }
  });
  Object.defineProperty(OptionalValue2.prototype, "instantiate", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(parent, subpath, environment, initialValue) {
      if (this.optionalValues.indexOf(initialValue) >= 0) {
        var defaultInstanceOrSnapshot = this.getDefaultInstanceOrSnapshot();
        return this._subtype.instantiate(parent, subpath, environment, defaultInstanceOrSnapshot);
      }
      return this._subtype.instantiate(parent, subpath, environment, initialValue);
    }
  });
  Object.defineProperty(OptionalValue2.prototype, "reconcile", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(current, newValue, parent, subpath) {
      return this._subtype.reconcile(current, this.optionalValues.indexOf(newValue) < 0 && this._subtype.is(newValue) ? newValue : this.getDefaultInstanceOrSnapshot(), parent, subpath);
    }
  });
  Object.defineProperty(OptionalValue2.prototype, "getDefaultInstanceOrSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      var defaultInstanceOrSnapshot = typeof this._defaultValue === "function" ? this._defaultValue() : this._defaultValue;
      if (typeof this._defaultValue === "function") {
        typecheckInternal(this, defaultInstanceOrSnapshot);
      }
      return defaultInstanceOrSnapshot;
    }
  });
  Object.defineProperty(OptionalValue2.prototype, "isValidSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(value, context) {
      if (this.optionalValues.indexOf(value) >= 0) {
        return typeCheckSuccess();
      }
      return this._subtype.validate(value, context);
    }
  });
  Object.defineProperty(OptionalValue2.prototype, "isAssignableFrom", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(type) {
      return this._subtype.isAssignableFrom(type);
    }
  });
  Object.defineProperty(OptionalValue2.prototype, "getSubTypes", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return this._subtype;
    }
  });
  return OptionalValue2;
}(BaseType);
function checkOptionalPreconditions(type, defaultValueOrFunction) {
  if (typeof defaultValueOrFunction !== "function" && isStateTreeNode(defaultValueOrFunction)) {
    throw fail$1("default value cannot be an instance, pass a snapshot or a function that creates an instance/snapshot instead");
  }
}
function optional(type, defaultValueOrFunction, optionalValues) {
  checkOptionalPreconditions(type, defaultValueOrFunction);
  return new OptionalValue(type, defaultValueOrFunction, optionalValues ? optionalValues : undefinedAsOptionalValues);
}
var undefinedAsOptionalValues = [void 0];
var optionalUndefinedType = optional(undefinedType, void 0);
var optionalNullType = optional(nullType, null);
function maybe(type) {
  return union(type, optionalUndefinedType);
}
function maybeNull(type) {
  return union(type, optionalNullType);
}
var Late = function(_super) {
  __extends(Late2, _super);
  function Late2(name, _definition) {
    var _this = _super.call(this, name) || this;
    Object.defineProperty(_this, "_definition", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: _definition
    });
    Object.defineProperty(_this, "_subType", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    return _this;
  }
  Object.defineProperty(Late2.prototype, "flags", {
    get: function() {
      return (this._subType ? this._subType.flags : 0) | TypeFlags.Late;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Late2.prototype, "getSubType", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(mustSucceed) {
      if (!this._subType) {
        var t2 = void 0;
        try {
          t2 = this._definition();
        } catch (e2) {
          if (e2 instanceof ReferenceError)
            t2 = void 0;
          else
            throw e2;
        }
        if (mustSucceed && t2 === void 0)
          throw fail$1("Late type seems to be used too early, the definition (still) returns undefined");
        if (t2) {
          this._subType = t2;
        }
      }
      return this._subType;
    }
  });
  Object.defineProperty(Late2.prototype, "instantiate", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(parent, subpath, environment, initialValue) {
      return this.getSubType(true).instantiate(parent, subpath, environment, initialValue);
    }
  });
  Object.defineProperty(Late2.prototype, "reconcile", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(current, newValue, parent, subpath) {
      return this.getSubType(true).reconcile(current, newValue, parent, subpath);
    }
  });
  Object.defineProperty(Late2.prototype, "describe", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      var t2 = this.getSubType(false);
      return t2 ? t2.name : "<uknown late type>";
    }
  });
  Object.defineProperty(Late2.prototype, "isValidSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(value, context) {
      var t2 = this.getSubType(false);
      if (!t2) {
        return typeCheckSuccess();
      }
      return t2.validate(value, context);
    }
  });
  Object.defineProperty(Late2.prototype, "isAssignableFrom", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(type) {
      var t2 = this.getSubType(false);
      return t2 ? t2.isAssignableFrom(type) : false;
    }
  });
  Object.defineProperty(Late2.prototype, "getSubTypes", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      var subtype = this.getSubType(false);
      return subtype ? subtype : cannotDetermineSubtype;
    }
  });
  return Late2;
}(BaseType);
function late(nameOrType, maybeType) {
  var name = typeof nameOrType === "string" ? nameOrType : "late(" + nameOrType.toString() + ")";
  var type = typeof nameOrType === "string" ? maybeType : nameOrType;
  return new Late(name, type);
}
var Frozen = function(_super) {
  __extends(Frozen2, _super);
  function Frozen2(subType) {
    var _this = _super.call(this, subType ? "frozen(" + subType.name + ")" : "frozen") || this;
    Object.defineProperty(_this, "subType", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: subType
    });
    Object.defineProperty(_this, "flags", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: TypeFlags.Frozen
    });
    return _this;
  }
  Object.defineProperty(Frozen2.prototype, "describe", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return "<any immutable value>";
    }
  });
  Object.defineProperty(Frozen2.prototype, "instantiate", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(parent, subpath, environment, value) {
      return createScalarNode(this, parent, subpath, environment, deepFreeze(value));
    }
  });
  Object.defineProperty(Frozen2.prototype, "isValidSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(value, context) {
      if (!isSerializable(value)) {
        return typeCheckFailure(context, value, "Value is not serializable and cannot be frozen");
      }
      if (this.subType)
        return this.subType.validate(value, context);
      return typeCheckSuccess();
    }
  });
  return Frozen2;
}(SimpleType);
var untypedFrozenInstance = new Frozen();
function frozen(arg) {
  if (arguments.length === 0)
    return untypedFrozenInstance;
  else if (isType(arg))
    return new Frozen(arg);
  else
    return optional(untypedFrozenInstance, arg);
}
function getInvalidationCause(hook) {
  switch (hook) {
    case Hook.beforeDestroy:
      return "destroy";
    case Hook.beforeDetach:
      return "detach";
    default:
      return void 0;
  }
}
var StoredReference = function() {
  function StoredReference2(value, targetType) {
    Object.defineProperty(this, "targetType", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: targetType
    });
    Object.defineProperty(this, "identifier", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "node", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "resolvedReference", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    if (isValidIdentifier(value)) {
      this.identifier = value;
    } else if (isStateTreeNode(value)) {
      var targetNode = getStateTreeNode(value);
      if (!targetNode.identifierAttribute)
        throw fail$1("Can only store references with a defined identifier attribute.");
      var id2 = targetNode.unnormalizedIdentifier;
      if (id2 === null || id2 === void 0) {
        throw fail$1("Can only store references to tree nodes with a defined identifier.");
      }
      this.identifier = id2;
    } else {
      throw fail$1("Can only store references to tree nodes or identifiers, got: '" + value + "'");
    }
  }
  Object.defineProperty(StoredReference2.prototype, "updateResolvedReference", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2) {
      var normalizedId = normalizeIdentifier(this.identifier);
      var root2 = node2.root;
      var lastCacheModification = root2.identifierCache.getLastCacheModificationPerId(normalizedId);
      if (!this.resolvedReference || this.resolvedReference.lastCacheModification !== lastCacheModification) {
        var targetType = this.targetType;
        var target = root2.identifierCache.resolve(targetType, normalizedId);
        if (!target) {
          throw new InvalidReferenceError("[mobx-state-tree] Failed to resolve reference '" + this.identifier + "' to type '" + this.targetType.name + "' (from node: " + node2.path + ")");
        }
        this.resolvedReference = {
          node: target,
          lastCacheModification
        };
      }
    }
  });
  Object.defineProperty(StoredReference2.prototype, "resolvedValue", {
    get: function() {
      this.updateResolvedReference(this.node);
      return this.resolvedReference.node.value;
    },
    enumerable: false,
    configurable: true
  });
  return StoredReference2;
}();
var InvalidReferenceError = function(_super) {
  __extends(InvalidReferenceError2, _super);
  function InvalidReferenceError2(m2) {
    var _this = _super.call(this, m2) || this;
    Object.setPrototypeOf(_this, InvalidReferenceError2.prototype);
    return _this;
  }
  return InvalidReferenceError2;
}(Error);
var BaseReferenceType = function(_super) {
  __extends(BaseReferenceType2, _super);
  function BaseReferenceType2(targetType, onInvalidated) {
    var _this = _super.call(this, "reference(" + targetType.name + ")") || this;
    Object.defineProperty(_this, "targetType", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: targetType
    });
    Object.defineProperty(_this, "onInvalidated", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: onInvalidated
    });
    Object.defineProperty(_this, "flags", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: TypeFlags.Reference
    });
    return _this;
  }
  Object.defineProperty(BaseReferenceType2.prototype, "describe", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return this.name;
    }
  });
  Object.defineProperty(BaseReferenceType2.prototype, "isAssignableFrom", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(type) {
      return this.targetType.isAssignableFrom(type);
    }
  });
  Object.defineProperty(BaseReferenceType2.prototype, "isValidSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(value, context) {
      return isValidIdentifier(value) ? typeCheckSuccess() : typeCheckFailure(context, value, "Value is not a valid identifier, which is a string or a number");
    }
  });
  Object.defineProperty(BaseReferenceType2.prototype, "fireInvalidated", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(cause, storedRefNode, referenceId, refTargetNode) {
      var storedRefParentNode = storedRefNode.parent;
      if (!storedRefParentNode || !storedRefParentNode.isAlive) {
        return;
      }
      var storedRefParentValue = storedRefParentNode.storedValue;
      if (!storedRefParentValue) {
        return;
      }
      this.onInvalidated({
        cause,
        parent: storedRefParentValue,
        invalidTarget: refTargetNode ? refTargetNode.storedValue : void 0,
        invalidId: referenceId,
        replaceRef: function(newRef) {
          applyPatch(storedRefNode.root.storedValue, {
            op: "replace",
            value: newRef,
            path: storedRefNode.path
          });
        },
        removeRef: function() {
          if (isModelType(storedRefParentNode.type)) {
            this.replaceRef(void 0);
          } else {
            applyPatch(storedRefNode.root.storedValue, {
              op: "remove",
              path: storedRefNode.path
            });
          }
        }
      });
    }
  });
  Object.defineProperty(BaseReferenceType2.prototype, "addTargetNodeWatcher", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(storedRefNode, referenceId) {
      var _this = this;
      var refTargetValue = this.getValue(storedRefNode);
      if (!refTargetValue) {
        return void 0;
      }
      var refTargetNode = getStateTreeNode(refTargetValue);
      var hookHandler = function(_2, refTargetNodeHook) {
        var cause = getInvalidationCause(refTargetNodeHook);
        if (!cause) {
          return;
        }
        _this.fireInvalidated(cause, storedRefNode, referenceId, refTargetNode);
      };
      var refTargetDetachHookDisposer = refTargetNode.registerHook(Hook.beforeDetach, hookHandler);
      var refTargetDestroyHookDisposer = refTargetNode.registerHook(Hook.beforeDestroy, hookHandler);
      return function() {
        refTargetDetachHookDisposer();
        refTargetDestroyHookDisposer();
      };
    }
  });
  Object.defineProperty(BaseReferenceType2.prototype, "watchTargetNodeForInvalidations", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(storedRefNode, identifier2, customGetSet) {
      var _this = this;
      if (!this.onInvalidated) {
        return;
      }
      var onRefTargetDestroyedHookDisposer;
      storedRefNode.registerHook(Hook.beforeDestroy, function() {
        if (onRefTargetDestroyedHookDisposer) {
          onRefTargetDestroyedHookDisposer();
        }
      });
      var startWatching = function(sync2) {
        if (onRefTargetDestroyedHookDisposer) {
          onRefTargetDestroyedHookDisposer();
        }
        var storedRefParentNode = storedRefNode.parent;
        var storedRefParentValue = storedRefParentNode && storedRefParentNode.storedValue;
        if (storedRefParentNode && storedRefParentNode.isAlive && storedRefParentValue) {
          var refTargetNodeExists = void 0;
          if (customGetSet) {
            refTargetNodeExists = !!customGetSet.get(identifier2, storedRefParentValue);
          } else {
            refTargetNodeExists = storedRefNode.root.identifierCache.has(_this.targetType, normalizeIdentifier(identifier2));
          }
          if (!refTargetNodeExists) {
            if (!sync2) {
              _this.fireInvalidated("invalidSnapshotReference", storedRefNode, identifier2, null);
            }
          } else {
            onRefTargetDestroyedHookDisposer = _this.addTargetNodeWatcher(storedRefNode, identifier2);
          }
        }
      };
      if (storedRefNode.state === NodeLifeCycle.FINALIZED) {
        startWatching(true);
      } else {
        if (!storedRefNode.isRoot) {
          storedRefNode.root.registerHook(Hook.afterCreationFinalization, function() {
            if (storedRefNode.parent) {
              storedRefNode.parent.createObservableInstanceIfNeeded();
            }
          });
        }
        storedRefNode.registerHook(Hook.afterAttach, function() {
          startWatching(false);
        });
      }
    }
  });
  return BaseReferenceType2;
}(SimpleType);
var IdentifierReferenceType = function(_super) {
  __extends(IdentifierReferenceType2, _super);
  function IdentifierReferenceType2(targetType, onInvalidated) {
    return _super.call(this, targetType, onInvalidated) || this;
  }
  Object.defineProperty(IdentifierReferenceType2.prototype, "getValue", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(storedRefNode) {
      if (!storedRefNode.isAlive)
        return void 0;
      var storedRef = storedRefNode.storedValue;
      return storedRef.resolvedValue;
    }
  });
  Object.defineProperty(IdentifierReferenceType2.prototype, "getSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(storedRefNode) {
      var ref = storedRefNode.storedValue;
      return ref.identifier;
    }
  });
  Object.defineProperty(IdentifierReferenceType2.prototype, "instantiate", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(parent, subpath, environment, initialValue) {
      var identifier2 = isStateTreeNode(initialValue) ? getIdentifier(initialValue) : initialValue;
      var storedRef = new StoredReference(initialValue, this.targetType);
      var storedRefNode = createScalarNode(this, parent, subpath, environment, storedRef);
      storedRef.node = storedRefNode;
      this.watchTargetNodeForInvalidations(storedRefNode, identifier2, void 0);
      return storedRefNode;
    }
  });
  Object.defineProperty(IdentifierReferenceType2.prototype, "reconcile", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(current, newValue, parent, subpath) {
      if (!current.isDetaching && current.type === this) {
        var compareByValue = isStateTreeNode(newValue);
        var ref = current.storedValue;
        if (!compareByValue && ref.identifier === newValue || compareByValue && ref.resolvedValue === newValue) {
          current.setParent(parent, subpath);
          return current;
        }
      }
      var newNode = this.instantiate(parent, subpath, void 0, newValue);
      current.die();
      return newNode;
    }
  });
  return IdentifierReferenceType2;
}(BaseReferenceType);
var CustomReferenceType = function(_super) {
  __extends(CustomReferenceType2, _super);
  function CustomReferenceType2(targetType, options, onInvalidated) {
    var _this = _super.call(this, targetType, onInvalidated) || this;
    Object.defineProperty(_this, "options", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: options
    });
    return _this;
  }
  Object.defineProperty(CustomReferenceType2.prototype, "getValue", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(storedRefNode) {
      if (!storedRefNode.isAlive)
        return void 0;
      var referencedNode = this.options.get(storedRefNode.storedValue, storedRefNode.parent ? storedRefNode.parent.storedValue : null);
      return referencedNode;
    }
  });
  Object.defineProperty(CustomReferenceType2.prototype, "getSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(storedRefNode) {
      return storedRefNode.storedValue;
    }
  });
  Object.defineProperty(CustomReferenceType2.prototype, "instantiate", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(parent, subpath, environment, newValue) {
      var identifier2 = isStateTreeNode(newValue) ? this.options.set(newValue, parent ? parent.storedValue : null) : newValue;
      var storedRefNode = createScalarNode(this, parent, subpath, environment, identifier2);
      this.watchTargetNodeForInvalidations(storedRefNode, identifier2, this.options);
      return storedRefNode;
    }
  });
  Object.defineProperty(CustomReferenceType2.prototype, "reconcile", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(current, newValue, parent, subpath) {
      var newIdentifier = isStateTreeNode(newValue) ? this.options.set(newValue, current ? current.storedValue : null) : newValue;
      if (!current.isDetaching && current.type === this && current.storedValue === newIdentifier) {
        current.setParent(parent, subpath);
        return current;
      }
      var newNode = this.instantiate(parent, subpath, void 0, newIdentifier);
      current.die();
      return newNode;
    }
  });
  return CustomReferenceType2;
}(BaseReferenceType);
function reference(subType, options) {
  var getSetOptions = options ? options : void 0;
  var onInvalidated = options ? options.onInvalidated : void 0;
  if (getSetOptions && (getSetOptions.get || getSetOptions.set)) {
    return new CustomReferenceType(subType, {
      get: getSetOptions.get,
      set: getSetOptions.set
    }, onInvalidated);
  } else {
    return new IdentifierReferenceType(subType, onInvalidated);
  }
}
function safeReference(subType, options) {
  var refType = reference(subType, __assign$1(__assign$1({}, options), { onInvalidated: function(ev) {
    if (options && options.onInvalidated) {
      options.onInvalidated(ev);
    }
    ev.removeRef();
  } }));
  if (options && options.acceptsUndefined === false) {
    return refType;
  } else {
    return maybe(refType);
  }
}
var BaseIdentifierType = function(_super) {
  __extends(BaseIdentifierType2, _super);
  function BaseIdentifierType2(name, validType) {
    var _this = _super.call(this, name) || this;
    Object.defineProperty(_this, "validType", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: validType
    });
    Object.defineProperty(_this, "flags", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: TypeFlags.Identifier
    });
    return _this;
  }
  Object.defineProperty(BaseIdentifierType2.prototype, "instantiate", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(parent, subpath, environment, initialValue) {
      if (!parent || !(parent.type instanceof ModelType))
        throw fail$1("Identifier types can only be instantiated as direct child of a model type");
      return createScalarNode(this, parent, subpath, environment, initialValue);
    }
  });
  Object.defineProperty(BaseIdentifierType2.prototype, "reconcile", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(current, newValue, parent, subpath) {
      if (current.storedValue !== newValue)
        throw fail$1("Tried to change identifier from '" + current.storedValue + "' to '" + newValue + "'. Changing identifiers is not allowed.");
      current.setParent(parent, subpath);
      return current;
    }
  });
  Object.defineProperty(BaseIdentifierType2.prototype, "isValidSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(value, context) {
      if (typeof value !== this.validType) {
        return typeCheckFailure(context, value, "Value is not a valid " + this.describe() + ", expected a " + this.validType);
      }
      return typeCheckSuccess();
    }
  });
  return BaseIdentifierType2;
}(SimpleType);
var IdentifierType = function(_super) {
  __extends(IdentifierType2, _super);
  function IdentifierType2() {
    var _this = _super.call(this, "identifier", "string") || this;
    Object.defineProperty(_this, "flags", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: TypeFlags.Identifier
    });
    return _this;
  }
  Object.defineProperty(IdentifierType2.prototype, "describe", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return "identifier";
    }
  });
  return IdentifierType2;
}(BaseIdentifierType);
var IdentifierNumberType = function(_super) {
  __extends(IdentifierNumberType2, _super);
  function IdentifierNumberType2() {
    return _super.call(this, "identifierNumber", "number") || this;
  }
  Object.defineProperty(IdentifierNumberType2.prototype, "getSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2) {
      return node2.storedValue;
    }
  });
  Object.defineProperty(IdentifierNumberType2.prototype, "describe", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return "identifierNumber";
    }
  });
  return IdentifierNumberType2;
}(BaseIdentifierType);
var identifier = new IdentifierType();
var identifierNumber = new IdentifierNumberType();
function normalizeIdentifier(id2) {
  return "" + id2;
}
function isValidIdentifier(id2) {
  return typeof id2 === "string" || typeof id2 === "number";
}
function custom(options) {
  return new CustomType(options);
}
var CustomType = function(_super) {
  __extends(CustomType2, _super);
  function CustomType2(options) {
    var _this = _super.call(this, options.name) || this;
    Object.defineProperty(_this, "options", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: options
    });
    Object.defineProperty(_this, "flags", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: TypeFlags.Custom
    });
    return _this;
  }
  Object.defineProperty(CustomType2.prototype, "describe", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function() {
      return this.name;
    }
  });
  Object.defineProperty(CustomType2.prototype, "isValidSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(value, context) {
      if (this.options.isTargetType(value))
        return typeCheckSuccess();
      var typeError = this.options.getValidationMessage(value);
      if (typeError) {
        return typeCheckFailure(context, value, "Invalid value for type '" + this.name + "': " + typeError);
      }
      return typeCheckSuccess();
    }
  });
  Object.defineProperty(CustomType2.prototype, "getSnapshot", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(node2) {
      return this.options.toSnapshot(node2.storedValue);
    }
  });
  Object.defineProperty(CustomType2.prototype, "instantiate", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(parent, subpath, environment, initialValue) {
      var valueToStore = this.options.isTargetType(initialValue) ? initialValue : this.options.fromSnapshot(initialValue, parent && parent.root.environment);
      return createScalarNode(this, parent, subpath, environment, valueToStore);
    }
  });
  Object.defineProperty(CustomType2.prototype, "reconcile", {
    enumerable: false,
    configurable: true,
    writable: true,
    value: function(current, value, parent, subpath) {
      var isSnapshot = !this.options.isTargetType(value);
      if (!current.isDetaching) {
        var unchanged = current.type === this && (isSnapshot ? value === current.snapshot : value === current.storedValue);
        if (unchanged) {
          current.setParent(parent, subpath);
          return current;
        }
      }
      var valueToStore = isSnapshot ? this.options.fromSnapshot(value, parent.root.environment) : value;
      var newNode = this.instantiate(parent, subpath, void 0, valueToStore);
      current.die();
      return newNode;
    }
  });
  return CustomType2;
}(SimpleType);
var types = {
  enumeration,
  model,
  compose,
  custom,
  reference,
  safeReference,
  union,
  optional,
  literal,
  maybe,
  maybeNull,
  refinement,
  string,
  boolean,
  number,
  integer,
  Date: DatePrimitive,
  map: map2,
  array: array2,
  frozen,
  identifier,
  identifierNumber,
  late,
  undefined: undefinedType,
  null: nullType,
  snapshotProcessor
};
function assertPath(path) {
  if (typeof path !== "string") {
    throw new TypeError("Path must be a string. Received " + JSON.stringify(path));
  }
}
function normalizeStringPosix(path, allowAboveRoot) {
  var res = "";
  var lastSegmentLength = 0;
  var lastSlash = -1;
  var dots = 0;
  var code;
  for (var i = 0; i <= path.length; ++i) {
    if (i < path.length)
      code = path.charCodeAt(i);
    else if (code === 47)
      break;
    else
      code = 47;
    if (code === 47) {
      if (lastSlash === i - 1 || dots === 1)
        ;
      else if (lastSlash !== i - 1 && dots === 2) {
        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 || res.charCodeAt(res.length - 2) !== 46) {
          if (res.length > 2) {
            var lastSlashIndex = res.lastIndexOf("/");
            if (lastSlashIndex !== res.length - 1) {
              if (lastSlashIndex === -1) {
                res = "";
                lastSegmentLength = 0;
              } else {
                res = res.slice(0, lastSlashIndex);
                lastSegmentLength = res.length - 1 - res.lastIndexOf("/");
              }
              lastSlash = i;
              dots = 0;
              continue;
            }
          } else if (res.length === 2 || res.length === 1) {
            res = "";
            lastSegmentLength = 0;
            lastSlash = i;
            dots = 0;
            continue;
          }
        }
        if (allowAboveRoot) {
          if (res.length > 0)
            res += "/..";
          else
            res = "..";
          lastSegmentLength = 2;
        }
      } else {
        if (res.length > 0)
          res += "/" + path.slice(lastSlash + 1, i);
        else
          res = path.slice(lastSlash + 1, i);
        lastSegmentLength = i - lastSlash - 1;
      }
      lastSlash = i;
      dots = 0;
    } else if (code === 46 && dots !== -1) {
      ++dots;
    } else {
      dots = -1;
    }
  }
  return res;
}
function _format(sep, pathObject) {
  var dir = pathObject.dir || pathObject.root;
  var base = pathObject.base || (pathObject.name || "") + (pathObject.ext || "");
  if (!dir) {
    return base;
  }
  if (dir === pathObject.root) {
    return dir + base;
  }
  return dir + sep + base;
}
var posix = {
  resolve: function resolve() {
    var resolvedPath = "";
    var resolvedAbsolute = false;
    var cwd;
    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
      var path;
      if (i >= 0)
        path = arguments[i];
      else {
        if (cwd === void 0)
          cwd = process.cwd();
        path = cwd;
      }
      assertPath(path);
      if (path.length === 0) {
        continue;
      }
      resolvedPath = path + "/" + resolvedPath;
      resolvedAbsolute = path.charCodeAt(0) === 47;
    }
    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);
    if (resolvedAbsolute) {
      if (resolvedPath.length > 0)
        return "/" + resolvedPath;
      else
        return "/";
    } else if (resolvedPath.length > 0) {
      return resolvedPath;
    } else {
      return ".";
    }
  },
  normalize: function normalize2(path) {
    assertPath(path);
    if (path.length === 0)
      return ".";
    var isAbsolute2 = path.charCodeAt(0) === 47;
    var trailingSeparator = path.charCodeAt(path.length - 1) === 47;
    path = normalizeStringPosix(path, !isAbsolute2);
    if (path.length === 0 && !isAbsolute2)
      path = ".";
    if (path.length > 0 && trailingSeparator)
      path += "/";
    if (isAbsolute2)
      return "/" + path;
    return path;
  },
  isAbsolute: function isAbsolute(path) {
    assertPath(path);
    return path.length > 0 && path.charCodeAt(0) === 47;
  },
  join: function join() {
    if (arguments.length === 0)
      return ".";
    var joined;
    for (var i = 0; i < arguments.length; ++i) {
      var arg = arguments[i];
      assertPath(arg);
      if (arg.length > 0) {
        if (joined === void 0)
          joined = arg;
        else
          joined += "/" + arg;
      }
    }
    if (joined === void 0)
      return ".";
    return posix.normalize(joined);
  },
  relative: function relative(from2, to) {
    assertPath(from2);
    assertPath(to);
    if (from2 === to)
      return "";
    from2 = posix.resolve(from2);
    to = posix.resolve(to);
    if (from2 === to)
      return "";
    var fromStart = 1;
    for (; fromStart < from2.length; ++fromStart) {
      if (from2.charCodeAt(fromStart) !== 47)
        break;
    }
    var fromEnd = from2.length;
    var fromLen = fromEnd - fromStart;
    var toStart = 1;
    for (; toStart < to.length; ++toStart) {
      if (to.charCodeAt(toStart) !== 47)
        break;
    }
    var toEnd = to.length;
    var toLen = toEnd - toStart;
    var length2 = fromLen < toLen ? fromLen : toLen;
    var lastCommonSep = -1;
    var i = 0;
    for (; i <= length2; ++i) {
      if (i === length2) {
        if (toLen > length2) {
          if (to.charCodeAt(toStart + i) === 47) {
            return to.slice(toStart + i + 1);
          } else if (i === 0) {
            return to.slice(toStart + i);
          }
        } else if (fromLen > length2) {
          if (from2.charCodeAt(fromStart + i) === 47) {
            lastCommonSep = i;
          } else if (i === 0) {
            lastCommonSep = 0;
          }
        }
        break;
      }
      var fromCode = from2.charCodeAt(fromStart + i);
      var toCode = to.charCodeAt(toStart + i);
      if (fromCode !== toCode)
        break;
      else if (fromCode === 47)
        lastCommonSep = i;
    }
    var out = "";
    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
      if (i === fromEnd || from2.charCodeAt(i) === 47) {
        if (out.length === 0)
          out += "..";
        else
          out += "/..";
      }
    }
    if (out.length > 0)
      return out + to.slice(toStart + lastCommonSep);
    else {
      toStart += lastCommonSep;
      if (to.charCodeAt(toStart) === 47)
        ++toStart;
      return to.slice(toStart);
    }
  },
  _makeLong: function _makeLong(path) {
    return path;
  },
  dirname: function dirname(path) {
    assertPath(path);
    if (path.length === 0)
      return ".";
    var code = path.charCodeAt(0);
    var hasRoot = code === 47;
    var end = -1;
    var matchedSlash = true;
    for (var i = path.length - 1; i >= 1; --i) {
      code = path.charCodeAt(i);
      if (code === 47) {
        if (!matchedSlash) {
          end = i;
          break;
        }
      } else {
        matchedSlash = false;
      }
    }
    if (end === -1)
      return hasRoot ? "/" : ".";
    if (hasRoot && end === 1)
      return "//";
    return path.slice(0, end);
  },
  basename: function basename(path, ext) {
    if (ext !== void 0 && typeof ext !== "string")
      throw new TypeError('"ext" argument must be a string');
    assertPath(path);
    var start = 0;
    var end = -1;
    var matchedSlash = true;
    var i;
    if (ext !== void 0 && ext.length > 0 && ext.length <= path.length) {
      if (ext.length === path.length && ext === path)
        return "";
      var extIdx = ext.length - 1;
      var firstNonSlashEnd = -1;
      for (i = path.length - 1; i >= 0; --i) {
        var code = path.charCodeAt(i);
        if (code === 47) {
          if (!matchedSlash) {
            start = i + 1;
            break;
          }
        } else {
          if (firstNonSlashEnd === -1) {
            matchedSlash = false;
            firstNonSlashEnd = i + 1;
          }
          if (extIdx >= 0) {
            if (code === ext.charCodeAt(extIdx)) {
              if (--extIdx === -1) {
                end = i;
              }
            } else {
              extIdx = -1;
              end = firstNonSlashEnd;
            }
          }
        }
      }
      if (start === end)
        end = firstNonSlashEnd;
      else if (end === -1)
        end = path.length;
      return path.slice(start, end);
    } else {
      for (i = path.length - 1; i >= 0; --i) {
        if (path.charCodeAt(i) === 47) {
          if (!matchedSlash) {
            start = i + 1;
            break;
          }
        } else if (end === -1) {
          matchedSlash = false;
          end = i + 1;
        }
      }
      if (end === -1)
        return "";
      return path.slice(start, end);
    }
  },
  extname: function extname(path) {
    assertPath(path);
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    var preDotState = 0;
    for (var i = path.length - 1; i >= 0; --i) {
      var code = path.charCodeAt(i);
      if (code === 47) {
        if (!matchedSlash) {
          startPart = i + 1;
          break;
        }
        continue;
      }
      if (end === -1) {
        matchedSlash = false;
        end = i + 1;
      }
      if (code === 46) {
        if (startDot === -1)
          startDot = i;
        else if (preDotState !== 1)
          preDotState = 1;
      } else if (startDot !== -1) {
        preDotState = -1;
      }
    }
    if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
      return "";
    }
    return path.slice(startDot, end);
  },
  format: function format(pathObject) {
    if (pathObject === null || typeof pathObject !== "object") {
      throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof pathObject);
    }
    return _format("/", pathObject);
  },
  parse: function parse2(path) {
    assertPath(path);
    var ret = { root: "", dir: "", base: "", ext: "", name: "" };
    if (path.length === 0)
      return ret;
    var code = path.charCodeAt(0);
    var isAbsolute2 = code === 47;
    var start;
    if (isAbsolute2) {
      ret.root = "/";
      start = 1;
    } else {
      start = 0;
    }
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    var i = path.length - 1;
    var preDotState = 0;
    for (; i >= start; --i) {
      code = path.charCodeAt(i);
      if (code === 47) {
        if (!matchedSlash) {
          startPart = i + 1;
          break;
        }
        continue;
      }
      if (end === -1) {
        matchedSlash = false;
        end = i + 1;
      }
      if (code === 46) {
        if (startDot === -1)
          startDot = i;
        else if (preDotState !== 1)
          preDotState = 1;
      } else if (startDot !== -1) {
        preDotState = -1;
      }
    }
    if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
      if (end !== -1) {
        if (startPart === 0 && isAbsolute2)
          ret.base = ret.name = path.slice(1, end);
        else
          ret.base = ret.name = path.slice(startPart, end);
      }
    } else {
      if (startPart === 0 && isAbsolute2) {
        ret.name = path.slice(1, startDot);
        ret.base = path.slice(1, end);
      } else {
        ret.name = path.slice(startPart, startDot);
        ret.base = path.slice(startPart, end);
      }
      ret.ext = path.slice(startDot, end);
    }
    if (startPart > 0)
      ret.dir = path.slice(0, startPart - 1);
    else if (isAbsolute2)
      ret.dir = "/";
    return ret;
  },
  sep: "/",
  delimiter: ":",
  win32: null,
  posix: null
};
posix.posix = posix;
var pathBrowserify = posix;
if (!react.exports.useState) {
  throw new Error("mobx-react-lite requires React with Hooks support");
}
if (!makeObservable) {
  throw new Error("mobx-react-lite@3 requires mobx at least version 6 to be available");
}
function defaultNoopBatch(callback) {
  callback();
}
function observerBatching(reactionScheduler3) {
  if (!reactionScheduler3) {
    reactionScheduler3 = defaultNoopBatch;
  }
  configure({ reactionScheduler: reactionScheduler3 });
}
function printDebugValue(v2) {
  return getDependencyTree(v2);
}
var FinalizationRegistryLocal = typeof FinalizationRegistry === "undefined" ? void 0 : FinalizationRegistry;
function createTrackingData(reaction2) {
  var trackingData = {
    reaction: reaction2,
    mounted: false,
    changedBeforeMount: false,
    cleanAt: Date.now() + CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS
  };
  return trackingData;
}
var CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS = 1e4;
var CLEANUP_TIMER_LOOP_MILLIS = 1e4;
function createReactionCleanupTrackingUsingFinalizationRegister(FinalizationRegistry2) {
  var cleanupTokenToReactionTrackingMap = new Map();
  var globalCleanupTokensCounter = 1;
  var registry = new FinalizationRegistry2(function cleanupFunction(token2) {
    var trackedReaction = cleanupTokenToReactionTrackingMap.get(token2);
    if (trackedReaction) {
      trackedReaction.reaction.dispose();
      cleanupTokenToReactionTrackingMap.delete(token2);
    }
  });
  return {
    addReactionToTrack: function(reactionTrackingRef, reaction2, objectRetainedByReact) {
      var token2 = globalCleanupTokensCounter++;
      registry.register(objectRetainedByReact, token2, reactionTrackingRef);
      reactionTrackingRef.current = createTrackingData(reaction2);
      reactionTrackingRef.current.finalizationRegistryCleanupToken = token2;
      cleanupTokenToReactionTrackingMap.set(token2, reactionTrackingRef.current);
      return reactionTrackingRef.current;
    },
    recordReactionAsCommitted: function(reactionRef) {
      registry.unregister(reactionRef);
      if (reactionRef.current && reactionRef.current.finalizationRegistryCleanupToken) {
        cleanupTokenToReactionTrackingMap.delete(reactionRef.current.finalizationRegistryCleanupToken);
      }
    },
    forceCleanupTimerToRunNowForTests: function() {
    },
    resetCleanupScheduleForTests: function() {
    }
  };
}
var __values = globalThis && globalThis.__values || function(o2) {
  var s = typeof Symbol === "function" && Symbol.iterator, m2 = s && o2[s], i = 0;
  if (m2)
    return m2.call(o2);
  if (o2 && typeof o2.length === "number")
    return {
      next: function() {
        if (o2 && i >= o2.length)
          o2 = void 0;
        return { value: o2 && o2[i++], done: !o2 };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
function createTimerBasedReactionCleanupTracking() {
  var uncommittedReactionRefs = new Set();
  var reactionCleanupHandle;
  function forceCleanupTimerToRunNowForTests() {
    if (reactionCleanupHandle) {
      clearTimeout(reactionCleanupHandle);
      cleanUncommittedReactions();
    }
  }
  function resetCleanupScheduleForTests() {
    var e_1, _a2;
    if (uncommittedReactionRefs.size > 0) {
      try {
        for (var uncommittedReactionRefs_1 = __values(uncommittedReactionRefs), uncommittedReactionRefs_1_1 = uncommittedReactionRefs_1.next(); !uncommittedReactionRefs_1_1.done; uncommittedReactionRefs_1_1 = uncommittedReactionRefs_1.next()) {
          var ref = uncommittedReactionRefs_1_1.value;
          var tracking = ref.current;
          if (tracking) {
            tracking.reaction.dispose();
            ref.current = null;
          }
        }
      } catch (e_1_1) {
        e_1 = { error: e_1_1 };
      } finally {
        try {
          if (uncommittedReactionRefs_1_1 && !uncommittedReactionRefs_1_1.done && (_a2 = uncommittedReactionRefs_1.return))
            _a2.call(uncommittedReactionRefs_1);
        } finally {
          if (e_1)
            throw e_1.error;
        }
      }
      uncommittedReactionRefs.clear();
    }
    if (reactionCleanupHandle) {
      clearTimeout(reactionCleanupHandle);
      reactionCleanupHandle = void 0;
    }
  }
  function ensureCleanupTimerRunning() {
    if (reactionCleanupHandle === void 0) {
      reactionCleanupHandle = setTimeout(cleanUncommittedReactions, CLEANUP_TIMER_LOOP_MILLIS);
    }
  }
  function scheduleCleanupOfReactionIfLeaked(ref) {
    uncommittedReactionRefs.add(ref);
    ensureCleanupTimerRunning();
  }
  function recordReactionAsCommitted2(reactionRef) {
    uncommittedReactionRefs.delete(reactionRef);
  }
  function cleanUncommittedReactions() {
    reactionCleanupHandle = void 0;
    var now = Date.now();
    uncommittedReactionRefs.forEach(function(ref) {
      var tracking = ref.current;
      if (tracking) {
        if (now >= tracking.cleanAt) {
          tracking.reaction.dispose();
          ref.current = null;
          uncommittedReactionRefs.delete(ref);
        }
      }
    });
    if (uncommittedReactionRefs.size > 0) {
      ensureCleanupTimerRunning();
    }
  }
  return {
    addReactionToTrack: function(reactionTrackingRef, reaction2, objectRetainedByReact) {
      reactionTrackingRef.current = createTrackingData(reaction2);
      scheduleCleanupOfReactionIfLeaked(reactionTrackingRef);
      return reactionTrackingRef.current;
    },
    recordReactionAsCommitted: recordReactionAsCommitted2,
    forceCleanupTimerToRunNowForTests,
    resetCleanupScheduleForTests
  };
}
var _a = FinalizationRegistryLocal ? createReactionCleanupTrackingUsingFinalizationRegister(FinalizationRegistryLocal) : createTimerBasedReactionCleanupTracking(), addReactionToTrack = _a.addReactionToTrack, recordReactionAsCommitted = _a.recordReactionAsCommitted;
var __read = globalThis && globalThis.__read || function(o2, n2) {
  var m2 = typeof Symbol === "function" && o2[Symbol.iterator];
  if (!m2)
    return o2;
  var i = m2.call(o2), r2, ar = [], e2;
  try {
    while ((n2 === void 0 || n2-- > 0) && !(r2 = i.next()).done)
      ar.push(r2.value);
  } catch (error) {
    e2 = { error };
  } finally {
    try {
      if (r2 && !r2.done && (m2 = i["return"]))
        m2.call(i);
    } finally {
      if (e2)
        throw e2.error;
    }
  }
  return ar;
};
function observerComponentNameFor(baseComponentName) {
  return "observer" + baseComponentName;
}
var ObjectToBeRetainedByReact = function() {
  function ObjectToBeRetainedByReact2() {
  }
  return ObjectToBeRetainedByReact2;
}();
function objectToBeRetainedByReactFactory() {
  return new ObjectToBeRetainedByReact();
}
function useObserver(fn, baseComponentName) {
  if (baseComponentName === void 0) {
    baseComponentName = "observed";
  }
  var _a2 = __read(React.useState(objectToBeRetainedByReactFactory), 1), objectRetainedByReact = _a2[0];
  var _b = __read(React.useState(), 2), setState = _b[1];
  var forceUpdate = function() {
    return setState([]);
  };
  var reactionTrackingRef = React.useRef(null);
  if (!reactionTrackingRef.current) {
    var newReaction = new Reaction(observerComponentNameFor(baseComponentName), function() {
      if (trackingData_1.mounted) {
        forceUpdate();
      } else {
        trackingData_1.changedBeforeMount = true;
      }
    });
    var trackingData_1 = addReactionToTrack(reactionTrackingRef, newReaction, objectRetainedByReact);
  }
  var reaction2 = reactionTrackingRef.current.reaction;
  React.useDebugValue(reaction2, printDebugValue);
  React.useEffect(function() {
    recordReactionAsCommitted(reactionTrackingRef);
    if (reactionTrackingRef.current) {
      reactionTrackingRef.current.mounted = true;
      if (reactionTrackingRef.current.changedBeforeMount) {
        reactionTrackingRef.current.changedBeforeMount = false;
        forceUpdate();
      }
    } else {
      reactionTrackingRef.current = {
        reaction: new Reaction(observerComponentNameFor(baseComponentName), function() {
          forceUpdate();
        }),
        mounted: true,
        changedBeforeMount: false,
        cleanAt: Infinity
      };
      forceUpdate();
    }
    return function() {
      reactionTrackingRef.current.reaction.dispose();
      reactionTrackingRef.current = null;
    };
  }, []);
  var rendering;
  var exception;
  reaction2.track(function() {
    try {
      rendering = fn();
    } catch (e2) {
      exception = e2;
    }
  });
  if (exception) {
    throw exception;
  }
  return rendering;
}
var __assign = globalThis && globalThis.__assign || function() {
  __assign = Object.assign || function(t2) {
    for (var s, i = 1, n2 = arguments.length; i < n2; i++) {
      s = arguments[i];
      for (var p2 in s)
        if (Object.prototype.hasOwnProperty.call(s, p2))
          t2[p2] = s[p2];
    }
    return t2;
  };
  return __assign.apply(this, arguments);
};
function observer(baseComponent, options) {
  var realOptions = __assign({ forwardRef: false }, options);
  var baseComponentName = baseComponent.displayName || baseComponent.name;
  var wrappedComponent = function(props, ref) {
    return useObserver(function() {
      return baseComponent(props, ref);
    }, baseComponentName);
  };
  wrappedComponent.displayName = baseComponentName;
  if (baseComponent.contextTypes) {
    wrappedComponent.contextTypes = baseComponent.contextTypes;
  }
  var memoComponent;
  if (realOptions.forwardRef) {
    memoComponent = react.exports.memo(react.exports.forwardRef(wrappedComponent));
  } else {
    memoComponent = react.exports.memo(wrappedComponent);
  }
  copyStaticProperties(baseComponent, memoComponent);
  memoComponent.displayName = baseComponentName;
  return memoComponent;
}
var hoistBlackList = {
  $$typeof: true,
  render: true,
  compare: true,
  type: true
};
function copyStaticProperties(base, target) {
  Object.keys(base).forEach(function(key) {
    if (!hoistBlackList[key]) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key));
    }
  });
}
globalThis && globalThis.__read || function(o2, n2) {
  var m2 = typeof Symbol === "function" && o2[Symbol.iterator];
  if (!m2)
    return o2;
  var i = m2.call(o2), r2, ar = [], e2;
  try {
    while ((n2 === void 0 || n2-- > 0) && !(r2 = i.next()).done)
      ar.push(r2.value);
  } catch (error) {
    e2 = { error };
  } finally {
    try {
      if (r2 && !r2.done && (m2 = i["return"]))
        m2.call(i);
    } finally {
      if (e2)
        throw e2.error;
    }
  }
  return ar;
};
observerBatching(reactDom.exports.unstable_batchedUpdates);
var y = Object.defineProperty;
var F = (e2) => y(e2, "__esModule", { value: true });
var u = (e2, t2) => () => (e2 && (t2 = e2(e2 = 0)), t2);
var m = (e2, t2) => {
  F(e2);
  for (var i in t2)
    y(e2, i, { get: t2[i], enumerable: true });
};
var p = {};
m(p, { default: () => N });
var N, o = u(() => {
  N = async (e2 = [{}]) => (Array.isArray(e2) || (e2 = [e2]), new Promise((t2, i) => {
    let r2 = document.createElement("input");
    r2.type = "file";
    let n2 = [...e2.map((s) => s.mimeTypes || []).join(), e2.map((s) => s.extensions || []).join()].join();
    r2.multiple = e2[0].multiple || false, r2.accept = n2 || "";
    let l2 = () => c2(i), a2 = (s) => {
      typeof c2 == "function" && c2(), t2(s);
    }, c2 = e2[0].legacySetup && e2[0].legacySetup(a2, l2, r2);
    r2.addEventListener("change", () => {
      a2(r2.multiple ? Array.from(r2.files) : r2.files[0]);
    }), r2.click();
  }));
});
var w = {};
m(w, { default: () => U });
var I, U, h = u(() => {
  I = async (e2) => {
    let t2 = await e2.getFile();
    return t2.handle = e2, t2;
  }, U = async (e2 = [{}]) => {
    Array.isArray(e2) || (e2 = [e2]);
    let t2 = [];
    e2.forEach((n2, l2) => {
      t2[l2] = { description: n2.description || "", accept: {} }, n2.mimeTypes ? n2.mimeTypes.map((a2) => {
        t2[l2].accept[a2] = n2.extensions || [];
      }) : t2[l2].accept["*/*"] = n2.extensions || [];
    });
    let i = await window.showOpenFilePicker({ id: e2[0].id, startIn: e2[0].startIn, types: t2, multiple: e2[0].multiple || false, excludeAcceptAllOption: e2[0].excludeAcceptAllOption || false }), r2 = await Promise.all(i.map(I));
    return e2[0].multiple ? r2 : r2[0];
  };
});
var j = {};
m(j, { default: () => B });
var B, v = u(() => {
  B = async (e2 = [{}]) => (Array.isArray(e2) || (e2 = [e2]), e2[0].recursive = e2[0].recursive || false, new Promise((t2, i) => {
    let r2 = document.createElement("input");
    r2.type = "file", r2.webkitdirectory = true;
    let n2 = () => a2(i), l2 = (c2) => {
      typeof a2 == "function" && a2(), t2(c2);
    }, a2 = e2[0].legacySetup && e2[0].legacySetup(l2, n2, r2);
    r2.addEventListener("change", () => {
      let c2 = Array.from(r2.files);
      e2[0].recursive ? e2[0].recursive && e2[0].skipDirectory && (c2 = c2.filter((s) => s.webkitRelativePath.split("/").every((T2) => !e2[0].skipDirectory({ name: T2, kind: "directory" })))) : c2 = c2.filter((s) => s.webkitRelativePath.split("/").length === 2), l2(c2);
    }), r2.click();
  }));
});
var g = {};
m(g, { default: () => D });
var A, D, x = u(() => {
  A = async (e2, t2, i = e2.name, r2) => {
    let n2 = [], l2 = [];
    for await (let a2 of e2.values()) {
      let c2 = `${i}/${a2.name}`;
      a2.kind === "file" ? l2.push(a2.getFile().then((s) => (s.directoryHandle = e2, Object.defineProperty(s, "webkitRelativePath", { configurable: true, enumerable: true, get: () => c2 })))) : a2.kind === "directory" && t2 && (!r2 || !r2(a2)) && n2.push(A(a2, t2, c2, r2));
    }
    return [...(await Promise.all(n2)).flat(), ...await Promise.all(l2)];
  }, D = async (e2 = {}) => {
    e2.recursive = e2.recursive || false;
    let t2 = await window.showDirectoryPicker({ id: e2.id, startIn: e2.startIn });
    return A(t2, e2.recursive, void 0, e2.skipDirectory);
  };
});
var k = {};
m(k, { default: () => $ });
async function q(e2, t2) {
  let i = e2.getReader(), r2 = new ReadableStream({ start(l2) {
    return a2();
    async function a2() {
      return i.read().then(({ done: c2, value: s }) => {
        if (c2) {
          l2.close();
          return;
        }
        return l2.enqueue(s), a2();
      });
    }
  } }), n2 = new Response(r2);
  return i.releaseLock(), new Blob([await n2.blob()], { type: t2 });
}
var $, P = u(() => {
  $ = async (e2, t2 = {}) => {
    Array.isArray(t2) && (t2 = t2[0]);
    let i = document.createElement("a"), r2 = e2;
    "body" in e2 && (r2 = await q(e2.body, e2.headers.get("content-type"))), i.download = t2.fileName || "Untitled", i.href = URL.createObjectURL(r2);
    let n2 = () => a2(reject), l2 = () => {
      typeof a2 == "function" && a2();
    }, a2 = t2.legacySetup && t2.legacySetup(l2, n2, i);
    return i.addEventListener("click", () => {
      setTimeout(() => URL.revokeObjectURL(i.href), 30 * 1e3), l2();
    }), i.click(), null;
  };
});
var L = {};
m(L, { default: () => z });
var z, S = u(() => {
  z = async (e2, t2 = [{}], i = null, r2 = false) => {
    Array.isArray(t2) || (t2 = [t2]), t2[0].fileName = t2[0].fileName || "Untitled";
    let n2 = [];
    if (t2.forEach((c2, s) => {
      n2[s] = { description: c2.description || "", accept: {} }, c2.mimeTypes ? (s === 0 && (e2.type ? c2.mimeTypes.push(e2.type) : e2.headers && e2.headers.get("content-type") && c2.mimeTypes.push(e2.headers.get("content-type"))), c2.mimeTypes.map((d2) => {
        n2[s].accept[d2] = c2.extensions || [];
      })) : e2.type && (n2[s].accept[e2.type] = c2.extensions || []);
    }), i)
      try {
        await i.getFile();
      } catch (c2) {
        if (i = null, r2)
          throw c2;
      }
    let l2 = i || await window.showSaveFilePicker({ suggestedName: t2[0].fileName, id: t2[0].id, startIn: t2[0].startIn, types: n2, excludeAcceptAllOption: t2[0].excludeAcceptAllOption || false }), a2 = await l2.createWritable();
    return "stream" in e2 ? (await e2.stream().pipeTo(a2), l2) : "body" in e2 ? (await e2.body.pipeTo(a2), l2) : (await a2.write(blob), await a2.close(), l2);
  };
});
var E = (() => {
  if (typeof self == "undefined")
    return false;
  if ("top" in self && self !== top)
    try {
      top.location + "";
    } catch {
      return false;
    }
  else if ("showOpenFilePicker" in self)
    return "showOpenFilePicker";
  return false;
})(), f = E;
f ? Promise.resolve().then(() => (h(), w)) : Promise.resolve().then(() => (o(), p));
var O = f ? Promise.resolve().then(() => (x(), g)) : Promise.resolve().then(() => (v(), j));
async function W(...e2) {
  return (await O).default(...e2);
}
f ? Promise.resolve().then(() => (S(), L)) : Promise.resolve().then(() => (P(), k));
// @license © 2020 Google LLC. Licensed under the Apache License, Version 2.0.
var futilJs = { exports: {} };
(function(module, exports) {
  !function(e2, t2) {
    module.exports = t2(fp);
  }(commonjsGlobal, function(e2) {
    return function(e3) {
      var t2 = {};
      function n2(r2) {
        if (t2[r2])
          return t2[r2].exports;
        var u2 = t2[r2] = { i: r2, l: false, exports: {} };
        return e3[r2].call(u2.exports, u2, u2.exports, n2), u2.l = true, u2.exports;
      }
      return n2.m = e3, n2.c = t2, n2.d = function(e4, t3, r2) {
        n2.o(e4, t3) || Object.defineProperty(e4, t3, { enumerable: true, get: r2 });
      }, n2.r = function(e4) {
        typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(e4, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e4, "__esModule", { value: true });
      }, n2.t = function(e4, t3) {
        if (1 & t3 && (e4 = n2(e4)), 8 & t3)
          return e4;
        if (4 & t3 && typeof e4 == "object" && e4 && e4.__esModule)
          return e4;
        var r2 = Object.create(null);
        if (n2.r(r2), Object.defineProperty(r2, "default", { enumerable: true, value: e4 }), 2 & t3 && typeof e4 != "string")
          for (var u2 in e4)
            n2.d(r2, u2, function(t4) {
              return e4[t4];
            }.bind(null, u2));
        return r2;
      }, n2.n = function(e4) {
        var t3 = e4 && e4.__esModule ? function() {
          return e4.default;
        } : function() {
          return e4;
        };
        return n2.d(t3, "a", t3), t3;
      }, n2.o = function(e4, t3) {
        return Object.prototype.hasOwnProperty.call(e4, t3);
      }, n2.p = "", n2(n2.s = 10);
    }([function(t2, n2) {
      t2.exports = e2;
    }, function(e3, t2, n2) {
      Object.defineProperty(t2, "__esModule", { value: true }), t2.mapValuesIndexed = t2.pickByIndexed = t2.reduceIndexed = t2.eachIndexed = t2.findIndexed = t2.mapIndexed = t2.each = t2.mapValues = t2.reduce = t2.updateOn = t2.pullOn = t2.unsetOn = t2.setOn = t2.mergeOn = t2.defaultsOn = t2.extendOn = t2.inversions = t2.includesIn = t2.pickIn = t2.hasIn = t2.getIn = void 0;
      var r2, u2 = n2(0), a2 = (r2 = u2) && r2.__esModule ? r2 : { default: r2 }, o2 = n2(7);
      var f2 = a2.default.convert({ rearg: false }), i = a2.default.convert({ immutable: false }), l2 = a2.default.convert({ cap: false });
      t2.getIn = f2.get, t2.hasIn = f2.has, t2.pickIn = f2.pick, t2.includesIn = f2.includes, t2.inversions = a2.default.mapKeys(function(e4) {
        return e4 + "In";
      }, f2), t2.extendOn = i.extend, t2.defaultsOn = i.defaults, t2.mergeOn = i.merge, t2.setOn = i.set, t2.unsetOn = a2.default.curryN(2, i.unset), t2.pullOn = i.pull, t2.updateOn = i.update, t2.reduce = o2.aspects.deprecate("reduce", "1.28.0", "reduceIndexed")(l2.reduce), t2.mapValues = o2.aspects.deprecate("mapValues", "1.28.0", "mapValuesIndexed")(l2.mapValues), t2.each = o2.aspects.deprecate("each", "1.28.0", "eachIndexed")(l2.each), t2.mapIndexed = l2.map, t2.findIndexed = l2.find, t2.eachIndexed = l2.each, t2.reduceIndexed = l2.reduce, t2.pickByIndexed = l2.pickBy, t2.mapValuesIndexed = l2.mapValues;
    }, function(e3, t2, n2) {
      Object.defineProperty(t2, "__esModule", { value: true }), t2.replaceElement = t2.replaceElementBy = t2.intersperse = t2.toggleElement = t2.toggleElementBy = t2.chunkBy = t2.slashEncoder = t2.dotEncoder = t2.encoder = t2.prefixes = t2.flags = t2.zipObjectDeepWith = t2.arrayToObject = t2.cycle = t2.mergeRanges = t2.moveIndex = t2.pushOn = t2.pushIn = t2.push = t2.repeated = t2.dotJoinWith = t2.dotJoin = t2.compactJoin = void 0;
      var r2, u2 = n2(0), a2 = (r2 = u2) && r2.__esModule ? r2 : { default: r2 }, o2 = n2(5), f2 = n2(3), i = n2(1);
      function l2(e4) {
        if (Array.isArray(e4)) {
          for (var t3 = 0, n3 = Array(e4.length); t3 < e4.length; t3++)
            n3[t3] = e4[t3];
          return n3;
        }
        return Array.from(e4);
      }
      var c2, d2 = (c2 = a2.default.isEmpty, function(e4) {
        return function(t3) {
          return function(n3, r3) {
            return c2(n3) ? e4(r3) : c2(r3) ? e4(n3) : t3(n3, r3);
          };
        };
      })(function(e4) {
        return [e4];
      }), s = a2.default.dropRight(1), p2 = a2.default.takeRight(1), y2 = t2.compactJoin = a2.default.curry(function(e4, t3) {
        return a2.default.compact(t3).join(e4);
      }), v2 = (t2.dotJoin = y2("."), t2.dotJoinWith = function(e4) {
        return function(t3) {
          return a2.default.filter(e4, t3).join(".");
        };
      }, t2.repeated = a2.default.flow(a2.default.groupBy(function(e4) {
        return e4;
      }), a2.default.filter(function(e4) {
        return e4.length > 1;
      }), a2.default.flatten, a2.default.uniq), t2.push = a2.default.curry(function(e4, t3) {
        return t3.concat([e4]);
      })), h2 = (t2.pushIn = a2.default.curry(function(e4, t3) {
        return e4.concat([t3]);
      }), t2.pushOn = a2.default.curry(function(e4, t3) {
        return e4.push(t3), e4;
      }), t2.moveIndex = function(e4, t3, n3) {
        return a2.default.flow(a2.default.pullAt(e4), (0, f2.insertAtIndex)(t3, n3[e4]))(n3);
      }, d2(function(e4, t3) {
        return function(e5, t4) {
          return t4[0] > e5[1];
        }(e4, t3) ? [e4, t3] : function(e5, t4) {
          return [[e5[0], a2.default.max(e5.concat(t4))]];
        }(e4, t3);
      })), g2 = (t2.mergeRanges = a2.default.flow(a2.default.sortBy([0, 1]), a2.default.reduce(function(e4, t3) {
        return s(e4).concat(h2(a2.default.flatten(p2(e4)), t3));
      }, [])), t2.cycle = a2.default.curry(function(e4, t3) {
        return e4[(e4.indexOf(t3) + 1) % e4.length];
      }), t2.arrayToObject = a2.default.curry(function(e4, t3, n3) {
        return a2.default.flow(a2.default.keyBy(e4), a2.default.mapValues(t3))(n3);
      }), t2.zipObjectDeepWith = a2.default.curry(function(e4, t3) {
        return a2.default.zipObjectDeep(e4, a2.default.isFunction(t3) && a2.default.isArray(e4) ? a2.default.times(t3, e4.length) : t3);
      })), m2 = (t2.flags = g2(a2.default, function() {
        return true;
      }), t2.prefixes = function(e4) {
        return a2.default.range(1, e4.length + 1).map(function(t3) {
          return a2.default.take(t3, e4);
        });
      }, t2.encoder = function(e4) {
        return { encode: y2(e4), decode: a2.default.split(e4) };
      }), b2 = (t2.dotEncoder = m2("."), t2.slashEncoder = m2("/"), t2.chunkBy = a2.default.curry(function(e4, t3) {
        return a2.default.isEmpty(t3) ? [] : a2.default.reduce(function(t4, n3) {
          return e4(a2.default.last(t4), n3) ? [].concat(l2(a2.default.initial(t4)), [[].concat(l2(a2.default.last(t4)), [n3])]) : [].concat(l2(t4), [[n3]]);
        }, [[a2.default.head(t3)]], a2.default.tail(t3));
      }), t2.toggleElementBy = a2.default.curry(function(e4, t3, n3) {
        return ((0, o2.callOrReturn)(e4, t3, n3) ? a2.default.pull : v2)(t3, n3);
      })), O2 = (t2.toggleElement = b2(a2.default.includes), t2.intersperse = a2.default.curry(function(e4, t3) {
        var n3, r3 = (n3 = t3, Array.isArray(n3) ? n3 : Array.from(n3)), u3 = r3[0], a3 = r3.slice(1);
        return (0, i.reduceIndexed)(function(t4, n4, r4) {
          return r4 === a3.length ? [].concat(l2(t4), [n4]) : [].concat(l2(t4), [(0, o2.callOrReturn)(e4, t4, r4, a3), n4]);
        }, [u3], a3);
      }), t2.replaceElementBy = a2.default.curry(function(e4, t3, n3) {
        return a2.default.map(function(n4) {
          return e4(n4) ? t3 : n4;
        }, n3);
      }));
      t2.replaceElement = a2.default.curry(function(e4, t3, n3) {
        return O2(a2.default.isEqual(e4), t3, n3);
      });
    }, function(e3, t2, n2) {
      Object.defineProperty(t2, "__esModule", { value: true }), t2.compactMap = t2.insertAtIndex = t2.deepMap = t2.map = t2.findApply = t2.flowMap = void 0;
      var r2, u2 = n2(0), a2 = (r2 = u2) && r2.__esModule ? r2 : { default: r2 }, o2 = n2(8);
      t2.flowMap = function() {
        return a2.default.map(a2.default.flow.apply(a2.default, arguments));
      }, t2.findApply = a2.default.curry(function(e4, t3) {
        return a2.default.iteratee(e4)(a2.default.find(e4, t3));
      });
      var f2 = t2.map = a2.default.curry(function(e4, t3) {
        return (a2.default.isArray(t3) ? a2.default.map : a2.default.mapValues).convert({ cap: false })(e4, t3);
      }), i = t2.deepMap = a2.default.curry(function(e4, t3) {
        var n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : f2, r3 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : o2.isTraversable;
        return n3(function(t4) {
          return r3(t4) ? i(e4, e4(t4), n3, r3) : t4;
        }, t3);
      });
      t2.insertAtIndex = a2.default.curry(function(e4, t3, n3) {
        return a2.default.isString(n3) ? function(e5, t4, n4) {
          return n4.slice(0, e5) + t4 + n4.slice(e5);
        }(e4, t3, n3) : function(e5, t4, n4) {
          var r3 = a2.default.clone(n4);
          return r3.splice(e5, 0, t4), r3;
        }(e4, t3, n3);
      }), t2.compactMap = a2.default.curry(function(e4, t3) {
        return a2.default.flow(a2.default.map(e4), a2.default.compact)(t3);
      });
    }, function(e3, t2, n2) {
      Object.defineProperty(t2, "__esModule", { value: true }), t2.isBlankDeep = t2.isNotBlank = t2.isBlank = t2.append = t2.isMultiple = t2.exists = t2.isNotNil = t2.tapError = t2.throws = void 0;
      var r2, u2 = n2(0), a2 = (r2 = u2) && r2.__esModule ? r2 : { default: r2 }, o2 = n2(8);
      t2.throws = function(e4) {
        throw e4;
      }, t2.tapError = function(e4) {
        return function(t3) {
          for (var n3 = arguments.length, r3 = Array(n3 > 1 ? n3 - 1 : 0), u3 = 1; u3 < n3; u3++)
            r3[u3 - 1] = arguments[u3];
          throw e4.apply(void 0, [t3].concat(r3)), t3;
        };
      };
      var f2 = t2.isNotNil = a2.default.negate(a2.default.isNil), i = (t2.exists = f2, t2.isMultiple = function(e4) {
        return (e4 || []).length > 1;
      }, t2.append = a2.default.curry(function(e4, t3) {
        return t3 + e4;
      }), t2.isBlank = a2.default.overSome([a2.default.isNil, a2.default.isEqual(""), a2.default.isEqual([]), a2.default.isEqual({})]));
      t2.isNotBlank = a2.default.negate(i), t2.isBlankDeep = function(e4) {
        return function(t3) {
          return e4(i, (0, o2.tree)().leaves(t3));
        };
      };
    }, function(e3, t2, n2) {
      Object.defineProperty(t2, "__esModule", { value: true }), t2.mapArgs = t2.flurry = t2.debounceAsync = t2.defer = t2.comply = t2.composeApply = t2.converge = t2.boundMethod = t2.callOrReturn = t2.maybeCall = void 0;
      var r2, u2 = n2(0), a2 = (r2 = u2) && r2.__esModule ? r2 : { default: r2 };
      function o2(e4) {
        if (Array.isArray(e4)) {
          for (var t3 = 0, n3 = Array(e4.length); t3 < e4.length; t3++)
            n3[t3] = e4[t3];
          return n3;
        }
        return Array.from(e4);
      }
      t2.maybeCall = function(e4) {
        for (var t3 = arguments.length, n3 = Array(t3 > 1 ? t3 - 1 : 0), r3 = 1; r3 < t3; r3++)
          n3[r3 - 1] = arguments[r3];
        return a2.default.isFunction(e4) && e4.apply(void 0, n3);
      }, t2.callOrReturn = function(e4) {
        for (var t3 = arguments.length, n3 = Array(t3 > 1 ? t3 - 1 : 0), r3 = 1; r3 < t3; r3++)
          n3[r3 - 1] = arguments[r3];
        return a2.default.isFunction(e4) ? e4.apply(void 0, n3) : e4;
      }, t2.boundMethod = function(e4, t3) {
        return t3[e4].bind(t3);
      }, t2.converge = function(e4, t3) {
        return function() {
          return e4(a2.default.over(t3).apply(void 0, arguments));
        };
      };
      var f2, i = t2.composeApply = function(e4, t3) {
        return function(n3) {
          return e4(t3(n3))(n3);
        };
      }, l2 = (t2.comply = i, t2.defer = function() {
        var e4 = void 0, t3 = void 0, n3 = new Promise(function(n4, r3) {
          e4 = n4, t3 = r3;
        });
        return { resolve: e4, reject: t3, promise: n3 };
      });
      t2.debounceAsync = function(e4, t3) {
        var n3 = l2(), r3 = a2.default.debounce(e4, function() {
          n3.resolve(t3.apply(void 0, arguments)), n3 = l2();
        });
        return function() {
          return r3.apply(void 0, arguments), n3.promise;
        };
      }, t2.flurry = (f2 = a2.default.flow, function() {
        for (var e4 = arguments.length, t3 = Array(e4), n3 = 0; n3 < e4; n3++)
          t3[n3] = arguments[n3];
        return a2.default.curryN(t3[0].length, f2.apply(void 0, t3));
      }), t2.mapArgs = a2.default.curry(function(e4, t3) {
        return function() {
          for (var n3 = arguments.length, r3 = Array(n3), u3 = 0; u3 < n3; u3++)
            r3[u3] = arguments[u3];
          return t3.apply(void 0, o2(r3.map(e4)));
        };
      });
    }, function(e3, t2, n2) {
      Object.defineProperty(t2, "__esModule", { value: true }), t2.whenTruthy = t2.whenExists = t2.unless = t2.when = t2.ifElse = t2.overNone = void 0;
      var r2, u2 = n2(0), a2 = (r2 = u2) && r2.__esModule ? r2 : { default: r2 }, o2 = n2(5), f2 = n2(4);
      t2.overNone = a2.default.flow(a2.default.overSome, a2.default.negate);
      var i = t2.ifElse = a2.default.curry(function(e4, t3, n3, r3) {
        return function(e5) {
          return a2.default.isBoolean(e5) || a2.default.isNil(e5) ? function() {
            return e5;
          } : a2.default.iteratee(e5);
        }(e4)(r3) ? (0, o2.callOrReturn)(t3, r3) : (0, o2.callOrReturn)(n3, r3);
      }), l2 = t2.when = a2.default.curry(function(e4, t3, n3) {
        return i(e4, t3, a2.default.identity, n3);
      });
      t2.unless = a2.default.curry(function(e4, t3, n3) {
        return i(e4, a2.default.identity, t3, n3);
      }), t2.whenExists = l2(f2.exists), t2.whenTruthy = l2(Boolean);
    }, function(e3, t2, n2) {
      Object.defineProperty(t2, "__esModule", { value: true }), t2.aspects = t2.aspectSync = t2.aspect = void 0;
      var r2, u2 = n2(0), a2 = (r2 = u2) && r2.__esModule ? r2 : { default: r2 }, o2 = n2(1), f2 = n2(4);
      function i(e4, t3, n3) {
        return t3 in e4 ? Object.defineProperty(e4, t3, { value: n3, enumerable: true, configurable: true, writable: true }) : e4[t3] = n3, e4;
      }
      function l2(e4) {
        if (Array.isArray(e4)) {
          for (var t3 = 0, n3 = Array(e4.length); t3 < e4.length; t3++)
            n3[t3] = e4[t3];
          return n3;
        }
        return Array.from(e4);
      }
      var c2 = t2.aspect = function(e4) {
        var t3 = e4.name, n3 = t3 === void 0 ? "aspect" : t3, r3 = e4.init, u3 = r3 === void 0 ? a2.default.noop : r3, o3 = e4.after, c3 = o3 === void 0 ? a2.default.noop : o3, d3 = e4.before, s2 = d3 === void 0 ? a2.default.noop : d3, p3 = e4.always, y3 = p3 === void 0 ? a2.default.noop : p3, v3 = e4.onError, h2 = v3 === void 0 ? f2.throws : v3;
        return function(e5) {
          var t4 = e5.state, r4 = t4 === void 0 ? {} : t4;
          u3(r4);
          var a3 = i({}, n3, function() {
            for (var t5 = arguments.length, n4 = Array(t5), u4 = 0; u4 < t5; u4++)
              n4[u4] = arguments[u4];
            var a4 = void 0, o4 = void 0;
            return Promise.resolve().then(function() {
              return s2(n4, r4);
            }).then(function() {
              return e5.apply(void 0, l2(n4));
            }).then(function(e6) {
              a4 = e6;
            }).then(function() {
              return c3(a4, r4, n4);
            }).catch(function(e6) {
              return h2(e6, r4, n4);
            }).catch(function(e6) {
              o4 = e6;
            }).then(function() {
              return y3(r4, n4);
            }).then(function() {
              if (o4)
                throw o4;
            }).then(function() {
              return a4;
            });
          });
          return a3[n3].state = r4, a3[n3];
        };
      }, d2 = t2.aspectSync = function(e4) {
        var t3 = e4.name, n3 = t3 === void 0 ? "aspect" : t3, r3 = e4.init, u3 = r3 === void 0 ? a2.default.noop : r3, o3 = e4.after, c3 = o3 === void 0 ? a2.default.noop : o3, d3 = e4.before, s2 = d3 === void 0 ? a2.default.noop : d3, p3 = e4.always, y3 = p3 === void 0 ? a2.default.noop : p3, v3 = e4.onError, h2 = v3 === void 0 ? f2.throws : v3;
        return function(e5) {
          var t4 = e5.state, r4 = t4 === void 0 ? {} : t4;
          u3(r4);
          var a3 = i({}, n3, function() {
            for (var t5 = arguments.length, n4 = Array(t5), u4 = 0; u4 < t5; u4++)
              n4[u4] = arguments[u4];
            try {
              s2(n4, r4);
              var a4 = e5.apply(void 0, l2(n4));
              return c3(a4, r4, n4), a4;
            } catch (e6) {
              throw h2(e6, r4, n4), e6;
            } finally {
              y3(r4, n4);
            }
          });
          return a3[n3].state = r4, a3[n3];
        };
      }, s = function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : o2.defaultsOn;
        return c2({ init: e4({ error: null }), onError: (0, o2.setOn)("error"), name: "error" });
      }, p2 = function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : o2.defaultsOn;
        return c2({ init: e4({ status: null, processing: false, succeeded: false, failed: false, setStatus: function(e5) {
          this.status = e5, this.failed = e5 === "failed", this.succeeded = e5 === "succeeded", this.processing = e5 === "processing";
        } }), before: function(e5, t3) {
          t3.setStatus("processing");
        }, after: function(e5, t3) {
          t3.setStatus("succeeded");
        }, onError: (0, f2.tapError)(function(e5, t3) {
          t3.setStatus("failed");
        }), name: "status" });
      }, y2 = function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 500;
        return c2({ always: function(t3) {
          e4 !== null && setTimeout(function() {
            t3.setStatus(null);
          }, e4);
        }, name: "clearStatus" });
      }, v2 = function() {
        return c2({ before: function(e4, t3) {
          if (t3.processing)
            throw Error("Concurrent Runs Not Allowed");
        }, name: "concurrency" });
      };
      t2.aspects = { logs: function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : o2.defaultsOn;
        return c2({ init: e4({ logs: [] }), after: function(e5, t3) {
          return t3.logs.push(e5);
        }, name: "logs" });
      }, error: s, errors: function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : o2.defaultsOn;
        return c2({ init: e4({ errors: [] }), onError: function(e5, t3) {
          return t3.errors.push(e5);
        }, name: "errors" });
      }, status: p2, deprecate: function(e4, t3, n3) {
        return d2({ before: function() {
          return console.warn("`" + e4 + "` is deprecated" + (t3 ? " as of " + t3 : "") + (n3 ? " in favor of `" + n3 + "`" : "") + " " + a2.default.trim((Error().stack || "").split("\n")[3]));
        } });
      }, clearStatus: y2, concurrency: v2, command: function(e4, t3) {
        return a2.default.flow(p2(e4), y2(t3), v2(), s(e4));
      } };
    }, function(e3, t2, n2) {
      Object.defineProperty(t2, "__esModule", { value: true }), t2.tree = t2.flatLeaves = t2.flattenTree = t2.propTreePath = t2.treePath = t2.treeValues = t2.treeKeys = t2.keyTreeByWith = t2.treeLookup = t2.leaves = t2.leavesBy = t2.treeToArray = t2.treeToArrayBy = t2.mapTreeLeaves = t2.mapTree = t2.reduceTree = t2.transformTree = t2.walkAsync = t2.findIndexedAsync = t2.walk = t2.traverse = t2.isTraversable = void 0;
      var r2, u2 = function(e4, t3) {
        if (Array.isArray(e4))
          return e4;
        if (Symbol.iterator in Object(e4))
          return function(e5, t4) {
            var n3 = [], r3 = true, u3 = false, a3 = void 0;
            try {
              for (var o3, f3 = e5[Symbol.iterator](); !(r3 = (o3 = f3.next()).done) && (n3.push(o3.value), !t4 || n3.length !== t4); r3 = true)
                ;
            } catch (e6) {
              u3 = true, a3 = e6;
            } finally {
              try {
                !r3 && f3.return && f3.return();
              } finally {
                if (u3)
                  throw a3;
              }
            }
            return n3;
          }(e4, t3);
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      }, a2 = n2(0), o2 = (r2 = a2) && r2.__esModule ? r2 : { default: r2 }, f2 = n2(1), i = n2(2);
      function l2(e4) {
        return Array.isArray(e4) ? e4 : Array.from(e4);
      }
      function c2(e4) {
        if (Array.isArray(e4)) {
          for (var t3 = 0, n3 = Array(e4.length); t3 < e4.length; t3++)
            n3[t3] = e4[t3];
          return n3;
        }
        return Array.from(e4);
      }
      var d2 = t2.isTraversable = function(e4) {
        return o2.default.isArray(e4) || o2.default.isPlainObject(e4);
      }, s = t2.traverse = function(e4) {
        return d2(e4) && !o2.default.isEmpty(e4) && e4;
      }, p2 = t2.walk = function e4() {
        var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : s;
        return function(n3) {
          var r3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : o2.default.noop, u3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], a3 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [];
          return function(o3, i2) {
            return n3(o3, i2, u3, a3) || (0, f2.findIndexed)(e4(t3)(n3, r3, [o3].concat(c2(u3)), [i2].concat(c2(a3))), t3(o3, i2, u3, a3) || []) || r3(o3, i2, u3, a3);
          };
        };
      }, y2 = t2.findIndexedAsync = function e4(t3, n3) {
        var r3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : o2.default.toPairs(n3);
        if (r3.length) {
          var a3 = l2(r3), f3 = u2(a3[0], 2), i2 = f3[0], c3 = f3[1], d3 = a3.slice(1);
          return Promise.resolve(t3(c3, i2, n3)).then(function(r4) {
            return r4 ? c3 : d3.length ? e4(t3, n3, d3) : void 0;
          });
        }
      }, v2 = t2.walkAsync = function e4() {
        var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : s;
        return function(n3) {
          var r3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : o2.default.noop, u3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], a3 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [];
          return function(o3, f3) {
            return Promise.resolve(n3(o3, f3, u3, a3)).then(function(i2) {
              return i2 || y2(e4(t3)(n3, r3, [o3].concat(c2(u3)), [f3].concat(c2(a3))), t3(o3, f3, u3, a3) || []);
            }).then(function(e5) {
              return e5 || r3(o3, f3, u3, a3);
            });
          };
        };
      }, h2 = t2.transformTree = function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : s;
        return o2.default.curry(function(t3, n3) {
          var r3 = o2.default.cloneDeep(n3);
          return p2(e4)(t3)(r3), r3;
        });
      }, g2 = t2.reduceTree = function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : s;
        return o2.default.curry(function(t3, n3, r3) {
          return p2(e4)(function() {
            for (var e5 = arguments.length, r4 = Array(e5), u3 = 0; u3 < e5; u3++)
              r4[u3] = arguments[u3];
            n3 = t3.apply(void 0, [n3].concat(r4));
          })(r3), n3;
        });
      }, m2 = function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : s;
        return function(t3, n3, r3) {
          var a3 = u2(r3, 1)[0];
          e4(a3)[n3] = t3;
        };
      }, b2 = t2.mapTree = function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : s, t3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : m2(e4);
        return o2.default.curry(function(n3, r3) {
          return h2(e4)(function(e5, r4, u3) {
            for (var a3 = arguments.length, o3 = Array(a3 > 3 ? a3 - 3 : 0), f3 = 3; f3 < a3; f3++)
              o3[f3 - 3] = arguments[f3];
            u3.length && t3.apply(void 0, [n3.apply(void 0, [e5, r4, u3].concat(o3)), r4, u3].concat(o3));
          })(n3(r3));
        });
      }, O2 = t2.mapTreeLeaves = function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : s, t3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : m2(e4);
        return o2.default.curry(function(n3, r3) {
          return b2(e4, t3)(function(t4) {
            return e4(t4) ? t4 : n3(t4);
          }, r3);
        });
      }, A2 = t2.treeToArrayBy = function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : s;
        return o2.default.curry(function(t3, n3) {
          return g2(e4)(function(e5) {
            for (var n4 = arguments.length, r3 = Array(n4 > 1 ? n4 - 1 : 0), u3 = 1; u3 < n4; u3++)
              r3[u3 - 1] = arguments[u3];
            return (0, i.push)(t3.apply(void 0, r3), e5);
          }, [], n3);
        });
      }, j2 = t2.treeToArray = function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : s;
        return A2(e4)(function(e5) {
          return e5;
        });
      }, w2 = t2.leavesBy = function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : s;
        return o2.default.curry(function(t3, n3) {
          return g2(e4)(function(n4, r3) {
            for (var u3 = arguments.length, a3 = Array(u3 > 2 ? u3 - 2 : 0), o3 = 2; o3 < u3; o3++)
              a3[o3 - 2] = arguments[o3];
            return e4(r3) ? n4 : (0, i.push)(t3.apply(void 0, [r3].concat(a3)), n4);
          }, [], n3);
        });
      }, _2 = t2.leaves = function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : s;
        return w2(e4)(function(e5) {
          return e5;
        });
      }, x2 = t2.treeLookup = function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : s, t3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : o2.default.identity;
        return o2.default.curry(function(n3, r3) {
          return o2.default.reduce(function(n4, r4) {
            return (0, f2.findIndexed)(t3(r4), e4(n4));
          }, r3, n3);
        });
      }, E2 = t2.keyTreeByWith = function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : s;
        return o2.default.curry(function(t3, n3, r3) {
          return o2.default.flow(A2(e4)(o2.default.iteratee(n3)), o2.default.uniq, o2.default.keyBy(o2.default.identity), o2.default.mapValues(function(u3) {
            return h2(e4)(function(e5) {
              var r4 = o2.default.iteratee(n3)(e5) === u3;
              t3(e5, r4, u3);
            }, r3);
          }))(r3);
        });
      }, k2 = t2.treeKeys = function(e4, t3, n3, r3) {
        return [t3].concat(c2(r3));
      }, P2 = t2.treeValues = function(e4, t3, n3) {
        return [e4].concat(c2(n3));
      }, I2 = t2.treePath = function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : k2, t3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : i.dotEncoder;
        return function() {
          return (t3.encode || t3)(e4.apply(void 0, arguments).reverse());
        };
      }, M2 = (t2.propTreePath = function(e4) {
        return I2(o2.default.flow(P2, o2.default.map(e4)), i.slashEncoder);
      }, t2.flattenTree = function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : s;
        return function() {
          var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : I2();
          return g2(e4)(function(e5, n3) {
            for (var r3 = arguments.length, u3 = Array(r3 > 2 ? r3 - 2 : 0), a3 = 2; a3 < r3; a3++)
              u3[a3 - 2] = arguments[a3];
            return o2.default.set([t3.apply(void 0, [n3].concat(u3))], n3, e5);
          }, {});
        };
      }), B2 = t2.flatLeaves = function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : s;
        return o2.default.reject(e4);
      };
      t2.tree = function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : s, t3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : o2.default.identity, n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : m2(e4);
        return { walk: p2(e4), walkAsync: v2(e4), transform: h2(e4), reduce: g2(e4), toArrayBy: A2(e4), toArray: j2(e4), leaves: _2(e4), leavesBy: w2(e4), lookup: x2(e4, t3), keyByWith: E2(e4), traverse: e4, flatten: M2(e4), flatLeaves: B2(e4), map: b2(e4, n3), mapLeaves: O2(e4, n3) };
      };
    }, function(e3, t2, n2) {
      Object.defineProperty(t2, "__esModule", { value: true }), t2.differentLast = void 0;
      var r2, u2 = n2(0), a2 = (r2 = u2) && r2.__esModule ? r2 : { default: r2 };
      t2.differentLast = function(e4, t3) {
        return function(n3, r3, u3) {
          return r3 === u3.length - 1 ? a2.default.iteratee(t3)(n3, r3, u3) : a2.default.iteratee(e4)(n3, r3, u3);
        };
      };
    }, function(e3, t2, n2) {
      Object.defineProperty(t2, "__esModule", { value: true }), t2.VERSION = t2.isPromise = t2.greaterThanOne = void 0;
      var r2 = Object.assign || function(e4) {
        for (var t3 = 1; t3 < arguments.length; t3++) {
          var n3 = arguments[t3];
          for (var r3 in n3)
            Object.prototype.hasOwnProperty.call(n3, r3) && (e4[r3] = n3[r3]);
        }
        return e4;
      }, u2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e4) {
        return typeof e4;
      } : function(e4) {
        return e4 && typeof Symbol == "function" && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
      }, a2 = n2(1);
      Object.keys(a2).forEach(function(e4) {
        e4 !== "default" && e4 !== "__esModule" && Object.defineProperty(t2, e4, { enumerable: true, get: function() {
          return a2[e4];
        } });
      });
      var o2 = n2(3);
      Object.keys(o2).forEach(function(e4) {
        e4 !== "default" && e4 !== "__esModule" && Object.defineProperty(t2, e4, { enumerable: true, get: function() {
          return o2[e4];
        } });
      });
      var f2 = n2(5);
      Object.keys(f2).forEach(function(e4) {
        e4 !== "default" && e4 !== "__esModule" && Object.defineProperty(t2, e4, { enumerable: true, get: function() {
          return f2[e4];
        } });
      });
      var i = n2(11);
      Object.keys(i).forEach(function(e4) {
        e4 !== "default" && e4 !== "__esModule" && Object.defineProperty(t2, e4, { enumerable: true, get: function() {
          return i[e4];
        } });
      });
      var l2 = n2(12);
      Object.keys(l2).forEach(function(e4) {
        e4 !== "default" && e4 !== "__esModule" && Object.defineProperty(t2, e4, { enumerable: true, get: function() {
          return l2[e4];
        } });
      });
      var c2 = n2(7);
      Object.keys(c2).forEach(function(e4) {
        e4 !== "default" && e4 !== "__esModule" && Object.defineProperty(t2, e4, { enumerable: true, get: function() {
          return c2[e4];
        } });
      });
      var d2 = n2(2);
      Object.keys(d2).forEach(function(e4) {
        e4 !== "default" && e4 !== "__esModule" && Object.defineProperty(t2, e4, { enumerable: true, get: function() {
          return d2[e4];
        } });
      });
      var s = n2(6);
      Object.keys(s).forEach(function(e4) {
        e4 !== "default" && e4 !== "__esModule" && Object.defineProperty(t2, e4, { enumerable: true, get: function() {
          return s[e4];
        } });
      });
      var p2 = n2(13);
      Object.keys(p2).forEach(function(e4) {
        e4 !== "default" && e4 !== "__esModule" && Object.defineProperty(t2, e4, { enumerable: true, get: function() {
          return p2[e4];
        } });
      });
      var y2 = n2(4);
      Object.keys(y2).forEach(function(e4) {
        e4 !== "default" && e4 !== "__esModule" && Object.defineProperty(t2, e4, { enumerable: true, get: function() {
          return y2[e4];
        } });
      });
      var v2 = n2(14);
      Object.keys(v2).forEach(function(e4) {
        e4 !== "default" && e4 !== "__esModule" && Object.defineProperty(t2, e4, { enumerable: true, get: function() {
          return v2[e4];
        } });
      });
      var h2 = n2(8);
      Object.keys(h2).forEach(function(e4) {
        e4 !== "default" && e4 !== "__esModule" && Object.defineProperty(t2, e4, { enumerable: true, get: function() {
          return h2[e4];
        } });
      });
      var g2 = n2(9);
      Object.keys(g2).forEach(function(e4) {
        e4 !== "default" && e4 !== "__esModule" && Object.defineProperty(t2, e4, { enumerable: true, get: function() {
          return g2[e4];
        } });
      });
      var m2, b2 = n2(0), O2 = (m2 = b2) && m2.__esModule ? m2 : { default: m2 }, A2 = N2(a2), j2 = N2(o2), w2 = N2(f2), _2 = N2(i), x2 = N2(l2), E2 = N2(c2), k2 = N2(d2), P2 = N2(s), I2 = N2(p2), M2 = N2(y2), B2 = N2(v2), S2 = N2(h2), T2 = N2(g2);
      function N2(e4) {
        if (e4 && e4.__esModule)
          return e4;
        var t3 = {};
        if (e4 != null)
          for (var n3 in e4)
            Object.prototype.hasOwnProperty.call(e4, n3) && (t3[n3] = e4[n3]);
        return t3.default = e4, t3;
      }
      var R2 = t2.greaterThanOne = O2.default.lt(1), W2 = t2.isPromise = function(e4) {
        return !!e4 && ((e4 === void 0 ? "undefined" : u2(e4)) === "object" || typeof e4 == "function") && typeof e4.then == "function";
      }, L2 = t2.VERSION = "1.69.0";
      t2.default = r2({}, A2, j2, w2, _2, x2, E2, k2, P2, I2, M2, B2, S2, T2, { greaterThanOne: R2, isPromise: W2, VERSION: L2 });
    }, function(e3, t2, n2) {
      Object.defineProperty(t2, "__esModule", { value: true }), t2.uniqueString = t2.uniqueStringWith = t2.toSentence = t2.toSentenceWith = t2.autoLabelOptions = t2.autoLabelOption = t2.autoLabel = t2.trimStrings = t2.concatStrings = t2.parens = t2.quote = t2.wrap = void 0;
      var r2, u2 = n2(3), a2 = n2(0), o2 = (r2 = a2) && r2.__esModule ? r2 : { default: r2 }, f2 = n2(6), i = n2(2), l2 = n2(9);
      var c2 = t2.wrap = function(e4, t3, n3) {
        return (e4 || "") + n3 + (t3 || e4 || "");
      }, d2 = (t2.quote = o2.default.partial(c2, ['"', '"']), t2.parens = o2.default.partial(c2, ["(", ")"]), t2.concatStrings = o2.default.flow(o2.default.compact, o2.default.map(o2.default.trim), o2.default.join(" ")), t2.trimStrings = (0, u2.map)((0, f2.when)(o2.default.isString, o2.default.trim)), t2.autoLabel = o2.default.startCase), s = t2.autoLabelOption = function(e4) {
        return { value: (0, f2.when)(o2.default.isUndefined, e4)(e4.value), label: e4.label || d2((0, f2.when)(o2.default.isUndefined, e4)(e4.value)) };
      }, p2 = (t2.autoLabelOptions = o2.default.map(s), t2.toSentenceWith = o2.default.curry(function(e4, t3, n3) {
        return o2.default.flow((0, i.intersperse)((0, l2.differentLast)(function() {
          return e4;
        }, function() {
          return t3;
        })), o2.default.join(""))(n3);
      })), y2 = (t2.toSentence = p2(", ", " and "), t2.uniqueStringWith = o2.default.curry(function(e4, t3) {
        var n3 = function(e5) {
          for (var t4 = e5; r3[t4]; )
            t4 = e5 + r3[e5], r3[e5] += 1;
          return r3[t4] = (r3[t4] || 0) + 1, t4;
        }, r3 = e4(t3);
        return n3.cache = r3, n3.clear = function() {
          n3.cache = r3 = {};
        }, n3;
      }));
      t2.uniqueString = function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
        return y2(o2.default.countBy(o2.default.identity), e4);
      };
    }, function(e3, t2, n2) {
      Object.defineProperty(t2, "__esModule", { value: true }), t2.firstCommonKey = t2.commonKeys = t2.expandObjectBy = t2.expandObject = t2.getWith = t2.mergeOverAllArrays = t2.mergeOverAllWith = t2.mergeOverAll = t2.omitEmpty = t2.omitBlank = t2.omitNull = t2.omitNil = t2.stampKey = t2.invertByArray = t2.mergeAllArrays = t2.pickOn = t2.diffArray = t2.diff = t2.simpleDiffArray = t2.simpleDiff = t2.unkeyBy = t2.cascadeProp = t2.cascadePropKey = t2.cascadeKey = t2.cascadeIn = t2.cascade = t2.aliasIn = t2.alias = t2.getOrReturn = t2.mapProp = t2.compareDeep = t2.matchesSome = t2.matchesSignature = t2.unflattenObject = t2.flattenObject = t2.isFlatObject = t2.unwindArray = t2.unwind = t2.renameProperty = t2.pickInto = t2.stripEmptyObjects = t2.isNotEmptyObject = t2.isEmptyObject = t2.compactObject = t2.chunkObject = t2.singleObjectR = t2.singleObject = void 0;
      var r2, u2 = Object.assign || function(e4) {
        for (var t3 = 1; t3 < arguments.length; t3++) {
          var n3 = arguments[t3];
          for (var r3 in n3)
            Object.prototype.hasOwnProperty.call(n3, r3) && (e4[r3] = n3[r3]);
        }
        return e4;
      }, a2 = n2(0), o2 = (r2 = a2) && r2.__esModule ? r2 : { default: r2 }, f2 = n2(2), i = n2(6), l2 = n2(4), c2 = n2(1), d2 = n2(3), s = n2(7), p2 = n2(5);
      function y2(e4, t3, n3) {
        return t3 in e4 ? Object.defineProperty(e4, t3, { value: n3, enumerable: true, configurable: true, writable: true }) : e4[t3] = n3, e4;
      }
      var v2 = o2.default.convert({ cap: false }), h2 = t2.singleObject = o2.default.curry(function(e4, t3) {
        return y2({}, e4, t3);
      }), g2 = t2.singleObjectR = o2.default.flip(h2), m2 = t2.chunkObject = function(e4) {
        return o2.default.isArray(e4) ? e4 : o2.default.map(o2.default.spread(h2), o2.default.toPairs(e4));
      }, b2 = (t2.compactObject = o2.default.pickBy(o2.default.identity), t2.isEmptyObject = o2.default.isEqual({})), O2 = t2.isNotEmptyObject = o2.default.negate(b2), A2 = (t2.stripEmptyObjects = o2.default.pickBy(O2), t2.pickInto = function(e4, t3) {
        return o2.default.mapValues((0, c2.pickIn)(t3), e4);
      }, t2.renameProperty = o2.default.curry(function(e4, t3, n3) {
        return o2.default.has(e4, n3) ? o2.default.flow(function(n4) {
          return o2.default.set(t3, o2.default.get(e4, n4), n4);
        }, o2.default.unset(e4))(n3) : n3;
      }), t2.unwind = o2.default.curry(function(e4, t3) {
        return (0, i.ifElse)(o2.default.isArray, o2.default.map(function(n3) {
          return o2.default.set(e4, n3, t3);
        }), o2.default.stubArray, o2.default.get(e4, t3));
      })), j2 = (t2.unwindArray = o2.default.curry(function(e4, t3) {
        return o2.default.flatMap(A2(e4))(t3);
      }), t2.isFlatObject = (0, i.overNone)([o2.default.isPlainObject, o2.default.isArray])), w2 = t2.flattenObject = function e4(t3, n3) {
        return (0, c2.reduceIndexed)(function(t4, r3, u3) {
          return o2.default.merge(t4, (j2(r3) ? g2 : e4)(r3, (0, f2.dotJoinWith)(l2.isNotNil)([n3, u3])));
        }, {}, t3);
      }, _2 = (t2.unflattenObject = function(e4) {
        return o2.default.zipObjectDeep(o2.default.keys(e4), o2.default.values(e4));
      }, t2.matchesSignature = o2.default.curry(function(e4, t3) {
        return o2.default.isObject(t3) && !o2.default.difference(o2.default.keys(t3), e4).length;
      }), t2.matchesSome = o2.default.flow(m2, o2.default.map(o2.default.matches), o2.default.overSome), t2.compareDeep = o2.default.curry(function(e4, t3, n3) {
        return o2.default.get(e4, t3) === n3;
      }), t2.mapProp = s.aspects.deprecate("mapProp", "1.46.0", "_.update")(v2.update), t2.getOrReturn = o2.default.curry(function(e4, t3) {
        return o2.default.getOr(t3, e4, t3);
      }), t2.alias = o2.default.curry(function(e4, t3) {
        return o2.default.getOr(e4, e4, t3);
      }), t2.aliasIn = o2.default.curry(function(e4, t3) {
        return o2.default.getOr(t3, t3, e4);
      }), t2.cascade = o2.default.curryN(2, function(e4, t3, n3) {
        return o2.default.flow((0, d2.findApply)(function(e5) {
          return e5 && o2.default.iteratee(e5)(t3);
        }), o2.default.defaultTo(n3))(e4);
      })), x2 = (t2.cascadeIn = o2.default.curryN(2, function(e4, t3, n3) {
        return _2(t3, e4, n3);
      }), t2.cascadeKey = o2.default.curry(function(e4, t3) {
        return o2.default.find((0, c2.getIn)(t3), e4);
      }), t2.cascadePropKey = o2.default.curry(function(e4, t3) {
        return o2.default.find((0, c2.hasIn)(t3), e4);
      })), E2 = (t2.cascadeProp = o2.default.curry(function(e4, t3) {
        return o2.default.get(x2(e4, t3), t3);
      }), t2.unkeyBy = o2.default.curry(function(e4, t3) {
        return (0, c2.mapIndexed)(function(t4, n3) {
          return o2.default.extend(t4, y2({}, e4 || n3, n3));
        })(t3);
      })), k2 = t2.simpleDiff = function(e4, t3) {
        var n3 = w2(e4);
        return o2.default.flow(w2, (0, c2.mapValuesIndexed)(function(e5, t4) {
          return { from: n3[t4], to: e5 };
        }), o2.default.omitBy(function(e5) {
          return o2.default.isEqual(e5.from, e5.to);
        }))(t3);
      }, P2 = (t2.simpleDiffArray = o2.default.flow(k2, E2("field")), t2.diff = function(e4, t3) {
        var n3 = w2(e4), r3 = w2(t3);
        return o2.default.flow((0, c2.mapValuesIndexed)(function(e5, t4) {
          return { from: n3[t4], to: r3[t4] };
        }), o2.default.omitBy(function(e5) {
          return o2.default.isEqual(e5.from, e5.to);
        }))(o2.default.merge(n3, r3));
      }), I2 = (t2.diffArray = o2.default.flow(P2, E2("field")), t2.pickOn = function() {
        var e4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], t3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        return o2.default.flow(o2.default.keys, o2.default.map(function(n3) {
          o2.default.includes(n3, e4) || delete t3[n3];
        }))(t3);
      }, function(e4, t3) {
        return o2.default.isArray(e4) ? e4.concat(t3) : void 0;
      }), M2 = t2.mergeAllArrays = o2.default.mergeAllWith(I2), B2 = (t2.invertByArray = o2.default.flow((0, c2.mapIndexed)(function(e4, t3) {
        return (0, f2.zipObjectDeepWith)(e4, function() {
          return [t3];
        });
      }), M2), t2.stampKey = o2.default.curry(function(e4, t3) {
        return (0, c2.mapValuesIndexed)(function(t4, n3) {
          return u2({}, t4, y2({}, e4, n3));
        }, t3);
      }), t2.omitNil = function(e4) {
        return o2.default.omitBy(o2.default.isNil, e4);
      }, t2.omitNull = function(e4) {
        return o2.default.omitBy(o2.default.isNull, e4);
      }, t2.omitBlank = function(e4) {
        return o2.default.omitBy(l2.isBlank, e4);
      }, t2.omitEmpty = function(e4) {
        return o2.default.omitBy(o2.default.isEmpty, e4);
      }, t2.mergeOverAll = o2.default.curryN(2, function(e4) {
        for (var t3 = arguments.length, n3 = Array(t3 > 1 ? t3 - 1 : 0), r3 = 1; r3 < t3; r3++)
          n3[r3 - 1] = arguments[r3];
        return o2.default.flow(o2.default.over(e4), o2.default.mergeAll).apply(void 0, n3);
      }), t2.mergeOverAllWith = o2.default.curryN(3, function(e4, t3) {
        for (var n3 = arguments.length, r3 = Array(n3 > 2 ? n3 - 2 : 0), u3 = 2; u3 < n3; u3++)
          r3[u3 - 2] = arguments[u3];
        return o2.default.flow(o2.default.over(t3), o2.default.mergeAllWith(e4)).apply(void 0, r3);
      })), S2 = (t2.mergeOverAllArrays = B2(I2), t2.getWith = o2.default.curry(function(e4, t3, n3) {
        return e4(o2.default.get(t3, n3));
      })), T2 = t2.expandObject = o2.default.curry(function(e4, t3) {
        return u2({}, t3, e4(t3));
      }), N2 = (t2.expandObjectBy = o2.default.curry(function(e4, t3, n3) {
        return T2(S2(t3, e4))(n3);
      }), t2.commonKeys = o2.default.curryN(2, (0, p2.mapArgs)(o2.default.keys, o2.default.intersection)), o2.default.findKey.convert({ cap: false }));
      t2.firstCommonKey = o2.default.curry(function(e4, t3) {
        return N2(function(t4, n3) {
          return o2.default.has(n3, e4);
        }, t3);
      });
    }, function(e3, t2, n2) {
      Object.defineProperty(t2, "__esModule", { value: true }), t2.highlight = t2.highlightFromPostings = t2.postingsForWords = t2.postings = t2.allMatches = t2.matchAnyWord = t2.matchAllWords = t2.wordsToRegexp = t2.anyWordToRegexp = t2.makeAndTest = t2.makeRegex = t2.testRegex = void 0;
      var r2, u2 = n2(0), a2 = (r2 = u2) && r2.__esModule ? r2 : { default: r2 }, o2 = n2(2), f2 = n2(3);
      var i = t2.testRegex = a2.default.curry(function(e4, t3) {
        return new RegExp(e4).test(t3);
      }), l2 = t2.makeRegex = function(e4) {
        return function(t3) {
          return RegExp(t3, e4);
        };
      }, c2 = (t2.makeAndTest = function(e4) {
        return a2.default.flow(l2(e4), i);
      }, t2.anyWordToRegexp = a2.default.flow(a2.default.words, a2.default.join("|"))), d2 = t2.wordsToRegexp = a2.default.flow(a2.default.words, a2.default.map(function(e4) {
        return "(?=.*" + e4 + ".*)";
      }), a2.default.join(""), function(e4) {
        return ".*" + e4 + ".*";
      }), s = a2.default.curry(function(e4, t3) {
        var n3 = RegExp(e4(t3), "gi");
        return function(e5) {
          return !(!e5 || !e5.match(n3));
        };
      }), p2 = (t2.matchAllWords = s(d2), t2.matchAnyWord = s(c2), t2.allMatches = a2.default.curry(function(e4, t3) {
        for (var n3 = void 0, r3 = new RegExp(e4, "g"), u3 = []; (n3 = r3.exec(t3)) !== null; )
          u3.push({ text: n3[0], start: n3.index, end: r3.lastIndex });
        return u3;
      }), t2.postings = a2.default.curry(function(e4, t3) {
        var n3 = e4.exec(t3), r3 = [];
        if (e4.flags.indexOf("g") < 0 && n3)
          r3.push([n3.index, n3.index + n3[0].length]);
        else
          for (; n3; )
            r3.push([n3.index, e4.lastIndex]), n3 = e4.exec(t3);
        return r3;
      })), y2 = t2.postingsForWords = a2.default.curry(function(e4, t3) {
        return a2.default.reduce(function(e5, n3) {
          return (0, o2.push)(p2(RegExp(n3, "gi"), t3), e5);
        }, [])(a2.default.words(e4));
      }), v2 = t2.highlightFromPostings = a2.default.curry(function(e4, t3, n3, r3) {
        var u3 = 0;
        return a2.default.each(function(n4) {
          r3 = (0, f2.insertAtIndex)(n4[0] + u3, e4, r3), u3 += e4.length, r3 = (0, f2.insertAtIndex)(n4[1] + u3, t3, r3), u3 += t3.length;
        }, (0, o2.mergeRanges)(n3)), r3;
      });
      t2.highlight = a2.default.curry(function(e4, t3, n3, r3) {
        return v2(e4, t3, a2.default.isRegExp(n3) ? p2(n3, r3) : a2.default.flatten(y2(n3, r3)), r3);
      });
    }, function(e3, t2, n2) {
      Object.defineProperty(t2, "__esModule", { value: true }), t2.stateLens = t2.domLens = t2.off = t2.on = t2.flip = t2.setsWith = t2.sets = t2.set = t2.views = t2.view = t2.includeLens = t2.lensOf = t2.lensProp = t2.objToFn = t2.fnToObj = t2.objectLens = t2.functionLens = void 0;
      var r2, u2 = function(e4, t3) {
        if (Array.isArray(e4))
          return e4;
        if (Symbol.iterator in Object(e4))
          return function(e5, t4) {
            var n3 = [], r3 = true, u3 = false, a3 = void 0;
            try {
              for (var o3, f3 = e5[Symbol.iterator](); !(r3 = (o3 = f3.next()).done) && (n3.push(o3.value), !t4 || n3.length !== t4); r3 = true)
                ;
            } catch (e6) {
              u3 = true, a3 = e6;
            } finally {
              try {
                !r3 && f3.return && f3.return();
              } finally {
                if (u3)
                  throw a3;
              }
            }
            return n3;
          }(e4, t3);
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      }, a2 = n2(0), o2 = (r2 = a2) && r2.__esModule ? r2 : { default: r2 }, f2 = n2(1), i = n2(2), l2 = n2(6);
      function c2(e4, t3, n3) {
        return t3 in e4 ? Object.defineProperty(e4, t3, { value: n3, enumerable: true, configurable: true, writable: true }) : e4[t3] = n3, e4;
      }
      t2.functionLens = function(e4) {
        return function() {
          if (!arguments.length)
            return e4;
          e4 = arguments.length <= 0 ? void 0 : arguments[0];
        };
      }, t2.objectLens = function(e4) {
        return { get: function() {
          return e4;
        }, set: function(t3) {
          e4 = t3;
        } };
      }, t2.fnToObj = function(e4) {
        return { get: e4, set: e4 };
      }, t2.objToFn = function(e4) {
        return function() {
          return arguments.length ? e4.set(arguments.length <= 0 ? void 0 : arguments[0]) : e4.get();
        };
      };
      var d2 = t2.lensProp = function(e4, t3) {
        return { get: function() {
          return o2.default.get(e4, t3);
        }, set: function(n3) {
          (0, f2.setOn)(e4, n3, t3);
        } };
      }, s = (t2.lensOf = function(e4) {
        return o2.default.reduce(function(t3, n3) {
          return t3[n3] = d2(n3, e4), t3;
        }, {}, o2.default.keys(e4));
      }, t2.includeLens = function(e4) {
        for (var t3 = arguments.length, n3 = Array(t3 > 1 ? t3 - 1 : 0), r3 = 1; r3 < t3; r3++)
          n3[r3 - 1] = arguments[r3];
        return { get: function() {
          return o2.default.includes(e4, h2.apply(void 0, n3));
        }, set: function(t4) {
          return m2.apply(void 0, [o2.default.uniq((0, i.toggleElementBy)(!t4, e4, h2.apply(void 0, n3)))].concat(n3));
        } };
      }), p2 = function(e4, t3) {
        return { get: e4, set: t3 };
      }, y2 = function() {
        for (var e4 = arguments.length, t3 = Array(e4), n3 = 0; n3 < e4; n3++)
          t3[n3] = arguments[n3];
        return t3[1] ? o2.default.every(o2.default.isFunction, t3) ? p2.apply(void 0, t3) : d2.apply(void 0, t3) : (0, l2.when)(o2.default.isArray, x2)(t3[0]);
      }, v2 = function(e4) {
        return e4.get ? e4.get() : e4();
      }, h2 = t2.view = function() {
        return v2(y2.apply(void 0, arguments));
      }, g2 = (t2.views = function() {
        for (var e4 = arguments.length, t3 = Array(e4), n3 = 0; n3 < e4; n3++)
          t3[n3] = arguments[n3];
        return function() {
          return h2.apply(void 0, t3);
        };
      }, function(e4, t3) {
        return t3.set ? t3.set(e4) : t3(e4);
      }), m2 = o2.default.curryN(2, function(e4) {
        for (var t3 = arguments.length, n3 = Array(t3 > 1 ? t3 - 1 : 0), r3 = 1; r3 < t3; r3++)
          n3[r3 - 1] = arguments[r3];
        return g2(e4, y2.apply(void 0, n3));
      });
      t2.set = m2;
      var b2 = t2.sets = o2.default.curryN(2, function(e4) {
        for (var t3 = arguments.length, n3 = Array(t3 > 1 ? t3 - 1 : 0), r3 = 1; r3 < t3; r3++)
          n3[r3 - 1] = arguments[r3];
        return function() {
          return m2.apply(void 0, [e4].concat(n3));
        };
      }), O2 = t2.setsWith = o2.default.curry(function(e4) {
        for (var t3 = arguments.length, n3 = Array(t3 > 1 ? t3 - 1 : 0), r3 = 1; r3 < t3; r3++)
          n3[r3 - 1] = arguments[r3];
        return function(t4) {
          return m2.apply(void 0, [o2.default.iteratee(e4)(t4)].concat(n3));
        };
      }), A2 = (t2.flip = function() {
        for (var e4 = arguments.length, t3 = Array(e4), n3 = 0; n3 < e4; n3++)
          t3[n3] = arguments[n3];
        return function() {
          return m2.apply(void 0, [!h2.apply(void 0, t3)].concat(t3));
        };
      }, t2.on = b2(true)), j2 = t2.off = b2(false), w2 = function(e4, t3) {
        return function() {
          for (var n3, r3 = arguments.length, u3 = Array(r3), a3 = 0; a3 < r3; a3++)
            u3[a3] = arguments[a3];
          return c2(n3 = {}, e4, h2.apply(void 0, u3)), c2(n3, "onChange", O2.apply(void 0, [t3].concat(u3))), n3;
        };
      }, _2 = function(e4) {
        return w2(e4, (0, l2.when)(o2.default.hasIn("target." + e4), o2.default.get("target." + e4)));
      }, x2 = (t2.domLens = { value: _2("value"), checkboxValues: o2.default.flow(s, _2("checked")), hover: function() {
        return { onMouseEnter: A2.apply(void 0, arguments), onMouseLeave: j2.apply(void 0, arguments) };
      }, focus: function() {
        return { onFocus: A2.apply(void 0, arguments), onBlur: j2.apply(void 0, arguments) };
      }, targetBinding: _2, binding: w2 }, t2.stateLens = function(e4) {
        var t3 = u2(e4, 2), n3 = t3[0];
        return { get: function() {
          return n3;
        }, set: t3[1] };
      });
    }]);
  });
})(futilJs);
export { Button as B, Code as C, Flex as F, RadioGroup as R, Stack as S, W, jsx as a, Radio as b, CheckboxGroup as c, Checkbox as d, onSnapshot as e, fp as f, ReactDOM as g, React as h, ChakraProvider2 as i, jsxs as j, observer as o, pathBrowserify as p, types as t, unprotect as u };
//# sourceMappingURL=vendor.304b2213.js.map
